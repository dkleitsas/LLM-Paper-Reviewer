Section,Section Appearance Order,Paragraph
ABSTRACT,0.0,ABSTRACT
ABSTRACT,0.0024096385542168677,"In the Mixup training paradigm, a model is trained using convex combinations of
data points and their associated labels. Despite seeing very few true data points
during training, models trained using Mixup seem to still minimize the original
empirical risk and exhibit better generalization and robustness on various tasks
when compared to standard training. In this paper, we investigate how these beneﬁts
of Mixup training rely on properties of the data in the context of classiﬁcation.
For minimizing the original empirical risk, we compute a closed form for the
Mixup-optimal classiﬁcation, which allows us to construct a simple dataset on
which minimizing the Mixup loss can provably lead to learning a classiﬁer that
does not minimize the empirical loss on the data. On the other hand, we also give
sufﬁcient conditions for Mixup training to also minimize the original empirical
risk. For generalization, we characterize the margin of a Mixup classiﬁer, and use
this to understand why the decision boundary of a Mixup classiﬁer can adapt better
to the full structure of the training data when compared to standard training. In
contrast, we also show that, for a large class of linear models and linearly separable
datasets, Mixup training leads to learning the same classiﬁer as standard training."
INTRODUCTION,0.004819277108433735,"1
INTRODUCTION"
INTRODUCTION,0.007228915662650603,"Mixup (Zhang et al., 2018) is a modiﬁcation to the standard supervised learning setup which involves
training on convex combinations of pairs of data points and their labels instead of the original data
itself. In the original paper, Zhang et al. (2018) demonstrated that training deep neural networks using
Mixup leads to better generalization performance, as well as greater robustness to adversarial attacks
and label noise on image classiﬁcation tasks. The empirical advantages of Mixup training have been
afﬁrmed by several follow-up works (He et al., 2019; Thulasidasan et al., 2019; Lamb et al., 2019;
Arazo et al., 2019; Guo, 2020). The idea of Mixup has also been extended beyond the supervised
learning setting, and been applied to semi-supervised learning (Berthelot et al., 2019; Sohn et al.,
2020), contrastive learning (Verma et al., 2021; Lee et al., 2020), privacy-preserving learning (Huang
et al., 2021), and learning with fairness constraints (Chuang & Mroueh, 2021)."
INTRODUCTION,0.00963855421686747,"However, from a theoretical perspective, Mixup training is still mysterious even in the basic multi-
class classﬁcation setting – why should the output of a linear mixture of two training samples be the
same linear mixture of their labels, especially when considering highly nonlinear models? Despite
several recent theoretical results (Guo et al., 2019; Carratino et al., 2020; Zhang et al., 2020; 2021),
there is still not a complete understanding of why Mixup training actually works in practice. In this
paper, we try to understand why Mixup works by ﬁrst understanding when Mixup works: in particular,
how the properties of Mixup training rely on the structure of the training data."
INTRODUCTION,0.012048192771084338,"We consider two properties for classiﬁers trained with Mixup. First, even though Mixup training
does not observe many original data points during training, it usually can still correctly classify all of
the original data points (empirical risk minimization (ERM)). Second, the aforementioned empirical
works have shown how classiﬁers trained with Mixup often have better adversarial robustness and
generalization than standard training. In this work, we show that both of these properties can rely
heavily on the data used for training, and that they need not hold in general."
INTRODUCTION,0.014457831325301205,"Main Contributions and Related Work. The idea that Mixup can potentially fail to minimize
the original risk is not new; Guo et al. (2019) provide examples of how Mixup labels can conﬂict
with actual data point labels. However, their theoretical results do not characterize the data and"
INTRODUCTION,0.016867469879518072,Correspondence to Muthu Chidambaram (muthu@cs.duke.edu).
INTRODUCTION,0.01927710843373494,Published as a conference paper at ICLR 2022
INTRODUCTION,0.021686746987951807,"model conditions under which this failure can provably happen when minimizing the Mixup loss. In
Section 2 of this work, we provide a concrete classiﬁcation dataset on which continuous approximate-
minimizers of the Mixup loss can fail to minimize the empirical risk. We also provide sufﬁcient
conditions for Mixup to minimize the original risk, and show that these conditions hold approximately
on standard image classiﬁcation benchmarks."
INTRODUCTION,0.024096385542168676,"With regards to generalization and robustness, the parallel works of Carratino et al. (2020) and Zhang
et al. (2020) showed that Mixup training can be viewed as minimizing the empirical loss along with
a data-dependent regularization term. Zhang et al. (2020) further relate this term to the adversarial
robustness and Rademacher complexity of certain function classes learned with Mixup. In Section
3, we take an alternative approach to understanding generalization and robustness by analyzing
the margin of Mixup classiﬁers. Our perspective can be viewed as complementary to that of the
aforementioned works, as we directly consider the properties exhibited by a Mixup-optimal classiﬁer
instead of considering what properties are encouraged by the regularization effects of the Mixup loss.
In addition to our margin analysis, we also show that for the common setting of linear models trained
on high-dimensional Gaussian features both Mixup (for a large class of mixing distributions) and
ERM with gradient descent learn the same classiﬁer with high probability."
INTRODUCTION,0.02650602409638554,"Finally, we note the related works that are beyond the scope of our paper; namely the many Mixup-like
training procedures such as Manifold Mixup (Verma et al., 2019), Cut Mix (Yun et al., 2019), Puzzle
Mix (Kim et al., 2020), and Co-Mixup (Kim et al., 2021)."
MIXUP AND EMPIRICAL RISK MINIMIZATION,0.02891566265060241,"2
MIXUP AND EMPIRICAL RISK MINIMIZATION"
MIXUP AND EMPIRICAL RISK MINIMIZATION,0.03132530120481928,"The goal of this section is to understand when Mixup training can also minimize the empirical risk.
Our main technique for doing so is to derive a closed-form for the Mixup-optimal classiﬁer over a
sufﬁciently powerful function class, which we do in Section 2.2 after introducing the basic setup in
Section 2.1. We use this closed form to motivate a concrete example on which Mixup training does
not minimize the empirical risk in Section 2.3, and show under mild nondegeneracy conditions that
Mixup will minimize the emprical risk in Section 2.4."
SETUP,0.033734939759036145,"2.1
SETUP"
SETUP,0.03614457831325301,"We consider the problem of k-class classiﬁcation where the classes 1, ..., k correspond to compact
disjoint sets X1, ..., Xk ⊂Rn with an associated probability measure PX supported on X =
Sk
i=1 Xi. We use C to denote the set of all functions g : Rn →[0, 1]k satisfying the property that
Pk
i=1 gi(x) = 1 for all x (where gi represents the i-th coordinate function of g). We refer to a
function g ∈C as a classiﬁer, and say that g classiﬁes x as class j if j = argmaxi gi(x). The
cross-entropy loss associated with such a classiﬁer g is then:"
SETUP,0.03855421686746988,"J(g, PX) = − k
X i=1 Z"
SETUP,0.04096385542168675,"Xi
log gi(x)dPX(x)"
SETUP,0.043373493975903614,"The goal of standard training is to learn a classiﬁer h ∈argming∈C J(g, PX). Any such classiﬁer h
will necessarily satisfy hi(x) = 1 on Xi since the Xi are disjoint."
SETUP,0.04578313253012048,"Mixup. In the Mixup version of our setup, we are interested in minimizing the cross-entropy of
convex combinations of the original data and their classes. These convex combinations are determined
according to a probability measure Pf whose support is [0, 1], and we assume this measure has a
density f. For two points s, t ∈X, we let zst(λ) = λs + (1 −λ)t (and use zst when λ is understood)
and deﬁne the Mixup cross-entropy on s, t with respect to a classiﬁer g as:"
SETUP,0.04819277108433735,"ℓmix(g, s, t, λ) =
−log gi(zst)
s, t ∈Xi
−
 
λ log gi(zst) + (1 −λ) log gj(zst)

s ∈Xi, t ∈Xj"
SETUP,0.05060240963855422,"Having deﬁned ℓmix as above, we may write the component of the full Mixup cross-entropy loss
corresponding to mixing points from classes i and j as:"
SETUP,0.05301204819277108,"Ji,j
mix(g, PX, Pf) =
Z"
SETUP,0.05542168674698795,"Xi×Xj×[0,1]
ℓmix(g, s, t, λ) d(PX × PX × Pf)(s, t, λ)"
SETUP,0.05783132530120482,Published as a conference paper at ICLR 2022
SETUP,0.060240963855421686,"The ﬁnal Mixup cross-entropy loss is then the sum of Ji,j
mix over all i, j ∈{1, ..., k} (corresponding
to all possible mixings between classes, including themselves):"
SETUP,0.06265060240963856,"Jmix(g, PX, Pf) = k
X i=1 k
X"
SETUP,0.06506024096385542,"j=1
Ji,j
mix(g, PX, Pf)"
SETUP,0.06746987951807229,"Relation to Prior Work. We have opted for a more general deﬁnition of the Mixup loss (at least
when constrained to multi-class classiﬁcation) than prior works. This is not generality for generality’s
sake, but rather because many of our results apply to any mixing distribution supported on [0, 1].
One obtains the original Mixup formulation of Zhang et al. (2018) for multi-class classiﬁcation on
a ﬁnite dataset by taking the Xi to be ﬁnite sets, and choosing PX to be the normalized counting
measure (corresponding to a discrete uniform distribution). Additionally, Pf is chosen to have density
Beta(α, α), where α is a hyperparameter."
MIXUP-OPTIMAL CLASSIFIER,0.06987951807228916,"2.2
MIXUP-OPTIMAL CLASSIFIER"
MIXUP-OPTIMAL CLASSIFIER,0.07228915662650602,"Given our setup, we now wish to characterize the behavior of a Mixup-optimal classiﬁer at a point
x ∈Rn. However, if the optimization of Jmix is considered over the class of functions C, this
is intractable (to the best of our knowledge) due to the lack of regularity conditions imposed on
functions in C. We thus wish to constrain the optimization of Jmix to a class of functions that is
sufﬁciently powerful (so as to include almost all practical settings) while still allowing for local
analysis. To do so, we will need the following deﬁnitions, which will also be referenced throughout
the results in this section and the next:"
MIXUP-OPTIMAL CLASSIFIER,0.0746987951807229,"Ai,j
x,ϵ = {(s, t, λ) ∈Xi × Xj × [0, 1] : λs + (1 −λ)t ∈Bϵ(x)}"
MIXUP-OPTIMAL CLASSIFIER,0.07710843373493977,"Ai,j
x,ϵ,δ = {(s, t, λ) ∈Xi × Xj × [0, 1 −δ] : λs + (1 −λ)t ∈Bϵ(x)}"
MIXUP-OPTIMAL CLASSIFIER,0.07951807228915662,"Xmix = 
"
MIXUP-OPTIMAL CLASSIFIER,0.0819277108433735,"x ∈Rn :
["
MIXUP-OPTIMAL CLASSIFIER,0.08433734939759036,"i,j
Ai,j
x,ϵ has positive measure for every ϵ > 0 
 "
MIXUP-OPTIMAL CLASSIFIER,0.08674698795180723,"ξi,j
x,ϵ =
Z"
MIXUP-OPTIMAL CLASSIFIER,0.0891566265060241,"Ai,j
x,ϵ
d(PX × PX × Pf)(s, t, λ)"
MIXUP-OPTIMAL CLASSIFIER,0.09156626506024096,"ξi,j
x,ϵ,λ =
Z"
MIXUP-OPTIMAL CLASSIFIER,0.09397590361445783,"Ai,j
x,ϵ
λ d(PX × PX × Pf)(s, t, λ)"
MIXUP-OPTIMAL CLASSIFIER,0.0963855421686747,"The set Ai,j
x,ϵ represents all points in Xi × Xj that have lines between them intersecting an ϵ-
neighborhood of x, while the set Ai,j
x,ϵ,δ represents the restriction of Ai,j
x,ϵ to only those points whose
connecting line segments intersect an ϵ-neighborhood of x with λ values bounded by 1 −δ (used in
Section 3). The set Xmix corresponds to all points for which every neighborhood factors into Jmix.
The ξi,j
x,ϵ term represents the measure of the set Ai,j
x,ϵ while ξi,j
x,ϵ,λ represents the expectation of λ over
the same set. To provide better intuition for these deﬁnitions, we provide visualizations in Section B
of the appendix. We can now deﬁne the subset of C to which we will constrain our optimization of
Jmix."
MIXUP-OPTIMAL CLASSIFIER,0.09879518072289156,"Deﬁnition 2.1. Let C∗to be the subset of C for which every h ∈C∗satisﬁes h(x) =
limϵ→0 argminθ∈[0,1]k Jmix(θ)|Bϵ(x) for all x ∈Xmix when the limit exists. Here Jmix(θ)|Bϵ(x)
represents the Mixup loss for a constant function with value θ with the restriction of each term in
Jmix to the set Ai,j
x,ϵ."
MIXUP-OPTIMAL CLASSIFIER,0.10120481927710843,We immediately justify this deﬁnition with the following proposition.
MIXUP-OPTIMAL CLASSIFIER,0.10361445783132531,"Proposition 2.2. Any function h ∈argming∈C∗Jmix(g, PX, Pf) satisﬁes Jmix(h) ≤Jmix(g) for
any continuous g ∈C."
MIXUP-OPTIMAL CLASSIFIER,0.10602409638554217,"Proof Sketch. We can argue directly from deﬁnitions by considering points in Xmix for which h
and g differ."
MIXUP-OPTIMAL CLASSIFIER,0.10843373493975904,Published as a conference paper at ICLR 2022
MIXUP-OPTIMAL CLASSIFIER,0.1108433734939759,"Proposition 2.2 demonstrates that optimizing over C∗is at least as good as optimizing over the subset
of C consisting of continuous functions, so we cover most cases of practical interest (i.e. optimizing
deep neural networks). As such, the term “Mixup-optimal” is intended to mean optimal with respect
to C∗throughout the rest of the paper. We may now characterize the classiﬁcation of a Mixup-optimal
classiﬁer on Xmix."
MIXUP-OPTIMAL CLASSIFIER,0.11325301204819277,"Lemma 2.3. For any point x ∈Xmix and ϵ > 0, there exists a continuous function hϵ satisfying:"
MIXUP-OPTIMAL CLASSIFIER,0.11566265060240964,"hi
ϵ(x) =
ξi,i
x,ϵ + P"
MIXUP-OPTIMAL CLASSIFIER,0.1180722891566265,"j̸=i
 
ξi,j
x,ϵ,λ + (ξj,i
x,ϵ −ξj,i
x,ϵ,λ)
"
MIXUP-OPTIMAL CLASSIFIER,0.12048192771084337,"Pk
q=1"
MIXUP-OPTIMAL CLASSIFIER,0.12289156626506025,"
ξq,q
x,ϵ + P"
MIXUP-OPTIMAL CLASSIFIER,0.12530120481927712,"j̸=q
 
ξq,j
x,ϵ,λ + (ξj,q
x,ϵ −ξj,q
x,ϵ,λ)

(1)"
MIXUP-OPTIMAL CLASSIFIER,0.12771084337349398,"With the property that limϵ→0 hϵ(x) = h(x) for every h ∈argming∈C∗Jmix(g, PX, Pf) when the
limit exists."
MIXUP-OPTIMAL CLASSIFIER,0.13012048192771083,"Proof Sketch. We set hϵ = argminθ∈[0,1]k Jmix(θ)|Bϵ(x) and show that this is well-deﬁned, contin-
uous, and has the above form using the strict convexity of the minimization problem."
MIXUP-OPTIMAL CLASSIFIER,0.13253012048192772,"Remark 2.4. For the important case of ﬁnite datasets, it will be shown that the limit above always
exists as part of the proof of Theorem 3.2."
MIXUP-OPTIMAL CLASSIFIER,0.13493975903614458,"The expression for hi
ϵ just represents the expected location of the point x on all lines between class i
and other classes, normalized by the sum of the expected locations for all classes. It can be simpliﬁed
signiﬁcantly if Pf is assumed to be symmetric; we give this as a corollary after the proof in Section C
of the Appendix. Importantly, we note that while hϵ as deﬁned in Lemma 2.3 is continuous for every
ϵ > 0, its pointwise limit h need not be, which we demonstrate below."
MIXUP-OPTIMAL CLASSIFIER,0.13734939759036144,"Proposition 2.5. Let X1 = {(0, 1), (0, −1)} and let X2 = {(1, 0), (−1, 0)}, with PX being discrete
uniform over X1∪X2 and Pf being continuous uniform over [0, 1]. Then the Mixup-optimal classiﬁer
h is discontinuous at (0, 0)."
MIXUP-OPTIMAL CLASSIFIER,0.13975903614457832,"Proof Sketch. One may explicitly compute for x = (0, 0) that h1(x) = h2(x) = 1 2."
MIXUP-OPTIMAL CLASSIFIER,0.14216867469879518,"Proposition 2.5 illustrates our ﬁrst signiﬁcant difference between Mixup training and standard training:
there always exists a minimizer of the empirical cross-entropy J that can be extended to a continuous
function (since a minimizer is constant on the class supports and not constrained elsewhere), whereas
depending on the data the minimizer of Jmix can be discontinuous."
A MIXUP FAILURE CASE,0.14457831325301204,"2.3
A MIXUP FAILURE CASE"
A MIXUP FAILURE CASE,0.14698795180722893,"With that in mind, several model classes popular in practical applications consist of continuous
functions. For example, neural networks with ReLU activations are continuous, and several works
have noted that they are Lipschitz continuous with shallow networks having approximately small
Lipschitz constant (Scaman & Virmaux, 2019; Fazlyab et al., 2019; Latorre et al., 2020). Given the
regularity of such models, we are motivated to consider the continuous approximations hϵ in Lemma
2.3 and see if it is possible to construct a dataset on which hϵ (for a ﬁxed ϵ) can fail to classify the
original points correctly. We thus consider the following dataset:"
A MIXUP FAILURE CASE,0.1493975903614458,"Deﬁnition 2.6. [3-Point Alternating Line] We deﬁne X 2
3 to be the binary classiﬁcation dataset
consisting of the points {0, 1, 2} classiﬁed as {1, 2, 1}. In our setup, this corresponds to X1 = {0, 2}
and X2 = {1} with PX = 1"
A MIXUP FAILURE CASE,0.15180722891566265,"31{0,1,2}."
A MIXUP FAILURE CASE,0.15421686746987953,"Intuitively, the reason why Mixup can fail on X 2
3 is that, for choices of Pf that concentrate about 1"
A MIXUP FAILURE CASE,0.1566265060240964,"2,
we will have by Lemma 2.3 that the Mixup-optimal classiﬁcation in a neighborhood of point 1 should
skew towards class 1 instead of class 2 due to the sandwiching of point 1 between points 0 and 2.
The canonical choice of Pf corresponding to a mixing density of Beta(α, α) is one such choice:"
A MIXUP FAILURE CASE,0.15903614457831325,"Theorem 2.7. Let Pf have associated density Beta(α, α). Then for any classiﬁer hϵ on X 2
3 (as
deﬁned in Lemma 2.3), we may choose α such that hϵ does not achieve 0 classiﬁcation error on X 2
3 ."
A MIXUP FAILURE CASE,0.1614457831325301,"Proof Sketch. For any ϵ > 0, we can bound the ξ terms in Equation 1 using the fact that Beta(α, α)
is strictly subgaussian (Marchal & Arbel, 2017), and then choose α appropriately."
A MIXUP FAILURE CASE,0.163855421686747,Published as a conference paper at ICLR 2022
A MIXUP FAILURE CASE,0.16626506024096385,"(a) α = 1
(b) α = 32
(c) α = 128"
A MIXUP FAILURE CASE,0.1686746987951807,"Figure 1: Training error for Mixup and regular training on X 2
3 . Each curve corresponds to the mean
of 10 training runs, and the area around each curve represents a region of one standard deviation."
A MIXUP FAILURE CASE,0.1710843373493976,"Experiments. The result of Theorem 2.7 leads us to believe that the Mixup training of a continuous
model should fail on X 2
3 for appropriately chosen α. To verify that the theory predicts the experiments,
we train a two-layer feedforward neural network with 512 hidden units and ReLU activations on X 2
3
with and without Mixup. The implementation of Mixup training does not differ from the theoretical
setup; we uniformly sample pairs of data points and train on their mixtures. Our implementation uses
PyTorch (Paszke et al., 2019) and is based heavily on the open source implementation of Manifold
Mixup (Verma et al., 2019) by Shivam Saboo. Results for training using (full-batch) Adam (Kingma
& Ba, 2015) with the suggested (and common) hyperparameters of β1 = 0.9, β2 = 0.999 and a
learning rate of 0.001 are shown in Figure 1. The class 1 probabilities for each point in the dataset
outputted by the learned Mixup classiﬁers from Figure 1 are shown in Table 1 below:"
A MIXUP FAILURE CASE,0.17349397590361446,"h
0
1
2
α = 1
0.995
0.156
0.979
α = 32
1.000
0.603
0.997
α = 128
1.000
0.650
0.997"
A MIXUP FAILURE CASE,0.17590361445783131,"Table 1: Mixup model evaluations on X 2
3 for different choices of α."
A MIXUP FAILURE CASE,0.1783132530120482,"We see from Figure 1 and Table 1 that Mixup training fails to correctly classify the points in X 2
3 for
α = 32, and this misclassiﬁcation becomes more exacerbated as we increase α. The choice of α for
which misclassiﬁcations begin to happen is largely superﬁcial; we show in Section D of the Appendix
that it is straightforward to construct datasets in the style of X 2
3 for which Mixup training will fail
even for the very mild choice of α = 1. We focus on the case of X 2
3 here to simplify the theory. The
key takeaway is that, for datasets that exhibit (approximately) collinear structure amongst points, it is
possible for inappropriately chosen mixing distributions to cause Mixup training to fail to minimize
the original empirical risk."
SUFFICIENT CONDITIONS FOR MINIMIZING THE ORIGINAL RISK,0.18072289156626506,"2.4
SUFFICIENT CONDITIONS FOR MINIMIZING THE ORIGINAL RISK"
SUFFICIENT CONDITIONS FOR MINIMIZING THE ORIGINAL RISK,0.18313253012048192,"The natural follow-up question to the results of the previous subsection is: under what conditions
on the data can this failure case be avoided? In other words, when can the Mixup-optimal classiﬁer
classify the original data points correctly while being continuous at those points?"
SUFFICIENT CONDITIONS FOR MINIMIZING THE ORIGINAL RISK,0.1855421686746988,"Prior to answering that question, we ﬁrst point out that if discontinuous functions are allowed, then
Mixup training always minimizes the original risk on ﬁnite datasets:"
SUFFICIENT CONDITIONS FOR MINIMIZING THE ORIGINAL RISK,0.18795180722891566,"Proposition 2.8. Consider k-class classiﬁcation where the supports X1, ..., Xk are ﬁnite and PX
corresponds to the discrete uniform distribution. Then for every h ∈argming∈C∗Jmix(g, PX, Pf),
we have that hi(x) = 1 on Xi."
SUFFICIENT CONDITIONS FOR MINIMIZING THE ORIGINAL RISK,0.19036144578313252,"Proof Sketch. Only the ξi,i
x,ϵ term doesn’t vanish in hi
ϵ(x) as ϵ →0, as the mixing distribution is
continuous and cannot assign positive measure to x alone when mixing two points that are not x."
SUFFICIENT CONDITIONS FOR MINIMIZING THE ORIGINAL RISK,0.1927710843373494,"Note that Proposition 2.8 holds for any continuous mixing distribution Pf supported on [0, 1] - we
just need a rich enough model class."
SUFFICIENT CONDITIONS FOR MINIMIZING THE ORIGINAL RISK,0.19518072289156627,Published as a conference paper at ICLR 2022
SUFFICIENT CONDITIONS FOR MINIMIZING THE ORIGINAL RISK,0.19759036144578312,"(a) MNIST
(b) CIFAR-10
(c) CIFAR-100"
SUFFICIENT CONDITIONS FOR MINIMIZING THE ORIGINAL RISK,0.2,"Figure 2: Mean and single standard deviation of 5 training runs for Mixup (α = 1024) and ERM on
the original training data. Mixup achieves near-identical (within 1%) training accuracy to ERM."
SUFFICIENT CONDITIONS FOR MINIMIZING THE ORIGINAL RISK,0.20240963855421687,"In order to obtain the result of Proposition 2.8 with the added restriction of continuity of h on each of
the Xi, we need to further assume that the collinearity of different class points that occurred in the
previous section does not happen.
Assumption 2.9. For any point x ∈Xi, there do not exist u ∈X and v ∈Xj for j ̸= i such that
there is a λ > 0 for which x = λu + (1 −λ)v."
SUFFICIENT CONDITIONS FOR MINIMIZING THE ORIGINAL RISK,0.20481927710843373,"A visualization of Assumption 2.9 is provided in Section B of the appendix. With this assumption
in hand, we obtain the following result as a corollary of Theorem 3.2 which is proved in the next
section:
Theorem 2.10. We consider the same setting as Proposition 2.8 and further suppose that Assumption
2.9 is satisﬁed. Then for every h ∈argming∈C∗Jmix(g, PX, Pf), we have that hi(x) = 1 on Xi and
that h is continuous on X."
SUFFICIENT CONDITIONS FOR MINIMIZING THE ORIGINAL RISK,0.20722891566265061,"Application of Sufﬁcient Conditions. The practical take-away of Theorem 2.10 is that if a dataset
does not exhibit approximate collinearity between points of different classes, then Mixup training
should achieve near-identical training error on the original training data when compared to ERM. We
validate this by training ResNet-18 (He et al., 2015) (using the popular implementation of Kuang Liu)
on MNIST (LeCun, 1998), CIFAR-10, and CIFAR-100 (Krizhevsky, 2009) with and without Mixup
for 50 epochs with a batch size of 128 and otherwise identical settings to the previous subsection. For
Mixup, we consider mixing using Beta(α, α) for α = 1, 32, 128, and 1024 to cover a wide band of
mixing distributions. Our experimental results for the “worst case” of α = 1024 (the other choices
are strictly closer to ERM in training accuracy) are shown in Figure 2, while the other experiments
can be found in Section D of the Appendix."
SUFFICIENT CONDITIONS FOR MINIMIZING THE ORIGINAL RISK,0.20963855421686747,"We now check that the theory can predict the results of our experiments by verifying Assumption 2.9
approximately (exact veriﬁcation is too expensive). We sample one epoch’s worth of Mixup points (to
simulate training) from a downsampled version of each train dataset, and then compute the minimum
distances between each Mixup point and points from classes other than the two mixed classes. The
minimum over these distances corresponds to an estimate of ϵ in Assumption 2.9. We compute the
distances for both training and test data, to see whether good training but poor test performance can
be attributed to test data conﬂicting with mixed training points. Results are shown below in Table 2."
SUFFICIENT CONDITIONS FOR MINIMIZING THE ORIGINAL RISK,0.21204819277108433,"Comparison Type
MNIST
CIFAR-10
CIFAR-100
Mixup/Train
11.433
17.716
12.936
Mixup/Test
11.897
22.133
15.076"
SUFFICIENT CONDITIONS FOR MINIMIZING THE ORIGINAL RISK,0.21445783132530122,"Table 2: Minimum Euclidean distance results using our approximation procedure with Mixup
points generated using Beta(1024, 1024). We downsample all datasets to 20%, to compare to the
experiments of Guo et al. (2019)."
SUFFICIENT CONDITIONS FOR MINIMIZING THE ORIGINAL RISK,0.21686746987951808,"To interpret the estimated ϵ values in Table 2, we note that unless ϵ ≪1/L (where L is the Lipschitz
constant of the model being considered), a Mixup point cannot conﬂict with an original point (since
the function has enough ﬂexibility to ﬁt both). Due to the estimated large Lipschitz constants of deep
networks (Scaman & Virmaux, 2019), our ϵ values certainly do not fall in this regime, explaining
how the near-identical performance to ERM is possible on the original datasets. We remark that our
results challenge an implication of Guo et al. (2019), which was that training/test performance on"
SUFFICIENT CONDITIONS FOR MINIMIZING THE ORIGINAL RISK,0.21927710843373494,Published as a conference paper at ICLR 2022
SUFFICIENT CONDITIONS FOR MINIMIZING THE ORIGINAL RISK,0.2216867469879518,"the above benchmarks degrades with high values of α due to conﬂicts between original points and
Mixup points."
THE RATE OF EMPIRICAL RISK MINIMIZATION USING MIXUP,0.22409638554216868,"2.5
THE RATE OF EMPIRICAL RISK MINIMIZATION USING MIXUP"
THE RATE OF EMPIRICAL RISK MINIMIZATION USING MIXUP,0.22650602409638554,"Another striking aspect of the experiments in Figure 2 is that Mixup training minimizes the original
empirical risk at a very similar rate to that of direct empirical risk minimization. A priori, there is
no reason to expect that Mixup should be able to do this - a simple calculation shows that Mixup
training only sees one true data point per epoch in expectation (each pair of points is sampled with
probability
1
m2 and there are m true point pairs and m pairs seen per epoch, where m is the dataset
size). The experimental results are even more surprising given that we are training using α = 1024,
which essentially corresponds to training using the midpoints of the original data points. This seems
to imply that it is possible to recover the classiﬁcations of the original data points from the midpoints
alone (not including the midpoint of a point and itself), and similar phenomena has indeed been
observed in recent empirical work (Guo, 2021). We make this rigorous with the following result:
Theorem 2.11. Suppose {x1, ..., xm} with m ≥6 are sampled from X according to PX, and that
PX has a density. Then with probability 1, we can uniquely determine the points {x1, ..., xm} given
only the
 m
2

midpoints {xi,j}1≤i<j≤m."
THE RATE OF EMPIRICAL RISK MINIMIZATION USING MIXUP,0.2289156626506024,"Proof Sketch. The idea is to represent the problem as a linear system, and show using rank arguments
that the sets of m points that cannot be uniquely determined are a measure zero set."
THE RATE OF EMPIRICAL RISK MINIMIZATION USING MIXUP,0.23132530120481928,"Theorem 2.11 shows, in an information-theoretic sense, that it is possible to obtain the original data
points (and therefore also their labels) from only their midpoints. While this gives more theoretical
backing as to why it is possible for Mixup training using Beta(1024, 1024) to recover the original
data point classiﬁcations with very low error, it does not explain why this actually happens in practice
at the rate that it does. A full theoretical analysis of this phenomenon would necessarily require
analyzing the training dynamics of neural networks (or another model of choice) when trained only
on midpoints of the original data, which is outside the intended scope of this work. That being said,
we hope that such analysis will be a fruitful line of investigation for future work."
GENERALIZATION PROPERTIES OF MIXUP CLASSIFIERS,0.23373493975903614,"3
GENERALIZATION PROPERTIES OF MIXUP CLASSIFIERS"
GENERALIZATION PROPERTIES OF MIXUP CLASSIFIERS,0.236144578313253,"Having discussed how Mixup training differs from standard empirical risk minimization with regards
to the original training data, we now consider how a learned Mixup classiﬁer can differ from one
learned through empirical risk minimization on unseen test data. To do so, we analyze the per-class
margin of Mixup classiﬁers, i.e. the distance one can move from a class support Xi while still being
classiﬁed as class i."
THE MARGIN OF MIXUP CLASSIFIERS,0.2385542168674699,"3.1
THE MARGIN OF MIXUP CLASSIFIERS"
THE MARGIN OF MIXUP CLASSIFIERS,0.24096385542168675,"Intuitively, if a point x falls only on line segments between Xi and some other classes Xj, ..., and if
x always falls closer to Xi than the other classes, we can expect x to be classiﬁed according to class
i by the Mixup-optimal classiﬁer due to Lemma 2.3. To make this rigorous, we introduce another
assumption that generalizes Assumption 2.9 to points outside of the class supports:
Assumption 3.1. For a class i and a point x ∈Xmix, suppose there exists an ϵ > 0 and a 0 < δ < 1"
THE MARGIN OF MIXUP CLASSIFIERS,0.2433734939759036,"2
such that Ai,j
x,ϵ′,δ and Aj,q
x,ϵ′ have measure zero for all ϵ′ ≤ϵ and j, q ̸= i, and the measure of Ai,j
x,ϵ is
at least that of Aj,i
x,ϵ."
THE MARGIN OF MIXUP CLASSIFIERS,0.2457831325301205,"Here the measure zero conditions are codifying the ideas that the point x falls closer to Xi than
any other class on every line segment that intersects it, and there are no line segments between
non-i classes that intersect x. The condition that the measure of Ai,j
x,ϵ is at least that of Aj,i
x,ϵ handles
asymmetric mixing distributions that concentrate on pathological values of λ. A visualization of
Assumption 3.1 is provided in Section B of the Appendix. Now we can prove:
Theorem 3.2. Consider k-class classiﬁcation where the supports X1, ..., Xk are ﬁnite and PX
corresponds to the discrete uniform distribution. If a point x satisﬁes Assumption 3.1 with respect to
a class i, then for every h ∈argming∈C∗Jmix(g, PX, Pf), we have that h classiﬁes x as class i and
that h is continuous at x."
THE MARGIN OF MIXUP CLASSIFIERS,0.24819277108433735,Published as a conference paper at ICLR 2022
THE MARGIN OF MIXUP CLASSIFIERS,0.25060240963855424,"Figure 3: Decision boundary plots for standard and Mixup training on the two moons dataset of
Pezeshki et al. (2020) with a class separation of 0.5. Each boundary represents the average of 10
training runs of 1500 epochs."
THE MARGIN OF MIXUP CLASSIFIERS,0.25301204819277107,"Proof Sketch. The limit in Lemma 2.3 can be shown to exist using the Lebesgue differentiation
theorem, and we can bound the limit below since the Ai,j
x,ϵ′,δ have measure zero."
THE MARGIN OF MIXUP CLASSIFIERS,0.25542168674698795,"Assumption 2.9 implies Assumption 3.1 with respect to each class, and hence we get Theorem
2.10 as a corollary of Theorem 3.2 as mentioned in Section 2. To use Theorem 3.2 to understand
generalization, we make the observation that a point x can satisfy Assumption 3.1 while being a
distance of up to minj d(Xi,Xj)"
THE MARGIN OF MIXUP CLASSIFIERS,0.25783132530120484,"2
from some class i. This distance can be signiﬁcantly farther than, for
example, the optimal linear separator in a linearly separable dataset."
THE MARGIN OF MIXUP CLASSIFIERS,0.26024096385542167,"Experiments. To illustrate that Mixup can lead to more separation between points than a linear
decision boundary, we consider the two moons dataset (Buitinck et al., 2013), which consists of two
classes of points supported on semicircles with added Gaussian noise. Our motivation for doing so
comes from the work of Pezeshki et al. (2020), in which it was noted that neural network models
trained on a separated version of the two moons dataset essentially learned a linear separator while
ignoring the curvature of the class supports. While Pezeshki et al. (2020) introduced an explicit
regularizer to encourage a nonlinear decision boundary, we expect due to Theorem 3.2 that Mixup
training will achieve a similar result without any additional modiﬁcations."
THE MARGIN OF MIXUP CLASSIFIERS,0.26265060240963856,"To verify this empirically, we train a two-layer neural network with 500 hidden units with and without
Mixup, to have a 1-to-1 comparison with the setting of Pezeshki et al. (2020). We use α = 1 and
α = 1024 for Mixup to capture a wide band of mixing densities. The version of the two moons
dataset we use is also identical to that of the one used in the experiments of Pezeshki et al. (2020), and
we are grateful to the authors for releasing their code under the MIT license. We do full-batch training
with all other training, implementation, and compute details remaining the same as the previous
section. Results are shown in Figure 3."
THE MARGIN OF MIXUP CLASSIFIERS,0.26506024096385544,"Our results afﬁrm the observations of Pezeshki et al. (2020) and previous work (des Combes et al.,
2018) that neural network training dynamics may ignore salient features of the dataset; in this case the
“Base Model” learns to differentiate the two classes essentially based on the x-coordinate alone. On
the other hand, the models trained using Mixup have highly nonlinear decision boundaries. Further
experiments for different class separations and values of α are included in Section F of the Appendix."
WHEN MIXUP TRAINING LEARNS THE SAME CLASSIFIER,0.2674698795180723,"3.2
WHEN MIXUP TRAINING LEARNS THE SAME CLASSIFIER"
WHEN MIXUP TRAINING LEARNS THE SAME CLASSIFIER,0.26987951807228916,"The experiments and theory of the previous sections have shown how a Mixup classiﬁer can differ
signiﬁcantly from one learned through standard training. In this subsection, we now consider the
opposing question - when is the Mixup classiﬁer the same as the one learned through standard
training? Prior work (Archambault et al., 2019) has considered when Mixup training coincides with
certain adversarial training, and our results complement this line of work. The motivation for our
results comes from the fact that a practitioner need not spend compute on Mixup training in addition
to standard training in settings where the performance will be provably the same."
WHEN MIXUP TRAINING LEARNS THE SAME CLASSIFIER,0.27228915662650605,"We consider the case of binary classiﬁcation using a linear model θ⊤x on high-dimensional Gaussian
data, which is a setting that arises naturally when training using Gaussian kernels. Speciﬁcally, we
consider the dataset X to consist of n points in Rd distributed according to N(0, Id) with d > n
(to be made more precise shortly). We also consider the mixing distribution to be any symmetric
distribution supported on [0, 1] (thereby including as a special case Beta(α, α)). We let the labels of"
WHEN MIXUP TRAINING LEARNS THE SAME CLASSIFIER,0.2746987951807229,Published as a conference paper at ICLR 2022
WHEN MIXUP TRAINING LEARNS THE SAME CLASSIFIER,0.27710843373493976,"points in X be ±1 (so that the sign of θ⊤x is the classiﬁcation), and use X1 and X−1 to denote the
individual class points. We will show that in this setting, the optimal Mixup classiﬁer is the same (up
to rescaling of θ) as the ERM classiﬁer learned using gradient descent with high probability. To do so
we need some additional deﬁnitions."
WHEN MIXUP TRAINING LEARNS THE SAME CLASSIFIER,0.27951807228915665,"Deﬁnition 3.3. We say ˆθ is an interpolating solution, if there exists k > 0 such that"
WHEN MIXUP TRAINING LEARNS THE SAME CLASSIFIER,0.2819277108433735,"ˆθ⊤xi = −ˆθ⊤zj = k ∀xi ∈X1, ∀zj ∈X−1."
WHEN MIXUP TRAINING LEARNS THE SAME CLASSIFIER,0.28433734939759037,Deﬁnition 3.4. The maximum margin solution ˜θ is deﬁned through:
WHEN MIXUP TRAINING LEARNS THE SAME CLASSIFIER,0.28674698795180725,"˜θ := argmax
∥θ∥2=1"
WHEN MIXUP TRAINING LEARNS THE SAME CLASSIFIER,0.2891566265060241,"
min
xi∈X1,zj∈X−1"
WHEN MIXUP TRAINING LEARNS THE SAME CLASSIFIER,0.29156626506024097,"
θ⊤xi, −θ⊤zj
	"
WHEN MIXUP TRAINING LEARNS THE SAME CLASSIFIER,0.29397590361445786,"When the maximum margin solution coincides with an interpolating solution for the dataset X (i.e.
all the points are support vectors), we have that Mixup training leads to learning the max margin
solution (up to rescaling)."
WHEN MIXUP TRAINING LEARNS THE SAME CLASSIFIER,0.2963855421686747,"Theorem 3.5. If the maximum margin solution for X is also an interpolating solution for X, then any
θ that lies in the span of X and minimizes the Mixup loss Jmix for a symmetric mixing distribution
Pf is a rescaling of the maximum margin solution."
WHEN MIXUP TRAINING LEARNS THE SAME CLASSIFIER,0.2987951807228916,"Proof Sketch. It can be shown that θ is an interpolating solution using a combination of the strict
convexity of Jmix as a function of θ and the symmetry of the mixing distribution."
WHEN MIXUP TRAINING LEARNS THE SAME CLASSIFIER,0.30120481927710846,"Remark 3.6. For every θ, we can decompose it as θ = θX + θX⊥where θX is the projection of
θ onto the subspace spanned by X. By deﬁnition we have that θX⊥is orthogonal to all possible
mixings of points in X. Hence, θX⊥does not affect the Mixup loss or the interpolating property, so
for simplicity we may just assume θ lies in the span of X."
WHEN MIXUP TRAINING LEARNS THE SAME CLASSIFIER,0.3036144578313253,"To characterize the conditions on X under which the maximum margin solution interpolates the data,
we use a key result of Muthukumar et al. (2020), restated below. Note that Muthukumar et al. (2020)
actually provide more settings in their paper, but we constrain ourselves to the one stated below for
simplicity."
WHEN MIXUP TRAINING LEARNS THE SAME CLASSIFIER,0.3060240963855422,"Lemma 3.7. [Theorem 1 in Muthukumar et al. (2020), Rephrased] Assuming d > 10n ln n + n −1,
then with probability at least 1 −2/n, the maximum margin solution for X is also an interpolating
solution."
WHEN MIXUP TRAINING LEARNS THE SAME CLASSIFIER,0.30843373493975906,"To tie the optimal Mixup classiﬁer back to the classiﬁer learned through standard training, we appeal
to the fact that minimizing the empirical cross-entropy of a linear model using gradient descent
leads to learning the maximum margin solution on linearly separable data (Soudry et al., 2018; Ji &
Telgarsky, 2018). From this we obtain the desired result of this subsection:"
WHEN MIXUP TRAINING LEARNS THE SAME CLASSIFIER,0.3108433734939759,"Corollary 3.8. Under the same conditions as Lemma 3.7, the optimal Mixup classiﬁer has the same
direction as the classiﬁer learned through minimizing the empirical cross-entropy using gradient
descent with high probability."
CONCLUSION,0.3132530120481928,"4
CONCLUSION"
CONCLUSION,0.3156626506024096,"The main contribution of our work has been to provide a theoretical framework for analyzing how
Mixup training can differ from empirical risk minimization. Our results characterize a practical
failure case of Mixup, and also identify conditions under which Mixup can provably minimize the
original risk. They also show in the sense of margin why the generalization of Mixup classiﬁers
can be superior to those learned through empirical risk minimization, while again identifying model
classes and datasets for which the generalization of a Mixup classiﬁer is no different (with high
probability). We also emphasize that the generality of our theoretical framework allows most of our
results to hold for any continuous mixing distribution. Our hope is that the tools developed in this
work will see applications in future works concerned with analyzing the relationship between beneﬁts
obtained from Mixup training and properties of the training data."
CONCLUSION,0.3180722891566265,Published as a conference paper at ICLR 2022
ETHICS STATEMENT,0.3204819277108434,"5
ETHICS STATEMENT"
ETHICS STATEMENT,0.3228915662650602,"We do not anticipate any direct misuses of this work due to its theoretical nature. That being said,
the failure case of Mixup discussed in Section 2 could serve as a way for an adversary to potentially
exploit a model trained using Mixup to classify data incorrectly. However, as this requires knowledge
of the mixing distribution and other hyperparameters of the model, we do not ﬂag this as a signiﬁcant
concern - we would just like to point it out for completeness."
REPRODUCIBILITY STATEMENT,0.3253012048192771,"6
REPRODUCIBILITY STATEMENT"
REPRODUCIBILITY STATEMENT,0.327710843373494,"Full proofs for all results in the main body of the paper can be found in Sections C and E of the
Appendix. All of the code used to generate the plots and experimental results in this paper can be
found at: https://github.com/2014mchidamb/Mixup-Data-Dependency. We have
tried our best to organize the code to be easy to use and extend. Detailed instructions for how to run
each type of experiment are provided in the README ﬁle included in the GitHub repository."
REPRODUCIBILITY STATEMENT,0.3301204819277108,ACKNOWLEDGEMENTS
REPRODUCIBILITY STATEMENT,0.3325301204819277,"Rong Ge, Muthu Chidambaram, Xiang Wang, and Chenwei Wu are supported in part by NSF
Award DMS-2031849, CCF-1704656, CCF-1845171 (CAREER), CCF-1934964 (Tripods), a Sloan
Research Fellowship, and a Google Faculty Research Award. Muthu would like to thank Michael Lin
for helpful discussions during the early stages of this project."
REFERENCES,0.3349397590361446,REFERENCES
REFERENCES,0.3373493975903614,"Eric Arazo, Diego Ortego, Paul Albert, Noel E O’Connor, and Kevin McGuinness. Unsupervised
label noise modeling and loss correction. arXiv preprint arXiv:1904.11238, 2019."
REFERENCES,0.3397590361445783,"Guillaume P. Archambault, Yongyi Mao, Hongyu Guo, and Richong Zhang. Mixup as directional
adversarial training. CoRR, abs/1906.06875, 2019. URL http://arxiv.org/abs/1906.
06875."
REFERENCES,0.3421686746987952,"David Berthelot, Nicholas Carlini, Ian Goodfellow, Nicolas Papernot, Avital Oliver, and
Colin A Raffel.
Mixmatch:
A holistic approach to semi-supervised learning.
In
H. Wallach, H. Larochelle, A. Beygelzimer, F. d'Alché-Buc, E. Fox, and R. Garnett
(eds.), Advances in Neural Information Processing Systems, volume 32. Curran Asso-
ciates, Inc., 2019. URL https://proceedings.neurips.cc/paper/2019/file/
1cd138d0499a68f4bb72bee04bbec2d7-Paper.pdf."
REFERENCES,0.344578313253012,"Lars Buitinck, Gilles Louppe, Mathieu Blondel, Fabian Pedregosa, Andreas Mueller, Olivier Grisel,
Vlad Niculae, Peter Prettenhofer, Alexandre Gramfort, Jaques Grobler, Robert Layton, Jake
VanderPlas, Arnaud Joly, Brian Holt, and Gaël Varoquaux. API design for machine learning
software: experiences from the scikit-learn project. CoRR, abs/1309.0238, 2013. URL http:
//arxiv.org/abs/1309.0238."
REFERENCES,0.3469879518072289,"Luigi Carratino, Moustapha Cissé, Rodolphe Jenatton, and Jean-Philippe Vert. On mixup regulariza-
tion, 2020."
REFERENCES,0.3493975903614458,"Ching-Yao Chuang and Youssef Mroueh.
Fair mixup:
Fairness via interpolation.
CoRR,
abs/2103.06503, 2021. URL https://arxiv.org/abs/2103.06503."
REFERENCES,0.35180722891566263,"Remi Tachet des Combes, Mohammad Pezeshki, Samira Shabanian, Aaron C. Courville, and Yoshua
Bengio. On the learning dynamics of deep neural networks. CoRR, abs/1809.06848, 2018. URL
http://arxiv.org/abs/1809.06848."
REFERENCES,0.3542168674698795,"Mahyar Fazlyab, Alexander Robey, Hamed Hassani, Manfred Morari, and George J. Pappas. Efﬁcient
and accurate estimation of lipschitz constants for deep neural networks, 2019."
REFERENCES,0.3566265060240964,Published as a conference paper at ICLR 2022
REFERENCES,0.35903614457831323,"Hongyu Guo. Nonlinear mixup: Out-of-manifold data augmentation for text classiﬁcation. In The
Thirty-Fourth AAAI Conference on Artiﬁcial Intelligence, AAAI 2020, The Thirty-Second Innovative
Applications of Artiﬁcial Intelligence Conference, IAAI 2020, The Tenth AAAI Symposium on
Educational Advances in Artiﬁcial Intelligence, EAAI 2020, New York, NY, USA, February 7-12,
2020, pp. 4044–4051. AAAI Press, 2020. URL https://aaai.org/ojs/index.php/
AAAI/article/view/5822."
REFERENCES,0.3614457831325301,"Hongyu Guo. Midpoint regularization: from high uncertainty training to conservative classiﬁcation,
2021."
REFERENCES,0.363855421686747,"Hongyu Guo, Yongyi Mao, and Richong Zhang. Mixup as locally linear out-of-manifold regulariza-
tion. In Proceedings of the AAAI Conference on Artiﬁcial Intelligence, volume 33, pp. 3714–3722,
2019."
REFERENCES,0.36626506024096384,"Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. Deep residual learning for image
recognition, 2015."
REFERENCES,0.3686746987951807,"Tong He, Zhi Zhang, Hang Zhang, Zhongyue Zhang, Junyuan Xie, and Mu Li. Bag of tricks for image
classiﬁcation with convolutional neural networks. In Proceedings of the IEEE/CVF Conference on
Computer Vision and Pattern Recognition (CVPR), June 2019."
REFERENCES,0.3710843373493976,"Yangsibo Huang, Zhao Song, Kai Li, and Sanjeev Arora. Instahide: Instance-hiding schemes for
private distributed learning, 2021."
REFERENCES,0.37349397590361444,"Ziwei Ji and Matus Telgarsky. Risk and parameter convergence of logistic regression. CoRR,
abs/1803.07300, 2018. URL http://arxiv.org/abs/1803.07300."
REFERENCES,0.3759036144578313,"Jang-Hyun Kim, Wonho Choo, and Hyun Oh Song. Puzzle mix: Exploiting saliency and local
statistics for optimal mixup. In International Conference on Machine Learning, pp. 5275–5285.
PMLR, 2020."
REFERENCES,0.3783132530120482,"JangHyun Kim, Wonho Choo, Hosan Jeong, and Hyun Oh Song. Co-mixup: Saliency guided joint
mixup with supermodular diversity. In International Conference on Learning Representations,
2021. URL https://openreview.net/forum?id=gvxJzw8kW4b."
REFERENCES,0.38072289156626504,"Diederik P. Kingma and Jimmy Ba. Adam: A method for stochastic optimization. In Yoshua
Bengio and Yann LeCun (eds.), 3rd International Conference on Learning Representations, ICLR
2015, San Diego, CA, USA, May 7-9, 2015, Conference Track Proceedings, 2015. URL http:
//arxiv.org/abs/1412.6980."
REFERENCES,0.38313253012048193,"Alex Krizhevsky. Learning multiple layers of features from tiny images. Technical report, 2009."
REFERENCES,0.3855421686746988,"Alex Lamb, Vikas Verma, Juho Kannala, and Yoshua Bengio. Interpolated adversarial training:
Achieving robust neural networks without sacriﬁcing too much accuracy. In Proceedings of the
12th ACM Workshop on Artiﬁcial Intelligence and Security, pp. 95–103, 2019."
REFERENCES,0.38795180722891565,"Fabian Latorre, Paul Rolland, and Volkan Cevher. Lipschitz constant estimation of neural networks
via sparse polynomial optimization, 2020."
REFERENCES,0.39036144578313253,"Yann LeCun. The mnist database of handwritten digits. http://yann. lecun. com/exdb/mnist/, 1998."
REFERENCES,0.3927710843373494,"Kibok Lee, Yian Zhu, Kihyuk Sohn, Chun-Liang Li, Jinwoo Shin, and Honglak Lee. i-mix: A
strategy for regularizing contrastive representation learning. CoRR, abs/2010.08887, 2020. URL
https://arxiv.org/abs/2010.08887."
REFERENCES,0.39518072289156625,"Olivier Marchal and Julyan Arbel. On the sub-gaussianity of the beta and dirichlet distributions.
Electronic Communications in Probability, 22(none), Jan 2017. ISSN 1083-589X. doi: 10.1214/
17-ecp92. URL http://dx.doi.org/10.1214/17-ECP92."
REFERENCES,0.39759036144578314,"Vidya Muthukumar, Adhyyan Narang, Vignesh Subramanian, Mikhail Belkin, Daniel Hsu, and Anant
Sahai. Classiﬁcation vs regression in overparameterized regimes: Does the loss function matter?
arXiv preprint arXiv:2005.08054, 2020."
REFERENCES,0.4,Published as a conference paper at ICLR 2022
REFERENCES,0.40240963855421685,"Adam Paszke, Sam Gross, Francisco Massa, Adam Lerer, James Bradbury, Gregory Chanan, Trevor
Killeen, Zeming Lin, Natalia Gimelshein, Luca Antiga, Alban Desmaison, Andreas Kopf, Edward
Yang, Zachary DeVito, Martin Raison, Alykhan Tejani, Sasank Chilamkurthy, Benoit Steiner,
Lu Fang, Junjie Bai, and Soumith Chintala. Pytorch: An imperative style, high-performance
deep learning library. In Advances in Neural Information Processing Systems, volume 32, pp.
8026–8037. Curran Associates, Inc., 2019."
REFERENCES,0.40481927710843374,"Mohammad Pezeshki, Sékou-Oumar Kaba, Yoshua Bengio, Aaron C. Courville, Doina Precup,
and Guillaume Lajoie. Gradient starvation: A learning proclivity in neural networks. CoRR,
abs/2011.09468, 2020. URL https://arxiv.org/abs/2011.09468."
REFERENCES,0.4072289156626506,"Kevin Scaman and Aladin Virmaux. Lipschitz regularity of deep neural networks: analysis and
efﬁcient estimation, 2019."
REFERENCES,0.40963855421686746,"Kihyuk Sohn, David Berthelot, Nicholas Carlini, Zizhao Zhang, Han Zhang, Colin A Raffel, Ekin Do-
gus Cubuk, Alexey Kurakin, and Chun-Liang Li. Fixmatch: Simplifying semi-supervised learning
with consistency and conﬁdence. In H. Larochelle, M. Ranzato, R. Hadsell, M. F. Balcan, and
H. Lin (eds.), Advances in Neural Information Processing Systems, volume 33, pp. 596–608. Cur-
ran Associates, Inc., 2020. URL https://proceedings.neurips.cc/paper/2020/
file/06964dce9addb1c5cb5d6e3d9838f733-Paper.pdf."
REFERENCES,0.41204819277108434,"Daniel Soudry, Elad Hoffer, Mor Shpigel Nacson, Suriya Gunasekar, and Nathan Srebro. The implicit
bias of gradient descent on separable data. The Journal of Machine Learning Research, 19(1):
2822–2878, 2018."
REFERENCES,0.41445783132530123,"Sunil Thulasidasan, Gopinath Chennupati, Jeff A Bilmes, Tanmoy Bhattacharya, and Sarah Michalak.
On mixup training: Improved calibration and predictive uncertainty for deep neural networks.
Advances in Neural Information Processing Systems, 32:13888–13899, 2019."
REFERENCES,0.41686746987951806,"Vikas Verma, Alex Lamb, Christopher Beckham, Amir Najaﬁ, Ioannis Mitliagkas, David Lopez-Paz,
and Yoshua Bengio. Manifold mixup: Better representations by interpolating hidden states. In
International Conference on Machine Learning, pp. 6438–6447. PMLR, 2019."
REFERENCES,0.41927710843373495,"Vikas Verma, Minh-Thang Luong, Kenji Kawaguchi, Hieu Pham, and Quoc V. Le. Towards domain-
agnostic contrastive learning, 2021."
REFERENCES,0.42168674698795183,"Sangdoo Yun, Dongyoon Han, Seong Joon Oh, Sanghyuk Chun, Junsuk Choe, and Youngjoon Yoo.
Cutmix: Regularization strategy to train strong classiﬁers with localizable features. In Proceedings
of the IEEE/CVF International Conference on Computer Vision, pp. 6023–6032, 2019."
REFERENCES,0.42409638554216866,"Hongyi Zhang, Moustapha Cisse, Yann N Dauphin, and David Lopez-Paz. mixup: Beyond empirical
risk minimization. In International Conference on Learning Representations, 2018."
REFERENCES,0.42650602409638555,"Linjun Zhang, Zhun Deng, Kenji Kawaguchi, Amirata Ghorbani, and James Zou. How does mixup
help with robustness and generalization?, 2020."
REFERENCES,0.42891566265060244,"Linjun Zhang, Zhun Deng, Kenji Kawaguchi, and James Zou. When and how mixup improves
calibration, 2021."
REFERENCES,0.43132530120481927,Published as a conference paper at ICLR 2022
REFERENCES,0.43373493975903615,"A
REVIEW OF DEFINITIONS AND ASSUMPTIONS"
REFERENCES,0.43614457831325304,"For convenience, we ﬁrst recall the deﬁnitions and assumptions stated throughout the paper below."
REFERENCES,0.43855421686746987,"ℓmix(g, s, t, λ) =
−log gi(zst)
s, t ∈Xi
−
 
λ log gi(zst) + (1 −λ) log gj(zst)

s ∈Xi, t ∈Xj"
REFERENCES,0.44096385542168676,"Ji,j
mix(g, PX, Pf) =
Z"
REFERENCES,0.4433734939759036,"Xi×Xj×[0,1]
ℓmix(g, s, t, λ) d(PX × PX × Pf)(s, t, λ)"
REFERENCES,0.4457831325301205,"Jmix(g, PX, Pf) = k
X i=1 k
X"
REFERENCES,0.44819277108433736,"j=1
Ji,j
mix(g, PX, Pf)"
REFERENCES,0.4506024096385542,"Ai,j
x,ϵ = {(s, t, λ) ∈Xi × Xj × [0, 1] : λs + (1 −λ)t ∈Bϵ(x)}"
REFERENCES,0.4530120481927711,"Ai,j
x,ϵ,δ = {(s, t, λ) ∈Xi × Xj × [0, 1 −δ] : λs + (1 −λ)t ∈Bϵ(x)}"
REFERENCES,0.45542168674698796,"Xmix = 
"
REFERENCES,0.4578313253012048,"x ∈Rn :
["
REFERENCES,0.4602409638554217,"i,j
Ai,j
x,ϵ has positive measure for every ϵ > 0 
 "
REFERENCES,0.46265060240963857,"ξi,j
x,ϵ =
Z"
REFERENCES,0.4650602409638554,"Ai,j
x,ϵ
d(PX × PX × Pf)(s, t, λ)"
REFERENCES,0.4674698795180723,"ξi,j
x,ϵ,λ =
Z"
REFERENCES,0.46987951807228917,"Ai,j
x,ϵ
λ d(PX × PX × Pf)(s, t, λ)"
REFERENCES,0.472289156626506,"Deﬁnition 2.1. Let C∗to be the subset of C for which every h ∈C∗satisﬁes h(x) =
limϵ→0 argminθ∈[0,1]k Jmix(θ)|Bϵ(x) for all x ∈Xmix when the limit exists. Here Jmix(θ)|Bϵ(x)
represents the Mixup loss for a constant function with value θ with the restriction of each term in
Jmix to the set Ai,j
x,ϵ."
REFERENCES,0.4746987951807229,"Deﬁnition 2.6. [3-Point Alternating Line] We deﬁne X 2
3 to be the binary classiﬁcation dataset
consisting of the points {0, 1, 2} classiﬁed as {1, 2, 1}. In our setup, this corresponds to X1 = {0, 2}
and X2 = {1} with PX = 1"
REFERENCES,0.4771084337349398,"31{0,1,2}."
REFERENCES,0.4795180722891566,"Assumption 2.9. For any point x ∈Xi, there do not exist u ∈X and v ∈Xj for j ̸= i such that
there is a λ > 0 for which x = λu + (1 −λ)v."
REFERENCES,0.4819277108433735,"Assumption 3.1. For a class i and a point x ∈Xmix, suppose there exists an ϵ > 0 and a 0 < δ < 1"
REFERENCES,0.4843373493975904,"2
such that Ai,j
x,ϵ′,δ and Aj,q
x,ϵ′ have measure zero for all ϵ′ ≤ϵ and j, q ̸= i, and the measure of Ai,j
x,ϵ is
at least that of Aj,i
x,ϵ."
REFERENCES,0.4867469879518072,"Deﬁnition 3.3. We say ˆθ is an interpolating solution, if there exists k > 0 such that"
REFERENCES,0.4891566265060241,"ˆθ⊤xi = −ˆθ⊤zj = k ∀xi ∈X1, ∀zj ∈X−1."
REFERENCES,0.491566265060241,Deﬁnition 3.4. The maximum margin solution ˜θ is deﬁned through:
REFERENCES,0.4939759036144578,"˜θ := argmax
∥θ∥2=1"
REFERENCES,0.4963855421686747,"
min
xi∈X1,zj∈X−1"
REFERENCES,0.4987951807228916,"
θ⊤xi, −θ⊤zj
	"
REFERENCES,0.5012048192771085,"B
VISUALIZATIONS OF DEFINITIONS AND ASSUMPTIONS"
REFERENCES,0.5036144578313253,"Due to the technical nature of the deﬁnitions and assumptions above, we provide several visualizations
in Figures 4 to 7 to help aid the reader’s intuition for our main results."
REFERENCES,0.5060240963855421,"C
FULL PROOFS FOR SECTION 2"
REFERENCES,0.5084337349397591,"We now prove all results found in Section 2 of the main body of the paper in the order that they
appear."
REFERENCES,0.5108433734939759,Published as a conference paper at ICLR 2022
REFERENCES,0.5132530120481927,"Figure 4: A visualization of Xmix and Ai,j
x,ϵ."
REFERENCES,0.5156626506024097,"Figure 5: A visualization of the X 2
3 dataset and how the Mixup sandwiching works."
REFERENCES,0.5180722891566265,Published as a conference paper at ICLR 2022
REFERENCES,0.5204819277108433,"Figure 6: A visualization of Assumption 2.9, i.e. the “no collinearity” assumption."
REFERENCES,0.5228915662650603,"Figure 7: A visualization of Assumption 3.1. Once again, the key idea is that x falls at most δ away
from Xi on every line between Xi and Xj that intersects it."
REFERENCES,0.5253012048192771,Published as a conference paper at ICLR 2022
REFERENCES,0.5277108433734939,"C.1
PROOFS FOR PROPOSITIONS, LEMMAS, AND THEOREMS 2.2 - 2.10"
REFERENCES,0.5301204819277109,"Proposition 2.2. Any function h ∈argming∈C∗Jmix(g, PX, Pf) satisﬁes Jmix(h) ≤Jmix(g) for
any continuous g ∈C."
REFERENCES,0.5325301204819277,"Proof. Intuitively, the idea is that when h and g differ at a point x ∈Xmix, there must be a
neighborhood of x for which the constant function that takes value h(x) has lower loss than g due to
the continuity constraint on g. We formalize this below."
REFERENCES,0.5349397590361445,"Let h be an arbitrary function in argming∈C∗Jmix(g, PX, Pf) and let g be a continuous function in
C. Consider a point x ∈Xmix such that the limit in Deﬁnition 2.1 exists and that h(x) ̸= g(x) (if
such an x did not exist, we would be done). Now let θh and θg be the constant functions whose values
are h(x) and g(x) (respectively) on all of Rn, and further let θhδ = argminθ∈[0,1]k Jmix(θ)|Bδ(x)
(this is shown to be a single value in the proof of Lemma 2.3 below). Finally, as a convenient abuse
of notation, we will use Jmix(ϵ′)|Bδ(x) to indicate the result of replacing all log gi terms in the
integrands of Jmix(g)|Bδ(x) with ϵ′, as shown below (note that in doing so, we can combine the λ
and 1 −λ terms from mixing classes i and j; this simpliﬁes the Ji,j
mix expression obtained in the proof
of Lemma 2.3)."
REFERENCES,0.5373493975903615,"Jmix(ϵ′)|Bδ(x) = −ϵ′
k
X i=1 k
X"
REFERENCES,0.5397590361445783,"j=1
ξi,j
x,ϵ"
REFERENCES,0.5421686746987951,"Since θh ̸= θg, we have that there exists a δ′ > 0 such that for δ ≤δ′ we have |θhδ −θg| = ϵ > 0.
From this we get that there exists ϵ′ > 0 depending only on ϵ and θg such that:"
REFERENCES,0.5445783132530121,Jmix(θg)|Bδ(x) −Jmix(θh)|Bδ(x) ≥Jmix(ϵ′)|Bδ(x)
REFERENCES,0.5469879518072289,"Now by the continuity of g (and thus the continuity of log gi), we may choose δ ≤δ′ such that
Jmix(g)|Bδ(x) ∈Jmix(θg)|Bδ(x) ± Jmix(ϵ′)|Bδ(x). This implies Jmix(g)|Bδ(x) ≥Jmix(θh)|Bδ(x),
and since x was arbitrary (within the initially mentioned constraints, as outside of them h is uncon-
strained) we have the desired result."
REFERENCES,0.5493975903614458,"Lemma 2.3. For any point x ∈Xmix and ϵ > 0, there exists a continuous function hϵ satisfying:"
REFERENCES,0.5518072289156627,"hi
ϵ(x) =
ξi,i
x,ϵ + P"
REFERENCES,0.5542168674698795,"j̸=i
 
ξi,j
x,ϵ,λ + (ξj,i
x,ϵ −ξj,i
x,ϵ,λ)
"
REFERENCES,0.5566265060240964,"Pk
q=1"
REFERENCES,0.5590361445783133,"
ξq,q
x,ϵ + P
j̸=q
 
ξq,j
x,ϵ,λ + (ξj,q
x,ϵ −ξj,q
x,ϵ,λ)

(1)"
REFERENCES,0.5614457831325301,"With the property that limϵ→0 hϵ(x) = h(x) for every h ∈argming∈C∗Jmix(g, PX, Pf) when the
limit exists."
REFERENCES,0.563855421686747,"Proof. Firstly, the condition that x ∈Xmix is necessary, since if S"
REFERENCES,0.5662650602409639,"i,j Ai,j
x,ϵ has measure zero the
LHS of Equation 1 is not even deﬁned."
REFERENCES,0.5686746987951807,"Now we simply take hϵ(x) = argminθ∈[0,1]k Jmix(θ)|Bϵ(x) as in Deﬁnition 2.1 and show that hϵ is
well-deﬁned."
REFERENCES,0.5710843373493976,"Since the argmin is over constant functions, we may unpack the deﬁnition of Jmix|Bϵ(x) and pull
each of the log θi(zst(λ)) terms out of the integrands and rewrite them simply as log θi. Doing so,
we obtain:"
REFERENCES,0.5734939759036145,"Ji,j
mix = −
 
ξi,j
x,ϵ,λ log θi + (ξi,j
x,ϵ −ξi,j
x,ϵ,λ) log θj"
REFERENCES,0.5759036144578313,"Plugging the above back into Jmix and collecting the log θi terms as i = 1, ..., k we get:"
REFERENCES,0.5783132530120482,"Jmix(g, PX, Pf)|Bϵ(x) = − k
X i=1"
REFERENCES,0.5807228915662651,"
ξi,i
x,ϵ +
X j̸=i"
REFERENCES,0.5831325301204819," 
ξi,j
x,ϵ,λ + (ξj,i
x,ϵ −ξj,i
x,ϵ,λ)

log θi"
REFERENCES,0.5855421686746988,Published as a conference paper at ICLR 2022
REFERENCES,0.5879518072289157,"Where the ﬁrst part of the summation above is from mixing Xi with itself, and the second part of
the summation corresponds to the λ and (1 −λ) components of mixing Xi with Xj. Discarding
the terms for which the coefﬁcients above are 0 (the associated θi terms are taken to be 0, as
anything else is suboptimal due to the summation constraint), we are left with a linear combination
of −log θi1, −log θi2, ..., −log θim, where the set {i1, i2, ..., im} is a subset of {1, ..., k}. If the
aforementioned set consists of only a single index i, then the unique optimizer is of course θi = 1.
On the other hand, if there are multiple θip, we cannot minimize Jmix|Bϵ(x) by choosing any of
the θip to be 0, and as a consequence we also cannot choose any of the θip to be 1 since they are
constrained to add to 1."
REFERENCES,0.5903614457831325,"As such, we may consider each of the θip ∈[δ, 1 −δ] for some δ > 0. With this consideration in
mind, Jmix|Bϵ(x) is strictly convex in terms of the θip, since the Hessian of a linear combination
of −log θip will be diagonal with positive entries when the arguments of the log terms are strictly
greater than 0 and less than 1. Thus, as [δ, 1 −δ]m is compact, there exists a unique solution to
hϵ(x) = argminθ∈[0,1]k Jmix(θ)|Bϵ(x), justifying the use of equality. This unique solution is easily
computed via Lagrange multipliers, and the solution is given in Equation 1."
REFERENCES,0.5927710843373494,"We have thus far deﬁned hϵ on Xmix, and it remains to check that this construction of hϵ corresponds
to the restriction of a continuous function from Rn →[0, 1]k. To do so, we ﬁrst note that Xmix is
closed, since any limit point x′ of Xmix must necessarily either be contained in one of the supports
Xi (due to compactness) or on a line segment between/within two supports (else it has positive
distance from Xmix), and every ϵ′-neighborhood of x′ contains points x for which S"
REFERENCES,0.5951807228915663,"i,j Ai,j
x,ϵ has
positive measure for every ϵ (immediately implying that S"
REFERENCES,0.5975903614457831,"i,j Ai,j
x′,ϵ′ has positive measure)."
REFERENCES,0.6,"Now we can check that hϵ is continuous on Xmix as follows. Consider a sequence xm →x∗; we
wish to show that hϵ(xm) →hϵ(x∗). Since the codomain of hϵ is compact, the sequence hϵ(xm)
must have a limit point h∗. Furthermore, since each hϵ(xm) is the unique minimizer of Jmix|Bϵ(xm),
we must have that h∗is the unique minimizer of Jmix|Bϵ(x∗), implying that h∗= hϵ(x∗). We have
thus established the continuity of hϵ on Xmix, and since Xmix is closed (in fact, compact), we have
by the Tietze Extension Theorem that hϵ can be extended to a continuous function on all of Rn."
REFERENCES,0.6024096385542169,"Finally, if limϵ→0 hϵ(x) exists, then it is by deﬁnition h(x) for any h ∈C∗and therefore for any
h ∈argming∈C∗Jmix(g, PX, Pf)."
REFERENCES,0.6048192771084338,"Corollary C.1 (Symmetric Version). If Pf is symmetric, then we may simplify hi
ϵ to be:"
REFERENCES,0.6072289156626506,"hi
ϵ(x) =
ξi,i
x,ϵ + 2 P
j̸=i ξi,j
x,ϵ,λ
Pk
q=1
 
ξq,q
x,ϵ + 2 P"
REFERENCES,0.6096385542168675,"j̸=q ξq,j
x,ϵ,λ
"
REFERENCES,0.6120481927710844,"Proof. In the symmetric case, we have ξi,j
x,ϵ,λ = ξj,i
x,ϵ −ξj,i
x,ϵ,λ."
REFERENCES,0.6144578313253012,"Proposition 2.5. Let X1 = {(0, 1), (0, −1)} and let X2 = {(1, 0), (−1, 0)}, with PX being discrete
uniform over X1∪X2 and Pf being continuous uniform over [0, 1]. Then the Mixup-optimal classiﬁer
h is discontinuous at (0, 0)."
REFERENCES,0.6168674698795181,"Proof. Considering the point x = (0, 0), we note that only ξ1,1
x,ϵ and ξ2,2
x,ϵ are non-zero for all ϵ > 0.
Furthermore, we have that ξ1,1
x,ϵ = ξ2,2
x,ϵ =
ϵ
4 since the Pf-measure of Bϵ( 1"
REFERENCES,0.619277108433735,2) is 2ϵ and the sets
REFERENCES,0.6216867469879518,"A1,1
x,ϵ, A2,2
x,ϵ have PX-measure 1"
REFERENCES,0.6240963855421687,"8. From this we have that the limit limϵ→0 hϵ(x) =
 1"
REFERENCES,0.6265060240963856,"2
1
2
⊤is the
Mixup-optimal value at x."
REFERENCES,0.6289156626506024,"On the other hand, every other point on the line segment connecting the points in X1 will have an
ϵ-neighborhood disjoint from the line segment between the points in X2 (and vice versa), so we will
have h1
ϵ′(x) = 1 for all ϵ′ ≤ϵ. This implies that hϵ′(x) →[1 0] (and an identical result for points
on the X2 line segment), so we have that the Mixup-optimal classiﬁer is discontinuous at (0, 0) as
desired."
REFERENCES,0.6313253012048192,"Theorem 2.7. Let Pf have associated density Beta(α, α). Then for any classiﬁer hϵ on X 2
3 (as
deﬁned in Lemma 2.3), we may choose α such that hϵ does not achieve 0 classiﬁcation error on X 2
3 ."
REFERENCES,0.6337349397590362,Published as a conference paper at ICLR 2022
REFERENCES,0.636144578313253,"Proof. Fix a classiﬁer hϵ as deﬁned in Lemma 2.3 on X 2
3 . Now for Y ∼Beta(α, α) we have by the
fact that Beta(α, α) is strictly subgaussian that P
 Y −1"
REFERENCES,0.6385542168674698,"2
 ≤ϵ

≥1 −2 exp
 
−ϵ2/(2σ2)

where"
REFERENCES,0.6409638554216868,"σ2 =
1
4α+2 is the variance of Beta(α, α). As a result, we can choose α > 1"
REFERENCES,0.6433734939759036,"2

log 4"
REFERENCES,0.6457831325301204,"ϵ2
−1

to guarantee"
REFERENCES,0.6481927710843374,"that P
 Y −1"
REFERENCES,0.6506024096385542,"2
 ≤ϵ

> 1"
REFERENCES,0.653012048192771,"2 and therefore that ξ1,1
1,ϵ > 1"
REFERENCES,0.655421686746988,"9 = ξ2,2
1,ϵ ."
REFERENCES,0.6578313253012048,"Now we have by Lemma 2.3 (or more precisely, Corollary C.1) that:"
REFERENCES,0.6602409638554216,"h1
ϵ(1) =
ξ1,1
1,ϵ + 2ξ1,2
1,ϵ,λ
ξ1,1
1,ϵ + 4ξ1,2
1,ϵ,λ + ξ2,2
1,ϵ
> 1 2"
REFERENCES,0.6626506024096386,"Thus, we have shown that hϵ will classify the point 1 as class 1 despite it belonging to class 2."
REFERENCES,0.6650602409638554,"Proposition 2.8. Consider k-class classiﬁcation where the supports X1, ..., Xk are ﬁnite and PX
corresponds to the discrete uniform distribution. Then for every h ∈argming∈C∗Jmix(g, PX, Pf),
we have that hi(x) = 1 on Xi."
REFERENCES,0.6674698795180722,"Proof. The full proof is not much more than the proof sketch in the main body. For x ∈Xi, we
have that ξj,q
x,ϵ →0 and ξj,q
x,ϵ,λ →0 as ϵ →0 for every (j, q) ̸= (i, i), while ξi,i
x,ϵ →
1
|
S"
REFERENCES,0.6698795180722892,"i Xi|
2 and"
REFERENCES,0.672289156626506,"ξi,i
x,ϵ,λ →
EPf [λ]
|
S"
REFERENCES,0.6746987951807228,"i Xi|
2 . As a result, we have limϵ→0 hi
ϵ(x) = 1 as desired."
REFERENCES,0.6771084337349398,"Theorem 2.10. We consider the same setting as Proposition 2.8 and further suppose that Assumption
2.9 is satisﬁed. Then for every h ∈argming∈C∗Jmix(g, PX, Pf), we have that hi(x) = 1 on Xi and
that h is continuous on X."
REFERENCES,0.6795180722891566,Proof. Obtained as a corollary of Theorem 3.2.
REFERENCES,0.6819277108433734,"C.2
PROOF FOR THEOREM 2.11"
REFERENCES,0.6843373493975904,"Prior to proving Theorem 2.11, we ﬁrst introduce some additional notation as well as a lemma that
will be necessary for the proof."
REFERENCES,0.6867469879518072,"Notation: Throughout the following m corresponds to the number of data points being considered
(as in Theorem 2.11), and as a shorthand we use [m] to indicate {1, ..., m}. Additionally, for two
matrices A and B, we use the notation [A, B] to indicate the matrix formed by the concatenation of
the columns of B to A. We use ei to denote the i-th basis vector in Rm, and use e′
i to denote the i-th
basis vector in R(
m
2). Let A ∈R(
m
2)×m be the “Mixup matrix” where each row has two 1s and the
other entries are 0, representing a mixture of the two data points whose associated indices have a 1.
The
 m
2

rows enumerate all the possible mixings of the m data points. In this way, A is uniquely
deﬁned up to a permutation of rows. We can pick any representative as our A matrix, and prove the
following lemma."
REFERENCES,0.689156626506024,"Lemma C.2. Assume m > 6, and P ∈R(
m
2)×(
m
2) is a permutation matrix. If PA is not a
permutation of the columns of A, then the rank of [A, PA] is larger than m."
REFERENCES,0.691566265060241,Using this lemma we can prove Theorem 2.11.
REFERENCES,0.6939759036144578,"Theorem 2.11. Suppose {x1, ..., xm} with m ≥6 are sampled from X according to PX, and that
PX has a density. Then with probability 1, we can uniquely determine the points {x1, ..., xm} given
only the
 m
2

midpoints {xi,j}1≤i<j≤m."
REFERENCES,0.6963855421686747,"Proof. We only need to show that the set of samples that cannot be uniquely determined from their
midpoints has Lebesgue measure zero, since PX is absolutely continuous with respect to the Lebesgue
measure. It sufﬁces to show this for the ﬁrst entry (dimension) of the xi’s, as the result then follows
for all dimensions. Let {x′
i} be another sample of m points. For convenience, we group the ﬁrst
entries of the data points {xi}m
i=1 into a vector w∗∈Rm, and similarly obtain w ∈Rm from {x′
i}m
i=1.
Suppose w∗∈Rm is not a permutation of w ∈Rm but that they have the same set of Mixup points.
We only need to show that the set of such w∗has measure zero."
REFERENCES,0.6987951807228916,Published as a conference paper at ICLR 2022
REFERENCES,0.7012048192771084,"Suppose A is a Mixup matrix and P is a permutation matrix. Suppose PA is not a permutation of the
columns in A. We would need Aw∗= PAw, which is equivalent to [A, PA][(w∗)⊤, −w⊤]⊤= 0
(here [(w∗)⊤, −w⊤]⊤indicates the vector resulting from concatenating −w to w∗). According to
Lemma C.2, we know the rank of [A, PA] is at least m + 1, which implies that the solution set of w∗
is at most m −1."
REFERENCES,0.7036144578313253,"So ﬁxing A and P, the set of non-recoverable w∗has measure zero. There are only a ﬁnite number of
combinations of A and P. Thus, considering all of these A and PA, the full set of non-recoverable
w∗still has measure zero."
REFERENCES,0.7060240963855422,"C.2.1
PROOF OF SUPPORTING LEMMA"
REFERENCES,0.708433734939759,"Lemma C.2. Assume m > 6, and P ∈R(
m
2)×(
m
2) is a permutation matrix. If PA is not a
permutation of the columns of A, then the rank of [A, PA] is larger than m."
REFERENCES,0.7108433734939759,"Proof. First, we show that both the ranks of A and PA are m. For all i ∈[m −1], deﬁne ui =
e1 + ei+1, and deﬁne um = e2 + e3. Note that these m vectors are all rows of A. The ﬁrst (m −1)
vectors {ui}m−1
i=1 are linearly independent because each ui has a unique direction ei+1 that is not a
linear combination of any other vectors in {ui}m−1
i=1 . Besides, we know that the span of {ui}m−1
i=1 is a
subspace of {v ∈Rm : Pm
i=2 v(i) = v(1)} where v(i) is the i-th entry of v. Therefore, um doesn’t
lie in the span of {ui}m−1
i=1 , which implies that these n vectors {ui}n
i=1 are linearly independent. This
shows that A is at least rank m. Since A only has m columns, we know that the rank of A is m. The
matrix PA is also rank m because P is full rank."
REFERENCES,0.7132530120481928,"Therefore, to show that the rank of [A, PA] is larger than m, we only need to ﬁnd a vector v that
lies in the column span of A but is not in the column span of PA. To do this, we need the following
claim:"
REFERENCES,0.7156626506024096,"Claim 1. There exists a row index subset I ⊆[
 m
2

] with size (m −1) such that the sub-matrix
composed by the rows of A with indices in I has a column that is all-one vector, but every column of
the sub-matrix composed by the rows of PA with indices in I is not all-one vector."
REFERENCES,0.7180722891566265,"Proof of Claim 1. By the deﬁnition of A, each column of A has only (m −1) ones and the other
entries are zero. Therefore, the position of (m −1) ones in a column of A can uniquely determine
that column vector. Besides, for an index set I with size (m −1), the sub-matrix composed by the
rows of A with indices in I cannot have two columns that are both all-one vector. This is because
otherwise A will have duplicate rows, which contradicts the deﬁnition of A. Therefore, there are m
possible choices of I, each of which corresponds to the positions of all ones in a column of A."
REFERENCES,0.7204819277108434,"Assume by contradiction that for these m choices of I, there exist a column of the sub-matrix
composed by the rows of PA with indices in I that is all-one vector. Then these m choices of I also
correspond to the positions of all ones in a column of PA. This means that the columns of A and
PA are the same up to permutations, which contradicts the assumption of our theorem. This ﬁnishes
the proof of this claim."
REFERENCES,0.7228915662650602,"Now deﬁne B1 as the sub-matrix composed by the rows of A with indices in I, and C1 as the
sub-matrix composed by the rows of PA with indices in I. Without loss of generality, suppose
I = [m −1], and suppose the ﬁrst column of B1 is all-one vector. Let u = −e1 + Pm
i=2 ei ∈Rm,"
REFERENCES,0.7253012048192771,"we know that Au = 2 P(
m
2)
i=m e′
i, i.e., the ﬁrst (m −1) entries of Au are 0, and the other entries are
2. Deﬁne v ≜Au, we are going to show that v is not in the column span of PA. Let C2 be the
sub-matrix in PA consisting of the rows that are not in C1, then the following claim shows that C2
has full column rank."
REFERENCES,0.727710843373494,Claim 2. rank(C2) = m.
REFERENCES,0.7301204819277108,"Proof of Claim 2. In this proof, we will consider each column of C2 as a vertex. Since each row of
C2 has only two 1s, we view each row as an edge connecting the two columns which correspond to
the two 1s in that row. From the deﬁnition of A we know that the graph we constructed is a simple
undirected graph. Then we are going to show that we can select m “edges” from C2 which are
linearly independent."
REFERENCES,0.7325301204819277,Published as a conference paper at ICLR 2022
REFERENCES,0.7349397590361446,"There are
 m
2

−(m −1) edges in C2. From m > 6 we know that
 m
2

−(m −1) > m2"
REFERENCES,0.7373493975903614,"4 , so
from Turán’s theorem, C2 contains at least one triangle. Assume this triangle is (i, j, k), then we
select edges (i, j), (j, k) and (i, k) and deﬁne E3 = {i, j, k}. ∀r ∈[m], r ≥3, we select an edge
connecting Er with [m] \ Er. Assume that edge is (s, t) where s ∈Er and t /∈Er, we then add t to
Er, i.e., Er+1 = Er ∪{t}. In the next two paragraphs, we are going to show that there are always
edges between Er and [m] \ Er (so we can successfully select m edges in total), and the m edges we
selected are linearly independent."
REFERENCES,0.7397590361445783,"In matrix PA, there are r(m −r) edges between Er and [m] \ Er. Since C2 is constructed by
deleting (m −1) edges from PA, the number of edges left between Er and [m] \ Er is at least
r(m −r) −(m −1). When 3 ≤r ≤m −2, we have r(m −r) −(m −1) > 0. When r = m −1,
the only case where there is no edge between Er and [m] \ Er is when all edges from vertex [m] \ Er
is in C1, which means that C1 has a column that is all-one vector and is a contradiction. Therefore,
there are always edges between Er and [m] \ Er and we can successfully select m edges."
REFERENCES,0.7421686746987952,"Then we only need to show that these m selected edges are linearly independent. We use {ui}m
i=1 to
denote the vectors that correspond to these edges, i.e., u1 = ei + ej, u2 = ej + ek, u3 = ei + ek, · · ·
Assume by contradiction that they are linearly independent, then there exists x ∈Rm, x ̸= 0 such
that Pm
i=1 x(i)ui = 0. By the selection process of the edges, we know that ∀r ≥4, ur has a unique
direction, so x(r) = 0. Therefore, x(1)u1 + x(2)u2 + x(3)u3 = 0. Since {u1, u2, u3} are linearly
independent, we have x = 0, which is a contradiction. Thus, these m selected edges are linearly
independent, proving the claim."
REFERENCES,0.744578313253012,"Now assume by contradiction that v is in the column span of PA, then ∃w ∈Rm such that v = PAw.
Let v2 ∈R(
m
2)−(m−1) be the bottom
 m
2

−(m −1) entries of v, then v2 = C2w. Deﬁne w0 to be
the all-one vector in Rm, we know that w0 is a valid solution to v2 = C2w. Since C2 has full column
rank, w0 must be the unique solution to v2 = C2w. This implies that v = PAw0. However, we"
REFERENCES,0.7469879518072289,"know that PAw0 = 2 P(
m
2)
i=1 e′
i ̸= v, which is a contradiction. Thus, v is not in the column span of A,
which ﬁnishes the proof of the lemma."
REFERENCES,0.7493975903614458,"D
ADDITIONAL EXPERIMENTS FOR SECTION 2"
REFERENCES,0.7518072289156627,"D.1
EXPERIMENTS FOR SECTION 2.3"
REFERENCES,0.7542168674698795,"As noted in the main paper, it is not difﬁcult to extend Deﬁnition 2.6 to construct datasets on which
Mixup training empirically fails for small values of α. The observation to make is that a major part of
the proof of Theorem 2.7 is the fact that the same-point mixing probability of point 1 is small relative
to the same-class mixing probability of class 0. As the former probability decreases quadratically
with the dataset size m, we are motivated to consider extensions of X 2
3 consisting of more points and
more classes. Towards that end, we consider the following generalization of X 2
3 :"
REFERENCES,0.7566265060240964,"Deﬁnition D.1 (m-Point k-Class Alternating Line). We deﬁne X k
m to be the k-class classiﬁcation
dataset consisting of the points {0, 1, ..., m −1} classiﬁed according to their value mod k incremented
by 1. As before, PX is the normalized counting measure on X k
m."
REFERENCES,0.7590361445783133,"We now consider training a two-layer feedforward network on X 2
10 and X 10
10 using the same procedure
and hyperparameters as in the main paper. The results are shown in Figure 8 below."
REFERENCES,0.7614457831325301,"Here we see that even at α = 1, Mixup training fails to minimize the original empirical risk on
X 2
10 and X 10
10 , whereas in the main paper we noted that at α = 1 Mixup training had no issues
minimizing the original risk on X 2
3 . Interestingly, we ﬁnd that even standard training does not
completely minimize the original empirical risk on X 2
10, once again perhaps a result of the regularity
of the two-layer network model (although this is merely a hypothesis, and we do not analyze this
phenomenon further here)."
REFERENCES,0.763855421686747,"D.2
EXPERIMENTS FOR SECTION 2.4"
REFERENCES,0.7662650602409639,"Here we include the additional experiments mentioned in Section 2.4, namely the results of training
ResNet-18 on MNIST, CIFAR-10, and CIFAR-100 with and without Mixup for α = 1, 32, and 128
(with the other hyperparameters being as described in Section 2.4). The results are shown in Figure 9."
REFERENCES,0.7686746987951807,Published as a conference paper at ICLR 2022
REFERENCES,0.7710843373493976,"(a) X 2
10, α = 1
(b) X 2
10, α = 32"
REFERENCES,0.7734939759036145,"(c) X 10
10 , α = 1
(d) X 10
10 , α = 32"
REFERENCES,0.7759036144578313,"Figure 8: Training error plots for Mixup and regular training on X 2
10 and X 10
10 . Each curve corresponds
to the mean of 10 training runs, and the area around each curve represents a region of one standard
deviation. Note that the ERM curves appear slightly different across α values due to changes in
y-axis scale."
REFERENCES,0.7783132530120482,"As mentioned in the main body, these choices of α only lead to Mixup performing more similarly to
ERM than α = 1024."
REFERENCES,0.7807228915662651,"E
FULL PROOFS FOR SECTION 3"
REFERENCES,0.7831325301204819,"E.1
PROOF OF THEOREM 3.2"
REFERENCES,0.7855421686746988,"Theorem 3.2. Consider k-class classiﬁcation where the supports X1, ..., Xk are ﬁnite and PX
corresponds to the discrete uniform distribution. If a point x satisﬁes Assumption 3.1 with respect to
a class i, then for every h ∈argming∈C∗Jmix(g, PX, Pf), we have that h classiﬁes x as class i and
that h is continuous at x."
REFERENCES,0.7879518072289157,"Proof. For two points p, q in the supports X1, ..., Xk with a line segment between them intersecting
x, let λ(p, q, x) denote the value of λ for which λp + (1 −λ)q = x. Since the supports are ﬁnite, we
have that there exists ϵ1 > 0 such that for all ϵ ≤ϵ1 we have that:"
REFERENCES,0.7903614457831325,"ξi,j
x,ϵ =
X p X q Z"
REFERENCES,0.7927710843373494,"Bϵ(λ(p,q,x))
dPf"
REFERENCES,0.7951807228915663,"Where the summations are over all points p, q with line segments containing x. Now we have by
the Lebesgue differentiation theorem applied to the integral term in the summations above (this"
REFERENCES,0.7975903614457831,Published as a conference paper at ICLR 2022
REFERENCES,0.8,"(a) MNIST (α = 1)
(b) CIFAR-10 (α = 1)
(c) CIFAR-100 (α = 1)"
REFERENCES,0.8024096385542169,"(d) MNIST (α = 32)
(e) CIFAR-10 (α = 32)
(f) CIFAR-100 (α = 32)"
REFERENCES,0.8048192771084337,"(g) MNIST (α = 128)
(h) CIFAR-10 (α = 128)
(i) CIFAR-100 (α = 128)"
REFERENCES,0.8072289156626506,"Figure 9: Mean and single standard deviation of 5 training runs for Mixup (α = 1, 32, 128) and ERM
on the original training data."
REFERENCES,0.8096385542168675,"is possible because Pf has a density) that the following limit (as well as each limit for the other
coordinate functions) exists:"
REFERENCES,0.8120481927710843,"lim
ϵ→0 hi
ϵ = lim
ϵ→0
ξi,i
x,ϵ + P"
REFERENCES,0.8144578313253013,"j̸=i
 
ξi,j
x,ϵ,λ + (ξj,i
x,ϵ −ξj,i
x,ϵ,λ)
"
REFERENCES,0.8168674698795181,"Pk
q=1"
REFERENCES,0.8192771084337349,"
ξq,q
x,ϵ + P"
REFERENCES,0.8216867469879519,"j̸=q
 
ξq,j
x,ϵ,λ + (ξj,q
x,ϵ −ξj,q
x,ϵ,λ)
"
REFERENCES,0.8240963855421687,"= lim
ϵ→0"
REFERENCES,0.8265060240963855,"1
ϵ ξi,i
x,ϵ + 1"
REFERENCES,0.8289156626506025,"ϵ
P
j̸=i
 
ξi,j
x,ϵ,λ + (ξj,i
x,ϵ −ξj,i
x,ϵ,λ)
"
REFERENCES,0.8313253012048193,"1
ϵ
Pk
q=1"
REFERENCES,0.8337349397590361,"
ξq,q
x,ϵ + P"
REFERENCES,0.8361445783132531,"j̸=q
 
ξq,j
x,ϵ,λ + (ξj,q
x,ϵ −ξj,q
x,ϵ,λ)
"
REFERENCES,0.8385542168674699,"Now by Assumption 3.1, we need only consider the ξi,i
x,ϵ, ξi,j
x,ϵ, ξi,j
x,ϵ,λ terms (as there are no other line
segments that contain x). Furthermore, we have that there exists ϵ2 > 0 such that for all ϵ ≤ϵ2 we
have λ(p, q, x) −ϵ ≥1"
REFERENCES,0.8409638554216867,"2 for p ∈Xi and q ∈Xj, and that the measure of Ai,j
x,ϵ is at least that of Aj,i
x,ϵ.
From this we get that for all ϵ ≤min(ϵ1, ϵ2):"
REFERENCES,0.8433734939759037,"hi
ϵ =
ξi,i
x,ϵ + P"
REFERENCES,0.8457831325301205,"j̸=i
 
ξi,j
x,ϵ,λ + (ξj,i
x,ϵ −ξj,i
x,ϵ,λ)
"
REFERENCES,0.8481927710843373,"ξi,i
x,ϵ + P"
REFERENCES,0.8506024096385543,"j̸=i
 
ξi,j
x,ϵ,λ + ξj,i
x,ϵ,λ + (ξj,i
x,ϵ −ξj,i
x,ϵ,λ) + (ξi,j
x,ϵ −ξi,j
x,ϵ,λ)
"
REFERENCES,0.8530120481927711,"≥
ξi,i
x,ϵ + P
j̸=i
 
ξi,j
x,ϵ,λ + (ξj,i
x,ϵ −ξj,i
x,ϵ,λ)
"
REFERENCES,0.8554216867469879,"ξi,i
x,ϵ + 2 P"
REFERENCES,0.8578313253012049,"j̸=i
 
ξi,j
x,ϵ,λ + (ξj,i
x,ϵ −ξj,i
x,ϵ,λ)
 ≥1 2"
REFERENCES,0.8602409638554217,Published as a conference paper at ICLR 2022
REFERENCES,0.8626506024096385,"Since the above also holds for a sufﬁciently small neighborhood about x, we have the desired result."
REFERENCES,0.8650602409638555,"E.2
PROOF OF THEOREM 3.5"
REFERENCES,0.8674698795180723,"Let us ﬁrst recall the setting of Theorem 3.5, since it is more specialized than that of the previous
results."
REFERENCES,0.8698795180722891,"Setting. We consider the case of binary classiﬁcation using a linear model θ⊤x on high-dimensional
Gaussian data, which is a setting that arises naturally when training using Gaussian kernels. Speciﬁ-
cally, we consider the dataset X to consist of n points in Rd distributed according to N(0, Id) with
d > n (to be made more precise shortly). We let the labels of points in X be ±1 (so that the sign of
θ⊤x is the classiﬁcation), and use X1 and X−1 to denote the individual class points. Additionally,
we let n1 = |X1| and n2 = |X−1|."
REFERENCES,0.8722891566265061,"Before introducing the proof of Theorem 3.5, we ﬁrst present a lemma that will be necessary in the
proof.
Lemma E.1. [Strict Convexity of Jmix on Data Span] Suppose n1 = n2 = 1, i.e. there are two data
points x, z with opposite labels. If x and z are linearly independent, then Jmix is strictly convex with
respect to θ on the span of x and z."
REFERENCES,0.8746987951807229,"The reason this lemma focuses on the two data point case is that in the proof of Theorem 3.5 we will
break up the Mixup loss into the sum over these cases. With this lemma, we may now prove Theorem
3.5. Before doing so, we point out that the version of Jmix considered here is after composition with
the logistic loss (since we are considering binary classiﬁcation with a linear classiﬁer).
Theorem 3.5. If the maximum margin solution for X is also an interpolating solution for X, then any
θ that lies in the span of X and minimizes the Mixup loss Jmix for a symmetric mixing distribution
Pf is a rescaling of the maximum margin solution."
REFERENCES,0.8771084337349397,"Proof. Since d > n, we have that all of the points {xi}n1
i=1, {zj}n2
j=1 are linearly independent
with probability one. We will break the proof into two parts. In doing so, we make the following
important observation: it sufﬁces to prove the result for mixings of distinct points. This is because
an interpolating solution (as given in Deﬁnition 3.3) is immediately seen to be optimal for the ERM
part of Jmix (the terms corresponding to mixing points with themselves). Thus, in what follows, we
disclude these ERM terms from Jmix to simplify the presentation."
REFERENCES,0.8795180722891566,"Part I: n1 = n2 = 1. Denote θ⊤x1 = u and θ⊤z1 = −v, then"
REFERENCES,0.8819277108433735,"Jmix = Eλ [λ log(1 + exp(−λu + (1 −λ)v)) + (1 −λ) log(1 + exp(λu −(1 −λ)v))] .
(2)"
REFERENCES,0.8843373493975903,"Where λ is distributed according to Pf which is symmetric and has full support on [0, 1]. Therefore,
we can do the change of variables λ := 1 −λ, and"
REFERENCES,0.8867469879518072,"Jmix = Eλ [λ log(1 + exp(−λv + (1 −λ)u)) + (1 −λ) log(1 + exp(λv −(1 −λ)u))] .
(3)"
REFERENCES,0.8891566265060241,"Combining Eq.(2) and Eq.(3), we know if (u, −v) is a global minimum of Jmix, then so is (v, −u).
But the strict convexity in Lemma E.1 implies such a global minimum is unique, so we must have
u = v = k(Pf), where k(Pf) is a constant that only depends on the density of Pf. Furthermore,
∀λ ∈[0, 1], deﬁne"
REFERENCES,0.891566265060241,"hλ(k) = λ log(1 + exp((1 −2λ)k)) + (1 −λ) log(1 + exp((2λ −1)k)),
(4)"
REFERENCES,0.8939759036144578,"then ∀k > 0,"
REFERENCES,0.8963855421686747,hλ(−k) −hλ(k) = (1 −2λ) log(1 + exp((1 −2λ)k)) + (2λ −1) log(1 + exp((2λ −1)k))
REFERENCES,0.8987951807228916,"= (1 −2λ) log
1 + exp((1 −2λ)k)"
REFERENCES,0.9012048192771084,1 + exp((2λ −1)k)
REFERENCES,0.9036144578313253,"
≥0,
(5) and"
REFERENCES,0.9060240963855422,"h′
λ(k)|k=0 = −1"
REFERENCES,0.908433734939759,"2(1 −2λ)2 ≤0.
(6)"
REFERENCES,0.9108433734939759,Published as a conference paper at ICLR 2022
REFERENCES,0.9132530120481928,"Hence, we must have k(Pf) > 0."
REFERENCES,0.9156626506024096,"Part II: General n1 and n2. For the general case, we extend the observation we made prior to the
proof of Part I. Namely, if we can show that an interpolating solution is optimal for mixing across the
two classes, it follows immediately that the solution is optimal for all of Jmix (it is not hard to see
that the calculation for mixing points from the same class is essentially no different from the ERM
case in this context, as the λ and 1 −λ terms can be combined). We thus focus only on mixing across
classes, and overload the Ji,j
mix notation to indicate mixing of points xi and zj, so that we may write
the loss in consideration as:"
REFERENCES,0.9180722891566265,"Jmix(θ) =
1
n1n2 n1
X i=1 n2
X"
REFERENCES,0.9204819277108434,"j=1
Ji,j
mix(θ).
(7)"
REFERENCES,0.9228915662650602,"By the proof in the previous part we know if Ji,j
mix is minimized, then we must have θ⊤xi = −θ⊤zj =
k(Pf) > 0. On the other hand, if Ji,j
mix(θ) are minimized simultaneously for all pairs (i, j), then
clearly Jmix(θ) is also minimized. This is possible since the data points are linearly independent, so
there exists θ ∈Rd, such that"
REFERENCES,0.9253012048192771,"θ⊤xi = −θ⊤zj = k(Pf) > 0
∀i ∈[n1], ∀j ∈[n2].
(8)"
REFERENCES,0.927710843373494,"Now we can conclude that any θ that minimizes the Mixup loss Jmix is an interpolating solution.
Restricting θ to the span of X ﬁnishes the proof."
REFERENCES,0.9301204819277108,"E.2.1
PROOF OF SUPPORTING LEMMA"
REFERENCES,0.9325301204819277,"Lemma E.1. [Strict Convexity of Jmix on Data Span] Suppose n1 = n2 = 1, i.e. there are two data
points x, z with opposite labels. If x and z are linearly independent, then Jmix is strictly convex with
respect to θ on the span of x and z."
REFERENCES,0.9349397590361446,"Proof. We note again that it sufﬁces to prove the strict convexity with respect to only the mixings
of different points, as the ERM part is clearly strictly convex and the sum of two strictly convex
functions remains strictly convex. Denote"
REFERENCES,0.9373493975903614,"f(λ) = λx + (1 −λ)z,
(9)"
REFERENCES,0.9397590361445783,then Jmix can be expressed as
REFERENCES,0.9421686746987952,"Jmix(θ) = Eλ

λ log
 
1 + exp
 
−θ⊤f(λ)

+ (1 −λ) log
 
1 + exp

θ⊤f(λ)
	"
REFERENCES,0.944578313253012,"= Eλ

log
 
1 + exp
 
−θ⊤f(λ)

+ (1 −λ)θ⊤f(λ)

.
(10)"
REFERENCES,0.946987951807229,"Where again λ ∼Pf. Note that the second term in Eq.(10) is linear in θ, hence the Hessian of Jmix
can be written as"
REFERENCES,0.9493975903614458,∇2Jmix(θ) = Eλ
REFERENCES,0.9518072289156626,"""
exp
 
−θ⊤f(λ)
"
REFERENCES,0.9542168674698795,"(1 + exp(−θ⊤f(λ)))2 f(λ)f(λ)⊤
# (11)"
REFERENCES,0.9566265060240964,:= Eλg(λ).
REFERENCES,0.9590361445783132,"Deﬁne B := Span{x, z}. To show Jmix is strictly convex on B, it sufﬁces to show for every non-zero
vector a ∈B, we always have"
REFERENCES,0.9614457831325302,"a⊤∇2Jmix(θ)a > 0.
(12)"
REFERENCES,0.963855421686747,"Note that g(λ) is continuous w.r.t. λ and that Pf has full support on [0, 1], it sufﬁces to show either"
REFERENCES,0.9662650602409638,"a⊤f(0)f(0)⊤a > 0 or a⊤f(1)f(1)⊤a > 0,
(13)"
REFERENCES,0.9686746987951808,which is equivalent to either
REFERENCES,0.9710843373493976,"a⊤x ̸= 0 or a⊤z ̸= 0.
(14)"
REFERENCES,0.9734939759036144,"This is obvious since a is a non-zero vector in B, and that x and z are linearly independent."
REFERENCES,0.9759036144578314,Published as a conference paper at ICLR 2022
REFERENCES,0.9783132530120482,"Figure 10: Decision boundary plots for α = 32, 64 and a class separation of 0.5."
REFERENCES,0.980722891566265,"Figure 11: Decision boundary plots for α = 128, 512 and a class separation of 0.5."
REFERENCES,0.983132530120482,Published as a conference paper at ICLR 2022
REFERENCES,0.9855421686746988,"F
ADDITIONAL EXPERIMENTS FOR SECTION 3"
REFERENCES,0.9879518072289156,"In this section, we consider different class separations and choices of the mixing parameter α when
training on the two moons dataset, with all other experimental settings being the same as in Section
3.1."
REFERENCES,0.9903614457831326,"Upon decreasing the class separation to 0.1, we note that even standard training captures more of the
nonlinear aspects of the data, as was observed in the prior work of Pezeshki et al. (2020)."
REFERENCES,0.9927710843373494,"Figure 12: Decision boundary plots for α = 1, 1024 and a class separation of 0.1."
REFERENCES,0.9951807228915662,"Figure 13: Decision boundary plots for α = 32, 64 and a class separation of 0.1."
REFERENCES,0.9975903614457832,"Figure 14: Decision boundary plots for α = 128, 512 and a class separation of 0.1."
