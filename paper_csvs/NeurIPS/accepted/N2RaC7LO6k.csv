Section,Section Appearance Order,Paragraph
ABSTRACT,0.0,Abstract
ABSTRACT,0.004901960784313725,"Working memory is a central cognitive ability crucial for intelligent decision-
making. Recent experimental and computational work studying working mem-
ory has primarily used categorical (i.e., one-hot) inputs, rather than ecologically-
relevant, multidimensional naturalistic ones. Moreover, studies have primarily
investigated working memory during single or few number of cognitive tasks. As
a result, an understanding of how naturalistic object information is maintained
in working memory in neural networks is still lacking. To bridge this gap, we
developed sensory-cognitive models, comprising of a convolutional neural net-
work (CNN) coupled with a recurrent neural network (RNN), and trained them
on nine distinct N-back tasks using naturalistic stimuli. By examining the RNN’s
latent space, we found that: 1) Multi-task RNNs represent both task-relevant and
irrelevant information simultaneously while performing tasks; 2) While the latent
subspaces used to maintain specific object properties in vanilla RNNs are largely
shared across tasks, they are highly task-specific in gated RNNs such as GRU and
LSTM; 3) Surprisingly, RNNs embed objects in new representational spaces in
which individual object features are less orthogonalized relative to the perceptual
space; 4) Interestingly, the transformation of WM encodings (i.e., embedding of
visual inputs in the RNN latent space) into memory was shared across stimuli, yet
the transformations governing the retention of a memory in the face of incoming
distractor stimuli were distinct across time. Our findings indicate that goal-driven
RNNs employ chronological memory subspaces to track information over short
time spans, enabling testable predictions with neural data."
INTRODUCTION,0.00980392156862745,"1
Introduction"
INTRODUCTION,0.014705882352941176,"Working memory (WM) – the ability to store and manipulate information over short periods – is
a central cognitive capability that enables a wide spectrum of behaviors [Baddeley, 1992]. Over
the past few decades, various experimental, computational, and theoretical techniques have been
adopted to study WM from both cognitive and neural perspectives. However, several fundamental
issues remain unresolved, including the key question of how high-dimensional sensory information is
encoded, maintained, and modulated according to specific task demands."
INTRODUCTION,0.0196078431372549,"A significant body of work has been dedicated to modelling the computations underlying WM. These
include many classic models from cognitive science [Meyer and Kieras, 1997a, Ritter et al., 2019,"
INTRODUCTION,0.024509803921568627,"Baddeley et al., 2021], neuroscience [Miller et al., 1996, Wang, 1999, Emrich et al., 2013], and
more recently deep learning [Yang et al., 2019, Ehrlich and Murray, 2022]. Recent approaches have
focused on using artificial neural networks, such as recurrent neural networks (RNNs), to understand
and model WM due to their ability to learn the complex cognitive tasks that are commonly used to
study WM in humans. However, prior studies were limited in three aspects. First, most works used
abstract categorical inputs, such as color and location of moving dots that are represented as binary (or
one-hot vector) inputs [Panichello and Buschman, 2021, Yang et al., 2019, Piwek et al., 2023]. While
training models with such categorical inputs is easier in practice, the resulting models offer limited
insights into how real world, naturalistic stimuli (which are embedded in high-dimensional spaces)
are processed. Second, most prior work has considered single or a few cognitive tasks [Xie et al.,
2022, Mante et al., 2013, Piwek et al., 2023], limiting the generality of these models in explaining
the neural computations underlying working memory. Lastly, while some prior work has explored
how object features are encoded into population activity [Xie et al., 2022], it remains unclear how
information in working memory is sustained across time to support concurrent encoding, retention,
and retrieval during a dynamic task—and how these processes might align with classic cognitive
theories [Luck and Vogel, 1997, Alvarez and Cavanagh, 2004, Franconeri et al., 2013]."
INTRODUCTION,0.029411764705882353,"To address these limitations, we investigated how task-optimized RNNs manipulate the multidimen-
sional properties of naturalistic visual inputs during different stages of WM (Figure 1d). Specifically,
we examined: 1) How do task-optimized RNNs select task-relevant properties of naturalistic objects
during WM? 2) What computational strategies do RNNs employ to dynamically maintain object
properties in the face of incoming (distractor) information? To address these questions, we trained
multi-task models on a collection of N-back tasks using naturalistic stimuli, and analyzed the RNNs’
latent space during concurrent encoding, retention, and retrieval of information. We specifically chose
the N-back task, given that it requires the dynamic encoding, retention, and retrieval of information
in the face of incoming distractor information. This is in contrast to prior studies, which primarily
studied WM tasks such as delayed-match-to-sample tasks, which focus on WM maintenance during
stable fixation periods. The nature of the N-back task makes it an excellent testbed to evaluate how
naturalistic object features are maintained in a dynamic environment that requires on-the-fly WM
updates and decision-making."
INTRODUCTION,0.03431372549019608,Our main contributions are as follows:
INTRODUCTION,0.0392156862745098,"• We trained different classes of gated and gateless RNN models on a suite of WM tasks and
developed decoder-based analyses to study the geometry of naturalistic object representations
during different stages of WM."
INTRODUCTION,0.04411764705882353,"• We found that task-relevant and -irrelevant object properties are simultaneously encoded in
multi-task RNN models, while only gateless RNNs produced shared and reusable represen-
tations across tasks."
INTRODUCTION,0.049019607843137254,"• We found that object features are less orthogonalized in the RNNs’ hidden dynamics
compared to perceptual representations."
INTRODUCTION,0.05392156862745098,"• We found that RNNs solve the N-back task by using chronological memory subspaces to
separate object representations presented across time. This finding supports resource-based
models of working memory [Alvarez and Cavanagh, 2004, Franconeri et al., 2013] and
challenges the classic slot-based model [Luck and Vogel, 1997]."
RELATED WORKS,0.058823529411764705,"2
Related Works"
RELATED WORKS,0.06372549019607843,"Models of working memory.
Originally rooted in cognitive science, the notion of WM was first
formally defined and popularized by Baddeley [1992] who proposed a cognitive system consisting of
modality-specific buffers and a shared executive module to control the information flow in and out of
the memory buffers. This initial work, along with most early models, portrayed WM as a memory
system with three key features: flexibility of information representation, limited capacity, and limited
temporal span."
RELATED WORKS,0.06862745098039216,"Subsequent models based on this perspective were largely akin to the architecture of the Von-
Neumann computers, comprising of input and output channels, volatile memory components, and a
central processing system that continuously executed pre-specified computer code according to task
goals [Cowan, 1988, Meyer and Kieras, 1997b, Anderson, 2013]. However, experimental work in"
RELATED WORKS,0.07352941176470588,"neuroscience has showed that the underlying biological circuitry of WM consists of a wide network of
brain areas with diverse roles that do not adhere to the clean-cut modules specified in those previous
models [Sreenivasan and D’Esposito, 2019]."
RELATED WORKS,0.0784313725490196,"Compte et al. [2000] was one of the first studies that showed RNNs with closely matched connection
parameters to those measured from the brain can reliably store information in the presence of
distractors. Later work showed that these networks are not only capable of performing many classic
WM tasks but also replicate neural signatures that were previously observed in animals’ brains during
these tasks, indicating that similar neural computations may be used by both systems [O’Reilly and
Frank, 2006, Mante et al., 2013, Xie et al., 2023, Finkelstein et al., 2021, Masse et al., 2019]. More
recent work proposed various neural network architectures that combine linear attention mechanisms
with slot-based memory modules and feedback mechanisms as models of working memory [Hwang
et al., 2024, Loynd et al., 2020]."
RELATED WORKS,0.08333333333333333,"Neural network models in neuroscience.
Neural network models have been increasingly used in
computational neuroscience to model neural computations during different behaviors. These models
are valuable tools that incorporate ideas from a diverse range of cognitive architectures, while also
making testable behavioral or neural predictions. Various classes of neural network models have
now been used to simulate neural activity in sensory brain regions [Schrimpf et al., 2018, Kell et al.,
2018, Khaligh-Razavi and Kriegeskorte, 2014, Yamins et al., 2014, Bashivan et al., 2019], language
comprehension [Hasson et al., 2020, Schrimpf et al., 2021], and decision making [Mante et al., 2013,
Yang et al., 2019]. Furthermore, others have used RNNs to study the dynamical motifs that underlie
various behavioral signatures such as memorization, integration and selection of information, and
attention. For example, Mante et al. [2013] used goal-directed RNNs to simulate the dynamics of
neural populations in the macaque prefrontal cortex during a context-dependent decision making task
and found specific dynamical mechanisms for the selection and integration of task-relevant inputs.
Yang et al. [2019] identified specialized functional clusters, mixed selectivity, and compositional
representation in multi-task RNNs. The shared dynamic motifs across tasks were further extended
and described mathematically in Driscoll et al. [2022]."
METHODS,0.08823529411764706,"3
Methods"
METHODS,0.09313725490196079,"Tasks.
We considered N-back tasks (N ∈{1, 2, 3}) based on one of three distinct object properties
(i.e. feature; F ∈{Location, Identity, Category} (denoted as L, I, C), resulting in a total of 9
N-back task variants (Figure 1b). Naturalistic stimuli were generated using 3D object models from
the ShapeNet dataset (rendered examples in Figure A1a) [Chang et al., 2015], comprising 4 object
categories, each with 2 unique identities rendered from various view angles, and presented at 1
of 4 possible locations. We consider two validation approaches: validating on novel view angles,
and validating on novel identities. The training and validation novel angle datasets differed in their
viewing angles, necessitating view-invariant processing by the model. In contrast, the validation
novel identity includes unseen identity sampled from categories same as the training dataset."
METHODS,0.09803921568627451,"Model Architecture.
We considered a two-stage model that delineates perceptual and cognitive
processes (Figure 1c). At the first stage, the model processes sequences of images, utilizing an Ima-
geNet [Deng et al., 2009] pre-trained ResNet50 [He et al., 2016] model to derive visual embeddings
from each image input. All object features including category, identity, and location were highly
decodable from these activations (category: 100.00%, identity: 99.57%, location: 100.00%; 2-fold
cross-validation). A point-wise convolutional layer reduces the dimensionality of the 2048-channel
feature map from ResNet’s penultimate layer (layer 4.2 ReLU) to match the RNN’s hidden size.
Next, the vectorized embeddings are concatenated with a task index vector and processed by a fully
connected layer (matching the RNN’s latent size) with layer normalization [Ba, 2016], serving as
input to the RNN. The RNN’s output is then fed through another fully connected layer and projected
to one of three possible responses: match, non-match, or no action."
METHODS,0.10294117647058823,"Each network is trained to perform one (single-task-single-feature) or multiple tasks (multi-feature or
multi-task or both). After training, we analyzed activations from the penultimate layer of ResNet50
(i.e. the perceptual space), as well as the RNN activations during the stimulus presentation and
subsequent timesteps (i.e. encoding and memory space respectively, denoted as E and M as shown"
METHODS,0.10784313725490197,"Figure 1: Tasks and Models: a) Example of a 2-back category task. Each object’s category is
compared with the category of the object seen two frames prior. b) The suite of n-back tasks
considered in the study. c) The sensory-cognitive model architecture. d) A schematic showing
the latent subspaces for category, identity, and locations in the perceptual, encoding, and memory
subspaces. Left: Stimuli are encoded in high dimensional latent space of the vision model (CNN).
Each object property is encoded in a high dimensional latent subspace of this model; Right: RNN
model represents each object property in its encoding latent subspace and retains some or all of the
properties within its memory subspaces at later time points."
METHODS,0.11274509803921569,"in Figure 4a). We considered three recurrent architectures for the second stage of the model including
the vanilla RNN, GRU [Chung et al., 2014], and LSTM [Hochreiter and Schmidhuber, 1997]."
METHODS,0.11764705882352941,"Model Training
Each model architecture was trained within three scenarios that differed in their
training diet:"
METHODS,0.12254901960784313,"• Single-Task-Single-Feature (STSF): trained on a single n-back task based on a single
object feature (e.g.1-back location)."
METHODS,0.12745098039215685,"• Single-Task-Multi-Feature (STMF): trained on a single choice of N for all three feature
variations (e.g. 1-back L, or C or I)."
METHODS,0.1323529411764706,"• Multi-Task-Multi-Feature (MTMF): encompassing all choices of N (1,2,3) and features
(L, I, C)."
METHODS,0.13725490196078433,"Model parameters were trained using AdamW [Loshchilov and Hutter, 2017] optimizer with an initial
learning rate of 3e −5 and a Multi-step learning rate decay with γ = 0.1 for every 100 iterations.
Batch size was 256 and all trials were generated on-the-fly using the iWISDM package [Lei et al.,"
METHODS,0.14215686274509803,"2024]. Hidden layers of RNN modules are initialized with Kaiming Initialization [He et al., 2015].
For details of decoding analysis and Procrustes analysis, please refer to Appendix .1"
EXPERIMENTS,0.14705882352941177,"4
Experiments"
EXPERIMENTS,0.15196078431372548,"All models reached > 95% accuracy on train and > 90% on validation set with novel object
angles. Generalization to novel object instances was substantially weaker (Figure A1b, c). Model
performance increased with the number of model parameters, and with identical parameter count,
vanilla RNNs accuracy was lower compared to their gated counterparts (Figure A1c). The ensuing
analyses utilized data collected from models with 512 units for vanilla RNNs, and 256 units for GRUs
and LSTMs, to ensure comparable model performance as well as comparable model parameters."
ENCODING OF TASK-RELEVANT AND -IRRELEVANT OBJECT PROPERTIES IN TASK-OPTIMIZED RNNS,0.1568627450980392,"4.1
Encoding of task-relevant and -irrelevant object properties in task-optimized RNNs"
ENCODING OF TASK-RELEVANT AND -IRRELEVANT OBJECT PROPERTIES IN TASK-OPTIMIZED RNNS,0.16176470588235295,"We first examined how RNN modules represent various object properties such as location, identity
and category in their latent space. In particular, we investigated the following two questions:"
ENCODING OF TASK-RELEVANT AND -IRRELEVANT OBJECT PROPERTIES IN TASK-OPTIMIZED RNNS,0.16666666666666666,"1) Do recurrent networks preserve object properties that are not necessary for the task?
In
order to perform a task, recurrent networks must maintain information about the task-relevant object
properties. However, maintaining information about the task-irrelevant factors is not necessary
from the perspective of the task objective. Therefore, RNNs may either selectively maintain task-
relevant information or maintain full object representations, recalling task-relevant information when
prompted."
ENCODING OF TASK-RELEVANT AND -IRRELEVANT OBJECT PROPERTIES IN TASK-OPTIMIZED RNNS,0.1715686274509804,"We trained decoders (i.e. classifiers) to predict each object property from the RNN hidden state
activity from the first timestep of each trial (e.g. F = Li vs. F = Lj̸=i decoders, total 4 location
decoders). Cross-validated decoding accuracies are shown in Figure 2b for STSF, STMF, and MTMF
GRU models. Unsurprisingly, the task-relevant object properties are fully retrievable in all models.
Further tests revealed a causal relationship between the subspaces encoding task-relevant information
and the network’s generated response (Fig. A7; see section .1 for details.) However, while task-
irrelevant object features are not generally well-preserved in STSF models (Figure 2b, left), they
are much better preserved in STMF and MTMF models (i.e. decoding accuracy > 85%; Figure 2b
middle and right). This finding was consistent across all three RNN architectures (Figure A2a) and
across time points (Fig. A5). These results suggested that all RNNs maintained a full representation
of objects in their latent spaces regardless of which object properties were required for performing
the task."
ENCODING OF TASK-RELEVANT AND -IRRELEVANT OBJECT PROPERTIES IN TASK-OPTIMIZED RNNS,0.17647058823529413,"2) Are object properties encoded within a subspace that is shared across different tasks or
distinct ones within each task?
Having observed that both task-relevant and -irrelevant information
are retained by multi-feature RNNs, we next asked whether RNN encoding of object properties is
task-dependent or -independent. To probe this, we trained decoders to predict object properties from
the RNNs’ activations during one task, and tested the decoder on RNN activations when performing
another task (i.e., cross-task decoding). We quantified the generalization performance of MTMF
models across all three architectures (Figure 2a). We found that gated RNNs (GRU and LSTM,
Figure A2b) utilized highly task-specific subspaces for encoding object properties, while vanilla
RNN encoded object properties within a subspace that was shared across all task-variations (Figure
2c). This suggests that gated RNNs tend to learn task-specific representations that do not generalize
across tasks, potentially impacting their ability to generalize to new tasks."
ENCODING OF TASK-RELEVANT AND -IRRELEVANT OBJECT PROPERTIES IN TASK-OPTIMIZED RNNS,0.18137254901960784,"4.2
Representational orthogonalization in task-optimized RNNs."
ENCODING OF TASK-RELEVANT AND -IRRELEVANT OBJECT PROPERTIES IN TASK-OPTIMIZED RNNS,0.18627450980392157,"To improve their performance, RNN weights might form structured and separable representations
for each task-relevant feature. For this to be true, the RNN latent space may orthogonalize feature
representations beyond their perceptual representation (see schematics in Figure 3a). To quantify
orthogonalization, we calculated the angles between all pairs of decision hyperplanes using cosine
similarity (bootstrapped 10 times). We then summarized these angles into a single orthogonality mea-
sure by computing the Frobenius norm of the difference between this matrix and the identity matrix
(which represents complete orthogonalization). We defined this measure as the orthogonalization"
ENCODING OF TASK-RELEVANT AND -IRRELEVANT OBJECT PROPERTIES IN TASK-OPTIMIZED RNNS,0.19117647058823528,"Figure 2: Representation of task-relevant/-irrelevant object properties: (a) Decoding generaliza-
tion accuracy for each object property is displayed across tasks and operating modes for vanilla RNN
and GRU. Rows and columns of 3 × 3 matrices correspond to the N-back task on which the decoders
are fitted and tested on respectively. Matrix columns correspond to particular decoders denoted by
Dk,F (k ∈{1, 2, 3}, F ∈{L, I, C}) (indicating which task and decoding feature the decoder was
fitted on), while matrix rows correspond to the object property of the task the decoder was tested on.
(b) Validation accuracy of decoders trained on RNN latent space activations from the first time step
of each trial to predict different object properties. Each column represents the object property the
decoder was trained on, while each row corresponds to a model. c) Quantification of the validation
accuracy (within the same task, indicated in purple) and generalization accuracy (across tasks with
different task-relevant features, indicated in yellow) across all model architectures."
ENCODING OF TASK-RELEVANT AND -IRRELEVANT OBJECT PROPERTIES IN TASK-OPTIMIZED RNNS,0.19607843137254902,"index (O):
˜Wij = 1 −abs

cos(Wi, Wj)
"
ENCODING OF TASK-RELEVANT AND -IRRELEVANT OBJECT PROPERTIES IN TASK-OPTIMIZED RNNS,0.20098039215686275,"O = E

triu( ˜W)

(1)"
ENCODING OF TASK-RELEVANT AND -IRRELEVANT OBJECT PROPERTIES IN TASK-OPTIMIZED RNNS,0.20588235294117646,"where Wi is the normal vector of the decision hyperplane that separates points assigned with feature
value i from the rest, cos(Wi, Wj) is the cosine similarity between the two normal vectors. We take
the absolute value since the relative direction does not matter. triu(.) is the upper triangle operator."
ENCODING OF TASK-RELEVANT AND -IRRELEVANT OBJECT PROPERTIES IN TASK-OPTIMIZED RNNS,0.2107843137254902,"We evaluated the degree of representation orthogonalization within the perceptual and encoding
spaces. Contrary to our hypothesis, we observed that relative to the perceptual space, the RNN
latent space slightly de-orthogonalize the axes along which distinct object features are represented
(Figure 3b). Similar results were found when PCA was used to equalize dimensionality between
the two spaces (Figure A3). Although more orthogonalized representations generally facilitate
structured and enhanced separation of task-relevant features, our behavioral results still indicate
optimal performance. One possible interpretation of these results is that the reduced orthogonalization
in the RNN latent space produces a more efficient (lower dimensional) representation. (In contrast,
increased orthgonalization in the representational space would increase the overall dimensionality of
the object representations.) In practice, only a subset of dimensions need to contain orthogonalized
representations for successful task performance. In turn, this would make it easier to train the read
out weights of the RNN to produce the correct task responses."
ENCODING OF TASK-RELEVANT AND -IRRELEVANT OBJECT PROPERTIES IN TASK-OPTIMIZED RNNS,0.21568627450980393,"Figure 3: Orthogonalization: a) A schematic of two hypothetical object spaces in 3D. ri,j represents
the angle formed by the decision hyperplanes that separate feature value i and j from each other.
Top: non-orthogonalized representation; Bottom: orthogonalized representation. b) Upper panel:
Normalized orthogonalization index, for both perceptual and encoding spaces respectively (denoted as
O(Perceptual) and O(Encoding)). In most models, a less orthogonalized representation of feature
values emerges in the RNN encoding space compared to the perceptual space (CNN output). Lower
panel: Statistical comparison of the relative orthogonalization levels between the perceptual and
encoding spaces. A two-sample t-test was performed to assess differences between the distributions
of orthogonalization indices in the perceptual space and the encoding space."
ENCODING OF TASK-RELEVANT AND -IRRELEVANT OBJECT PROPERTIES IN TASK-OPTIMIZED RNNS,0.22058823529411764,"4.3
Neural mechanisms of concurrent encoding, maintenance, and retrieval in RNN models of
WM"
ENCODING OF TASK-RELEVANT AND -IRRELEVANT OBJECT PROPERTIES IN TASK-OPTIMIZED RNNS,0.22549019607843138,"Having examined the encoding of objects in the RNN’s latent space, we next investigated how RNN
dynamics enable simultaneous encoding, maintenance, and retrieval of information. Performing our
N-back task suite required the RNN to keep track of prior objects’ properties while simultaneously
encoding incoming stimuli with minimal interference."
ENCODING OF TASK-RELEVANT AND -IRRELEVANT OBJECT PROPERTIES IN TASK-OPTIMIZED RNNS,0.23039215686274508,"We reasoned that the RNN may implement one of three possible mechanisms to perform the N-back
working memory task suite (Figure 4e):"
ENCODING OF TASK-RELEVANT AND -IRRELEVANT OBJECT PROPERTIES IN TASK-OPTIMIZED RNNS,0.23529411764705882,"• H1: Slot-based memory subspaces [Luck and Vogel, 1997]. Where the RNN latent space
is divided into separate subspaces that are indexed in time within the sequence. Each object
is encoded into its corresponding subspace (i.e. slot) and is maintained there until retrieved.
By definition, the subspace assigned to each memory slot is distinct and “sustained” in time."
ENCODING OF TASK-RELEVANT AND -IRRELEVANT OBJECT PROPERTIES IN TASK-OPTIMIZED RNNS,0.24019607843137256,"• H2: Relative chronological memory subspaces. Where the RNN latent space is divided
into separate subspaces that each maintains object information according to their age (i.e.
how long ago they were encoded). Such a mechanism will require a dynamic process for
updating the content of each memory space at each time step during the task."
ENCODING OF TASK-RELEVANT AND -IRRELEVANT OBJECT PROPERTIES IN TASK-OPTIMIZED RNNS,0.24509803921568626,"• H3: Stimulus-specific relative chronological memory subspaces. This is similar to
the relative chronological memory hypothesis but with independent subspaces assigned
to each object. Each observation in the sequence is thus encoded into a distinct subspace
and encoding of each stimulus is in turn distinctly transformed into associated memory
representations."
ENCODING OF TASK-RELEVANT AND -IRRELEVANT OBJECT PROPERTIES IN TASK-OPTIMIZED RNNS,0.25,"To identify the hypothesis that best matches the computations performed by the RNN, we analyzed
how the RNN latent subspace encodes and transforms each object property (E(S,T )) across time into
memory (M(S,T )) (Fig. 1d)."
ENCODING OF TASK-RELEVANT AND -IRRELEVANT OBJECT PROPERTIES IN TASK-OPTIMIZED RNNS,0.2549019607843137,"We first tested whether object information is maintained in a temporally stable subspace (i.e. sustained
working memory representation) which aligns with H1 prediction (i.e. E(S=i,T =1)
?= M(S=i,T =k),
k ∈{2, 3, 4...}; Fig. 4a). For this, we trained decoders to predict the value of each object property
using the RNN unit activity during the encoding phase (i.e. Encoding Space) and evaluated its
generalization performance in consecutive steps (i.e. Memory Spaces). We reasoned that if the object
information is encoded in a subspace that is stable across time (as in a memory slot), the decoders’
generalization performance should be high and comparable to its performance during the encoding
phase. Contrary to H1’s prediction, we found that the decoders do not generalize well (Figure 4b),
suggesting that the object information is not stably encoded in a temporally-fixed RNN latent space."
ENCODING OF TASK-RELEVANT AND -IRRELEVANT OBJECT PROPERTIES IN TASK-OPTIMIZED RNNS,0.25980392156862747,"However, we observed that in STMF and MTMF models, the cross-time decoding accuracy is
consistently higher during recall (Figure 4b and c). Interestingly, this suggests that the object
representation is partially realigned with its original encoding representation when it is retrieved (Fig.
4b)."
ENCODING OF TASK-RELEVANT AND -IRRELEVANT OBJECT PROPERTIES IN TASK-OPTIMIZED RNNS,0.2647058823529412,"Next, we examined whether the object encoding space is shared between incoming stimuli, irre-
spective of the specific object or time (H2 vs. H3; i.e. E(S=i,T =i)
?= E(S=j,T =j), for i ̸= j). We
thus fitted classifiers to decode each object property using the hidden activity from the encoding
space of each stimulus within the sequence (i.e. decoding S = i from E(S=i,T =i)), testing it on
the stimuli appearing at other time steps (i.e. decoding S = j from E(S=j,T =j)). We performed
this analysis for all object properties and for all models and all tasks. The validation and general-
ization accuracies were almost identical (Figure 4d), suggesting a stable encoding representation
(E(S=i,T =i) = E(S=j,T =j)) consistent with H2. In other words, each object in the sequence was
encoded according to its chronological age (i.e., when it was placed into memory), regardless of the
object property."
ENCODING OF TASK-RELEVANT AND -IRRELEVANT OBJECT PROPERTIES IN TASK-OPTIMIZED RNNS,0.2696078431372549,"Having examined how the RNN latent space allows concurrent encoding, retention, and retrieval of
information, we next investigated what transformations underlie the conversion of information from
one subspace to another. Specifically, we inquired whether the transformation of feature subspaces
across timesteps is stable with respect to the same encoded stimulus (i.e. Ti = Ti+1; see Fig. 4e).
As detailed in Appendix .1, we adopted the orthogonal Procrustes analysis to obtain rotation matrix
RS,T to characterize the transformation. The orthogonal Procrustes analysis is a statistical shape
analysis which discovers simple rigid transformations that superimpose a set of vectors/points onto
another. We used this analysis to inquire whether each set of object feature decoders can be rotated to
align with the set of decoders for the same object properties, but across time. Thus, the above test can
be reformulated as"
ENCODING OF TASK-RELEVANT AND -IRRELEVANT OBJECT PROPERTIES IN TASK-OPTIMIZED RNNS,0.27450980392156865,"R(S=i,T =j)
?= R(S=i,T =j+1)
(2)"
ENCODING OF TASK-RELEVANT AND -IRRELEVANT OBJECT PROPERTIES IN TASK-OPTIMIZED RNNS,0.27941176470588236,"Additionally, we also tested if the transformation is consistent across stimuli within the sequence:"
ENCODING OF TASK-RELEVANT AND -IRRELEVANT OBJECT PROPERTIES IN TASK-OPTIMIZED RNNS,0.28431372549019607,"R(S=i,T =j)
?= R(S=i+k,T =j+k)
(3)"
ENCODING OF TASK-RELEVANT AND -IRRELEVANT OBJECT PROPERTIES IN TASK-OPTIMIZED RNNS,0.28921568627450983,"We first checked whether the feature representation subspace transformation across timesteps are
structured (Figure 4f-left). In other words, we evaluated how well the Procrustes analysis can
capture the rotation transformation of feature representation subspaces. The reconstructed decision
hyperplanes resulting from rotating the original decoders by the Procrustes transformation matrix R
were highly accurate (Fig. 4f-right), indicating that a rotation was able to capture the transformation
performed by the RNN across time (also see Figure A4)."
ENCODING OF TASK-RELEVANT AND -IRRELEVANT OBJECT PROPERTIES IN TASK-OPTIMIZED RNNS,0.29411764705882354,"Next, we tested Eqs. 2 and 3 by swapping the rotation matrix at R(S=i,T =j) with R(S=i,T =j+1)
or R(S=i+k,T =j+k) respectively, and plotted the accuracy of reconstructed decision hyperplane for
MTMF models in Figure 4g. We reasoned that if these rotation operations were shared across time
steps and stimuli, swapping them would not significantly affect the decoding accuracy. Across all
model architectures and tasks, we found that replacing R(S=i+k,T =j+k) consistently yields good
accuracy, whereas replacing R(S=i,T =j+1) does not. Similar results were obtained in models trained
on larger N (N=1-4), stimuli with naturalistic texture backgrounds, and more number of categories
and identities (Fig. A6). These results suggest that while the transformation remains consistent across
different stimuli, it is not stable over time."
ENCODING OF TASK-RELEVANT AND -IRRELEVANT OBJECT PROPERTIES IN TASK-OPTIMIZED RNNS,0.29901960784313725,"Figure 4: RNN dynamics during n-back task a) schematic of the 3-back task for a trial of 6 inputs.
Model encodes each observed object in its respective Encoding Space denoted as E(i,j) (diagonal
frames with yellow borders). For each stimulus, various object properties are retained over time in
their respective Memory Space denoted as MS. On executive steps (frames with red borders) model
produces a response according to the memory of the stimulus and the newly observed stimulus at that
time. b) Decoding accuracy for predicting object identity at different time steps where the decoder
is fit to data from the encoding step of a MTMF GRU during 1/2/3-back identity tasks. Red box
indicates the executive steps. c) For each model type, we measured the generalization accuracy on
executive (left boxplot) and non-executive (right boxplot) steps. d) Decoding accuracy for decoders
trained and tested on the same Ei,i space (validation) or tested on other Ej,j, j ̸= i spaces. e)
Schematic of the three hypotheses. f) Left: Schematic of the two latent space transformations.
Structured transformation preserves the topology (i.e. the transformation can be captured solely by a
common scaling factor and a rotation matrix). Unstructured transformation: does not preserve the
topology. Right: Decoding accuracy for fitted decoders (solid line) and reconstructed decoders (dotted
line) using the rotation matrix R(i,i)from the Procrustes analysis. The small accuracy gap between
fitted and reconstructed decoders suggests a structured transformation. g) Decoding accuracy of the
reconstructed decoder when the original rotation matrix is substituted with another (indicated by the
x-axis labels). Rows and columns corresponds to object properties and MTMF network architectures
respectively."
DISCUSSION AND CONCLUSIONS,0.30392156862745096,"5
Discussion and Conclusions"
DISCUSSION AND CONCLUSIONS,0.3088235294117647,"We investigated how naturalistic objects are represented in recurrent models during a dynamic and
difficult WM task. In contrast to most prior work that build computational models of WM using
abstract categorical stimuli, which typically study WM during a stable fixation/delay period, we
trained a range of sensory-cognitive models to perform N-back tasks using naturalistic stimuli.
We found that models trained on multiple features and multiple tasks retained object information
regardless of their task-relevance. While prior studies investigating WM tasks using RNNs have
identified shared representations and dynamical motifs across related tasks [Yang et al., 2019, Driscoll
et al., 2022], we found that representations were largely task-specific in gated RNNs such as GRUs and
LSTMs. The representational differences between gated and gateless RNNs provides an opportunity
for future work to adjudicate between these recurrent architectures and their cognitive significance
(i.e., gated vs. gateless) with empirical neural data."
DISCUSSION AND CONCLUSIONS,0.3137254901960784,"While increased orthogonalization could in theory enable better task performance through the
formation of increased separation of object representations in the recurrent module, we found the
opposite. Despite reduced orthogonalization of task-relevant features in the RNN, this did not
appear to influence task generalization behavior. One possible interpretation of this is that the
reduced orthogonalization in the RNN latent space produces a more efficient (lower dimensional)
representation. In practice, only a subset of latent need to contain orthogonalized task-relevant
representations representations for successful task performance. Having fewer latent dimensions
that orthogonalize task-relevant representations could make it easier to decode/read out the correct
response information from this latent subspace. Clarifying this distinction further will be important
for future work."
DISCUSSION AND CONCLUSIONS,0.31862745098039214,"Lastly, we found that RNNs solve the N-back task by leveraging chronological memory subspaces to
maintain information about different objects distinct. This finding is consistent with the “resource”
model of working memory [Alvarez and Cavanagh, 2004, Franconeri et al., 2013], which proposes
that memory resources are flexibly distributed across all items. This is contrast to the “slot-based”
model [Luck and Vogel, 1997], which suggests that memory is composed of discrete, independent
slots for each item. Furthermore, the observed dynamics align with the conceptual framework in
Whittington et al. [2023], where different memory slots can transfer information between each other
during working memory. Our experiments reveal that similar slot-like subspaces naturally emerge
in task-optimized RNNs, with information transfer between them guided by RNN transformations
based on task demands. However, as these subspaces are carved out of a shared neural space defined
by the RNN units and dependent on chronology, they are not necessarily non-overlapping (unlike that
assumed in Whittington et al. [2023]). Such possible overlaps may account for previous findings on
the influence of memory load on working memory performance [Ma et al., 2014]. Altogether, these
results provide testable predictions to evaluate the neural basis of WM in humans in future work."
LIMITATIONS,0.3235294117647059,"6
Limitations"
LIMITATIONS,0.3284313725490196,Our study has several limitations:
LIMITATIONS,0.3333333333333333,"1. Task-Specific Findings: Our results are specific to the N-back task structure, and it remains
uncertain whether similar computational strategies would emerge in other working memory
tasks.
2. Analysis for Novel Objects: While we observed reduced performance with novel objects,
we did not analyze the representational geometry associated with these stimuli or investigate
the reasons for diminished performance. Our use of naturalistic stimuli was intended to
avoid imposing the representational geometry typical of abstract inputs, as seen in previous
studies (e.g., Piwek et al. [2023], Yang et al. [2019]).
3. Architectural Constraints: Our findings are restricted to commonly used RNN architec-
tures, such as vanilla RNNs and LSTMs. Therefore, we cannot make definitive claims about
how different neural network architectures might affect representational geometry. Further
research could explore whether other architectures yield similar or distinct patterns.
4. Impact of Network Scaling: We did not explore how scaling the network size might
influence the results. It is possible that increasing the network size could alter the strategies
employed by models to perform dynamic WM tasks."
LIMITATIONS,0.3382352941176471,Acknowledgments
LIMITATIONS,0.3431372549019608,"This research was supported by the Healthy-Brains-Healthy-Lives startup supplement grant, the
NSERC Discovery grant RGPIN-2021-03035, and CIHR Project Grant PJT-191957. P.B. was
supported by FRQ-S Research Scholars Junior 1 grant 310924, and the William Dawson Scholar
award. All analyses were executed using resources provided by the Digital Research Alliance of
Canada (Compute Canada) and funding from Canada Foundation for Innovation project number
42730."
REFERENCES,0.3480392156862745,References
REFERENCES,0.35294117647058826,"G.A. Alvarez and P. Cavanagh. The Capacity of Visual Short-Term Memory is Set Both by Visual
Information Load and by Number of Objects. Psychological Science, 15(2):106–111, February
2004. ISSN 0956-7976. doi: 10.1111/j.0963-7214.2004.01502006.x. URL https://doi.org/
10.1111/j.0963-7214.2004.01502006.x. Publisher: SAGE Publications Inc."
REFERENCES,0.35784313725490197,"John R Anderson. The architecture of cognition. Psychology Press, 2013."
REFERENCES,0.3627450980392157,"Jimmy Lei Ba. Layer normalization. arXiv preprint arXiv:1607.06450, 2016."
REFERENCES,0.36764705882352944,"Alan Baddeley. Working memory. Science, 255(5044):556–559, 1992."
REFERENCES,0.37254901960784315,"Alan D Baddeley, GJ Hitch, and Richard Allen. A multicomponent model of working memory.
Working memory: State of the science, pages 10–43, 2021."
REFERENCES,0.37745098039215685,"Pouya Bashivan, Kohitij Kar, and James J. DiCarlo. Neural population control via deep image
synthesis. Science, 364(6439):eaav9436, 2019. ISSN 0036-8075, 1095-9203. doi: 10.1126/science.
aav9436. URL https://www.science.org/doi/10.1126/science.aav9436."
REFERENCES,0.38235294117647056,"Angel X Chang, Thomas Funkhouser, Leonidas Guibas, Pat Hanrahan, Qixing Huang, Zimo Li,
Silvio Savarese, Manolis Savva, Shuran Song, Hao Su, et al. Shapenet: An information-rich 3d
model repository. arXiv preprint arXiv:1512.03012, 2015."
REFERENCES,0.3872549019607843,"Junyoung Chung, Caglar Gulcehre, KyungHyun Cho, and Yoshua Bengio. Empirical evaluation of
gated recurrent neural networks on sequence modeling. arXiv preprint arXiv:1412.3555, 2014."
REFERENCES,0.39215686274509803,"Albert Compte, Nicolas Brunel, Patricia S Goldman-Rakic, and Xiao-Jing Wang. Synaptic mech-
anisms and network dynamics underlying spatial working memory in a cortical network model.
Cerebral cortex, 10(9):910–923, 2000."
REFERENCES,0.39705882352941174,"Nelson Cowan. Evolving conceptions of memory storage, selective attention, and their mutual
constraints within the human information-processing system. Psychological Bulletin, 104(2):163,
1988. ISSN 1939-1455. doi: 10.1037/0033-2909.104.2.163. URL https://psycnet.apa.org/
fulltext/1989-00336-001.pdf."
REFERENCES,0.4019607843137255,"Jia Deng, Wei Dong, Richard Socher, Li-Jia Li, Kai Li, and Li Fei-Fei. Imagenet: A large-scale
hierarchical image database. In 2009 IEEE conference on computer vision and pattern recognition,
pages 248–255. Ieee, 2009."
REFERENCES,0.4068627450980392,"Laura Driscoll, Krishna Shenoy, and David Sussillo. Flexible multitask computation in recurrent
networks utilizes shared dynamical motifs. bioRxiv, pages 2022–08, 2022."
REFERENCES,0.4117647058823529,"Alexei A Efros and William T Freeman. Image quilting for texture synthesis and transfer. In Seminal
Graphics Papers: Pushing the Boundaries, Volume 2, pages 571–576. 2023."
REFERENCES,0.4166666666666667,"Daniel B Ehrlich and John D Murray. Geometry of neural computation unifies working memory and
planning. Proceedings of the National Academy of Sciences, 119(37):e2115610119, 2022."
REFERENCES,0.4215686274509804,"Stephen M Emrich, Adam C Riggall, Joshua J LaRocque, and Bradley R Postle. Distributed patterns
of activity in sensory cortex reflect the precision of multiple items maintained in visual short-term
memory. Journal of Neuroscience, 33(15):6516–6523, 2013."
REFERENCES,0.4264705882352941,"Arseny Finkelstein, Lorenzo Fontolan, Michael N Economo, Nuo Li, Sandro Romani, and Karel
Svoboda. Attractor dynamics gate cortical information flow during decision-making. Nature
neuroscience, 24(6):843–850, 2021."
REFERENCES,0.43137254901960786,"Steven L. Franconeri, George A. Alvarez, and Patrick Cavanagh. Flexible cognitive resources:
competitive content maps for attention and memory. Trends in Cognitive Sciences, 17(3):134–141,
March 2013. ISSN 1364-6613, 1879-307X. doi: 10.1016/j.tics.2013.01.010. URL https://www.
cell.com/trends/cognitive-sciences/abstract/S1364-6613(13)00024-7. Publisher:
Elsevier."
REFERENCES,0.4362745098039216,"John C Gower and Garmt B Dijksterhuis. Procrustes problems, volume 30. OUP Oxford, 2004."
REFERENCES,0.4411764705882353,"Uri Hasson, Samuel A Nastase, and Ariel Goldstein. Direct fit to nature: an evolutionary perspective
on biological and artificial neural networks. Neuron, 105(3):416–434, 2020."
REFERENCES,0.44607843137254904,"Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. Delving deep into rectifiers: Surpassing
human-level performance on imagenet classification. In Proceedings of the IEEE international
conference on computer vision, pages 1026–1034, 2015."
REFERENCES,0.45098039215686275,"Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. Deep residual learning for image
recognition. In Proceedings of the IEEE conference on computer vision and pattern recognition,
pages 770–778, 2016."
REFERENCES,0.45588235294117646,"Sepp Hochreiter and Jürgen Schmidhuber. Long short-term memory. Neural computation, 9(8):
1735–1780, 1997."
REFERENCES,0.46078431372549017,"Dongseong Hwang, Weiran Wang, Zhuoyuan Huo, Khe Chai Sim, and Pedro Moreno Mengibar.
TransformerFAM: Feedback attention is working memory, 2024. URL http://arxiv.org/abs/
2404.09173."
REFERENCES,0.46568627450980393,"Alexander JE Kell, Daniel LK Yamins, Erica N Shook, Sam V Norman-Haignere, and Josh H
McDermott. A task-optimized neural network replicates human auditory behavior, predicts brain
responses, and reveals a cortical processing hierarchy. Neuron, 98(3):630–644, 2018."
REFERENCES,0.47058823529411764,"Seyed-Mahdi Khaligh-Razavi and Nikolaus Kriegeskorte. Deep supervised, but not unsupervised,
models may explain it cortical representation. PLoS computational biology, 10(11):e1003915,
2014."
REFERENCES,0.47549019607843135,"Xiaoxuan Lei, Lucas Gomez, Hao Yuan Bai, and Pouya Bashivan. iwisdm: Assessing instruction
following in multimodal models at scale. arXiv preprint arXiv:2406.14343, 2024."
REFERENCES,0.4803921568627451,"Ilya Loshchilov and Frank Hutter.
Decoupled weight decay regularization.
arXiv preprint
arXiv:1711.05101, 2017."
REFERENCES,0.4852941176470588,"Ricky Loynd, Roland Fernandez, Asli Celikyilmaz, Adith Swaminathan, and Matthew Hausknecht.
Working memory graphs. In Proceedings of the 37th International Conference on Machine
Learning, pages 6404–6414. PMLR, 2020. URL https://proceedings.mlr.press/v119/
loynd20a.html. ISSN: 2640-3498."
REFERENCES,0.49019607843137253,"Steven J Luck and Edward K Vogel. The capacity of visual working memory for features and
conjunctions. Nature, 193(1996):1996–1998, 1997. ISSN 0028-0836. doi: 10.1038/36846.
Number: 1996."
REFERENCES,0.4950980392156863,"Wei Ji Ma, Masud Husain, and Paul M. Bays. Changing concepts of working memory. Nature
Neuroscience, 17(3):347–356, March 2014. ISSN 1546-1726. doi: 10.1038/nn.3655. URL
https://www.nature.com/articles/nn.3655. Number: 3 Publisher: Nature Publishing
Group."
REFERENCES,0.5,"Valerio Mante, David Sussillo, Krishna V Shenoy, and William T Newsome. Context-dependent
computation by recurrent dynamics in prefrontal cortex. nature, 503(7474):78–84, 2013."
REFERENCES,0.5049019607843137,"Nicolas Y Masse, Guangyu R Yang, H Francis Song, Xiao-Jing Wang, and David J Freedman. Circuit
mechanisms for the maintenance and manipulation of information in working memory. Nature
neuroscience, 22(7):1159–1167, 2019."
REFERENCES,0.5098039215686274,"David E Meyer and David E Kieras. A computational theory of executive cognitive processes and
multiple-task performance: Part i. basic mechanisms. Psychological review, 104(1):3, 1997a."
REFERENCES,0.5147058823529411,"David E. Meyer and David E. Kieras. A computational theory of executive cognitive processes and
multiple-task performance: Part 2. accounts of psychological refractory-period phenomena. 104:
749–791, 1997b. ISSN 1939-1471. doi: 10.1037/0033-295X.104.4.749. Place: US Publisher:
American Psychological Association."
REFERENCES,0.5196078431372549,"Earl K Miller, Cynthia A Erickson, and Robert Desimone. Neural mechanisms of visual working
memory in prefrontal cortex of the macaque. Journal of neuroscience, 16(16):5154–5167, 1996."
REFERENCES,0.5245098039215687,"Randall C. O’Reilly and Michael J. Frank. Making working memory work: A computational model
of learning in the prefrontal cortex and basal ganglia. Neural Computation, 18(2):283–328, 2006.
ISSN 08997667. doi: 10.1162/089976606775093909. Number: 2."
REFERENCES,0.5294117647058824,"Matthew F Panichello and Timothy J Buschman. Shared mechanisms underlie the control of working
memory and attention. Nature, 592(7855):601–605, 2021."
REFERENCES,0.5343137254901961,"Emilia P Piwek, Mark G Stokes, and Christopher Summerfield. A recurrent neural network model of
prefrontal brain activity during a working memory task. PLoS Computational Biology, 19(10):
e1011555, 2023."
REFERENCES,0.5392156862745098,"Frank E Ritter, Farnaz Tehranchi, and Jacob D Oury. Act-r: A cognitive architecture for modeling
cognition. Wiley Interdisciplinary Reviews: Cognitive Science, 10(3):e1488, 2019."
REFERENCES,0.5441176470588235,"Amy Ross. Procrustes analysis. Course report, Department of Computer Science and Engineering,
University of South Carolina, 26:1–8, 2004."
REFERENCES,0.5490196078431373,"Martin Schrimpf, Jonas Kubilius, Ha Hong, Najib J Majaj, Rishi Rajalingham, Elias B Issa, Kohitij
Kar, Pouya Bashivan, Jonathan Prescott-Roy, Franziska Geiger, et al. Brain-score: Which artificial
neural network for object recognition is most brain-like? BioRxiv, page 407007, 2018."
REFERENCES,0.553921568627451,"Martin Schrimpf, Idan Asher Blank, Greta Tuckute, Carina Kauf, Eghbal A Hosseini, Nancy Kan-
wisher, Joshua B Tenenbaum, and Evelina Fedorenko. The neural architecture of language:
Integrative modeling converges on predictive processing. Proceedings of the National Academy of
Sciences, 118(45):e2105646118, 2021."
REFERENCES,0.5588235294117647,"Kartik K. Sreenivasan and Mark D’Esposito. The what, where and how of delay activity. Nature Re-
views Neuroscience, 20(8):10–14, 2019. ISSN 1471-003X. doi: 10.1038/s41583-019-0176-7. URL
http://www.nature.com/articles/s41583-019-0176-7. Number: 8 Publisher: Springer
US."
REFERENCES,0.5637254901960784,"Xiao-Jing Wang. Synaptic basis of cortical persistent activity: the importance of nmda receptors to
working memory. Journal of Neuroscience, 19(21):9587–9603, 1999."
REFERENCES,0.5686274509803921,"James CR Whittington, William Dorrell, Timothy EJ Behrens, Surya Ganguli, and Mohamady El-
Gaby. On prefrontal working memory and hippocampal episodic memory: Unifying memories
stored in weights and activity slots. bioRxiv, pages 2023–11, 2023."
REFERENCES,0.5735294117647058,"Yang Xie, Peiyao Hu, Junru Li, Jingwen Chen, Weibin Song, Xiao-Jing Wang, Tianming Yang,
Stanislas Dehaene, Shiming Tang, Bin Min, et al. Geometry of sequence working memory in
macaque prefrontal cortex. Science, 375(6581):632–639, 2022."
REFERENCES,0.5784313725490197,"Yudi Xie, Yu Duan, Aohua Cheng, Pengcen Jiang, Christopher J Cueva, and Guangyu Robert Yang.
Natural constraints explain working memory capacity limitations in sensory-cognitive models.
BioRxiv, 2023."
REFERENCES,0.5833333333333334,"Daniel L K Yamins, Ha Hong, Charles F Cadieu, Ethan A Solomon, Darren Seibert, and
James J DiCarlo.
Performance-optimized hierarchical models predict neural responses in
higher visual cortex.
Proceedings of the National Academy of Sciences of the United
States of America, 111(23):8619–24, 2014.
ISSN 1091-6490.
doi:
10.1073/pnas.
1403112111.
URL http://www.ncbi.nlm.nih.gov/pubmed/24812127%0Ahttp://www.
pubmedcentral.nih.gov/articlerender.fcgi?artid=PMC4060707. Number: 23."
REFERENCES,0.5882352941176471,"Guangyu Robert Yang, Madhura R Joglekar, H Francis Song, William T Newsome, and Xiao-Jing
Wang. Task representations in neural networks trained to perform many cognitive tasks. Nature
neuroscience, 22(2):297–306, 2019."
REFERENCES,0.5931372549019608,Appendix
REFERENCES,0.5980392156862745,"Figure A1: Stimuli and Model performance a) rendered stimuli examples from Shapenet. b) 9
task variations of N-back constructed from different choices of task-relevant features (L, I, C) and
N (1,2,3) index. c) Model performance on train, validation novel angle and validation novel object
datasets. Three architectures are tested with various number of hidden size, with the number of
trainable parameters indicated on x-axis."
REFERENCES,0.6029411764705882,".1
Methods"
REFERENCES,0.6078431372549019,"Model training
We used cross-entropy loss for training, and the identity of the task was encoded
in a 6-digit binary format: the first 3 digits represented the one-hot encoding of the feature (e.g.,
stimulus location, category, or identity), and the second 3 digits represented the one-hot encoding
of the n-back choice of n. For the single-task single-feature model, we used the same task identity
vector as in the multi-task models. The multi-task multi-feature model typically takes around 4-8k
iterations with a batch size of 256, and we cut off training at 14k iterations. The sequence length is
fixed at 6 for both the training and validation sets."
REFERENCES,0.6127450980392157,"Causal test
To establish the causal relevance between the decoder-defined subspace and the
network’s behavioral performance, we perturbed the network’s representations by shifting them along
the direction of the normal vector to a given decision hyperplane. By passing the resulting hidden
states through consecutive timesteps, we computed the probabilities of the three possible actions. We
subsampled matched trials and perturbed the hidden states at various magnitudes in the direction of
the corresponding decision hyperplane. As shown in Figure A7, the probability of obtaining a match
action dropped significantly as the hidden states traversed the hyperplane, while the probability of
no action increased. The probability of a non-match action remained largely unaffected, except for
an increase in variance as the hidden states crossed the boundary. These results support the causal
relationship, indicating that the subspace defined by the decoding analysis is actively utilized by the
network in solving the task."
REFERENCES,0.6176470588235294,"Decoding analyses
We consider the latent space of the RNN as a D-dimensional space RD where
D is the number of units in the RNN model. We used support vector classifiers (SVC) to perform all
the decoding analysis. The decoder should be able to classify one feature value from the rest, for
example, location bottom left to all the other locations. Each decoder was fitted with activations from
either perceptual, encoding, or memory spaces and labels from one of the three possible features
(L, I, C) of the stimuli from current or previous time steps1. We adopted 10-fold cross-validation as
well as grid search to find the best regularization values from {0.001, 0.01, 1, 10}. All the classifiers
reached cross-validated accuracy of ≥85%."
REFERENCES,0.6225490196078431,Each classifier is then described by its normal vector w to its decision hyperplane dand a bias term b .
REFERENCES,0.6274509803921569,1We used Scikit-Learn’s implementation of SVC for fitting the classifier parameters.
REFERENCES,0.6323529411764706,"Figure A2: Object representation efficiency: a) Similar to Figure 2b, right panel, but for RNN and
LSTM trained on MFMT. b) Similar to Figure 2a, but for LSTM hidden and cell states (model trained
on MFMT)"
REFERENCES,0.6372549019607843,"Figure A3: Orthogonalization: Similar to Figure 3b, but with PCA to reduce the dimensionality to
the same level of the perceptual and encoding space."
REFERENCES,0.6421568627450981,"d = data · w + b
(4)"
REFERENCES,0.6470588235294118,"In the Procrustes analyses (see the Procrustes analysis section below), the vector w is derived by
rotating the original decoder using the Procrustes transformation and the bias term is obtained from
the original decoder. When d ≥0, the corresponding data point is assigned to one class, and to the
alternative class when d ≤0."
REFERENCES,0.6519607843137255,"The set of N vectors {w1, w2, . . . , wN} in D-dimensional space RD, represent N decoders in that
space. These vectors span a subspace of RD that is the set of all possible linear combinations
of these vectors. Mathematically, the subspace S spanned by these vectors is defined as: S =
span{w1, w2, . . . , wN} =
P i = 1Nαiwi | αi ∈R
	
. ."
REFERENCES,0.6568627450980392,"Procrustes analysis
Procrustes analysis [Ross, 2004] is a powerful method for identifying shape
correspondence that relies on the orthogonality of the rotation matrix. Here, we consider a shape
spanned by vertices specified by the normal vectors of decision hyperplanes obtained by classifying"
REFERENCES,0.6617647058823529,"one feature value from the rest. For example, for four possible locations, the shape is defined by four
vertices each corresponding to a classifier that discriminates one location from the rest. We calculate
such descriptions of shapes at each time step, for each feature, and across all possible tasks for each
model. The goal of our analysis is to transform decision hyperplanes obtained under one condition
to target decision hyperplanes obtained under another condition. In other words, we want to align
source shape with the target shape. To do so, we take the following steps:"
REFERENCES,0.6666666666666666,"• Train the decoders, obtain the normal vectors of the source and target shape, denoted as
wsource and wtarget
• Standardise wsource and wtarget:"
REFERENCES,0.6715686274509803,"w′
source =
wsource −wsource
∥wsource −wsource∥2
(5)"
REFERENCES,0.6764705882352942,"w′
target =
wtarget −wtarget
∥wtarget −wtarget∥2
(6)"
REFERENCES,0.6813725490196079,"We denote wtarget as b and ∥wtarget −wtarget∥2 as S.
• Perform Orthogonal Procrustes Analysis [Gower and Dijksterhuis, 2004] to align w′
source
with w′
target, which returns a rotation matrix (Rsource→target) and a global scaling factor
(s)
• Transform w′
source to w′
target by"
REFERENCES,0.6862745098039216,"w′
reconstructed = (w′
source · Rsource→target)s
(7)"
REFERENCES,0.6911764705882353,• Apply the inverted standardization to get the final reconstructed weights:
REFERENCES,0.696078431372549,"wreconstructed = w′
reconstructed · S + B
(8)"
REFERENCES,0.7009803921568627,"The obtained wreconstructed can be used to reconstruct SVC, and the decoding accuracy of the
reconstructed SVC can be used as a measure of the alignment quality. In future analysis, we swap
Rsource→target by rotation matrix obtained by aligning other pairs of shapes, evaluate the resulting
reconstructed SVC’s performance and use it to quantify the similarity between two rotation matrices."
REFERENCES,0.7058823529411765,"Figure A4: Validation of Procrustes Analysis: Similar to Figure 4 g, but for RNN and LSTM
trained on MFMT"
REFERENCES,0.7107843137254902,"Figure A5: Within-timestep Decoding Analysis: At each timestep, we trained SVMs on activations
from the recurrent module for task-relevant features (left) and task-irrelevant features (right), plotting
the validation accuracies averaged across different feature values. The results shown are for an
example GRU model trained on a multi-task, multi-feature task set. As expected, both task-relevant
and task-irrelevant features were well represented at their corresponding encoding times. In addition,
task-relevant features were more robustly encoded and distinctly separated compared to task-irrelevant
ones."
REFERENCES,0.7156862745098039,"Figure A6: a) Frames with different natural backgrounds: We overlaid our original 3D object
stimuli on synthesized natural background textures [Efros and Freeman, 2023](https://github.
com/Devashi-Choudhary/Texture-Synthesis). Three examples of the resulting frames are
shown. b) Task performance for models trained on different datasets: Accuracies were calculated
on the validation set with novel object angles. Multi-task, multi-feature models were trained on more
N-back tasks (1/2/3/4-back), visual frames with naturalistic texture backgrounds (texture bg), or
tasks generated with a larger stimulus dataset (8 categories with 4 identities each; larger dataset).
c) Rotation transformation analysis: We identified consistent patterns in the model’s response to
rotation transformations across various tasks, similar to the results in Figures 4f-g. Left side plot
shows an example for the MTMF model performing 4-back tasks. d) Cross-task decoding analysis:
Consistent decoding results, with higher generalization accuracy for vanilla RNN models compared
to gated models."
REFERENCES,0.7205882352941176,"Figure A7: Causality test: We subsampled trials with matched actions and trained feature-based
two-way decoders. We then perturbed the hidden states, obtained during the presentation of the
first stimulus, along the direction of the corresponding decision hyperplane. The distance moved is
proportional to the normalized norm vector (x-axis, distance moved in units). The perturbed hidden
states were passed through the recurrent module along with the paired stimulus to compute the
probabilities of the three possible actions."
REFERENCES,0.7254901960784313,NeurIPS Paper Checklist
CLAIMS,0.7303921568627451,1. Claims
CLAIMS,0.7352941176470589,"Question: Do the main claims made in the abstract and introduction accurately reflect the
paper’s contributions and scope?
Answer: [Yes]
Justification: Our main claims are consistent with experimental findings.
Guidelines:"
CLAIMS,0.7401960784313726,"• The answer NA means that the abstract and introduction do not include the claims
made in the paper.
• The abstract and/or introduction should clearly state the claims made, including the
contributions made in the paper and important assumptions and limitations. A No or
NA answer to this question will not be perceived well by the reviewers.
• The claims made should match theoretical and experimental results, and reflect how
much the results can be expected to generalize to other settings.
• It is fine to include aspirational goals as motivation as long as it is clear that these goals
are not attained by the paper.
2. Limitations"
CLAIMS,0.7450980392156863,"Question: Does the paper discuss the limitations of the work performed by the authors?
Answer: [Yes]
Justification: We point out the limitations of our model and analysis methods in the discus-
sion.
Guidelines:"
CLAIMS,0.75,"• The answer NA means that the paper has no limitation while the answer No means that
the paper has limitations, but those are not discussed in the paper.
• The authors are encouraged to create a separate ""Limitations"" section in their paper.
• The paper should point out any strong assumptions and how robust the results are to
violations of these assumptions (e.g., independence assumptions, noiseless settings,
model well-specification, asymptotic approximations only holding locally). The authors
should reflect on how these assumptions might be violated in practice and what the
implications would be.
• The authors should reflect on the scope of the claims made, e.g., if the approach was
only tested on a few datasets or with a few runs. In general, empirical results often
depend on implicit assumptions, which should be articulated.
• The authors should reflect on the factors that influence the performance of the approach.
For example, a facial recognition algorithm may perform poorly when image resolution
is low or images are taken in low lighting. Or a speech-to-text system might not be
used reliably to provide closed captions for online lectures because it fails to handle
technical jargon.
• The authors should discuss the computational efficiency of the proposed algorithms
and how they scale with dataset size.
• If applicable, the authors should discuss possible limitations of their approach to
address problems of privacy and fairness.
• While the authors might fear that complete honesty about limitations might be used by
reviewers as grounds for rejection, a worse outcome might be that reviewers discover
limitations that aren’t acknowledged in the paper. The authors should use their best
judgment and recognize that individual actions in favor of transparency play an impor-
tant role in developing norms that preserve the integrity of the community. Reviewers
will be specifically instructed to not penalize honesty concerning limitations.
3. Theory Assumptions and Proofs"
CLAIMS,0.7549019607843137,"Question: For each theoretical result, does the paper provide the full set of assumptions and
a complete (and correct) proof?
Answer: [NA]"
CLAIMS,0.7598039215686274,"Justification: We do not have theoretical results
Guidelines:"
CLAIMS,0.7647058823529411,"• The answer NA means that the paper does not include theoretical results.
• All the theorems, formulas, and proofs in the paper should be numbered and cross-
referenced.
• All assumptions should be clearly stated or referenced in the statement of any theorems.
• The proofs can either appear in the main paper or the supplemental material, but if
they appear in the supplemental material, the authors are encouraged to provide a short
proof sketch to provide intuition.
• Inversely, any informal proof provided in the core of the paper should be complemented
by formal proofs provided in appendix or supplemental material.
• Theorems and Lemmas that the proof relies upon should be properly referenced.
4. Experimental Result Reproducibility"
CLAIMS,0.7696078431372549,"Question: Does the paper fully disclose all the information needed to reproduce the main ex-
perimental results of the paper to the extent that it affects the main claims and/or conclusions
of the paper (regardless of whether the code and data are provided or not)?
Answer: [Yes]
Justification: Although the code base is not available, all the model training details as well
as analysis methods are clearly described.
Guidelines:"
CLAIMS,0.7745098039215687,"• The answer NA means that the paper does not include experiments.
• If the paper includes experiments, a No answer to this question will not be perceived
well by the reviewers: Making the paper reproducible is important, regardless of
whether the code and data are provided or not.
• If the contribution is a dataset and/or model, the authors should describe the steps taken
to make their results reproducible or verifiable.
• Depending on the contribution, reproducibility can be accomplished in various ways.
For example, if the contribution is a novel architecture, describing the architecture fully
might suffice, or if the contribution is a specific model and empirical evaluation, it may
be necessary to either make it possible for others to replicate the model with the same
dataset, or provide access to the model. In general. releasing code and data is often
one good way to accomplish this, but reproducibility can also be provided via detailed
instructions for how to replicate the results, access to a hosted model (e.g., in the case
of a large language model), releasing of a model checkpoint, or other means that are
appropriate to the research performed.
• While NeurIPS does not require releasing code, the conference does require all submis-
sions to provide some reasonable avenue for reproducibility, which may depend on the
nature of the contribution. For example
(a) If the contribution is primarily a new algorithm, the paper should make it clear how
to reproduce that algorithm.
(b) If the contribution is primarily a new model architecture, the paper should describe
the architecture clearly and fully.
(c) If the contribution is a new model (e.g., a large language model), then there should
either be a way to access this model for reproducing the results or a way to reproduce
the model (e.g., with an open-source dataset or instructions for how to construct
the dataset).
(d) We recognize that reproducibility may be tricky in some cases, in which case
authors are welcome to describe the particular way they provide for reproducibility.
In the case of closed-source models, it may be that access to the model is limited in
some way (e.g., to registered users), but it should be possible for other researchers
to have some path to reproducing or verifying the results.
5. Open access to data and code"
CLAIMS,0.7794117647058824,"Question: Does the paper provide open access to the data and code, with sufficient instruc-
tions to faithfully reproduce the main experimental results, as described in supplemental
material?"
CLAIMS,0.7843137254901961,"Answer: [No]
Justification: We plan to release the code base at a later phase.
Guidelines:"
CLAIMS,0.7892156862745098,"• The answer NA means that paper does not include experiments requiring code.
• Please see the NeurIPS code and data submission guidelines (https://nips.cc/
public/guides/CodeSubmissionPolicy) for more details.
• While we encourage the release of code and data, we understand that this might not be
possible, so “No” is an acceptable answer. Papers cannot be rejected simply for not
including code, unless this is central to the contribution (e.g., for a new open-source
benchmark).
• The instructions should contain the exact command and environment needed to run to
reproduce the results. See the NeurIPS code and data submission guidelines (https:
//nips.cc/public/guides/CodeSubmissionPolicy) for more details.
• The authors should provide instructions on data access and preparation, including how
to access the raw data, preprocessed data, intermediate data, and generated data, etc.
• The authors should provide scripts to reproduce all experimental results for the new
proposed method and baselines. If only a subset of experiments are reproducible, they
should state which ones are omitted from the script and why.
• At submission time, to preserve anonymity, the authors should release anonymized
versions (if applicable).
• Providing as much information as possible in supplemental material (appended to the
paper) is recommended, but including URLs to data and code is permitted.
6. Experimental Setting/Details"
CLAIMS,0.7941176470588235,"Question: Does the paper specify all the training and test details (e.g., data splits, hyper-
parameters, how they were chosen, type of optimizer, etc.) necessary to understand the
results?
Answer: [Yes]
Justification: We have provided full details to reproduce the results.
Guidelines:"
CLAIMS,0.7990196078431373,"• The answer NA means that the paper does not include experiments.
• The experimental setting should be presented in the core of the paper to a level of detail
that is necessary to appreciate the results and make sense of them.
• The full details can be provided either with the code, in appendix, or as supplemental
material.
7. Experiment Statistical Significance"
CLAIMS,0.803921568627451,"Question: Does the paper report error bars suitably and correctly defined or other appropriate
information about the statistical significance of the experiments?
Answer: [Yes]
Justification: We provided statistical testing results whenever necessary.
Guidelines:"
CLAIMS,0.8088235294117647,"• The answer NA means that the paper does not include experiments.
• The authors should answer ""Yes"" if the results are accompanied by error bars, confi-
dence intervals, or statistical significance tests, at least for the experiments that support
the main claims of the paper.
• The factors of variability that the error bars are capturing should be clearly stated (for
example, train/test split, initialization, random drawing of some parameter, or overall
run with given experimental conditions).
• The method for calculating the error bars should be explained (closed form formula,
call to a library function, bootstrap, etc.)
• The assumptions made should be given (e.g., Normally distributed errors).
• It should be clear whether the error bar is the standard deviation or the standard error
of the mean."
CLAIMS,0.8137254901960784,"• It is OK to report 1-sigma error bars, but one should state it. The authors should
preferably report a 2-sigma error bar than state that they have a 96% CI, if the hypothesis
of Normality of errors is not verified.
• For asymmetric distributions, the authors should be careful not to show in tables or
figures symmetric error bars that would yield results that are out of range (e.g. negative
error rates).
• If error bars are reported in tables or plots, The authors should explain in the text how
they were calculated and reference the corresponding figures or tables in the text."
EXPERIMENTS COMPUTE RESOURCES,0.8186274509803921,8. Experiments Compute Resources
EXPERIMENTS COMPUTE RESOURCES,0.8235294117647058,"Question: For each experiment, does the paper provide sufficient information on the com-
puter resources (type of compute workers, memory, time of execution) needed to reproduce
the experiments?"
EXPERIMENTS COMPUTE RESOURCES,0.8284313725490197,Answer: [No]
EXPERIMENTS COMPUTE RESOURCES,0.8333333333333334,"Justification: Although we did not provide explicitly information about required computa-
tional resources, this is not a computational heavy project."
EXPERIMENTS COMPUTE RESOURCES,0.8382352941176471,Guidelines:
EXPERIMENTS COMPUTE RESOURCES,0.8431372549019608,"• The answer NA means that the paper does not include experiments.
• The paper should indicate the type of compute workers CPU or GPU, internal cluster,
or cloud provider, including relevant memory and storage.
• The paper should provide the amount of compute required for each of the individual
experimental runs as well as estimate the total compute.
• The paper should disclose whether the full research project required more compute
than the experiments reported in the paper (e.g., preliminary or failed experiments that
didn’t make it into the paper)."
CODE OF ETHICS,0.8480392156862745,9. Code Of Ethics
CODE OF ETHICS,0.8529411764705882,"Question: Does the research conducted in the paper conform, in every respect, with the
NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines?"
CODE OF ETHICS,0.8578431372549019,Answer: [Yes]
CODE OF ETHICS,0.8627450980392157,Justification: We comply with NeurIPS Code of Ethics.
CODE OF ETHICS,0.8676470588235294,Guidelines:
CODE OF ETHICS,0.8725490196078431,"• The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.
• If the authors answer No, they should explain the special circumstances that require a
deviation from the Code of Ethics.
• The authors should make sure to preserve anonymity (e.g., if there is a special consid-
eration due to laws or regulations in their jurisdiction)."
BROADER IMPACTS,0.8774509803921569,10. Broader Impacts
BROADER IMPACTS,0.8823529411764706,"Question: Does the paper discuss both potential positive societal impacts and negative
societal impacts of the work performed?"
BROADER IMPACTS,0.8872549019607843,Answer: [NA]
BROADER IMPACTS,0.8921568627450981,Justification: This question is not applicable to our work.
BROADER IMPACTS,0.8970588235294118,Guidelines:
BROADER IMPACTS,0.9019607843137255,"• The answer NA means that there is no societal impact of the work performed.
• If the authors answer NA or No, they should explain why their work has no societal
impact or why the paper does not address societal impact.
• Examples of negative societal impacts include potential malicious or unintended uses
(e.g., disinformation, generating fake profiles, surveillance), fairness considerations
(e.g., deployment of technologies that could make decisions that unfairly impact specific
groups), privacy considerations, and security considerations."
BROADER IMPACTS,0.9068627450980392,"• The conference expects that many papers will be foundational research and not tied
to particular applications, let alone deployments. However, if there is a direct path to
any negative applications, the authors should point it out. For example, it is legitimate
to point out that an improvement in the quality of generative models could be used to
generate deepfakes for disinformation. On the other hand, it is not needed to point out
that a generic algorithm for optimizing neural networks could enable people to train
models that generate Deepfakes faster.
• The authors should consider possible harms that could arise when the technology is
being used as intended and functioning correctly, harms that could arise when the
technology is being used as intended but gives incorrect results, and harms following
from (intentional or unintentional) misuse of the technology.
• If there are negative societal impacts, the authors could also discuss possible mitigation
strategies (e.g., gated release of models, providing defenses in addition to attacks,
mechanisms for monitoring misuse, mechanisms to monitor how a system learns from
feedback over time, improving the efficiency and accessibility of ML)."
SAFEGUARDS,0.9117647058823529,11. Safeguards
SAFEGUARDS,0.9166666666666666,"Question: Does the paper describe safeguards that have been put in place for responsible
release of data or models that have a high risk for misuse (e.g., pretrained language models,
image generators, or scraped datasets)?"
SAFEGUARDS,0.9215686274509803,Answer: [NA]
SAFEGUARDS,0.9264705882352942,Justification: This questions is not applicable to our work.
SAFEGUARDS,0.9313725490196079,Guidelines:
SAFEGUARDS,0.9362745098039216,"• The answer NA means that the paper poses no such risks.
• Released models that have a high risk for misuse or dual-use should be released with
necessary safeguards to allow for controlled use of the model, for example by requiring
that users adhere to usage guidelines or restrictions to access the model or implementing
safety filters.
• Datasets that have been scraped from the Internet could pose safety risks. The authors
should describe how they avoided releasing unsafe images.
• We recognize that providing effective safeguards is challenging, and many papers do
not require this, but we encourage authors to take this into account and make a best
faith effort."
LICENSES FOR EXISTING ASSETS,0.9411764705882353,12. Licenses for existing assets
LICENSES FOR EXISTING ASSETS,0.946078431372549,"Question: Are the creators or original owners of assets (e.g., code, data, models), used in
the paper, properly credited and are the license and terms of use explicitly mentioned and
properly respected?"
LICENSES FOR EXISTING ASSETS,0.9509803921568627,Answer: [NA]
LICENSES FOR EXISTING ASSETS,0.9558823529411765,Justification: This question is not applicable to our work.
LICENSES FOR EXISTING ASSETS,0.9607843137254902,Guidelines:
LICENSES FOR EXISTING ASSETS,0.9656862745098039,"• The answer NA means that the paper does not use existing assets.
• The authors should cite the original paper that produced the code package or dataset.
• The authors should state which version of the asset is used and, if possible, include a
URL.
• The name of the license (e.g., CC-BY 4.0) should be included for each asset.
• For scraped data from a particular source (e.g., website), the copyright and terms of
service of that source should be provided.
• If assets are released, the license, copyright information, and terms of use in the
package should be provided. For popular datasets, paperswithcode.com/datasets
has curated licenses for some datasets. Their licensing guide can help determine the
license of a dataset.
• For existing datasets that are re-packaged, both the original license and the license of
the derived asset (if it has changed) should be provided."
LICENSES FOR EXISTING ASSETS,0.9705882352941176,"• If this information is not available online, the authors are encouraged to reach out to
the asset’s creators.
13. New Assets"
LICENSES FOR EXISTING ASSETS,0.9754901960784313,"Question: Are new assets introduced in the paper well documented and is the documentation
provided alongside the assets?
Answer: [NA]
Justification: This question is not applicable to our work
Guidelines:"
LICENSES FOR EXISTING ASSETS,0.9803921568627451,"• The answer NA means that the paper does not release new assets.
• Researchers should communicate the details of the dataset/code/model as part of their
submissions via structured templates. This includes details about training, license,
limitations, etc.
• The paper should discuss whether and how consent was obtained from people whose
asset is used.
• At submission time, remember to anonymize your assets (if applicable). You can either
create an anonymized URL or include an anonymized zip file.
14. Crowdsourcing and Research with Human Subjects"
LICENSES FOR EXISTING ASSETS,0.9852941176470589,"Question: For crowdsourcing experiments and research with human subjects, does the paper
include the full text of instructions given to participants and screenshots, if applicable, as
well as details about compensation (if any)?
Answer: [NA]
Justification: This paper does not involve crowdsourcing nor research with human subjects.
Guidelines:"
LICENSES FOR EXISTING ASSETS,0.9901960784313726,"• The answer NA means that the paper does not involve crowdsourcing nor research with
human subjects.
• Including this information in the supplemental material is fine, but if the main contribu-
tion of the paper involves human subjects, then as much detail as possible should be
included in the main paper.
• According to the NeurIPS Code of Ethics, workers involved in data collection, curation,
or other labor should be paid at least the minimum wage in the country of the data
collector.
15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human
Subjects
Question: Does the paper describe potential risks incurred by study participants, whether
such risks were disclosed to the subjects, and whether Institutional Review Board (IRB)
approvals (or an equivalent approval/review based on the requirements of your country or
institution) were obtained?
Answer: [NA]
Justification: This paper does not involve crowdsourcing nor research with human subjects.
Guidelines:"
LICENSES FOR EXISTING ASSETS,0.9950980392156863,"• The answer NA means that the paper does not involve crowdsourcing nor research with
human subjects.
• Depending on the country in which research is conducted, IRB approval (or equivalent)
may be required for any human subjects research. If you obtained IRB approval, you
should clearly state this in the paper.
• We recognize that the procedures for this may vary significantly between institutions
and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the
guidelines for their institution.
• For initial submissions, do not include any information that would break anonymity (if
applicable), such as the institution conducting the review."
