Section,Section Appearance Order,Paragraph
NATIONAL TAIWAN UNIVERSITY,0.0,"1National Taiwan University
2National Yang Ming Chiao Tung University
3NVIDIA"
ABSTRACT,0.002347417840375587,Abstract
ABSTRACT,0.004694835680751174,"Imitation learning aims to learn a policy from observing expert demonstrations
without access to reward signals from environments. Generative adversarial imi-
tation learning (GAIL) formulates imitation learning as adversarial learning, em-
ploying a generator policy learning to imitate expert behaviors and discriminator
learning to distinguish the expert demonstrations from agent trajectories. De-
spite its encouraging results, GAIL training is often brittle and unstable. In-
spired by the recent dominance of diffusion models in generative modeling, we
propose Diffusion-Reward Adversarial Imitation Learning (DRAIL), which inte-
grates a diffusion model into GAIL, aiming to yield more robust and smoother
rewards for policy learning. Specifically, we propose a diffusion discrimina-
tive classifier to construct an enhanced discriminator, and design diffusion re-
wards based on the classifier’s output for policy learning.
Extensive experi-
ments are conducted in navigation, manipulation, and locomotion, verifying
DRAIL’s effectiveness compared to prior imitation learning methods. More-
over, additional experimental results demonstrate the generalizability and data
efficiency of DRAIL. Visualized learned reward functions of GAIL and DRAIL
suggest that DRAIL can produce more robust and smoother rewards. Project page:
https://nturobotlearninglab.github.io/DRAIL/"
INTRODUCTION,0.007042253521126761,"1
Introduction"
INTRODUCTION,0.009389671361502348,"Imitation learning, i.e., learning from demonstration [24, 41, 49], aims to acquire an agent policy by
observing and mimicking the behavior demonstrated in expert demonstrations. Various imitation
learning methods [53, 60] have enabled deploying reliable and robust learned policies in a variety
of tasks involving sequential decision-making, especially in the scenarios where devising a reward
function is intricate or uncertain [7, 32, 34], or when learning in a trial-and-error manner is expensive
or unsafe [14, 17]."
INTRODUCTION,0.011737089201877934,"Among various methods in imitation learning, generative adversarial imitation learning (GAIL) [21]
has been widely adopted due to its effectiveness and data efficiency. GAIL learns a generator policy to
imitate expert behaviors through reinforcement learning and a discriminator to differentiate between
the expert and the generator’s state-action pair distributions, resembling the idea of generative
adversarial networks (GANs) [16]. Despite its established theoretical guarantee, GAIL training
is notoriously brittle and unstable. To alleviate this issue, significant efforts have been put into
improving GAIL’s sample efficiency, scalability, robustness, and generalizability by modifying loss
functions [12], developing improved policy learning algorithms [30], and exploring various similarity
measures of distributions [2, 8, 12]."
INTRODUCTION,0.014084507042253521,"Inspired by the recent dominance of diffusion models in generative modeling [22], this work explores
incorporating diffusion models into GAIL to provide more robust and smoother reward functions"
INTRODUCTION,0.01643192488262911,"∗Equal contribution.
Correspondence to: Shao-Hua Sun <shaohuas@ntu.edu.tw>"
INTRODUCTION,0.018779342723004695,"for policy learning as well as stabilize adversarial training. Specifically, we propose a diffusion
discriminative classifier, which learns to classify a state-action pair into expert demonstrations or
agent trajectories with merely two reverse diffusion steps. Then, we leverage the proposed diffusion
discriminative classifier to devise diffusion rewards, which reward agent behaviors that closely
align with expert demonstrations. Putting them together, we present Diffusion-Reward Adversarial
Imitation Learning (DRAIL), a novel adversarial imitation learning framework that can efficiently
and effectively produce reliable policies replicating the behaviors of experts."
INTRODUCTION,0.02112676056338028,"We extensively compare our proposed framework DRAIL with behavioral cloning [44], Diffusion
Policy [6, 42], and AIL methods, e.g., GAIL [21], WAIL [2], and DiffAIL[59], in diverse continuous
control domains, including navigation, robot arm manipulation, locomotion, and games. This
collection of tasks includes environments with high-dimensional continuous state and action spaces,
as well as covers both vectorized and image-based states. The experimental results show that our
proposed framework consistently outperforms the prior methods or achieves competitive performance.
Moreover, DRAIL exhibits superior performance in generalizing to states or goals unseen from the
expert’s demonstrations. When varying the amounts of available expert data, DRAIL demonstrates
the best data efficiency. At last, the visualized learned reward functions show that DRAIL captures
more robust and smoother rewards compared to GAIL."
RELATED WORK,0.023474178403755867,"2
Related work"
RELATED WORK,0.025821596244131457,"Imitation learning enables agents to learn from expert demonstrations to acquire complex behaviors
without explicit reward functions. Its application spans various domains, including robotics [49, 60],
autonomous driving [36], and game AI [18]."
RELATED WORK,0.028169014084507043,"Behavioral Cloning (BC). BC [44, 55] imitates an expert policy through supervised learning without
interaction with environments and is widely used for its simplicity and effectiveness across various
domains. Despite its benefits, BC struggles to generalize to states not covered in expert demonstrations
because of compounding error [10, 48]. Recent methods have explored learning diffusion models
as policies [6, 42], allowing for modeling multimodal expert behaviors, or using diffusion models
to provide learning signals to enhance the generalizability of BC [5]. In contrast, this work aims to
leverage a diffusion model to provide learning signals for policy learning in online imitation learning."
RELATED WORK,0.03051643192488263,"Inverse Reinforcement Learning (IRL). IRL methods [37] aim at inferring a reward function that
could best explain the demonstrated behavior and subsequently learn a policy using the inferred
reward function. Nevertheless, inferring reward functions is an ill-posed problem since different
reward functions could induce the same demonstrated behavior. Hence, IRL methods often impose
constraints on reward functions or policies to ensure optimality and uniqueness [1, 37, 54, 61]. Yet,
these constraints could potentially restrict the generalizability of learned policies."
RELATED WORK,0.03286384976525822,"Adversarial Imitation Learning (AIL). AIL methods aim to directly match the state-action distribu-
tions of an agent and an expert through adversarial training. Generative adversarial imitation learning
(GAIL) [21] and its extensions [23, 25, 31, 56, 59, 62] train a generator policy to imitate expert
behaviors and a discriminator to differentiate between the expert and the generator’s state-action pair
distributions, which resembles the idea of generative adversarial networks (GANs) [16]. Thanks
to its simplicity and effectiveness, GAIL has been widely applied to various domains [3, 28, 45].
Over the past years, researchers have proposed numerous improvements to enhance GAIL’s sample
efficiency, scalability, and robustness [40], including modifications to discriminator’s loss func-
tion [12], extensions to off-policy RL algorithms [30], addressing reward bias [31], and exploration
of various similarity measures [2, 8, 11, 12]. Another line of work avoids adversarial training, such
as IQ-Learn [15], which learns a Q-function that implicitly represents the reward function and policy.
In this work, we propose to use the diffusion model as a discriminator in GAIL."
RELATED WORK,0.035211267605633804,"Diffusion Model-Based Approaches in Reinforcement Learning. Diffuser [57] and Nuti et al.
[39] apply diffusion models to reinforcement learning (RL) and reward learning, their settings differ
significantly from ours. Diffuser [57] is a model-based RL method that requires trajectory-level
reward information, which differs from our setting, i.e., imitation learning, where obtaining rewards
is not possible. Nuti et al. [39] focus on learning a reward function, unlike imitation learning, whose
goal is to obtain a policy. Hence, Nuti et al. [39] neither present policy learning results in the main
paper nor compare their method to imitation learning methods. Moreover, they focus on learning"
RELATED WORK,0.03755868544600939,"from a fixed suboptimal dataset, AIL approaches and our method are designed to learn from agent
data that continually change as the agents learn."
PRELIMINARIES,0.03990610328638498,"3
Preliminaries"
PRELIMINARIES,0.04225352112676056,"We propose a novel adversarial imitation learning framework that integrates a diffusion model into
generative adversarial imitation learning. Hence, this section presents background on the two topics."
PRELIMINARIES,0.04460093896713615,"3.1
Generative Adversarial Imitation Learning (GAIL)"
PRELIMINARIES,0.046948356807511735,"GAIL [21] establishes a connection between generative adversarial networks (GANs) [16] and
imitation learning. GAIL employs a generator, Gθ, that acts as a policy πθ, mapping a state to an
action. The generator aims to produce a state-action distribution (ρπθ) which closely resembles the
expert state-action distribution ρπE; discriminator Dω functions as a binary classifier, attempting
to differentiate the state-action distribution of the generator (ρπθ) from the expert’s (ρπE). The
optimization equation of GAIL can be formulated using the Jensen-Shannon divergence, which is
equivalent to the minimax equation of GAN. The optimization of GAIL can be derived as follows:"
PRELIMINARIES,0.04929577464788732,"min
θ
max
ω
Ex∼ρπθ [log Dω(x)] + Ex∼ρπE [log(1 −Dω(x))],
(1)"
PRELIMINARIES,0.051643192488262914,"where ρπθ and ρπE are the state-action distribution from an agent πθ and expert policy πE respectively.
The loss function for the discriminator is stated as −(Ex∼ρπθ [log Dω(x)]+Ex∼ρπE [log(1−Dω(x))]).
For a given state, the generator tries to take expert-like action; the discriminator takes state-action
pairs as input and computes the probability of the input originating from an expert. Then the generator
uses a reward function −Ex∼ρπθ [log Dω(x)] or −Ex∼ρπθ [log Dω(x)] + λH(πθ) to optimize its
network parameters, where the entropy term H is a policy regularizer controlled by λ ≥0."
DIFFUSION MODELS,0.0539906103286385,"3.2
Diffusion models xT"
DIFFUSION MODELS,0.056338028169014086,Reverse diffusion process
DIFFUSION MODELS,0.05868544600938967,q(xt|xt−1)
DIFFUSION MODELS,0.06103286384976526,pϕ(xt−1|xt)
DIFFUSION MODELS,0.06338028169014084,Forward diffusion process
DIFFUSION MODELS,0.06572769953051644,"x0
xt
xt−1"
DIFFUSION MODELS,0.06807511737089202,Learn to denoise
DIFFUSION MODELS,0.07042253521126761,Adding Gaussian noise
DIFFUSION MODELS,0.07276995305164319,"Figure 1: Denoising diffusion probabilistic model. Latent
variables x1, ..., xN are produced from the data point x0 via
a forward diffusion process, i.e., gradually adding noises to
the latent variables. A diffusion model ϕ learns to reverse the
diffusion process by denoising the noisy data to reconstruct the
original data point x0."
DIFFUSION MODELS,0.07511737089201878,"Diffusion models have demonstrated state-
of-the-art performance on various tasks [9,
29, 38, 51].
This work builds upon
denoising diffusion probabilistic models
(DDPMs) [22] that employ forward and
reverse diffusion processes, as illustrated
in Figure 1. The forward diffusion pro-
cess injects noise into data points follow-
ing a variance schedule until achieving an
isotropic Gaussian distribution. The re-
verse diffusion process trains a diffusion
model ϕ to predict the injected noise by
optimizing the objective:"
DIFFUSION MODELS,0.07746478873239436,"LDM = Et∼T,ϵ∼N
h
∥ϵϕ(√¯αtx0 +
√"
DIFFUSION MODELS,0.07981220657276995,"1 −¯αtϵ, t) −ϵ∥
2i
,
(2)"
DIFFUSION MODELS,0.08215962441314555,"where T represents the set of discrete time steps in the diffusion process, ϵ is the noise applied by the
forward process, ϵϕ is the noise predicted by the diffusion model, and ¯αt is the scheduled noise level
applied on the data samples."
DIFFUSION MODELS,0.08450704225352113,"Beyond generative tasks, diffusion models have also been successfully applied in other areas, in-
cluding image classification and imitation learning. Diffusion Classifier [35] demonstrates that
conditional diffusion models can estimate class-conditional densities for zero-shot classification. In
imitation learning, diffusion models have been used to improve Behavioral Cloning (DBC) [5] by
using diffusion model to model expert state-action pairs. Similarly, DiffAIL [58] extends GAIL [21]
by employing diffusion models to represent the expert’s behavior and incorporating the diffusion loss
into the discriminator’s learning process. However, DiffAIL’s use of an unconditional diffusion model
limits its ability to distinguish between expert and agent state-action pairs. We provide a detailed
explanation of its limitation in Section 4.3 and Section A."
DIFFUSION MODELS,0.08685446009389672,"Dϕ(sE, aE)"
DIFFUSION MODELS,0.0892018779342723,(a) Learning Diffusion Discriminative Classifier 0
DIFFUSION MODELS,0.09154929577464789,"1
ϵ
aE sE + + ϵ
aπ sπ + +"
DIFFUSION MODELS,0.09389671361502347,"Diffusion 
Model ϕ"
DIFFUSION MODELS,0.09624413145539906,Diffusion Discriminative Classifier Dϕ c+ c− c+ c−
DIFFUSION MODELS,0.09859154929577464,Expert Data τE Agent Data τi
DIFFUSION MODELS,0.10093896713615023,“Real”
DIFFUSION MODELS,0.10328638497652583,“Fake”
DIFFUSION MODELS,0.1056338028169014,"Dϕ(sπ, aπ)"
DIFFUSION MODELS,0.107981220657277,"Learning objective
Learnable mapping
Frozen mapping"
DIFFUSION MODELS,0.11032863849765258,"(b) Learning Policy with Diffusion Rewards ϵ
a s + +"
DIFFUSION MODELS,0.11267605633802817,"Diffusion 
Model ϕ c+"
DIFFUSION MODELS,0.11502347417840375,"c−
Policy πθ s"
DIFFUSION MODELS,0.11737089201877934,"Diffusion Reward rϕ(s, a)"
DIFFUSION MODELS,0.11971830985915492,"log(Dϕ(s, a)) −log(1 −Dϕ(s, a))"
DIFFUSION MODELS,0.12206572769953052,Diffusion Discriminative Classifier Dϕ
DIFFUSION MODELS,0.12441314553990611,"Dϕ(s, a)"
DIFFUSION MODELS,0.1267605633802817,"Figure 2: Diffusion-Reward Adversarial Imitation Learning. Our proposed framework DRAIL incorporates
a diffusion model into GAIL. (a) Our proposed diffusion discriminative classifier Dϕ learns to distinguish expert
data (sE, aE) ∼τE from agent data (sπ, aπ) ∼τi using a diffusion model. Dϕ is trained to predict a value
closer to 1 when the input state-action pairs are sampled from expert demonstration and predict a value closer to
0 otherwise. (b) The policy πθ learns to maximize the diffusion reward rϕ computed based on the output of Dϕ
that takes the state-action pairs from the policy as input. The closer the policy resembles expert behaviors, the
higher the rewards it can obtain."
APPROACH,0.12910798122065728,"4
Approach"
APPROACH,0.13145539906103287,"We propose a novel adversarial imitation learning framework incorporating diffusion models into
the generative adversarial imitation learning (GAIL) framework, illustrated in Figure 2. Specifically,
we employ a diffusion model to construct an enhanced discriminator to provide more robust and
smoother rewards for policy learning. We initiate our discussion by describing a naive integration
of the diffusion model, which directly predicts rewards from Gaussian noises conditioned on state-
action pairs, and the inherent issues of this method in Section 4.1. Subsequently, in Section 4.2, we
introduce our proposed method that employs a conditional diffusion model to construct a diffusion
discriminative classifier, which can provide diffusion rewards for policy learning. Finally, the overall
algorithm of our method is outlined in Section 4.3."
REWARD PREDICTION WITH A CONDITIONAL DIFFUSION MODEL,0.13380281690140844,"4.1
Reward prediction with a conditional diffusion model"
REWARD PREDICTION WITH A CONDITIONAL DIFFUSION MODEL,0.13615023474178403,"Conditional diffusion models are widely adopted in various domains, e.g., generating an image x from
a label y. Intuitively, one can incorporate a conditional diffusion model as a GAIL discriminator by
training it to produce a real or fake label conditioned on expert or agent state-action pairs. Specifically,
given a denoising time step t and a state-action pair (s, a) ∈(S × A), where S, A stand for state and
action spaces, respectively, as a condition, the diffusion model pϕ(rt−1|rt, s, a) learns to denoise a
reward label r0 ∈{0, 1}, i.e., 1 for expert (real) state-action pairs and 0 for agent (fake) state-action
pairs through a reverse diffusion process."
REWARD PREDICTION WITH A CONDITIONAL DIFFUSION MODEL,0.13849765258215962,"To train a policy, we can use the diffusion model to produce a reward r given a state-action pair
(s, a) from the policy through a generation process by iteratively denoising a sampled Gaussian
noise, i.e., noisy reward, conditioned on the state-action pair. Then, the policy learns to optimize the
rewards predicted by the diffusion model. Nevertheless, the reward generation process is extremely
time-consuming since predicting a reward for each state-action pair from the policy requires running
T (often a large number) denoising steps, and policy learning often takes tens of millions of samples,
resulting in a billion-level overall training scale. Consequently, it is impractical to integrate a diffusion
model into the GAIL framework by using it to predict “realness” rewards for policy learning from
state-action pairs."
DIFFUSION DISCRIMINATIVE CLASSIFIER,0.14084507042253522,"4.2
Diffusion discriminative classifier"
DIFFUSION DISCRIMINATIVE CLASSIFIER,0.1431924882629108,"Our goal is to yield a diffusion model reward given an agent state-action pair without going through
the entire diffusion generation process. Inspired by previous work [5, 59], we extract the learning
signal from a portion of the diffusion denoising steps, rather than using the entire process. Building"
DIFFUSION DISCRIMINATIVE CLASSIFIER,0.14553990610328638,"on these insights, we adapt the training procedure of DDPM to develop a mechanism that provides a
binary classification signal using just one denoising step."
DIFFUSION DISCRIMINATIVE CLASSIFIER,0.14788732394366197,"Our key insight is to leverage the derivations developed by Kingma et al. [26], Song et al. [52], which
suggest that the diffusion loss, i.e., the difference between the predicted noise and the injected noise,
indicates how well the data fits the target distribution since the diffusion loss is the upper bound of
the negative log-likelihood of data in the target distribution. In this work, we propose calculating
“realness” rewards based on the diffusion loss computed by denoising the state-action pairs from
the policy, which indicates how well the state-action pairs fit the expert behavior distributions. We
formulate the diffusion loss Ldiff as follows:"
DIFFUSION DISCRIMINATIVE CLASSIFIER,0.15023474178403756,"Ldiff(s, a, c) = Et∼T
h
∥ϵϕ(s, a, ϵ, t|c) −ϵ∥2i
,
(3)"
DIFFUSION DISCRIMINATIVE CLASSIFIER,0.15258215962441316,"where c ∈{c+, c−}, and the real label c+ corresponds to the condition for fitting expert data while
the fake label c−corresponds to agent data. We implement c+ as 1 and c−as 0."
DIFFUSION DISCRIMINATIVE CLASSIFIER,0.15492957746478872,"To approximate the expectation in Eq. 3, we use random sampling, allowing us to achieve the
result with just a single denoising step. Subsequently, given a state-action pair (s, a), Ldiff(s, a, c+)
measures how well (s, a) fits the expert distribution and Ldiff(s, a, c−) measures how well (s, a) fits
the agent distribution1. That said, given state-action pairs sampled from expert demonstration, L+
diff
should be close to 0, and L−
diff should be a large value; on the contrary, given agent state-action pairs,
L+
diff should be a large value and L−
diff should close to 0."
DIFFUSION DISCRIMINATIVE CLASSIFIER,0.1572769953051643,"While L+
diff and L−
diff can indicate the “realness” or the “fakeness” of a state-action pair to some
extent, optimizing a policy using rewards with this wide value range [0, ∞) can be difficult [20]. To
address this issue, we propose transforming this diffusion model into a binary classifier that provides
“realness“ in a bounded range of [0, 1]. Specifically, given the diffusion model’s output L+,−
diff , we
construct a diffusion discriminative classifier Dϕ : S × A →R:"
DIFFUSION DISCRIMINATIVE CLASSIFIER,0.1596244131455399,"Dϕ(s, a) =
e−Ldiff(s,a,c+)"
DIFFUSION DISCRIMINATIVE CLASSIFIER,0.1619718309859155,"e−Ldiff(s,a,c+) + e−Ldiff(s,a,c−) = σ(Ldiff(s, a, c−) −Ldiff(s, a, c+)),
(4)"
DIFFUSION DISCRIMINATIVE CLASSIFIER,0.1643192488262911,"where σ(x) = 1/(1 + e−x) denotes the sigmoid function. The classifier integrates L+
diff and L−
diff to
compute the “realness” of a state-action pair within a bounded range of [0, 1], as illustrated in Figure
2. Since the design of our diffusion discriminative classifier aligns with the GAIL discriminator [21],
learning a policy with the classifier enjoys the same theoretical guarantee, i.e., optimizing this
objective can bring a policy’s occupancy measure closer to the expert’s. Consequently, we can
optimize our proposed diffusion discriminative classifier Dϕ with the loss function:"
DIFFUSION DISCRIMINATIVE CLASSIFIER,0.16666666666666666,"LD = E(s,a)∈τE [−log(Dϕ(s, a))]
|
{z
}
Lexpert
BCE"
DIFFUSION DISCRIMINATIVE CLASSIFIER,0.16901408450704225,"+E(s,a)∈τi [−log(1 −Dϕ(s, a))]
|
{z
}
Lagent
BCE
(5)"
DIFFUSION DISCRIMINATIVE CLASSIFIER,0.17136150234741784,"where LD sums the expert binary cross-entropy loss Lexpert
BCE and the agent binary cross-entropy loss
Lagent
BCE, and τE and τi represent a sampled expert trajectory and a collected agent trajectory by the
policy π at training step i. We then update the diffusion discriminative classifier parameters ϕ based
on the gradient of LD to improve its ability to distinguish expert data from agent data."
DIFFUSION DISCRIMINATIVE CLASSIFIER,0.17370892018779344,"Intuitively, the discriminator Dϕ is trained to predict a value closer to 1 when the input state-action
pairs are sampled from expert demonstration (i.e., trained to minimize L+
diff and maximize L−
diff), and
0 if the input state-action pairs are obtained from the agent online interaction (i.e., trained to minimize
L−
diff and maximize L+
diff)."
DIFFUSION DISCRIMINATIVE CLASSIFIER,0.176056338028169,"Note that our idea of transforming the diffusion model into a classifier is closely related to Li et al.
[35], which shows that minimizing the diffusion loss is equivalent to maximizing the evidence lower
bound (ELBO) of the log-likelihood [4], allowing for turning a conditional text-to-image diffusion
model into an image classifier by using the ELBO as an approximate class-conditional log-likelihood
log p(x|c). By contrast, we employ a diffusion model for imitation learning. Moreover, we take a step
further – instead of optimizing the diffusion loss Ldiff, we directly optimize the binary cross entropy
losses calculated based on the denoising results to train the diffusion model as a binary classifier."
DIFFUSION DISCRIMINATIVE CLASSIFIER,0.1784037558685446,"1For simplicity, we will use the notations L+
diff and L−
diff to represent Ldiff(s, a, c+) and Ldiff(s, a, c−),
respectively, in the rest of the paper. Additionally, L+,−
diff
denotes L+
diff and L−
diff given a state-action pair."
DIFFUSION-REWARD ADVERSARIAL IMITATION LEARNING,0.1807511737089202,"4.3
Diffusion-Reward Adversarial Imitation Learning"
DIFFUSION-REWARD ADVERSARIAL IMITATION LEARNING,0.18309859154929578,"Algorithm 1 Diffusion-Reward Adversarial
Imitation Learning (DRAIL)"
DIFFUSION-REWARD ADVERSARIAL IMITATION LEARNING,0.18544600938967137,"1: Input: Expert trajectories τE, initial
policy parameters θ0, initial diffusion
discriminator parameters ϕ0, and dis-
criminator learning rate ηϕ
2: for i = 0, 1, 2, . . . do
3:
Sample agent transitions τi ∼πθi
4:
Compute the output of diffusion dis-
criminative classifier Dϕ (Eq. 4) and
the loss function LD (Eq. 5)
5:
Update the diffusion model ϕi+1 ←
ϕi −ηϕ∇LD
6:
Compute
the
diffusion
reward
rϕ(s, a) with Eq. 6
7:
Update the policy θi+1 ←θi with
any RL algorithm w.r.t. reward rϕ
8: end for"
DIFFUSION-REWARD ADVERSARIAL IMITATION LEARNING,0.18779342723004694,"Our proposed method adheres to the fundamental AIL
framework, where a discriminator and a policy are up-
dated alternately. In the discriminator step, we update
the diffusion discriminative classifier with the gradient
of LD following Eq. 5. In the policy step, we adopt
the adversarial inverse reinforcement learning objective
proposed by Fu et al. [12] as our diffusion reward signal
to train the policy:"
DIFFUSION-REWARD ADVERSARIAL IMITATION LEARNING,0.19014084507042253,"rϕ(s, a) = log(Dϕ(s, a)) −log(1 −Dϕ(s, a)). (6)"
DIFFUSION-REWARD ADVERSARIAL IMITATION LEARNING,0.19248826291079812,"The policy parameters θ can be updated using any RL
algorithm to maximize the diffusion rewards provided
by the diffusion discriminative classifier, bringing the
policy closer to the expert policy. In our implementa-
tion, we utilize PPO as our policy update algorithm.
The algorithm is presented in Algorithm 1, and the
overall framework is illustrated in Figure 2."
DIFFUSION-REWARD ADVERSARIAL IMITATION LEARNING,0.19483568075117372,"Among the related works, DiffAIL [59] is the closest
to ours, as it also uses a diffusion model for adversarial
imitation learning. DiffAIL employs an unconditional diffusion model to denoise state-action pairs
from both experts and agents. However, this approach only implicitly reflects the likelihood of
state-action pairs belonging to the expert class through diffusion loss, making it challenging to
explicitly distinguish between expert and agent behaviors."
DIFFUSION-REWARD ADVERSARIAL IMITATION LEARNING,0.19718309859154928,"In contrast, our method, DRAIL, uses a conditional diffusion model that directly conditions real (c+)
and fake (c−) labels. This allows our model to explicitly calculate and compare the probabilities of
state-action pairs belonging to either the expert or agent class. This clearer and more robust signal for
binary classification aligns more closely with the objectives of the GAIL framework, leading to more
stable and effective learning. For further details and the mathematical formulation, please refer to
Section A."
EXPERIMENTS,0.19953051643192488,"5
Experiments"
EXPERIMENTS,0.20187793427230047,"We extensively evaluate our proposed framework DRAIL in diverse continuous control domains,
including navigation, robot arm manipulation, and locomotion. We also examine the generalizability
and data efficiency of DRAIL in Section 5.4 and Section 5.5. The reward function learned by DRAIL
is presented in Section 5.6."
EXPERIMENTAL SETUP,0.20422535211267606,"5.1
Experimental setup"
EXPERIMENTAL SETUP,0.20657276995305165,"This section describes the environments, tasks, and expert demonstrations used for evaluation."
EXPERIMENTAL SETUP,0.20892018779342722,"MAZE. We evaluate our approach in the point mass MAZE navigation environment, introduced
in Fu et al. [13] (maze2d-medium-v2), as depicted in Figure 3a. In this task, a point-mass agent is
trained to navigate from a randomly determined start location to the goal. The agent accomplishes
the task by iteratively predicting its acceleration in the vertical and horizontal directions. We use the
expert dataset provided by Lee et al. [33], which includes 100 demonstrations, comprising 18,525
transitions."
EXPERIMENTAL SETUP,0.2112676056338028,"FETCHPUSH. We evaluate our approach in a 7-DoF Fetch task, FETCHPUSH, depicted in Figure 3b,
where the Fetch is required to push a black block to a designated location marked by a red sphere.
We use the demonstrations from Lee et al. [33], consisting of 20,311 transitions (664 trajectories)."
EXPERIMENTAL SETUP,0.2136150234741784,"HANDROTATE. We further evaluate our approach in a challenging environment HANDROTATE
with a high-dimensional continuous action space introduced by Plappert et al. [43]. Here, a 24-DoF
Shadow Dexterous Hand is tasked with learning to in-hand rotate a block to a target orientation, as
depicted in Figure 3c. This environment features a high-dimensional state space (68D) and action
space (20D). We use the demonstrations collected by Lee et al. [33], which contain 515 trajectories
(10k transitions)."
EXPERIMENTAL SETUP,0.215962441314554,"(a) MAZE
(b) FETCHPUSH
(c) HANDROTATE
(d) ANTREACH
(e) WALKER
(f) CARRACING"
EXPERIMENTAL SETUP,0.21830985915492956,"Figure 3: Environments & tasks. (a) MAZE: A point-mass agent (green) within a 2D maze is trained to move
from its initial position to reach the goal (red). (b) FETCHPUSH: The manipulation task is implemented with
a 7-DoF Fetch robotics arm. FETCHPUSH requires picking up or pushing an object to a target location (red).
(c) HANDROTATE: For this dexterous manipulation task, a Shadow Dexterous Hand is employed to in-hand
rotate a block to achieve a target orientation. (d) ANTREACH: This task trains a quadruped ant to reach a goal
randomly positioned along the perimeter of a half-circle with a radius of 5 m. (e) WALKER: This locomotion
task requires training a bipedal walker policy to achieve the highest possible walking speed while maintaining
balance. (f) CARRACING This image-based racing game task requires driving a car to navigate a track as
quickly as possible."
EXPERIMENTAL SETUP,0.22065727699530516,"ANTREACH. The goal of ANTREACH, a location and navigation task, is for a quadruped ant to reach
a goal randomly positioned along the perimeter of a half-circle with a radius of 5 meters, as depicted
in Figure 3d. The 132D high-dimensional continuous state space encodes joint angles, velocities,
contact forces, and the goal position relative to the agent. We use the demonstrations provided by
Lee et al. [33], which contain 1,000 demonstrations (25k transitions)."
EXPERIMENTAL SETUP,0.22300469483568075,"WALKER. The objective of WALKER is to let a bipedal agent move at the highest speed possible while
preserving its balance, as illustrated in Figure 3e. We trained a PPO expert policy with environment
rewards and collected 5 successful trajectories, each containing 1000 transitions, as an expert dataset."
EXPERIMENTAL SETUP,0.22535211267605634,"CARRACING. We evaluate our method in a racing game, CARRACING, illustrated in Figure 3f,
requiring driving a car to navigate a track. This task features a 96 × 96 RGB image-based state space
and a 3-dimensional action space (steering, braking, and accelerating). We trained a PPO expert
policy on CARRACING environment and collected 671 transitions as expert demonstrations."
EXPERIMENTAL SETUP,0.22769953051643194,Further details of the tasks can be found in Section B.
BASELINES,0.2300469483568075,"5.2
Baselines"
BASELINES,0.2323943661971831,We compare our method DRAIL with the following baselines of our approach.
BASELINES,0.2347417840375587,"• Behavioral Cloning (BC) trains a policy to mimic the actions of an expert by supervised
learning a mapping from observed states to corresponding expert actions [44, 55].
• Diffusion Policy represents a policy as a conditional diffusion model [6, 42, 46], which
predicts an action conditioning on a state and a randomly sampled noise. We include this
method to compare learning a diffusion model as a policy (diffusion policy) or reward
function (ours).
• Generative Adversarial Imitation Learning (GAIL) [21] learns a policy from expert
demonstrations by training a discriminator to distinguish between trajectories generated by
the learned generator policy and those from expert demonstrations.
• Generative Adversarial Imitation Learning with Gradient Penalty (GAIL-GP) is an
extension of GAIL that introduces a gradient penalty to achieve smoother rewards and
stabilize the discriminator.
• Wasserstein Adversarial Imitation Learning (WAIL) [2] extends GAIL by employing
Wasserstein distance, aiming to capture smoother reward functions.
• Diffusion Adversarial Imitation Learning (DiffAIL) [58] integrates a diffusion model
into AIL by using the diffusion model loss to provide reward e−Ldiff."
EXPERIMENTAL RESULTS,0.23708920187793428,"5.3
Experimental results"
EXPERIMENTAL RESULTS,0.23943661971830985,"We present the success rates (MAZE, FETCHPUSH, HANDROTATE, ANTREACH) and return
(WALKER, CARRACING) of all the methods with regards to environment steps in Figure 4. Each task"
EXPERIMENTAL RESULTS,0.24178403755868544,"was trained using five different random seeds. Note that BC and Diffusion Policy are offline imitation
learning algorithms, meaning they cannot interact with the environment, so their performances are
represented as horizontal lines. Detailed information on model architectures, training, and evaluation
can be found in Section F and Section G."
EXPERIMENTAL RESULTS,0.24413145539906103,"Overall, our method DRAIL consistently outperforms prior methods or achieves competitive per-
formance compared to the best-performing methods across all the environments, verifying the
effectiveness of integrating our proposed diffusion discriminative classifier into the AIL framework."
EXPERIMENTAL RESULTS,0.24647887323943662,"DRAIL vs. DiffAIL. Both DRAIL and DiffAIL integrate the diffusion model into the AIL framework.
In 5 out of 6 tasks, our DRAIL outperforms DiffAIL, demonstrating that our proposed discriminator
provides a more effective learning signal by closely resembling binary classification within the GAIL
framework."
EXPERIMENTAL RESULTS,0.24882629107981222,"DRAIL vs. BC. AIL methods generally surpass BC in most tasks due to their ability to learn from
interactions with the environment and thus handle unseen states better. However, BC outperforms all
other baselines in the locomotion task (WALKER). We hypothesize that WALKER is a monotonic
task requiring less generalizability to unseen states, allowing BC to excel with sufficient expert data.
Additionally, our experiments with varying amounts of expert data, detailed in Section 5.5, suggest
that DRAIL surpasses BC when less expert data is available."
EXPERIMENTAL RESULTS,0.2511737089201878,"We empirically found that our proposed DRAIL is robust to hyperparameters, especially compared to
GAIL and WAIL, as shown in the hyperparameter sensitivity experiment inSection D."
GENERALIZABILITY,0.2535211267605634,"5.4
Generalizability"
GENERALIZABILITY,0.25586854460093894,"To examine the generalizability to states or goals that are unseen from the expert demonstrations
of different methods, we extend the FETCHPUSH tasks following the setting proposed by Lee et al.
[33]. Specifically, we evaluate policies learned by different methods by varying the noise injected
into initiate states (e.g., position and velocity of the robot arm) and goals (e.g., target block positions
in FETCHPUSH). We experiment with different noise levels, including 1×, 1.25×, 1.5×, 1.75×,
and 2.0×, compared to the expert environment. That said, 1.5× means the policy is evaluated in an
environment with noises 1.5× larger than those injected into expert data collection. Performing well
in a high noise level setup requires the policy to generalize to unseen states."
GENERALIZABILITY,0.25821596244131456,"Expert
DRAIL (Ours)
DiffAIL
WAIL
GAIL
Diffusion Policy
BC
GAIL-GP"
GENERALIZABILITY,0.2605633802816901,"(a) MAZE
(b) FETCHPUSH
(c) HANDROTATE"
GENERALIZABILITY,0.26291079812206575,"(d) ANTREACH
(e) WALKER
(f) CARRACING"
GENERALIZABILITY,0.2652582159624413,"Figure 4: Learning efficiency. We report success rates (MAZE, FETCHPUSH, HANDROTATE, ANTREACH) and
return (WALKER, CARRACING), evaluated over five random seeds. Our method DRAIL learns more stably,
faster, and achieves higher or competitive performance compared to the best-performing baseline in all the tasks."
GENERALIZABILITY,0.2676056338028169,"Expert
DRAIL (Ours)
DiffAIL
WAIL
GAIL
Diffusion Policy
BC
GAIL-GP"
GENERALIZABILITY,0.2699530516431925,"(a) FETCHPUSH 1×
(b) FETCHPUSH 1.25×
(c) FETCHPUSH 1.75×
(d) FETCHPUSH 2.0×"
GENERALIZABILITY,0.27230046948356806,"Figure 5: Generalization experiments in FETCHPUSH. We present the performance of our proposed DRAIL
and baselines in the FETCHPUSH task, under varying levels of noise in initial states and goal locations. The
evaluation spans three random seeds, and the training curve illustrates the success rate dynamics."
GENERALIZABILITY,0.2746478873239437,"The results of FETCHPUSH under 1×, 1.25×, 1.75×, and 2.0× noise level are presented in Figure 5.
Across all noise levels, approaches utilizing the diffusion model generally exhibit better performance.
Notably, our proposed DRAIL demonstrates the highest robustness towards noisy environments.
Even at the highest noise level of 2.00×, DRAIL maintains a success rate of over 95%, surpassing
the best-performing baseline, Diffusion Policy, which achieves only around a 79.20% success rate.
In contrast, DiffAIL experiences failures in 2 out of the 5 seeds, resulting in a high standard deviation
(mean: 40.90, standard deviation: 47.59), despite our extensive efforts on experimenting with various
configurations and a wide range of hyperparameter values."
GENERALIZABILITY,0.27699530516431925,"The extended generalization experiments results in MAZE, FETCHPUSH, HANDROTATE , and the
new task FETCHPICK are presented in Section C. Overall, our method outperforms or performs
competitively against the best-performing baseline, demonstrating its superior generalization ability."
GENERALIZABILITY,0.2793427230046948,"Expert
DRAIL (Ours)
DiffAIL
WAIL
GAIL
Diffusion Policy
BC
GAIL-GP"
GENERALIZABILITY,0.28169014084507044,"(a) 5 trajectories
(b) 3 trajectories
(c) 2 trajectories
(d) 1 trajectory"
GENERALIZABILITY,0.284037558685446,"(e) 20311 transitions
(f) 10000 transitions
(g) 5000 transitions
(h) 2000 transitions"
GENERALIZABILITY,0.2863849765258216,"Figure 6: Data efficiency. We experiment learning with varying amounts of expert data in WALKER and
FETCHPUSH. The results show that our proposed method DRAIL is more data efficient, i.e., can learn with less
expert data, compared to other methods."
DATA EFFICIENCY,0.2887323943661972,"5.5
Data efficiency"
DATA EFFICIENCY,0.29107981220657275,"To investigate the data efficiency of DRAIL, we vary the amount of expert data used for learning in
WALKER and FETCHPUSH. Specifically, for WALKER, we use 5, 3, 2, and 1 expert trajectories, each
containing 1000 transitions; for FETCHPUSH, we use 20311, 10000, 5000, and 2000 state-action
pairs. The results reported in Figure 6 demonstrate that our DRAIL learns faster compared to the other
baselines, indicating superior data efficiency in terms of environment interaction. In WALKER, our
DRAIL maintains a return value of over 4500 even when trained with a single trajectory. In contrast,
BC’s performance is unstable and fluctuating, while the other baselines experience a dramatic drop.
In FETCHPUSH, our DRAIL maintains a success rate of over 80% even when the data size is reduced
by 90%, whereas the other AIL baselines’ performance drops below 50%."
DATA EFFICIENCY,0.2934272300469484,"(a) Expert Distribution
(b) GAIL Reward
(c) DRAIL Reward"
DATA EFFICIENCY,0.29577464788732394,"Figure 7: Reward function visualization. We present visualizations of the learned reward values by the
discriminative classifier of GAIL and the diffusion discriminative classifier of our DRAIL. The target expert
demonstration for imitation is depicted in (a), which is a discontinuous sine function. The reward distributions
of GAIL and our DRAIL are illustrated in (b) and (c), respectively."
REWARD FUNCTION VISUALIZATION,0.2981220657276995,"5.6
Reward function visualization"
REWARD FUNCTION VISUALIZATION,0.3004694835680751,"To visualize and analyze the learned reward functions, we design a SINE environment with one-
dimensional state and action spaces, where the expert state-action pairs form a discontinuous sine
wave a = sin (20sπ) + N(0, 0.052), as shown in Figure 7a. We train GAIL and our DRAIL to learn
from this expert state-action distribution and visualize the discriminator output values Dϕ to examine
the learned reward function, as presented in Figure 7."
REWARD FUNCTION VISUALIZATION,0.3028169014084507,"Figure 7b reveals that the GAIL discriminator exhibits excessive overfitting to the expert demonstra-
tion, resulting in its failure to provide appropriate reward values when encountering unseen states.
In contrast, Figure 7c shows that our proposed DRAIL generalizes better to the broader state-action
distribution, yielding a more robust reward value, thereby enhancing the generalizability of learned
policies. Furthermore, the predicted reward value of DRAIL gradually decreases as the state-action
pairs deviate farther from the expert demonstration. This reward smoothness can guide the policy
even when it deviates from the expert policy. In contrast, the reward distribution from GAIL is
relatively narrow outside the expert demonstration, making it challenging to properly guide the policy
if the predicted action does not align with the expert."
CONCLUSION,0.3051643192488263,"6
Conclusion"
CONCLUSION,0.3075117370892019,"This work proposes a novel adversarial imitation learning framework that integrates a diffusion
model into generative adversarial imitation learning (GAIL). Specifically, we propose a diffusion
discriminative classifier that employs a diffusion model to construct an enhanced discriminator,
yielding more robust and smoother rewards. Then, we design diffusion rewards based on the
classifier’s output for policy learning. Extensive experiments in navigation, manipulation, locomotion,
and game justify our proposed framework’s effectiveness, generalizability, and data efficiency. Future
work could apply DRAIL to image-based robotic tasks in real-world or simulated environments and
explore its potential in various domains outside robotics, such as autonomous driving, to assess its
generalizability and adaptability. Additionally, exploring other divergences and distance metrics, such
as the Wasserstein distance or f-divergences, could potentially further improve training stability."
CONCLUSION,0.30985915492957744,Acknowledgement
CONCLUSION,0.31220657276995306,"This work was supported by NVIDIA Taiwan Research & Development Center (TRDC) under the
funding code 112HT911007. Shao-Hua Sun was supported by the Yushan Fellow Program by the
Ministry of Education, Taiwan. Ping-Chun Hsieh is supported in part by the National Science and
Technology Council (NSTC), Taiwan under Contract No. NSTC 113-2628-E-A49-026. We thank
Tim Pearce and Ching-An Cheng for the fruitful discussions."
REFERENCES,0.3145539906103286,References
REFERENCES,0.31690140845070425,"[1] Pieter Abbeel and Andrew Y Ng. Apprenticeship learning via inverse reinforcement learning.
In International Conference on Machine Learning, 2004."
REFERENCES,0.3192488262910798,"[2] Martin Arjovsky, Soumith Chintala, and Léon Bottou. Wasserstein generative adversarial
networks. In International Conference on Machine Learning, 2017."
REFERENCES,0.3215962441314554,"[3] Yusuf Aytar, Tobias Pfaff, David Budden, Thomas Paine, Ziyu Wang, and Nando De Freitas.
Playing hard exploration games by watching youtube. In Neural Information Processing
Systems, 2018."
REFERENCES,0.323943661971831,"[4] David M Blei, Alp Kucukelbir, and Jon D McAuliffe. Variational inference: A review for
statisticians. Journal of the American statistical Association, 2017."
REFERENCES,0.32629107981220656,"[5] Shang-Fu Chen, Hsiang-Chun Wang, Ming-Hao Hsu, Chun-Mao Lai, and Shao-Hua Sun.
Diffusion model-augmented behavioral cloning. In International Conference on Machine
Learning, 2024."
REFERENCES,0.3286384976525822,"[6] Cheng Chi, Siyuan Feng, Yilun Du, Zhenjia Xu, Eric Cousineau, Benjamin Burchfiel, and
Shuran Song. Diffusion policy: Visuomotor policy learning via action diffusion. In Robotics:
Science and Systems, 2023."
REFERENCES,0.33098591549295775,"[7] Paul F Christiano, Jan Leike, Tom Brown, Miljan Martic, Shane Legg, and Dario Amodei. Deep
reinforcement learning from human preferences. In Neural Information Processing Systems,
2017."
REFERENCES,0.3333333333333333,"[8] Robert Dadashi, Léonard Hussenot, Matthieu Geist, and Olivier Pietquin. Primal wasserstein
imitation learning. arXiv preprint arXiv:2006.04678, 2020."
REFERENCES,0.33568075117370894,"[9] Prafulla Dhariwal and Alexander Nichol. Diffusion models beat gans on image synthesis. In
Neural Information Processing Systems, 2021."
REFERENCES,0.3380281690140845,"[10] Pete Florence, Corey Lynch, Andy Zeng, Oscar A Ramirez, Ayzaan Wahid, Laura Downs,
Adrian Wong, Johnny Lee, Igor Mordatch, and Jonathan Tompson. Implicit behavioral cloning.
In Conference on Robotic Learning, 2022."
REFERENCES,0.3403755868544601,"[11] Gideon Joseph Freund, Elad Sarafian, and Sarit Kraus. A coupled flow approach to imitation
learning. In International Conference on Machine Learning, pages 10357–10372. PMLR, 2023."
REFERENCES,0.3427230046948357,"[12] Justin Fu, Katie Luo, and Sergey Levine. Learning robust rewards with adverserial inverse
reinforcement learning. In International Conference on Learning Representations, 2018."
REFERENCES,0.34507042253521125,"[13] Justin Fu, Aviral Kumar, Ofir Nachum, George Tucker, and Sergey Levine. D4rl: Datasets for
deep data-driven reinforcement learning. arXiv preprint arXiv:2004.07219, 2020."
REFERENCES,0.3474178403755869,"[14] Javier Garcıa and Fernando Fernández. A comprehensive survey on safe reinforcement learning.
Journal of Machine Learning Research, 2015."
REFERENCES,0.34976525821596244,"[15] Divyansh Garg, Shuvam Chakraborty, Chris Cundy, Jiaming Song, and Stefano Ermon. Iq-learn:
Inverse soft-q learning for imitation. Advances in Neural Information Processing Systems, 34:
4028–4039, 2021."
REFERENCES,0.352112676056338,"[16] Ian Goodfellow, Jean Pouget-Abadie, Mehdi Mirza, Bing Xu, David Warde-Farley, Sherjil
Ozair, Aaron Courville, and Yoshua Bengio. Generative adversarial nets. In Neural Information
Processing Systems, 2014."
REFERENCES,0.3544600938967136,"[17] Shangding Gu, Long Yang, Yali Du, Guang Chen, Florian Walter, Jun Wang, Yaodong Yang,
and Alois Knoll. A review of safe reinforcement learning: Methods, theory and applications.
arXiv preprint arXiv:2205.10330, 2022."
REFERENCES,0.3568075117370892,"[18] Jack Harmer, Linus Gisslén, Jorge del Val, Henrik Holst, Joakim Bergdahl, Tom Olsson,
Kristoffer Sjöö, and Magnus Nordin. Imitation learning with concurrent actions in 3d games.
In IEEE Conference on Computational Intelligence and Games, 2018."
REFERENCES,0.3591549295774648,"[19] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. Deep residual learning for image
recognition. In IEEE Conference on Computer Vision and Pattern Recognition, 2016."
REFERENCES,0.3615023474178404,"[20] Peter Henderson, Riashat Islam, Philip Bachman, Joelle Pineau, Doina Precup, and David
Meger. Deep reinforcement learning that matters. In AAAI Conference on Artificial Intelligence,
2018."
REFERENCES,0.36384976525821594,"[21] Jonathan Ho and Stefano Ermon. Generative adversarial imitation learning. In Neural Informa-
tion Processing Systems, 2016."
REFERENCES,0.36619718309859156,"[22] Jonathan Ho, Ajay Jain, and Pieter Abbeel. Denoising diffusion probabilistic models. In Neural
Information Processing Systems, 2020."
REFERENCES,0.3685446009389671,"[23] Bo-Ruei Huang, Chun-Kai Yang, Chun-Mao Lai, , and Shao-Hua Sun. Diffusion imitation from
observation. In Neural Information Processing Systems, 2024."
REFERENCES,0.37089201877934275,"[24] Ahmed Hussein, Mohamed Medhat Gaber, Eyad Elyan, and Chrisina Jayne. Imitation learning:
A survey of learning methods. ACM Computing Surveys, 2017."
REFERENCES,0.3732394366197183,"[25] Rohit Jena, Changliu Liu, and Katia Sycara. Augmenting gail with bc for sample efficient
imitation learning. In Conference on Robot Learning, 2021."
REFERENCES,0.3755868544600939,"[26] Diederik Kingma, Tim Salimans, Ben Poole, and Jonathan Ho. Variational diffusion models. In
Neural Information Processing Systems, 2021."
REFERENCES,0.3779342723004695,"[27] Diederik P Kingma and Jimmy Ba. Adam: A method for stochastic optimization. In Interna-
tional Conference on Learning Representations, 2015."
REFERENCES,0.38028169014084506,"[28] B Ravi Kiran, Ibrahim Sobh, Victor Talpaert, Patrick Mannion, Ahmad A Al Sallab, Senthil
Yogamani, and Patrick Pérez. Deep reinforcement learning for autonomous driving: A survey.
IEEE Transactions on Intelligent Transportation Systems, 2021."
REFERENCES,0.3826291079812207,"[29] Po-Chen Ko, Jiayuan Mao, Yilun Du, Shao-Hua Sun, and Joshua B. Tenenbaum. Learning
to act from actionless videos through dense correspondences. In International Conference on
Learning Representations, 2024."
REFERENCES,0.38497652582159625,"[30] Ilya Kostrikov, Kumar Krishna Agrawal, Debidatta Dwibedi, Sergey Levine, and Jonathan
Tompson.
Discriminator-actor-critic: Addressing sample inefficiency and reward bias in
adversarial imitation learning. In International Conference on Machine Learning, 2019."
REFERENCES,0.3873239436619718,"[31] Ilya Kostrikov, Kumar Krishna Agrawal, Debidatta Dwibedi, Sergey Levine, and Jonathan
Tompson.
Discriminator-actor-critic: Addressing sample inefficiency and reward bias in
adversarial imitation learning. In International Conference on Learning Representations, 2019."
REFERENCES,0.38967136150234744,"[32] Youngwoon Lee, Shao-Hua Sun, Sriram Somasundaram, Edward S. Hu, and Joseph J. Lim.
Composing complex skills by learning transition policies. In International Conference on
Learning Representations, 2019."
REFERENCES,0.392018779342723,"[33] Youngwoon Lee, Andrew Szot, Shao-Hua Sun, and Joseph J. Lim. Generalizable imitation
learning from observation via inferring goal proximity. In Neural Information Processing
Systems, 2021."
REFERENCES,0.39436619718309857,"[34] Jan Leike, David Krueger, Tom Everitt, Miljan Martic, Vishal Maini, and Shane Legg. Scalable
agent alignment via reward modeling: a research direction. arXiv preprint arXiv:1811.07871,
2018."
REFERENCES,0.3967136150234742,"[35] Alexander C Li, Mihir Prabhudesai, Shivam Duggal, Ellis Brown, and Deepak Pathak. Your
diffusion model is secretly a zero-shot classifier. In IEEE International Conference on Computer
Vision, 2023."
REFERENCES,0.39906103286384975,"[36] Abdoulaye O Ly and Moulay Akhloufi. Learning to drive by imitation: An overview of deep
behavior cloning methods. IEEE Transactions on Intelligent Vehicles, 2020."
REFERENCES,0.4014084507042254,"[37] Andrew Y. Ng and Stuart J. Russell. Algorithms for inverse reinforcement learning. In
International Conference on Machine Learning, 2000."
REFERENCES,0.40375586854460094,"[38] Alexander Quinn Nichol and Prafulla Dhariwal. Improved denoising diffusion probabilistic
models. In International Conference on Machine Learning, 2021."
REFERENCES,0.4061032863849765,"[39] Felipe Nuti, Tim Franzmeyer, and João F Henriques. Extracting reward functions from diffusion
models. Advances in Neural Information Processing Systems, 36, 2024."
REFERENCES,0.4084507042253521,"[40] Manu Orsini, Anton Raichuk, Léonard Hussenot, Damien Vincent, Robert Dadashi, Sertan
Girgin, Matthieu Geist, Olivier Bachem, Olivier Pietquin, and Marcin Andrychowicz. What
matters for adversarial imitation learning? In Neural Information Processing Systems, 2021."
REFERENCES,0.4107981220657277,"[41] Takayuki Osa, Joni Pajarinen, Gerhard Neumann, J Andrew Bagnell, Pieter Abbeel, Jan Peters,
et al. An algorithmic perspective on imitation learning. Foundations and Trends® in Robotics,
2018."
REFERENCES,0.4131455399061033,"[42] Tim Pearce, Tabish Rashid, Anssi Kanervisto, David Bignell, Mingfei Sun, Raluca Georgescu,
Sergio Valcarcel Macua, Shan Zheng Tan, Ida Momennejad, Katja Hofmann, and Sam Devlin.
Imitating human behaviour with diffusion models. In International Conference on Learning
Representations, 2023."
REFERENCES,0.4154929577464789,"[43] Matthias Plappert, Marcin Andrychowicz, Alex Ray, Bob McGrew, Bowen Baker, Glenn
Powell, Jonas Schneider, Josh Tobin, Maciek Chociej, Peter Welinder, et al.
Multi-goal
reinforcement learning: Challenging robotics environments and request for research. arXiv
preprint arXiv:1802.09464, 2018."
REFERENCES,0.41784037558685444,"[44] Dean A Pomerleau. Alvinn: An autonomous land vehicle in a neural network. In Neural
Information Processing Systems, 1989."
REFERENCES,0.42018779342723006,"[45] Harish Ravichandar, Athanasios S Polydoros, Sonia Chernova, and Aude Billard. Recent
advances in robot learning from demonstration.
Annual review of control, robotics, and
autonomous systems, 2020."
REFERENCES,0.4225352112676056,"[46] Moritz Reuss, Maximilian Li, Xiaogang Jia, and Rudolf Lioutikov. Goal-conditioned imitation
learning using score-based diffusion policies. arXiv preprint arXiv:2304.02532, 2023."
REFERENCES,0.42488262910798125,"[47] Olaf Ronneberger, Philipp Fischer, and Thomas Brox.
U-net: Convolutional networks
for biomedical image segmentation. In Medical image computing and computer-assisted
intervention–MICCAI 2015: 18th international conference, Munich, Germany, October 5-9,
2015, proceedings, part III 18, 2015."
REFERENCES,0.4272300469483568,"[48] Stéphane Ross, Geoffrey Gordon, and Drew Bagnell. A reduction of imitation learning and
structured prediction to no-regret online learning. In International Conference on Artificial
Intelligence and Statistics, 2011."
REFERENCES,0.4295774647887324,"[49] Stefan Schaal. Learning from demonstration. In Neural Information Processing Systems, 1997."
REFERENCES,0.431924882629108,"[50] John Schulman, Filip Wolski, Prafulla Dhariwal, Alec Radford, and Oleg Klimov. Proximal
policy optimization algorithms. arXiv preprint arXiv:1707.06347, 2017."
REFERENCES,0.43427230046948356,"[51] Jascha Sohl-Dickstein, Eric Weiss, Niru Maheswaranathan, and Surya Ganguli. Deep unsuper-
vised learning using nonequilibrium thermodynamics. In International Conference on Machine
Learning, 2015."
REFERENCES,0.43661971830985913,"[52] Jiaming Song, Chenlin Meng, and Stefano Ermon. Denoising diffusion implicit models. In
International Conference on Machine Learning, 2021."
REFERENCES,0.43896713615023475,"[53] Gokul Swamy, David Wu, Sanjiban Choudhury, Drew Bagnell, and Steven Wu. Inverse
reinforcement learning without reinforcement learning. In International Conference on Machine
Learning, 2023."
REFERENCES,0.4413145539906103,"[54] Umar Syed, Michael Bowling, and Robert E Schapire. Apprenticeship learning using linear
programming. In Proceedings of the 25th international conference on Machine learning, 2008."
REFERENCES,0.44366197183098594,"[55] Faraz Torabi, Garrett Warnell, and Peter Stone. Behavioral cloning from observation. In
International Joint Conference on Artificial Intelligence, 2018."
REFERENCES,0.4460093896713615,"[56] Faraz Torabi, Garrett Warnell, and Peter Stone. Generative adversarial imitation from observa-
tion. In International Conference on Machine Learning, 2019."
REFERENCES,0.44835680751173707,"[57] Patrick von Platen, Suraj Patil, Anton Lozhkov, Pedro Cuenca, Nathan Lambert, Kashif
Rasul, Mishig Davaadorj, Dhruv Nair, Sayak Paul, William Berman, Yiyi Xu, Steven Liu,
and Thomas Wolf. Diffusers: State-of-the-art diffusion models. https://github.com/
huggingface/diffusers, 2022."
REFERENCES,0.4507042253521127,"[58] Bingzheng Wang, Yan Zhang, Teng Pang, Guoqiang Wu, and Yilong Yin. Diffail: Diffusion
adversarial imitation learning. arXiv preprint arXiv:2312.06348, 2023."
REFERENCES,0.45305164319248825,"[59] Bingzheng Wang, Guoqiang Wu, Teng Pang, Yan Zhang, and Yilong Yin. Diffail: Diffusion
adversarial imitation learning. In AAAI Conference on Artificial Intelligence, 2024."
REFERENCES,0.45539906103286387,"[60] Tony Z Zhao, Vikash Kumar, Sergey Levine, and Chelsea Finn. Learning fine-grained bimanual
manipulation with low-cost hardware. In Robotics: Science and Systems, 2023."
REFERENCES,0.45774647887323944,"[61] Brian D Ziebart, Andrew L Maas, J Andrew Bagnell, Anind K Dey, et al. Maximum entropy
inverse reinforcement learning. In AAAI Conference on Artificial Intelligence, 2008."
REFERENCES,0.460093896713615,"[62] Konrad Zolna, Scott Reed, Alexander Novikov, Sergio Gomez Colmenarejo, David Budden,
Serkan Cabi, Misha Denil, Nando de Freitas, and Ziyu Wang. Task-relevant adversarial imitation
learning. In Conference on Robotic Learning, 2021."
REFERENCES,0.4624413145539906,Appendix
REFERENCES,0.4647887323943662,Table of Contents
REFERENCES,0.4671361502347418,"A Relation to DiffAIL
15"
REFERENCES,0.4694835680751174,"B
Environment & task details
16
B.1
MAZE . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
16
B.2
FETCHPUSH & FETCHPICK
. . . . . . . . . . . . . . . . . . . . . . . . . . .
17
B.3
HANDROTATE . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
17
B.4
ANTREACH . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
17
B.5
WALKER . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
17
B.6
CARRACING
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
18
B.7
Expert performance . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
18"
REFERENCES,0.47183098591549294,"C Extended results of generalization experiments
18
C.1
Experiment settings . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
18
C.2
Experiment results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
18"
REFERENCES,0.47417840375586856,"D Hyperparameter Sensitivity Experiment
19"
REFERENCES,0.4765258215962441,"E
Converged performance
20"
REFERENCES,0.4788732394366197,"F
Model architecture
20
F.1
Model architecture of DRAIL, DiffAIL, and the baselines
. . . . . . . . . . . .
20
F.2
Image-based model architecture of DRAIL, DiffAIL, and the baselines
. . . . .
21"
REFERENCES,0.4812206572769953,"G Training details
23
G.1 Training hyperparamters . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
23
G.2
Reward function details . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
23"
REFERENCES,0.4835680751173709,"H Limitations
24"
REFERENCES,0.4859154929577465,"I
Computational resources and time
24
I.1
Computational resources
. . . . . . . . . . . . . . . . . . . . . . . . . . . . .
24
I.2
Computational time . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
24"
REFERENCES,0.48826291079812206,"J
Impact statements
25"
REFERENCES,0.49061032863849763,"A
Relation to DiffAIL"
REFERENCES,0.49295774647887325,"Among all the related works, DiffAIL [58], which also employs a diffusion model for adversarial
imitation learning, is the closest to our work. This section describes the differences of our work and
DiffAIL."
REFERENCES,0.4953051643192488,"Unconditional diffusion models (DiffAIL) vs. conditional diffusion models (DRAIL). Wang et al.
[58] proposed to learn an unconditional diffusion model Dϕ(s, a) to denoise state-action pairs from
an expert and an agent. The diffusion model should denoise well when the state-action pairs are
sampled from the expert demonstrations, while denoise poorly given the state-action pairs sampled
from the agent policy. On the other hand, our proposed framework employs a conditional diffusion
model Dϕ(s, a, c) that conditions on the real label c+ or the fake label c−. In the following, we
discuss how using a conditional diffusion model leads to better learning signals for policy learning."
REFERENCES,0.49765258215962443,"DiffAIL set up the discriminator output as Dϕ(s, a) = e−Ldiff(s,a) ∈[0, 1], indicating how likely
(s, a) is sampled from the expert distribution. That said, a e−Ldiff(s,a) close to 1 implies that the
sample is likely from expert and a small value of e−Ldiff(s,a) means it is less likely that this sample"
REFERENCES,0.5,"comes from the expert. However, e−Ldiff(s,a) does not explicitly represent the probability of the
“negative class” (agent), which makes it difficult to provide stable rewards for policy learning."
REFERENCES,0.5023474178403756,"We start by revisiting the GAIL formulation. The binary classifier in GAIL, i.e., the discriminator,
is trained to minimize the binary cross-entropy loss, which leads to maximizing the likelihood of
predicting the correct class probabilities. Subsequently, the discriminator outputs the predicted
probability of the “positive class” (expert) relatively to the “negative class” (agent). In DiffAIL, the
predicted probability of the “positive class” (expert) is e−Ldiff and the predicted probability of the
“negative class” (agent) can be given by 1 −e−Ldiff. Following this definition, the discriminator thinks
the sample if from an expert when e−Ldiff > 1 −e−Ldiff. We also know that Ldiff > 0 since it is the
diffusion model denoising loss. This gives us 0 ≤Ldiff ≤ln 2 for the expert class, and ln 2 < Ldiff
for the agent class. This can be problematic since the fixed boundary ln 2 my not reflect the real
boundary between the real (expert) and the fake (agent) distributions."
REFERENCES,0.5046948356807511,"On the other hand, in our method (DRAIL), the predicted probability of the positive (expert) class of
a given state-action pair (s, a) is defined as:"
REFERENCES,0.5070422535211268,"Dϕ(s, a) =
e−Ldiff(s,a,c+)"
REFERENCES,0.5093896713615024,"e−Ldiff(s,a,c+) + e−Ldiff(s,a,c−) = σ(Ldiff(s, a, c−) −Ldiff(s, a, c+)),
(7)"
REFERENCES,0.5117370892018779,"and the predicted probability of the negative (agent) class of the same state-action pair (s, a) is
explicitly defined as:"
REFERENCES,0.5140845070422535,"1 −Dϕ(s, a) =
e−Ldiff(s,a,c−)"
REFERENCES,0.5164319248826291,"e−Ldiff(s,a,c+) + e−Ldiff(s,a,c−) = σ(Ldiff(s, a, c+) −Ldiff(s, a, c−)).
(8)"
REFERENCES,0.5187793427230047,"This binary classification formulation aligns with GAIL. Hence, the discriminator would think a
given (s, a) comes from expert data only when"
REFERENCES,0.5211267605633803,"e−Ldiff(s,a,c+)"
REFERENCES,0.5234741784037559,"e−Ldiff(s,a,c+) + e−Ldiff(s,a,c−) >
e−Ldiff(s,a,c−)"
REFERENCES,0.5258215962441315,"e−Ldiff(s,a,c+) + e−Ldiff(s,a,c−) ,
(9)"
REFERENCES,0.528169014084507,which means
REFERENCES,0.5305164319248826,"e−Ldiff(s,a,c+) > e−Ldiff(s,a,c−).
(10)"
REFERENCES,0.5328638497652582,"The resulting relative boundary can provide better learning signals for policy learning, especially
when the behaviors of the agent policy become similar to those of expert, which can be observed in the
tasks where the agent policies can closely follow the experts, such as FETCHPICK, FETCHPUSH, and
ANTREACH. Also, we hypothesize this leads to the superior performance of our method compared to
DiffAIL in most of the generalization experiments."
REFERENCES,0.5352112676056338,"Experimental setup. Wang et al. [58] evaluated DiffAIL and prior methods in locomotion tasks;
in contrast, our work extensively compares our proposed framework DRAIL with various existing
methods in various domains, including navigation (MAZE and ANTREACH), locomotion (WALKER
and ANTREACH), robot arm manipulation (FETCHPUSH and FETCHPICK), robot arm dexterous
(HANDROTATE), and games (CARRACING). Additionally, we present experimental results on
generalization to unseen states and goals on the goal-oriented tasks, and on varying amounts of expert
data."
REFERENCES,0.5375586854460094,"B
Environment & task details"
REFERENCES,0.539906103286385,"B.1
MAZE"
REFERENCES,0.5422535211267606,"Description. In a 2D maze environment, a point-maze agent learns to navigate from a starting
location to a goal location. The agent achieves this by iteratively predicting its x and y velocity.
The initial and final positions of the agent are randomly selected. The state space includes position,"
REFERENCES,0.5446009389671361,"velocity, and goal position. The maximum episode length for this task is set at 400, and the episode
terminates if the goal is reached earlier."
REFERENCES,0.5469483568075117,"Expert dataset. The expert dataset comprises 100 demonstrations, which includes 18, 525 transitions
provided by Lee et al. [33]."
REFERENCES,0.5492957746478874,"B.2
FETCHPUSH & FETCHPICK"
REFERENCES,0.5516431924882629,"Description. In the FETCHPUSH task, the agent is required to push an object to a specified target
location. On the other hand, in the FETCHPICK task, the objective is to pick up an object from a table
and move it to a target location."
REFERENCES,0.5539906103286385,"According to the environment setups stated in Lee et al. [33], the 16-dimensional state representation
includes the angles of the robot joints, and the initial three dimensions of the action vector represent
the intended relative position for the next time step. The first three dimensions of the action vector
denote the intended relative position in the subsequent time step. In the case of FETCHPICK, an extra
action dimension is incorporated to specify the distance between the two fingers of the gripper. The
maximum episode length for this task is set at 60 for FETCHPUSH and 50 for FETCHPICK, and the
episode terminates if the agent reaches the goal earlier."
REFERENCES,0.5563380281690141,"Expert dataset. The expert dataset for FETCHPUSH comprises 664 trajectories, amounting to 20, 311
transitions, and the expert dataset for FETCHPICK comprises 303 trajectories, amounting to 10, 000
transitions provided by Lee et al. [33]."
REFERENCES,0.5586854460093896,"B.3
HANDROTATE"
REFERENCES,0.5610328638497653,"Description. In the task HANDROTATE proposed by Plappert et al. [43], a 24-DoF Shadow Dex-
terous Hand is designed to rotate a block in-hand to a specified target orientation. The 68D state
representation includes the agent’s joint angles, hand velocities, object poses, and target rotation.
The 20D action vector represents the joint torque control of the 20 joints. Notably, HANDROTATE is
challenging due to its high-dimensional state and action spaces. We follow the experimental setup
outlined in Plappert et al. [43] and Lee et al. [33], where rotation is constrained to the z-axis, and
allowable initial and target z rotations are within [−π 12, π"
REFERENCES,0.5633802816901409,12] and [ π
REFERENCES,0.5657276995305164,"3 , 2π"
REFERENCES,0.568075117370892,"3 ], respectively. The maximum
episode length for this task is set at 50, and the episode terminates if the hand reaches the goal earlier."
REFERENCES,0.5704225352112676,"Expert dataset. We use the demonstrations collected by Lee et al. [33], which contain 515 trajectories
(10k transitions)."
REFERENCES,0.5727699530516432,"B.4
ANTREACH"
REFERENCES,0.5751173708920188,"Description. The ANTREACH task features a four-leg ant robot reaching a randomly assigned target
position located within a range of half-circle with a radius of 5 meters. The task’s state is represented
by a 132-dimension vector, including joint angles, velocities, and the relative position of the ant
towards the goal. Expert data collection for this task is devoid of any added noise, while random
noise is introduced during the training and inference phases. Consequently, the policy is required to
learn to generalize to states not present in the expert demonstrations. The maximum episode length
for this task is set at 50, and the episode terminates if the ant reaches the goal earlier."
REFERENCES,0.5774647887323944,Expert dataset. The expert dataset comprises 10000 state-action pairs provided by Lee et al. [33].
REFERENCES,0.57981220657277,"B.5
WALKER"
REFERENCES,0.5821596244131455,"Description. WALKER task involves guiding an agent to move towards the x-coordinate as fast
as possible while maintaining balance. An episode terminates either when the agent experiences
predefined unhealthy conditions in the environment or when the maximum episode length (1000) is
reached. The agent’s performance is evaluated over 100 episodes with three different random seeds.
The return of an episode is the cumulative result of all time steps within that episode. The 17D state
includes joint angles, angular velocities of joints, and velocities of the x and z-coordinates of the top.
The 6D action defines the torques that need to be applied to each joint of the walker avatar."
REFERENCES,0.5845070422535211,"Expert dataset. We trained a PPO expert policy with environment rewards and collected 5 successful
trajectories, each containing 1000 transitions, as an expert dataset."
REFERENCES,0.5868544600938967,"B.6
CARRACING"
REFERENCES,0.5892018779342723,"Description. In the CARRACING task, the agent must navigate a track by controlling a rear-wheel
drive car. The state space of CARRACING is represented by a top-down 96×96 RGB image capturing
the track, the car, and various status indicators such as true speed, four ABS sensors, steering wheel
position, and gyroscope readings. The agent controls the car using three continuous action values:
steering, acceleration, and braking. Episodes have a maximum length of 1000 steps, and termination
occurs if the car completes the track before reaching the maximum episode length."
REFERENCES,0.5915492957746479,"In our experiment settings, we preprocess the state image by converting it to grayscale and resizing it
to 64 × 64 pixels. We then concatenate two consecutive frames to form a single state data, providing
temporal context for the agent’s decision-making process."
REFERENCES,0.5938967136150235,"Expert dataset. We trained a PPO expert policy on CARRACING environment and collected 671
transitions as expert demonstrations."
REFERENCES,0.596244131455399,"B.7
Expert performance"
REFERENCES,0.5985915492957746,"For MAZE, FETCHPUSH, FETCHPICK, HANDROTATE, and ANTREACH, we collected only the
successful trajectories, resulting in a success rate of 100% for experts on these tasks. The expert
performance for WALKER and CARRACING is 5637 ± 55 and 933 ± 0.9, respectively."
REFERENCES,0.6009389671361502,"C
Extended results of generalization experiments"
REFERENCES,0.6032863849765259,"C.1
Experiment settings"
REFERENCES,0.6056338028169014,"To show our approach’s better generalization capabilities, we extend the environment scenarios
following the setting stated in Lee et al. [33]: (1) In MAZE main experiment, the initial and goal states
of the expert dataset only constitute 50% of the potential initial and goal states. In the generalization
experiment, we gather expert demonstrations from some lower and higher coverage: 25%, 75%, and
100%. (2) In FETCHPICK, FETCHPUSH, and HANDROTATE main experiments, the demonstrations
are collected in a lower noise level setting, 1×. Yet, the agent is trained within an environment
incorporating 1.5× noise, which is 1.5 times larger noise than the collected expert demonstration,
applied to the starting and target block positions. In the generalization experiment, we train agents
in different noise levels: 1×, 1.25×, 1.75×, 2.0×. (3) In ANTREACH main experiment, no random
noise is added to the initial pose during policy learning. In ANTREACH generalization experiment,
we train agents in different noise levels: 0 (default), 0.01, 0.03, 0.05."
REFERENCES,0.607981220657277,"These generalization experiments simulate real-world conditions. For example, because of the
expenses of demonstration collection, the demonstrations may inadequately cover the entire state
space, as seen in setup (1). Similarly, in setups (2) and (3), demonstrations may be acquired under
controlled conditions with minimal noise, whereas the agent operating in a real environment would
face more significant noise variations not reflected in the demonstrations, resulting in a broader
distribution of initial states."
REFERENCES,0.6103286384976526,"C.2
Experiment results"
REFERENCES,0.6126760563380281,"MAZE. Our DRAIL outperforms baselines or performs competitively against DiffAIL across all
demonstration coverages, as shown in Figure 8. Particularly, BC, WAIL, and GAIL’s performance
decline rapidly in the low coverage case. In contrast, diffusion model-based AIL algorithms demon-
strate sustained performance, as shown in Figure 4a. This suggests that our method exhibits robust
generalization, whereas BC and GAIL struggle with unseen states under limited demonstration
coverage."
REFERENCES,0.6150234741784038,"FETCHPICK and FETCHPUSH. In FETCHPICK, our method outperforms all baselines in most
noise levels, as shown in Figure 8. In the 2.00× noise level, our method DRAIL achieves a success
rate of 87.22, surpassing the best-performing baseline Diffusion Policy, which achieves only around
76.64%. GAIL, on the other hand, experiences failure in 3 out of the 5 seeds, resulting in a high
standard deviation (mean: 39.17, standard deviation: 47.98) despite our thorough exploration of
various settings for its configuration. In FETCHPUSH, our method DRAIL exhibits more robust
results, in generalizing to unseen states compared to other baselines. This showcases that the diffusion"
REFERENCES,0.6173708920187794,"Expert
DRAIL (Ours)
DiffAIL
WAIL
GAIL
Diffusion Policy
BC
GAIL-GP"
REFERENCES,0.6197183098591549,"(a) MAZE 100%
(b) MAZE 75%
(c) MAZE 50%
(d) MAZE 25%"
REFERENCES,0.6220657276995305,"(e) FETCHPICK 1.00×
(f) FETCHPICK 1.25×
(g) FETCHPICK 1.75×
(h) FETCHPICK 2.0×"
REFERENCES,0.6244131455399061,"(i) FETCHPUSH 1×
(j) FETCHPUSH 1.25×
(k) FETCHPUSH 1.75×
(l) FETCHPUSH 2.0×"
REFERENCES,0.6267605633802817,(m) HANDROTATE 1× (n) HANDROTATE 1.25× (o) HANDROTATE 1.75× (p) HANDROTATE 2.0×
REFERENCES,0.6291079812206573,"Figure 8: Extended results of generalization experiments. MAZE is evaluated with different coverages of
state and goal locations in the expert demonstrations, while FETCHPICK, FETCHPUSH, and HANDROTATE
environments are evaluated in environments of different noise levels. The number indicates the amount of
additional noise in agent learning compared to that in the expert demonstrations, with more noise requiring
harder generalization. The noise level rises from left to right."
REFERENCES,0.6314553990610329,"reward guidance could provide better generalizability for the AIL framework. Moreover, our DRAIL
is quite sample-efficient regarding interaction with the environment during training compared to other
baselines in FETCHPICK and FETCHPUSH environment."
REFERENCES,0.6338028169014085,"HANDROTATE. DiffAIL and Our DRAIL show robustness to different levels of noise in HANDRO-
TATE, as illustrated in Figure 8. Specifically, DiffAIL and our DRAIL achieve a success rate of
higher than 90% at a noise level of 2.0, while GAIL and WAIL only reach approximately 42.82%
and 8.80%, respectively."
REFERENCES,0.636150234741784,"D
Hyperparameter Sensitivity Experiment"
REFERENCES,0.6384976525821596,"We empirically found that our proposed method, DRAIL, is robust to hyperparameters and easy
to tune, especially compared to GAIL and WAIL. In this section, we present additional ablation
experiments to examine how hyperparameter tuning affects the performance of DRAIL."
REFERENCES,0.6408450704225352,"(a) Discriminator Learning Rate
(b) Policy Learning Rate
Figure 9: Hyperparameter Sensitivity of DRAIL in the MAZE Environment. The results show the perfor-
mance of DRAIL under varying learning rates for the discriminator (a) and policy (b). Different scaling factors
(5x, 2x, 1x, 0.5x, 0.2x) of the baseline learning rate are tested. The results demonstrate that DRAIL remains
robust across these variations, maintaining stable performance in the MAZE environment."
REFERENCES,0.6431924882629108,"Like most AIL methods, the key hyperparameters of DRAIL are the learning rates of the policy
and discriminator. the key hyperparameters for DRAIL are the learning rates of the policy and
discriminator. We experimented with various learning rate values, including 5x, 2x, 1x, 0.5x, and
0.2x of the value used in the main results for the MAZE environment. The results, presented in Figure
9, demonstrate that our method is robust to variations in hyperparameters."
REFERENCES,0.6455399061032864,"E
Converged performance"
REFERENCES,0.647887323943662,"This section reports the quantitative results of the converged performance across all experiments,
including the main results in Section 5.3, the generalization experiments in Appendix C.2, and the
data efficiency experiments in Section 5.5. The results are presented in Table 1."
REFERENCES,0.6502347417840375,"F
Model architecture"
REFERENCES,0.6525821596244131,"This section presents the model architecture of all the experiments. Appendix F.1 describe the model
architecture of all methods used in Section 5.3."
REFERENCES,0.6549295774647887,"F.1
Model architecture of DRAIL, DiffAIL, and the baselines"
REFERENCES,0.6572769953051644,"In Section 5.3, we conducted a comparative analysis between our proposed DRAIL, along with
several baseline approaches (BC, Diffusion Policy, GAIL, GAIL-GP, WAIL, and DiffAIL) across six
diverse environments. We applied Multilayer Perceptron (MLP) for the policy of BC, the conditional
diffusion model in Diffusion Policy, as well as the policy and the discriminator of GAIL, GAIL-GP,
and WAIL. For DiffAIL and our proposed DRAIL, MLPs were employed in the policy and diffusion
model of the diffusion discriminative classifier. The activation functions used for the MLPs in the
diffusion model were ReLU, while hyperbolic tangent was employed for the others. The total timestep
T for all diffusion models in this paper is set to 1000 and the scheduler used for diffusion models
is cosine scheduler [38]. Further details regarding the parameters for the model architecture can be
found in Table 2."
REFERENCES,0.6596244131455399,"BC.
We maintained a concise model for the policy of BC to prevent excessive overfitting to expert
demonstrations. This precaution is taken to mitigate the potential adverse effects on performance
when confronted with environments exhibiting higher levels of noise."
REFERENCES,0.6619718309859155,"Diffusion Policy.
Based on empirical results and Chen et al. [5], the Diffusion Policy performs
better when implemented with a deeper architecture. Consequently, we have chosen to set the policy’s
number of layers to 5."
REFERENCES,0.6643192488262911,"Table 1: Converged performance. We report the quantitative results of the converged performance across all
experiments."
REFERENCES,0.6666666666666666,"Environments
Settings
BC
Diffusion Policy
GAIL
WAIL
DiffAIL
DRAIL"
REFERENCES,0.6690140845070423,Main Results
REFERENCES,0.6713615023474179,"MAZE
61.60% ± 3.98%
68.80% ± 1.72%
68.62% ± 8.35%
63.85% ± 5.77%
94.06% ± 1.67%
96.83% ± 0.49%
FETCHPUSH
82.00% ± 21.13%
89.40% ± 2.06%
33.73% ± 37.63%
91.64% ± 9.08%
93.66% ± 3.15%
95.78% ± 0.80%
HANDROTATE
91.31% ± 2.61%
93.24% ± 1.61%
43.82% ± 35.31%
29.39% ± 35.65%
97.49% ± 0.48%
93.88% ± 3.23%
ANTREACH
33.00% ± 4.34%
33.60% ± 4.96%
21.98% ± 5.99%
33.84% ± 2.63%
29.59% ± 1.05%
39.02% ± 1.40%
WALKER
5431.19 ± 267.40
4749.03 ± 224.96
3581.18 ± 574.20
2521.07 ± 863.44
4639.47 ± 282.92
5381.15 ± 115.25
CARRACING
534.92 ± 45.02
592.20 ± 103.17
297.63 ± 294.52
−72.39 ± 30.54
689.62 ± 96.72
746.35 ± 31.28"
REFERENCES,0.6737089201877934,Generalization Experiments MAZE
REFERENCES,0.676056338028169,"25%
52.67% ± 6.18%
52.00% ± 0.82%
33.05% ± 9.35%
32.53% ± 6.33%
89.67% ± 4.33%
91.00% ± 3.24%
50%
61.60% ± 3.98%
68.80% ± 1.72%
68.62% ± 8.35%
63.85% ± 5.77%
94.06% ± 1.67%
96.83% ± 0.49%
75%
87.00% ± 0.00%
86.00% ± 2.45%
88.87% ± 5.79%
72.47% ± 1.05%
96.58% ± 0.31%
96.83% ± 0.58%
100%
91.00% ± 0.82%
93.03% ± 2.13%
95.47% ± 0.35%
69.52% ± 2.60%
98.43% ± 0.12%
98.20% ± 0.04%"
REFERENCES,0.6784037558685446,FETCHPICK
REFERENCES,0.6807511737089202,"1.00×
47.40% ± 31.10%
92.40% ± 2.58%
18.37% ± 36.74%
0.00% ± 0.00%
49.24% ± 42.53%
97.79% ± 1.27%
1.25×
44.00% ± 30.63%
85.40% ± 8.40%
8.57% ± 16.92%
0.00% ± 0.00%
37.03% ± 45.36%
89.22% ± 2.20%
1.50×
40.60% ± 27.62%
80.00% ± 7.13%
19.03% ± 38.06%
0.00% ± 0.00%
33.97% ± 41.61%
86.90% ± 1.90%
1.75×
33.80% ± 23.96%
76.06% ± 7.48%
19.15% ± 38.25%
0.00% ± 0.00%
2.14% ± 4.28%
49.86% ± 40.73%
2.00×
28.80% ± 22.68%
76.64% ± 7.63%
39.17% ± 47.98%
0.00% ± 0.00%
0.00% ± 0.00%
87.22% ± 1.93%"
REFERENCES,0.6830985915492958,FETCHPUSH
REFERENCES,0.6854460093896714,"1.00×
96.00% ± 6.10%
98.60% ± 0.49%
94.18% ± 4.87%
99.68% ± 0.30%
98.12% ± 0.75%
97.90% ± 0.53%
1.25×
88.80% ± 17.07%
97.20% ± 0.98%
94.34% ± 1.62%
79.32% ± 39.66%
75.66% ± 37.86%
95.84% ± 1.18%
1.50×
82.00% ± 21.13%
89.40% ± 2.06%
33.73% ± 37.63%
91.64% ± 9.08%
93.66% ± 3.15%
95.78% ± 0.80%
1.75×
71.00% ± 23.13%
84.80% ± 2.32%
43.71% ± 36.51%
0.00% ± 0.00%
55.62% ± 45.56%
96.15% ± 2.33%
2.00×
64.40% ± 21.70%
79.20% ± 3.76%
16.89% ± 25.08%
0.00% ± 0.00%
40.90% ± 47.59%
99.09% ± 0.47%"
REFERENCES,0.687793427230047,HANDROTATE
REFERENCES,0.6901408450704225,"1.00×
94.03% ± 2.90%
95.06% ± 2.16%
72.78% ± 33.57%
51.95% ± 36.88%
98.60% ± 0.16%
98.32% ± 0.39%
1.25×
93.00% ± 2.94%
92.71% ± 1.27%
62.05% ± 41.21%
28.30% ± 38.68%
98.03% ± 0.61%
97.17% ± 1.50%
1.50×
91.31% ± 2.61%
93.24% ± 1.61%
43.82% ± 35.31%
29.39% ± 35.65%
97.49% ± 0.48%
93.88% ± 3.23%
1.75×
89.67% ± 1.70%
92.00% ± 0.82%
60.32% ± 27.33%
28.12% ± 37.87%
96.20% ± 0.25%
91.73% ± 3.18%
2.00×
85.00% ± 2.94%
92.72% ± 0.91%
42.82% ± 26.72%
8.80% ± 9.77%
94.52% ± 0.80%
92.77% ± 0.77%"
REFERENCES,0.6924882629107981,ANTREACH
REFERENCES,0.6948356807511737,"0.00×
96.33% ± 0.94%
95.33% ± 1.89%
76.80% ± 2.52%
75.67% ± 1.04%
71.35% ± 0.86%
83.03% ± 0.63%
0.01×
64.67% ± 5.25%
63.33% ± 0.94%
13.75% ± 4.64%
28.03% ± 6.72%
26.83% ± 1.47%
39.50% ± 1.91%
0.03×
33.00% ± 4.34%
33.60% ± 4.96%
21.98% ± 5.99%
33.84% ± 2.63%
29.59% ± 1.05%
39.02% ± 1.40%
0.05×
17.33% ± 2.87%
21.33% ± 0.94%
30.43% ± 1.03%
21.90% ± 2.15%
13.58% ± 0.81%
29.92% ± 3.74%"
REFERENCES,0.6971830985915493,Data Efficiency
REFERENCES,0.6995305164319249,FETCHPUSH
REFERENCES,0.7018779342723005,"20311
82.00% ± 21.13%
89.40% ± 2.06%
33.73% ± 37.63%
91.64% ± 9.08%
93.66% ± 3.15%
95.78% ± 0.80%
10000
80.20% ± 14.70%
90.20% ± 2.64%
24.18% ± 31.75%
62.10% ± 43.86%
55.79% ± 45.62%
95.31% ± 0.45%
5000
76.40% ± 26.27%
86.60% ± 2.15%
43.59% ± 36.58%
77.60% ± 38.91%
38.04% ± 46.32%
95.70% ± 0.75%
2000
80.20% ± 14.70%
84.40% ± 1.85%
33.28% ± 24.07%
41.21% ± 47.47%
46.61% ± 37.37%
86.44% ± 13.44%"
REFERENCES,0.704225352112676,WALKER
TRAJS,0.7065727699530516,"5 trajs
5431.19 ± 267.40
4749.03 ± 224.96
3581.18 ± 574.20
2521.07 ± 863.44
4639.47 ± 282.92
5381.15 ± 115.25
3 trajs
5061.72 ± 73.57
3476.26 ± 313.01
2837.76 ± 1028.95
3210.65 ± 518.24
4584.24 ± 200.69
5266.41 ± 57.93
2 trajs
4957.94 ± 658.54
1872.29 ± 325.88
2323.08 ± 886.06
2067.75 ± 409.50
3250.23 ± 1610.07
5083.32 ± 119.98
1 traj
3055.27 ± 1834.75
1165.29 ± 147.79
960.65 ± 79.89
1017.37 ± 47.21
3057.35 ± 1530.88
4960.10 ± 164.57"
TRAJS,0.7089201877934272,"GAIL & GAIL-GP.
The detailed model architecture for GAIL and GAIL-GP is presented in
Table 2. For GAIL-GP, the gradient penalty is set to 1 across all environments."
TRAJS,0.7112676056338029,"WAIL.
We set the ground transport cost and the type of regularization of WAIL as Euclidean
distance and L2-regularization. The regularization value ϵ is provided in Table 2."
TRAJS,0.7136150234741784,"DiffAIL.
In DiffAIL, the conditional diffusion model is not utilized as it only needs to consider the
numerator of Equation (4). Consequently, the diffusion model takes only the noisy state-action pairs
as input and outputs the predicted noise value."
TRAJS,0.715962441314554,"DRAIL.
The conditional diffusion model of the diffusion discriminative classifier in our DRAIL is
constructed by concatenating either the real label c+ or the fake label c−to the noisy state-action
pairs as the input. The model then outputs the predicted noise applied to the state-action pairs. The
dimensions of both c+ and c−are reported in Table 2."
TRAJS,0.7183098591549296,"F.2
Image-based model architecture of DRAIL, DiffAIL, and the baselines"
TRAJS,0.7206572769953051,"For the CARRACING task, we redesigned the model architecture for our DRAIL and all baseline
methods to handle image-based input effectively."
TRAJS,0.7230046948356808,"In CARRACING, the policy for all baselines utilizes a convolutional neural network (CNN) for feature
extraction followed by a multi-layer perceptron (MLP) for action prediction. The CNN consists of
three downsampling blocks with 32, 64, and 64 channels respectively. The kernel sizes for these
blocks are 8, 4, and 3, with strides of 4, 2, and 1, respectively. After feature extraction, the output is
flattened and passed through a linear layer to form a 512-dimensional feature vector representing
the state data. This state feature vector is subsequently processed by an MLP with three layers, each"
TRAJS,0.7253521126760564,"Table 2: Model architectures of policies and discriminators. We report the architectures used for all the
methods on all the tasks. Note that π denotes the neural network policy, D represents a multilayer perceptron
discriminator used in GAIL, GAIL-GP, and WAIL, and Dϕ represents a diffusion model discriminator used in
DiffAIL and our method DRAIL."
TRAJS,0.7276995305164319,"Method
Models
Component
MAZE
FETCHPICK
FETCHPUSH
HANDROTATE
ANTREACH
WALKER BC
π"
TRAJS,0.7300469483568075,"# Layers
3
4
3
4
3
3
Input Dim.
6
16
16
68
132
17
Hidden Dim.
256
256
256
512
256
256
Output Dim.
2
4
3
20
8
6"
TRAJS,0.7323943661971831,"Diffusion Policy
π"
TRAJS,0.7347417840375586,"# Layers
5
5
5
5
6
7
Input Dim.
8
20
19
88
140
23
Hidden Dim.
256
1200
1200
2100
1200
1024
Output Dim.
2
4
3
20
8
6"
TRAJS,0.7370892018779343,"GAIL
&
GAIL-GP D"
TRAJS,0.7394366197183099,"# Layers
3
4
5
4
5
5
Input Dim.
8
20
19
88
140
23
Hidden Dim.
64
64
64
128
64
64
Output Dim.
1
1
1
1
1
1 π"
TRAJS,0.7417840375586855,"# Layers
3
3
3
3
3
3
Input Dim.
6
16
16
68
132
17
Hidden Dim.
64
64
256
64
256
256
Output Dim.
2
4
3
20
8
6 WAIL D"
TRAJS,0.744131455399061,"# Layers
3
4
5
4
5
5
Input Dim.
8
20
19
88
140
23
Hidden Dim.
64
64
64
128
64
64
Output Dim.
1
1
1
1
1
1
Reg. Value ϵ
0
0
0.01
0
0.01
0.1 π"
TRAJS,0.7464788732394366,"# Layers
3
3
3
3
3
3
Input Dim.
6
16
16
68
132
17
Hidden Dim.
64
64
256
64
256
256
Output Dim.
2
4
3
20
8
6"
TRAJS,0.7488262910798122,DiffAIL Dϕ
TRAJS,0.7511737089201878,"# Layers
5
4
5
3
5
5
Input Dim.
8
20
19
88
140
23
Hidden Dim.
128
128
1024
128
1024
1024
Output Dim.
8
20
19
88
140
23 π"
TRAJS,0.7535211267605634,"# Layers
3
3
3
3
3
3
Input Dim.
6
16
16
68
132
17
Hidden Dim.
64
64
256
64
256
256
Output Dim.
2
4
3
20
8
6"
TRAJS,0.755868544600939,DRAIL (Ours) Dϕ
TRAJS,0.7582159624413145,"# Layers
5
4
5
3
5
5
Input Dim.
18
30
29
98
150
33
Hidden Dim.
128
128
1024
128
1024
1024
Output Dim.
8
20
19
88
140
23
Label Dim. |c|
10
10
10
10
10
10 π"
TRAJS,0.7605633802816901,"# Layers
3
3
3
3
3
3
Input Dim.
6
16
16
68
132
17
Hidden Dim.
64
64
256
64
256
256
Output Dim.
2
4
3
20
8
6"
TRAJS,0.7629107981220657,"having a hidden dimension of 256, to predict the appropriate action. In Diffusion Policy, we only use
the downsampling part to extract features."
TRAJS,0.7652582159624414,"Diffusion Policy.
Diffusion Policy represents a policy as a conditional diffusion model, which
predicts an action conditioning on a state and a randomly sampled noise. Our condition diffusion
model is implemented using the diffusers package by von Platen et al. [57]. The state in CARRACING
image of size 64 × 64, so we first use a convolutional neural network (CNN) to extract the feature.
The CNN is based on a U-Net [47] structure, comprising 3 down-sampling blocks. Each block
consists of 2 ResNet [19] layers, with group normalization applied using 4 groups. The channel sizes
for each pair of down-sampling blocks are 4, 8, and 16, respectively."
TRAJS,0.7676056338028169,"Discriminator of GAIL, GAIL-GP, & WAIL.
The discriminators of GAIL, GAIL-GP, and WAIL
are similar to the policy model; the only difference is that the last linear layer outputs a 1-dimensional
value that indicates the probability of a given state-action pair being from the expert demonstrations."
TRAJS,0.7699530516431925,"Discriminator of DiffAIL & DRAIL.
Our diffusion model is implemented using the diffusers
package by von Platen et al. [57]. The architecture of both DiffAIL and DRAIL is based on a U-Net"
TRAJS,0.7723004694835681,"Table 3: Hyperparameters. This table provides an overview of the hyperparameters used for all methods across
various tasks. ηϕ denotes the learning rate of the discriminator, while ηπ denotes the learning rate of the policy."
TRAJS,0.7746478873239436,"Method
Hyperparameter
MAZE
FETCHPICK
FETCHPUSH
HANDROTATE
ANTREACH
WALKER
CARRACING"
TRAJS,0.7769953051643192,"BC
Learning Rate
0.00005
0.0008
0.0002
0.0001
0.001
0.0001
0.0003
Batch Size
128
128
128
128
128
128
128
# Epochs
2000
1000
1000
5000
1000
1000
25000"
TRAJS,0.7793427230046949,"Diffusion Policy
Learning Rate
0.0002
0.00001
0.0001
0.0001
0.00001
0.0001
0.0001
Batch Size
128
128
128
128
128
128
128
# Epochs
20000
20000
10000
2000
10000
5000
100000"
TRAJS,0.7816901408450704,"GAIL
&
GAIL-GP"
TRAJS,0.784037558685446,"ηϕ
0.001
0.00001
0.000008
0.0001
0.0001
0.0000005
0.0001
ηπ
0.0001
0.00005
0.0002
0.0001
0.0001
0.0001
0.0001
Env. Steps
25000000
25000000
5000000
5000000
10000000
25000000
2000000"
TRAJS,0.7863849765258216,"WAIL
ηϕ
0.00001
0.0001
0.00008
0.0001
0.00001
0.0000008
0.0001
ηπ
0.00001
0.0005
0.0001
0.0001
0.0001
0.0001
0.0001
Env. Steps
25000000
25000000
5000000
5000000
10000000
25000000
2000000"
TRAJS,0.7887323943661971,"DiffAIL
ηϕ
0.001
0.0001
0.0001
0.0001
0.0001
0.0001
0.00001
ηπ
0.0001
0.0001
0.00005
0.0001
0.0001
0.0001
0.0001
Env. Steps
25000000
25000000
5000000
5000000
10000000
25000000
20000000"
TRAJS,0.7910798122065728,"DRAIL (Ours)
ηϕ
0.001
0.0001
0.001
0.0001
0.001
0.0002
0.0001
ηπ
0.0001
0.0001
0.0001
0.0001
0.0001
0.0001
0.0001
Env. Steps
25000000
25000000
5000000
5000000
10000000
25000000
20000000"
TRAJS,0.7934272300469484,Table 4: PPO training parameters. This table reports the PPO training hyperparameters used for each task.
TRAJS,0.795774647887324,"Hyperparameter
MAZE
FETCHPICK
FETCHPUSH
HANDROTATE
ANTREACH
WALKER
CARRACING"
TRAJS,0.7981220657276995,"Clipping Range ϵ
0.2
0.2
0.2
0.2
0.2
0.2
0.2
Discount Factor γ
0.99
0.99
0.99
0.99
0.99
0.99
0.99
GAE Parameter λ
0.95
0.95
0.95
0.95
0.95
0.95
0.95
Value Function Coefficient
0.5
0.5
0.5
0.5
0.5
0.5
0.5
Entropy Coefficient
0.0001
0.0001
0.001
0.0001
0.001
0.001
0"
TRAJS,0.8004694835680751,"[47] structure, comprising 3 down-sampling blocks and 3 up-sampling blocks. Each block consists of
2 ResNet [19] layers, with group normalization applied using 4 groups. The channel sizes for each
pair of down-sampling and up-sampling blocks are 4, 8, and 16, respectively. The condition label
is incorporated through class embedding, with the number of classes set to 2, representing the real
label c+ and the fake label c−. Finally, we apply running normalization at the output to ensure stable
training and accurate discrimination."
TRAJS,0.8028169014084507,"To accommodate both image-based state and vector-based action data within the diffusion model,
we flatten the action data into an image with a channel size equivalent to the action dimension.
Subsequently, we concatenate the state and transformed action data as input to the U-Net. In DRAIL,
we use 1 to represent c+ and 0 to represent c−as condition data. For DiffAIL, since condition labels
are not required, we simply assign a constant value of 0 as the condition label."
TRAJS,0.8051643192488263,"G
Training details"
TRAJS,0.8075117370892019,"G.1
Training hyperparamters"
TRAJS,0.8098591549295775,"The hyperparameters employed for all methods across various tasks are outlined in Table 3. The
Adam optimizer [27] is utilized for all methods, with the exception of the discriminator in WAIL, for
which RMSProp is employed. Linear learning rate decay is applied to all policy models."
TRAJS,0.812206572769953,"Due to the potential impact of changing noise levels on the quality of agent data input for the
discriminator, the delicate balance between the discriminator and the AIL method’s policy may be
disrupted. Therefore, we slightly adjusted the learning rate for the policy and the discriminator for
different noise levels on each task. The reported parameters in Table 3 correspond to the noise levels
presented in Figure 4."
TRAJS,0.8145539906103286,"G.2
Reward function details"
TRAJS,0.8169014084507042,"As explained in Section 4.3, we adopt the optimization objective proposed by [12] as diffusion reward
signal for the policy learning in our DRAIL. To maintain fairness in comparisons, we apply the
same reward function to DiffAIL and GAIL. In CARRACING, we observe that adapting GAIL’s
optimization objective could lead to better performance; hence, we use it for DRAIL, DiffAIL, and"
TRAJS,0.8192488262910798,"GAIL. For WAIL, we adhere to the approach outlined in the original paper, wherein the output of the
discriminator directly serves as the reward function."
TRAJS,0.8215962441314554,"In our experiments, we employ Proximal Policy Optimization (PPO) [50], a widely used policy
optimization method, to optimize policies for all the AIL methods. We maintain all hyperparameters
of PPO constant across methods for a given task, except the learning rate, which is adjusted for each
method. The PPO hyperparameters for each task are presented in Table 4."
TRAJS,0.823943661971831,"H
Limitations"
TRAJS,0.8262910798122066,"This work presents an adversarial imitation learning framework DRAIL by employing a diffusion
model as a discriminator. While DRAIL achieves encouraging results in various domains, including
robot arm manipulation, robot hand dexterous manipulation, locomotion, and games, our proposed
framework is fundamentally limited to the learning from demonstration (LfD) setting. That said,
DRAIL requires both state and action sequences and, therefore, cannot learn from videos or state-only
sequences, i.e., learning from observation (LfO). Moreover, DRAIL assumes expert demonstrations
to be optimal, and its performance may not be satisfactory if the demonstrations contain a certain
level of noise or the demonstrators are suboptimal. Finally, DRAIL with its imitation learning nature,
is not designed to learn from environmental rewards; therefore, even when environments can provide
rewards, there is no apparent mechanism to utilize them with the current formulation of DRAIL."
TRAJS,0.8286384976525821,"I
Computational resources and time"
TRAJS,0.8309859154929577,"I.1
Computational resources"
TRAJS,0.8333333333333334,"For our experiments, we used the following three workstations:"
TRAJS,0.8356807511737089,• Machine 1 & Machine 2: ASUS WS880T workstation
TRAJS,0.8380281690140845,"– CPU: an Intel Xeon W-2255 (10C/20T, 19.25M, 4.5GHz) 48-Lane CPU
– GPUs: an NVIDIA RTX 3080 Ti GPU and an NVIDIA RTX 3090 GPU
– Memory: 128GB memory
• Machine 3: ASUS WS880T workstation"
TRAJS,0.8403755868544601,"– CPU: an Intel Xeon W-2255 (10C/20T, 19.25M, 4.5GHz) 48-Lane CPU
– GPUs: two NVIDIA RTX 3080 Ti GPUs
– Memory: 128GB memory"
TRAJS,0.8427230046948356,"I.2
Computational time"
TRAJS,0.8450704225352113,"In the following, we report the total approximate training GPU hours for all algorithms across all
environments, with each algorithm trained on 5 random seeds."
TRAJS,0.8474178403755869,"• Main Experiments: 1945 GPU hours
• Generalization Experiments: 7300 GPU hours
• Data Efficiency Experiments: 2920 GPU hours
• Reward Function Visualization Experiments: 8 GPU hours"
TRAJS,0.8497652582159625,We conducted all the experiments on the following three workstations:
TRAJS,0.852112676056338,"• M1: ASUS WS880T workstation with an Intel Xeon W-2255 (10C/20T, 19.25M, 4.5GHz)
48-Lane CPU, 64GB memory, an NVIDIA RTX 3080 Ti GPU, and an NVIDIA RTX 3090
Ti GPU
• M2: ASUS WS880T workstation with an Intel Xeon W-2255 (10C/20T, 19.25M, 4.5GHz)
48-Lane CPU, 64GB memory, an NVIDIA RTX 3080 Ti GPU, and an NVIDIA RTX 3090
Ti GPU
• M3: ASUS WS880T workstation with an Intel Xeon W-2255 (10C/20T, 19.25M, 4.5GHz)
48-Lane CPU, 64GB memory, and two NVIDIA RTX 3080 Ti GPUs"
TRAJS,0.8544600938967136,"J
Impact statements"
TRAJS,0.8568075117370892,"In this work, we propose a novel adversarial imitation learning framework, diffusion rewards guided
adversarial imitation learning (DRAIL), which integrates a diffusion model into GAIL. The proposed
framework can potentially reinforce the biases captured by expert demonstrations, which can lead to
sub-optimal, unsafe, or even discriminatory behaviors. To address this issue, we encourage future
works to focus on alleviating these issues in imitation learning, e.g., fairness in machine learning, and
responsible AI."
TRAJS,0.8591549295774648,NeurIPS paper checklist
CLAIMS,0.8615023474178404,1. Claims
CLAIMS,0.863849765258216,"Question: Do the main claims made in the abstract and introduction accurately reflect the
paper’s contributions and scope?"
CLAIMS,0.8661971830985915,Answer: [Yes]
CLAIMS,0.8685446009389671,"Justification: Our introduction and abstract accurately outline the contributions of the
paper, which include proposing a novel framework called Diffusion-Reward Adversarial
Imitation Learning (DRAIL). We address the limitations of existing methods, particularly the
brittleness and instability of generative adversarial imitation learning (GAIL), by integrating
diffusion models into the learning process. Our proposedDRAIL framework aims to provide
more robust and smoother rewards for policy learning while enhancing stability in adversarial
training. The abstract and introduction clearly articulate these contributions, aligning with
the experimental results and analyses presented in the paper."
CLAIMS,0.8708920187793427,Guidelines:
CLAIMS,0.8732394366197183,"• The answer NA means that the abstract and introduction do not include the claims
made in the paper.
• The abstract and/or introduction should clearly state the claims made, including the
contributions made in the paper and important assumptions and limitations. A No or
NA answer to this question will not be perceived well by the reviewers.
• The claims made should match theoretical and experimental results, and reflect how
much the results can be expected to generalize to other settings.
• It is fine to include aspirational goals as motivation as long as it is clear that these goals
are not attained by the paper."
LIMITATIONS,0.8755868544600939,2. Limitations
LIMITATIONS,0.8779342723004695,Question: Does the paper discuss the limitations of the work performed by the authors?
LIMITATIONS,0.8802816901408451,Answer: [Yes]
LIMITATIONS,0.8826291079812206,"Justification: We explain several limitations of our proposed DRAIL framework in Ap-
pendix H. These include its restriction to learning from demonstration (LfD) settings, the
requirement for state and action sequences, the assumption of optimal expert demonstrations,
and its inability to leverage environmental rewards."
LIMITATIONS,0.8849765258215962,Guidelines:
LIMITATIONS,0.8873239436619719,"• The answer NA means that the paper has no limitation while the answer No means that
the paper has limitations, but those are not discussed in the paper.
• The authors are encouraged to create a separate ""Limitations"" section in their paper.
• The paper should point out any strong assumptions and how robust the results are to
violations of these assumptions (e.g., independence assumptions, noiseless settings,
model well-specification, asymptotic approximations only holding locally). The authors
should reflect on how these assumptions might be violated in practice and what the
implications would be.
• The authors should reflect on the scope of the claims made, e.g., if the approach was
only tested on a few datasets or with a few runs. In general, empirical results often
depend on implicit assumptions, which should be articulated.
• The authors should reflect on the factors that influence the performance of the approach.
For example, a facial recognition algorithm may perform poorly when image resolution
is low or images are taken in low lighting. Or a speech-to-text system might not be
used reliably to provide closed captions for online lectures because it fails to handle
technical jargon.
• The authors should discuss the computational efficiency of the proposed algorithms
and how they scale with dataset size.
• If applicable, the authors should discuss possible limitations of their approach to
address problems of privacy and fairness."
LIMITATIONS,0.8896713615023474,"• While the authors might fear that complete honesty about limitations might be used by
reviewers as grounds for rejection, a worse outcome might be that reviewers discover
limitations that aren’t acknowledged in the paper. The authors should use their best
judgment and recognize that individual actions in favor of transparency play an impor-
tant role in developing norms that preserve the integrity of the community. Reviewers
will be specifically instructed to not penalize honesty concerning limitations.
3. Theory Assumptions and Proofs"
LIMITATIONS,0.892018779342723,"Question: For each theoretical result, does the paper provide the full set of assumptions and
a complete (and correct) proof?
Answer: [NA]
Justification: This paper does not include theoretical results. We elaborate that the design of
our diffusion discriminative classifier aligns with the GAIL discriminator [21], so learning a
policy with the classifier enjoys the same theoretical guarantee as stated in GAIL.
Guidelines:"
LIMITATIONS,0.8943661971830986,"• The answer NA means that the paper does not include theoretical results.
• All the theorems, formulas, and proofs in the paper should be numbered and cross-
referenced.
• All assumptions should be clearly stated or referenced in the statement of any theorems.
• The proofs can either appear in the main paper or the supplemental material, but if
they appear in the supplemental material, the authors are encouraged to provide a short
proof sketch to provide intuition.
• Inversely, any informal proof provided in the core of the paper should be complemented
by formal proofs provided in appendix or supplemental material.
• Theorems and Lemmas that the proof relies upon should be properly referenced.
4. Experimental Result Reproducibility"
LIMITATIONS,0.8967136150234741,"Question: Does the paper fully disclose all the information needed to reproduce the main ex-
perimental results of the paper to the extent that it affects the main claims and/or conclusions
of the paper (regardless of whether the code and data are provided or not)?
Answer: [Yes]
Justification: We described every step of our method in Section 4.2, and provided the model
architecture and details of how our experiment employed the conditional diffusion model
in Appendix Appendix F. Additionally, we provided the origin of our expert datasets in
Appendix B.
Guidelines:"
LIMITATIONS,0.8990610328638498,"• The answer NA means that the paper does not include experiments.
• If the paper includes experiments, a No answer to this question will not be perceived
well by the reviewers: Making the paper reproducible is important, regardless of
whether the code and data are provided or not.
• If the contribution is a dataset and/or model, the authors should describe the steps taken
to make their results reproducible or verifiable.
• Depending on the contribution, reproducibility can be accomplished in various ways.
For example, if the contribution is a novel architecture, describing the architecture fully
might suffice, or if the contribution is a specific model and empirical evaluation, it may
be necessary to either make it possible for others to replicate the model with the same
dataset, or provide access to the model. In general. releasing code and data is often
one good way to accomplish this, but reproducibility can also be provided via detailed
instructions for how to replicate the results, access to a hosted model (e.g., in the case
of a large language model), releasing of a model checkpoint, or other means that are
appropriate to the research performed.
• While NeurIPS does not require releasing code, the conference does require all submis-
sions to provide some reasonable avenue for reproducibility, which may depend on the
nature of the contribution. For example
(a) If the contribution is primarily a new algorithm, the paper should make it clear how
to reproduce that algorithm."
LIMITATIONS,0.9014084507042254,"(b) If the contribution is primarily a new model architecture, the paper should describe
the architecture clearly and fully.
(c) If the contribution is a new model (e.g., a large language model), then there should
either be a way to access this model for reproducing the results or a way to reproduce
the model (e.g., with an open-source dataset or instructions for how to construct
the dataset).
(d) We recognize that reproducibility may be tricky in some cases, in which case
authors are welcome to describe the particular way they provide for reproducibility.
In the case of closed-source models, it may be that access to the model is limited in
some way (e.g., to registered users), but it should be possible for other researchers
to have some path to reproducing or verifying the results."
OPEN ACCESS TO DATA AND CODE,0.903755868544601,5. Open access to data and code
OPEN ACCESS TO DATA AND CODE,0.9061032863849765,"Question: Does the paper provide open access to the data and code, with sufficient instruc-
tions to faithfully reproduce the main experimental results, as described in supplemental
material?"
OPEN ACCESS TO DATA AND CODE,0.9084507042253521,Answer: [No]
OPEN ACCESS TO DATA AND CODE,0.9107981220657277,"Justification: We plan to release the codes, models, and expert datasets upon acceptance."
OPEN ACCESS TO DATA AND CODE,0.9131455399061033,Guidelines:
OPEN ACCESS TO DATA AND CODE,0.9154929577464789,"• The answer NA means that paper does not include experiments requiring code.
• Please see the NeurIPS code and data submission guidelines (https://nips.cc/
public/guides/CodeSubmissionPolicy) for more details.
• While we encourage the release of code and data, we understand that this might not be
possible, so “No” is an acceptable answer. Papers cannot be rejected simply for not
including code, unless this is central to the contribution (e.g., for a new open-source
benchmark).
• The instructions should contain the exact command and environment needed to run to
reproduce the results. See the NeurIPS code and data submission guidelines (https:
//nips.cc/public/guides/CodeSubmissionPolicy) for more details.
• The authors should provide instructions on data access and preparation, including how
to access the raw data, preprocessed data, intermediate data, and generated data, etc.
• The authors should provide scripts to reproduce all experimental results for the new
proposed method and baselines. If only a subset of experiments are reproducible, they
should state which ones are omitted from the script and why.
• At submission time, to preserve anonymity, the authors should release anonymized
versions (if applicable).
• Providing as much information as possible in supplemental material (appended to the
paper) is recommended, but including URLs to data and code is permitted."
OPEN ACCESS TO DATA AND CODE,0.9178403755868545,6. Experimental Setting/Details
OPEN ACCESS TO DATA AND CODE,0.92018779342723,"Question: Does the paper specify all the training and test details (e.g., data splits, hyper-
parameters, how they were chosen, type of optimizer, etc.) necessary to understand the
results?"
OPEN ACCESS TO DATA AND CODE,0.9225352112676056,Answer: [Yes]
OPEN ACCESS TO DATA AND CODE,0.9248826291079812,"Justification: We have provided the experimental details including task details in Section B,
model architecture and the policy update algorithm in Section F, and training details and
their corresponding parameters in Section G."
OPEN ACCESS TO DATA AND CODE,0.9272300469483568,Guidelines:
OPEN ACCESS TO DATA AND CODE,0.9295774647887324,"• The answer NA means that the paper does not include experiments.
• The experimental setting should be presented in the core of the paper to a level of detail
that is necessary to appreciate the results and make sense of them.
• The full details can be provided either with the code, in appendix, or as supplemental
material."
EXPERIMENT STATISTICAL SIGNIFICANCE,0.931924882629108,7. Experiment Statistical Significance
EXPERIMENT STATISTICAL SIGNIFICANCE,0.9342723004694836,"Question: Does the paper report error bars suitably and correctly defined or other appropriate
information about the statistical significance of the experiments?
Answer: [Yes]
Justification: We ensure statistical significance by including multiple runs with different
random seeds in each experiment. Error bars are included in every figure in the paper, and
we provide numerical results in Table 1. Additionally, we consider confidence intervals to
demonstrate the significance of observed differences.
Guidelines:"
EXPERIMENT STATISTICAL SIGNIFICANCE,0.9366197183098591,"• The answer NA means that the paper does not include experiments.
• The authors should answer ""Yes"" if the results are accompanied by error bars, confi-
dence intervals, or statistical significance tests, at least for the experiments that support
the main claims of the paper.
• The factors of variability that the error bars are capturing should be clearly stated (for
example, train/test split, initialization, random drawing of some parameter, or overall
run with given experimental conditions).
• The method for calculating the error bars should be explained (closed form formula,
call to a library function, bootstrap, etc.)
• The assumptions made should be given (e.g., Normally distributed errors).
• It should be clear whether the error bar is the standard deviation or the standard error
of the mean.
• It is OK to report 1-sigma error bars, but one should state it. The authors should
preferably report a 2-sigma error bar than state that they have a 96% CI, if the hypothesis
of Normality of errors is not verified.
• For asymmetric distributions, the authors should be careful not to show in tables or
figures symmetric error bars that would yield results that are out of range (e.g. negative
error rates).
• If error bars are reported in tables or plots, The authors should explain in the text how
they were calculated and reference the corresponding figures or tables in the text.
8. Experiments Compute Resources"
EXPERIMENT STATISTICAL SIGNIFICANCE,0.9389671361502347,"Question: For each experiment, does the paper provide sufficient information on the com-
puter resources (type of compute workers, memory, time of execution) needed to reproduce
the experiments?
Answer: [Yes]
Justification: We provide detailed information about the computational resources used for the
experiments, including the specific workstations, CPUs, GPUs, and memory configurations,
in Section I.1, and we provide the approximate total GPU hours in Section I.2.
Guidelines:"
EXPERIMENT STATISTICAL SIGNIFICANCE,0.9413145539906104,"• The answer NA means that the paper does not include experiments.
• The paper should indicate the type of compute workers CPU or GPU, internal cluster,
or cloud provider, including relevant memory and storage.
• The paper should provide the amount of compute required for each of the individual
experimental runs as well as estimate the total compute.
• The paper should disclose whether the full research project required more compute
than the experiments reported in the paper (e.g., preliminary or failed experiments that
didn’t make it into the paper).
9. Code Of Ethics"
EXPERIMENT STATISTICAL SIGNIFICANCE,0.9436619718309859,"Question: Does the research conducted in the paper conform, in every respect, with the
NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines?
Answer: [Yes]
Justification: Our research conducted in this paper aligns with the principles outlined in the
NeurIPS Code of Ethics. We have thoroughly reviewed the guidelines and ensured that our
research respects the rights and dignity of individuals, promotes fairness, and prioritizes
societal well-being."
EXPERIMENT STATISTICAL SIGNIFICANCE,0.9460093896713615,Guidelines:
EXPERIMENT STATISTICAL SIGNIFICANCE,0.9483568075117371,"• The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.
• If the authors answer No, they should explain the special circumstances that require a
deviation from the Code of Ethics.
• The authors should make sure to preserve anonymity (e.g., if there is a special consid-
eration due to laws or regulations in their jurisdiction)."
BROADER IMPACTS,0.9507042253521126,10. Broader Impacts
BROADER IMPACTS,0.9530516431924883,"Question: Does the paper discuss both potential positive societal impacts and negative
societal impacts of the work performed?"
BROADER IMPACTS,0.9553990610328639,Answer: [Yes]
BROADER IMPACTS,0.9577464788732394,"Justification: We have considered the potential implications of our work on biases and
discriminatory behaviors, as highlighted in our impact statement (Appendix J)."
BROADER IMPACTS,0.960093896713615,Guidelines:
BROADER IMPACTS,0.9624413145539906,"• The answer NA means that there is no societal impact of the work performed.
• If the authors answer NA or No, they should explain why their work has no societal
impact or why the paper does not address societal impact.
• Examples of negative societal impacts include potential malicious or unintended uses
(e.g., disinformation, generating fake profiles, surveillance), fairness considerations
(e.g., deployment of technologies that could make decisions that unfairly impact specific
groups), privacy considerations, and security considerations.
• The conference expects that many papers will be foundational research and not tied
to particular applications, let alone deployments. However, if there is a direct path to
any negative applications, the authors should point it out. For example, it is legitimate
to point out that an improvement in the quality of generative models could be used to
generate deepfakes for disinformation. On the other hand, it is not needed to point out
that a generic algorithm for optimizing neural networks could enable people to train
models that generate Deepfakes faster.
• The authors should consider possible harms that could arise when the technology is
being used as intended and functioning correctly, harms that could arise when the
technology is being used as intended but gives incorrect results, and harms following
from (intentional or unintentional) misuse of the technology.
• If there are negative societal impacts, the authors could also discuss possible mitigation
strategies (e.g., gated release of models, providing defenses in addition to attacks,
mechanisms for monitoring misuse, mechanisms to monitor how a system learns from
feedback over time, improving the efficiency and accessibility of ML)."
SAFEGUARDS,0.9647887323943662,11. Safeguards
SAFEGUARDS,0.9671361502347418,"Question: Does the paper describe safeguards that have been put in place for responsible
release of data or models that have a high risk for misuse (e.g., pretrained language models,
image generators, or scraped datasets)?"
SAFEGUARDS,0.9694835680751174,Answer: [NA]
SAFEGUARDS,0.971830985915493,"Justification: This paper does not pose risks associated with the release of high-risk data
or models. We use a self-trained gymnasium dataset, which does not involve pre-trained
language models, image generators, or scraped datasets that could be misused. As such,
specific safeguards for data or model release are not necessary in this context."
SAFEGUARDS,0.9741784037558685,Guidelines:
SAFEGUARDS,0.9765258215962441,"• The answer NA means that the paper poses no such risks.
• Released models that have a high risk for misuse or dual-use should be released with
necessary safeguards to allow for controlled use of the model, for example by requiring
that users adhere to usage guidelines or restrictions to access the model or implementing
safety filters.
• Datasets that have been scraped from the Internet could pose safety risks. The authors
should describe how they avoided releasing unsafe images."
SAFEGUARDS,0.9788732394366197,"• We recognize that providing effective safeguards is challenging, and many papers do
not require this, but we encourage authors to take this into account and make a best
faith effort.
12. Licenses for existing assets"
SAFEGUARDS,0.9812206572769953,"Question: Are the creators or original owners of assets (e.g., code, data, models), used in
the paper, properly credited and are the license and terms of use explicitly mentioned and
properly respected?
Answer: [Yes]
Justification: We gave credit to the diffusion model used in our image-based experiments and
the expert datasets for some tasks and cited these papers in Appendix F.2 and Section 5.1.
Guidelines:"
SAFEGUARDS,0.9835680751173709,"• The answer NA means that the paper does not use existing assets.
• The authors should cite the original paper that produced the code package or dataset.
• The authors should state which version of the asset is used and, if possible, include a
URL.
• The name of the license (e.g., CC-BY 4.0) should be included for each asset.
• For scraped data from a particular source (e.g., website), the copyright and terms of
service of that source should be provided.
• If assets are released, the license, copyright information, and terms of use in the package
should be provided. For popular datasets, paperswithcode.com/datasets has
curated licenses for some datasets. Their licensing guide can help determine the license
of a dataset.
• For existing datasets that are re-packaged, both the original license and the license of
the derived asset (if it has changed) should be provided.
• If this information is not available online, the authors are encouraged to reach out to
the asset’s creators.
13. New Assets"
SAFEGUARDS,0.9859154929577465,"Question: Are new assets introduced in the paper well documented and is the documentation
provided alongside the assets?
Answer: [NA]
Justification: This paper does not release new assets.
Guidelines:"
SAFEGUARDS,0.9882629107981221,"• The answer NA means that the paper does not release new assets.
• Researchers should communicate the details of the dataset/code/model as part of their
submissions via structured templates. This includes details about training, license,
limitations, etc.
• The paper should discuss whether and how consent was obtained from people whose
asset is used.
• At submission time, remember to anonymize your assets (if applicable). You can either
create an anonymized URL or include an anonymized zip file.
14. Crowdsourcing and Research with Human Subjects"
SAFEGUARDS,0.9906103286384976,"Question: For crowdsourcing experiments and research with human subjects, does the paper
include the full text of instructions given to participants and screenshots, if applicable, as
well as details about compensation (if any)?
Answer: [NA]
Justification: This paper does not involve crowdsourcing or research with human subjects.
Guidelines:"
SAFEGUARDS,0.9929577464788732,"• The answer NA means that the paper does not involve crowdsourcing nor research with
human subjects.
• Including this information in the supplemental material is fine, but if the main contribu-
tion of the paper involves human subjects, then as much detail as possible should be
included in the main paper."
SAFEGUARDS,0.9953051643192489,"• According to the NeurIPS Code of Ethics, workers involved in data collection, curation,
or other labor should be paid at least the minimum wage in the country of the data
collector.
15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human
Subjects
Question: Does the paper describe potential risks incurred by study participants, whether
such risks were disclosed to the subjects, and whether Institutional Review Board (IRB)
approvals (or an equivalent approval/review based on the requirements of your country or
institution) were obtained?
Answer: [NA]
Justification: This paper does not involve crowdsourcing or research with human subjects.
Guidelines:"
SAFEGUARDS,0.9976525821596244,"• The answer NA means that the paper does not involve crowdsourcing nor research with
human subjects.
• Depending on the country in which research is conducted, IRB approval (or equivalent)
may be required for any human subjects research. If you obtained IRB approval, you
should clearly state this in the paper.
• We recognize that the procedures for this may vary significantly between institutions
and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the
guidelines for their institution.
• For initial submissions, do not include any information that would break anonymity (if
applicable), such as the institution conducting the review."
