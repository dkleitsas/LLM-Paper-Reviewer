Section,Section Appearance Order,Paragraph
ABSTRACT,0.0,Abstract
ABSTRACT,0.0015698587127158557,"This paper argues that continual learning methods can beneﬁt by splitting the
capacity of the learner across multiple models. We use statistical learning theory
and experimental analysis to show how multiple tasks can interact with each other
in a non-trivial fashion when a single model is trained on them. The generalization
error on a particular task can improve when it is trained with synergistic tasks, but
can also deteriorate when trained with competing tasks. This theory motivates our
method named Model Zoo which, inspired from the boosting literature, grows an
ensemble of small models, each of which is trained during one episode of continual
learning. We demonstrate that Model Zoo obtains large gains in accuracy on a wide
variety of continual learning benchmark problems."
INTRODUCTION,0.0031397174254317113,"1
Introduction"
INTRODUCTION,0.004709576138147566,"A continual learner seeks to leverage data from past tasks to learn new tasks shown to it in the future,
and in turn, leverage data from these new tasks to improve its accuracy on past tasks. It stands to
reason that the performance of such a learner would depend upon the relatedness of these tasks. If the
two sets of tasks are dissimilar, learning on past tasks is unlikely to beneﬁt future tasks—it may even
be detrimental. And similarly, new tasks may cause the learner to “forget” and result in deterioration
of accuracy on past tasks. Our goal in this paper is to model the relatedness between tasks and develop
new methods for continual learning that result in good forward-backward transfer by accounting for
similarities and dissimilarities between tasks. Our contributions are as follows.
1. Theoretical analysis. We characterize when multiple tasks can be learned using a single model
and, likewise, when doing so is detrimental to the accuracy of a particular task. The key technical idea
here is to deﬁne a notion of relatedness between tasks. We ﬁrst show how if the inputs of diﬀerent
tasks are “simple” transformations of each other (and likewise for the outputs), then one can learn
a shared feature generator that generalizes better on every task, compared to training that task in
isolation. Such tasks are strongly related to each other and therefore it is beneﬁcial to ﬁt a single
model on all of them. We show that if tasks are not so strongly related, in particular if the optimal
model for one task predicts poorly on another task, then ﬁtting a single model on such tasks may be
worse than training each task in isolation. Such tasks compete with each other for the ﬁxed capacity
in the single model. We also empirically study this competition using the CIFAR-100 dataset.
2. Algorithm development. The above analysis suggests that a continual learner could beneﬁt from
splitting its learning capacity across sets of synergistic tasks. We develop such a continual learner
called Model Zoo. At each episode, a small multi-task model that is ﬁtted to the current task and
some of the past tasks is added to Model Zoo. This method is loosely inspired from AdaBoost in that
it selects tasks that performed poorly in the past rounds and could therefore beneﬁt the most from
being trained with the current task. At inference time, given the task, we average predictions from all
models in the ensemble that were trained on that task.
3. Empirical results. We comprehensively evaluate Model Zoo on existing task-incremental continual
learning benchmark problems and show comparisons with existing methods. There is a wide variety
in the problem settings used by existing methods, e.g., some replay data from past tasks (like Model
Zoo is designed to do), some replay only a subset of data, some train only for one epoch in each
episode, some use extremely small architectures, etc. We compare Model Zoo with existing methods
in a number of these settings. Model Zoo obtains better accuracy than existing methods on the
evaluated benchmarks. Improvement in average per-task accuracy is quite large in some cases,
e.g., 30% for Split-miniImagenet. We also show that Model Zoo demonstrates strong forward and
backward transfer.
4. A critical look at continual learning. We ﬁnd that even an Isolated learner, i.e., one which trains
a (small) model on tasks from each episode and does not perform any continual learning, signiﬁcantly"
INTRODUCTION,0.006279434850863423,Published as a conference paper at ICLR 2022
INTRODUCTION,0.007849293563579277,"5
10
15
20
Number of Tasks 0 25 50 75 100"
INTRODUCTION,0.009419152276295133,Avg. Accuracy (%)
INTRODUCTION,0.01098901098901099,"SGD (47)
EWC (48)
AGEM (52)"
INTRODUCTION,0.012558869701726845,"ER (55)
Stable-SGD (49)
TAG (58)"
INTRODUCTION,0.0141287284144427,"Isolated-small-Single Epoch (66)
Model Zoo-small-Single Epoch (81)
Isolated-Single Epoch (40)"
INTRODUCTION,0.015698587127158554,"Model Zoo- Single Epoch (64)
Isolated-Multi epoch (86)
Model Zoo-Multi Epoch (97)"
INTRODUCTION,0.01726844583987441,Comparison of Methods on Mini-Imagenet
INTRODUCTION,0.018838304552590265,"5
10
15
20
Number of Tasks 0 25 50 75 100"
INTRODUCTION,0.02040816326530612,Task Accuracy (%)
INTRODUCTION,0.02197802197802198,Isolated
INTRODUCTION,0.023547880690737835,"Multi Epoch
Single Epoch"
INTRODUCTION,0.02511773940345369,"Task1
Task5
Task9
Task13
Task17"
INTRODUCTION,0.026687598116169546,Individual Task Accuracies on Split-miniImagenet
INTRODUCTION,0.0282574568288854,"Figure 1: Left: How well do existing continual learning methods work? We track the average accuracy
(over all tasks seen until the current episode) on the Split-miniImagenet dataset and compare our method Model
Zoo and its variants (all in bold) to existing continual learning methods (faint lines, see Table 1 for references).
All methods in this plot (unless speciﬁed otherwise) use the single epoch setting, i.e., each new task is allowed
only 1 epoch of training. Isolated refers to a very simplistic realization of Model Zoo where a separate model is
ﬁtted at each episode without any continual learning, or data sharing between tasks; Isolated-small or Model
Zoo-small refer to using a very small deep network with 0.12M weights. A number of surprising ﬁndings are
seen here. (i) Isolated-small (black) outperforms existing methods by more than 10% margin, while having
a faster training time, inference time, comparable model size and without performing any data replay. This
indicates that existing methods do not suﬃciently leverage data from multiple tasks. This also indicates the
utility of simple methods like Isolated to perform a more prosaic, matter-of-fact, evaluation of continual learning.
(ii) While the larger model with 3.6M weights per round, Isolated-Single Epoch (royal blue), performs poorly, its
accuracy is better than all existing methods (Isolated-Multi Epoch) upon being trained for multiple epochs. This
indicates that existing methods may be severely under-trained in the single-epoch setting and this may not
be the appropriate setting to build continual learning methods; this was also noticed by Lopez-Paz and Ranzato
(2017). (iii) Model Zoo and Model Zoo-small which replay all data from past tasks (A-GEM also replays 10%
of the data), achieves around 10% improvement over its Isolated counterparts in both the single-epoch and
multi-epoch setting; all these 4 methods advocated in this paper are better than existing algorithms. Even
Model Zoo-single epoch which replays past data but trains on the new task only for 1 epoch outperforms existing
methods signiﬁcantly. This indicates that replaying data from past tasks is beneﬁcial (Robins, 1995), even if
replay may not conform to certain stylistic formulations of continual learning in the literature (Farquhar and Gal,
2019a; Kaushik et al., 2021). Not doing so signiﬁcantly hurts forward and backward transfer, and average task
accuracy.
Right: Does the single-epoch setting show forward-backward transfer? The evolution of individual task
accuracy of Model Zoo (the multi-epoch setting in bold and single-epoch setting in dotted), on the Split-
miniImagenet dataset (only 5 tasks are plotted here, see Fig. A6 for the full version). The X markers denote
the accuracy of Isolated. Accuracy of tasks improves with each episode which indicates backward transfer.
Also, the X markers are often below the initial accuracy of the task during continual learning, which indicates
forward transfer. While both single-epoch and multi-epoch Model Zoo show good forward-backward transfer,
the accuracy of tasks for the former is about 25% worse than the latter; corresponding plots for other methods are
in Appendix B.7. This indicates that we should also pay attention to under-training and per-task accuracy in
continual learning.
outperforms most existing continual learning methods on the evaluated benchmark problems, e.g., by
more than 8% in Fig. 1 and Tables 1 and A1. This strong performance is surprising because it is a
very simple learner that has better training/inference time, no data replay, and a comparable number
of weights as that of existing methods.
2
A theoretical analysis of how to learn from multiple tasks"
INTRODUCTION,0.029827315541601257,"In this section, we (i) formulate the problem of learning from multiple tasks, (ii) discuss a simple
model that highlights when training one model on multiple tasks is beneﬁcial, and (iii) show new
results on how the ﬁxed capacity of the model causes competition between tasks.
2.1
Problem Formulation"
INTRODUCTION,0.03139717425431711,"A supervised learning task is deﬁned as a joint probability distribution P(x, y) of inputs x ∈X
and labels y ∈Y . The learner has access to m i.i.d samples S = {xi, yi}i=1,...,m from the task.
A hypothesis is a function h : X →Y with h ∈H being the hypothesis space. The learner may
select a hypothesis that minimizes the empirical risk ˆeS(h) = 1"
INTRODUCTION,0.03296703296703297,"m
Pm
i=1 1{h(xi)̸=yi} with the hope of
achieving a small population risk eP (h) = P(h(x) ̸= y). Classical PAC-learning results (Vapnik,
1998) suggest that with probability at least 1 −δ over draws of the data S, uniformly for any h ∈H,
we have eP (h) ≤ˆeS(h) + ϵ if
m = O
 
(D −log δ) /ϵ2
(1)"
INTRODUCTION,0.03453689167974882,Published as a conference paper at ICLR 2022
INTRODUCTION,0.03610675039246468,"where D = VC(H) is the VC-dimension of the hypothesis space H. We deﬁne the “excess risk”
of a hypothesis as EP (h) = eP (h) −infh∈H eP (h). In the continual learning setting, a new task is
shown to the learner at each episode (or round). Hence after n episodes, the learner is presented with
n tasks ¯P := (P1, . . . , Pn), with the corresponding training sets ¯S := (S1, . . . , Sn), each with m
samples, and the learner selects n hypotheses ¯h = (h1, . . . , hn) ∈Hn, each hi ∈H. If it seeks a
small average population risk e ¯
P (¯h) = 1"
INTRODUCTION,0.03767660910518053,"n
Pn
i=1 ePi(hi), it may do so by minimizing the average
empirical risk ˆe ¯S(¯h) = 1"
INTRODUCTION,0.03924646781789639,"n
Pn
i=1 ˆeSi(hi). As Baxter (2000) shows, under very general conditions, if
m = O
 
ϵ−2 (dH(n) −1/n log δ)

,
(2)
then we have e ¯
P (¯h) ≤e ¯S(¯h) + ϵ for any ¯h ∈Hn. The quantity dH(n) here is a generalized
VC-dimension for the family of hypothesis spaces Hn, which depends on the joint distribution of
tasks. Larger the number of tasks n, smaller the dH(n) (Ben-David and Borbely, 2008). Whether (2)
is an improvement upon training the task in isolation as in (1) depends upon the hypothesis class H
and the relatedness of tasks P1, . . . , Pn through the quantity dH(n). The most important thing to
note here is that according to these calculations, if one wishes to obtain a small average population
risk across tasks, training multiple tasks together cannot be worse: dH(n) ≤VC(H)."
CONTROLLING THE EXCESS RISK OF A SPECIFIC TASK FOR SYNERGISTIC TASKS,0.04081632653061224,"2.2
Controlling the excess risk of a specific task for synergistic tasks"
CONTROLLING THE EXCESS RISK OF A SPECIFIC TASK FOR SYNERGISTIC TASKS,0.0423861852433281,"An important goal of continual learning is to have low risk on all tasks. This is a stronger requirement
than for (2) which bounds the average population risk on all tasks.
Suppose there exists a family F of functions fi : X →X that map the inputs of one task to those
of another, i.e., any task can be written as
Pj(A) = f[Pi](A) = Pi({(f(x), y) : (x, y) ∈A})
for some function f ∈F for any set A. We can assume without loss of generality that F acts as a
group over the hypothesis space and H is closed under its action. In simple words, this entails that
given h ∈H suitable for task P, we can obtain a new hypothesis h ◦f that is suitable for another
task f[P]. Instead of searching over the entire space Hn like in §2.1, we now only need to ﬁnd a
hypothesis h ∈H such that its orbit
[h]F = {h′ : ∃f ∈F with h′ = h ◦f}
contains hypotheses that have low empirical risk on each of the n tasks. Conceptually, this step learns
the inductive bias (Baxter, 2000; Thrun and Pratt, 2012). The sample complexity of doing so is
exactly (2). From within this orbit, we can select a hypothesis that has low empirical risk for a chosen
task P1. The sample complexity of this second step is
|S1| = O
 
ϵ−2 (dmax −log δ)

(3)
where dmax = suph∈H VC([h]F ). By uniform convergence, as Ben-David and Schuller (2003) show,
this two-step procedure assures low excess risk for every task P1, . . . , Pn. We have
suph∈H VC([h]F ) = dmax ≤dH(n + 1) ≤dH(n) ≤D = VC(H).
(4)
The total sample complexity is favorable to that of learning the task in isolation if both dH(n) and
dmax are small. For instance, if F is ﬁnite and n/ log n ≥D, we have dH(n) ≤2 log |F| which
indicates that we get a statistical beneﬁt of learning with multiple tasks if D ≫log |F|."
CONTROLLING THE EXCESS RISK OF A SPECIFIC TASK FOR SYNERGISTIC TASKS,0.04395604395604396,"Remark 1 (Data from other tasks may not improve accuracy even if they are synergistic). Let
us make a few observations using the above analysis. (i) From (4), number of samples per task m
decreases with n; this is the beneﬁt of the strong relatedness among tasks and as we see next, this is not
the case in general. (ii) The number of tasks scales essentially linearly with D, which indicates that
one should use a small model if we have few tasks. (iii) But we cannot always use a small model. If
tasks are diverse and related by complex transformations with a large |F|, we need a large hypothesis
space to learn them together. If |F| is large and H is not appropriately so, the VC-dimension dmax is
as large as D itself; in this case there is again no statistical beneﬁt of training with multiple tasks
together, but there is no deterioration either."
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.04552590266875981,"2.3
Task competition occurs for hypothesis spaces with limited capacity"
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.04709576138147567,"There could be settings under which ﬁtting one model on multiple tasks may not suﬃce. To study
this, we consider a weaker notion of relatedness. We say that two tasks Pi, Pj are ρij-related if"
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.04866562009419152,"c E1/ρij
Pi
(h) ≥EPj(h, h∗
i ), for all h ∈H.
(5)
Here EP (h, h′) := eP (h) −eP (h′) and h∗
i = argminh∈H ePi(h) is the best hypothesis for task Pi;
we set c ≥1 to be a coeﬃcient independent of i, j. Smaller the ρij, more useful the samples from
Pi to learn Pj. The deﬁnition suggests that all hypotheses h which have low excess risk on Pi
also have low excess risk on Pj up to an additive term ePj(h∗) and this eﬀect becomes stronger as
ρij →1+. Note that the deﬁnition of relatedness is not symmetric. Hanneke and Kpotufe (2020) call"
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.05023547880690738,Published as a conference paper at ICLR 2022
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.05180533751962323,"this the transfer exponent. To gain some intuition, we can connect this deﬁnition to a certain triangle
inequality between the tasks developed by Crammer et al. (2008): in the realizable setting where
ePi(h∗
i ) = 0, for c, ρij = 1, we can write (5) as
ePi(h) + ePj(h∗
i ) ≥ePj(h)
which is akin to a triangle with vertices at h, h∗
i and h∗
j with terms like ePi(h) representing the length
of the side between h and h∗
i . This deﬁnition therefore models a set of tasks and hypothesis space
that is not unduly pathological, ePj(h) cannot be much worse than the sum of the other two sides. We
can now show the following theorem bounds the excess risk EP1(h) for a hypothesis h trained using
data from multiple tasks. See Appendix C for the proof."
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.05337519623233909,"Theorem 2 (Task competition). Say we wish to ﬁnd a good hypothesis for task P1 and have access to
n tasks P1, . . . , Pn where each pair Pi, Pj are ρij-related. Arrange tasks in an increasing order of ρi1,
i.e., their relatedness to P1. Let this ordering be P(1), P(2), . . . , P(n) with ρ(1) ≤ρ(2) ≤. . . ≤ρ(n)
and P(1) ≡P1 and ρ(1) = 1. Let ˆhk be the hypothesis that minimizes the average empirical risk of
the ﬁrst k ≤n tasks. Then, with probability at least 1 −δ over draws of the training data,"
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.054945054945054944,EP1(ˆhk) ≤1
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.0565149136577708,"k
Pk
i=1 EP1(h∗
(i)) + c k"
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.058084772370486655,"
e ¯S(h) + c′ 
D−log δ"
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.059654631083202514,"km
1/21/ρmax
(6)"
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.061224489795918366,"where ρmax(k) = max

ρ(1), . . . , ρ(k)
	
and c, c′ are constants."
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.06279434850863422,"Notice that the ﬁrst term grows with the number of tasks k because we pick tasks with lower ρi1
that are more and more dissimilar to P1. The second term typically decreases with k. The empirical
risk e ¯S(h) is typically small; in our experiments with deep networks we achieve essentially zero
training error on all. Increasing the number of tasks k, increases the eﬀective number of samples km,
thereby reducing the second term in totality. At the same time, these new samples are increasingly
more ineﬃcient because ρmax(k) increases with k."
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.06436420722135008,"Remark 3 (Picking the size of the hypothesis space). The ﬁrst and second terms characterize
synergies and competition between tasks and balancing them is the key to good performance on a
given task. Increasing the size of the hypothesis space reduces the ﬁrst term since it allows a single
hypothesis to more easily agree on two distinct distributions Pi and Pj. However, this comes at the
cost of increasing the second term which grows with the size of the hypothesis space."
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.06593406593406594,"Remark 4 (The set of synergistic tasks can be diﬀerent for diﬀerent tasks). The right hand side
in (6) is minimized for a choice of k (where 1 ≤k ≤n) that balances the ﬁrst and second terms.
The optimal k can vary with the task, e.g., for generic tasks most other tasks will be synergistic and
similarly a small optimal k indicates task dissonance where the particular task, say P1 should be
trained on with a speciﬁc set of other tasks. Even for typical datasets like CIFAR-100, it is highly
nontrivial to understand the ideal set of tasks to train with; Fig. 2 studies this experimentally."
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.06750392464678179,"Remark 5 (Continual learning is particularly challenging due to task competition). Theorem 2
indicates that not only is the learner shown tasks sequentially, but it also may have to work against the
competition between the current task and the representation learned on a past task. It does not have
access to synergistic tasks from the future while learning on the current task. And further, in settings
where there is no data replay, the learner cannot beneﬁt from past synergistic tasks explicitly, other
than the representation that it has already learnt. This suggests that one must be even more careful
about how the representation in continual learning should be updated."
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.06907378335949764,"3
Model Zoo: A continual learner that grows its learning capacity"
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.0706436420722135,"Theorem 2 can be thought of as a “no free lunch theorem”. It indicates that ones should not always
expect improved excess risk by combining data from diﬀerent tasks. This theorem also suggests a
way to work around the problem via Remarks 3 and 4. If we learn small models on synergistic tasks,
we can hope to have each task beneﬁt from the synergies without deterioration of accuracy due to task
competition with dissonant tasks. Model Zoo is a simple method that is designed for this purpose.
Let us assume that tasks P1, . . . , Pn are shown sequentially to the continual learner. We assume
that all tasks have the same input domain X but may have diﬀerent output domains Y1, . . . , Yn. At
each “episode” k, Model Zoo is designed to train using the current task Pk and a subset of the past
tasks. For example, at episode k = 2, we train a model with a feature generator h and task-speciﬁc
classiﬁers to obtain models g1 ◦h : X 7→Y1 and g2 ◦h : X 7→Y2. This model can classify inputs
from both tasks and gives out a probability vector pgi◦h(y | x), ∀y ∈Yi depending upon the task. We
assume that the identity of the task is known at the test time."
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.07221350078492936,Published as a conference paper at ICLR 2022
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.07378335949764521,"7
8
9
10
11
12
13
14
15
16
17
18
19
20
Number of tasks trained together"
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.07535321821036106,Electrical Devices
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.07692307692307693,Household Furniture
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.07849293563579278,Insects
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.08006279434850863,Large Carnivores
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.08163265306122448,Man-made Outdoor
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.08320251177394035,Natural Outdoor
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.0847723704866562,Omni-Herbivores
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.08634222919937205,People
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.08791208791208792,Reptiles
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.08948194662480377,Accuracy of fixed subset of tasks
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.09105180533751962,"68.75
69.85
69.30
68.75
70.25
69.65
69.00
67.35
69.05
69.25
69.60
69.75
70.15
70.90"
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.09262166405023547,"65.85
65.60
65.70
66.30
66.25
66.40
66.10
65.80
65.85
65.25
66.90
66.65
67.90"
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.09419152276295134,"68.00
68.95
69.30
68.55
69.15
68.70
68.45
69.75
68.45
70.40
69.35
69.00"
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.09576138147566719,"74.65
75.00
75.20
73.05
73.50
73.50
73.60
73.85
73.70
74.10
73.05"
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.09733124018838304,"78.55
77.55
78.15
79.15
78.35
78.40
77.45
78.00
78.70
79.10"
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.0989010989010989,"79.25
78.25
77.60
78.55
78.40
77.40
78.65
80.05
78.45"
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.10047095761381476,"71.10
67.95
70.10
69.50
69.60
68.70
69.75
70.00"
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.10204081632653061,"42.65
40.80
41.05
41.75
43.20
42.65
41.55"
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.10361067503924647,"58.75
57.70
57.05
57.85
59.25
59.00"
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.10518053375196232,"Figure 2: Competition between tasks in continual learning can be non-trivial. In order to demonstrate how
some tasks help and some tasks hurt each other, we run a multi-task learner for a varying number of tasks (X-axis)
and track the accuracy on a few tasks from CIFAR100 (each task is a superclass). Each cell represents a diﬀerent
experiment, i.e, there is no continual learning being performed here. Cells are colored warm if accuracy is worse
than the median accuracy of that row. For instance, multi-task training with 11 tasks is beneﬁcial for “Man-made
Outdoor” but accuracy drops drastically upon introducing task #12, it improves upon introducing #14, while
task #17 again leads to a drop. One may study the other rows to reach a similar conclusion: there is non-trivial
competition between tasks, even in commonly used datasets. As we show, tackling this eﬀectively is the key to
obtaining good performance on multi-task learning problems. See Appendix B.1 for a more elaborate version."
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.10675039246467818,Model 1
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.10832025117739404,Model 2
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.10989010989010989,"Model 3 P3
P4 P6 P5 P1 P2"
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.11145996860282574,"Figure 3: Ideally, we want to train synergis-
tic tasks together, e.g., Model 1 for P1 using
P3, P6 and Model 3 for P3 using P1, P4, P5.
At test time, all models (1, 2, 3) that were
trained on a particular task, say P1 would
make predictions. Model Zoo is a simple,
scalable instantiation of this idea. Discov-
ering noncompeting tasks is diﬃcult, so it
selects tasks that have high training loss under
the current ensemble."
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.1130298273155416,"Let the set of tasks considered at episode k be de-
noted by ¯Pk = {Pω1
k, . . . , Pωb
k} where b ≤k is a hyper-
parameter and ωi
k ∈{1, . . . , k}.
Training on ¯Pk will
involve, like the example above, training one model with a
feature generator hk and task-speciﬁc classiﬁers gk,ωi
k for
each task selected in that round. Such models, one trained
in each round, together form the “Model Zoo”. After k
rounds, data from, say, Pi with i ≤k can be predicted
using the average of class probabilities output by all models
that were ﬁtted on that task, i.e.,
pk,i(y | x) ∝Pk
l=1 1{Pi∈¯
Pl} gl,i ◦hl(x).
(7)"
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.11459968602825746,"This expression is also used to predict at test time.
Selecting tasks to train with for each round using boost-
ing. In principle, we could use the transfer exponents ρij
to select synergistic tasks, but computing the transfer ex-
ponents is essentially as diﬃcult as training on all tasks, a
continual learning does not have access to all tasks a priori.
We therefore develop an automatic way to select tasks in
each round. We draw inspiration from boosting (Schapire
and Freund, 2013) for this purpose. Recall the AdaBoost algorithm which builds an ensemble of
weak learners (they can be any learner in principle Mason et al. (1999)), each of which is ﬁtted
upon iteratively re-weighted training data (Breiman, 1998). We think of the models learned at each
episode of continual learning in Model Zoo as the “weak learners” and each round of boosting as the
equivalent of each episode of continual learning. Let ¯wk ∈Rn be a normalized vector of task-speciﬁc
weights. After episode k"
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.11616954474097331,"¯wk,i ∝exp

−1/m P"
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.11773940345368916,"(x,y)∈Si log pk,i(y | x)

.
(8)"
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.11930926216640503,"for each task Pi with i ≤k; for i > k, ¯wk,i = 0. Tasks for the next round ¯Pk+1 are drawn from
a multinomial distribution with weights ¯wk. Therefore, tasks with a low empirical risk under the
current Model Zoo get a low weight for the next boosting round. Just like AdaBoost drives down
the training error on all samples to zero exponentially (Schapire and Freund, 2013) by iteratively
focusing upon diﬃcult-to-classify samples, Model Zoo achieves a low empirical risk on all tasks as
more models are added.
The key feature of Model Zoo is that it automatically splits the capacity across sets of tasks.
Even if competing tasks are chosen in one round, which may result in high excess risk on some task, it
will be chosen again in future rounds if it has a large error under the ensemble. Colloquially speaking,
the ensemble in Model Zoo represents a “brain” that grows its learning capacity continually as more
tasks are shown to it."
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.12087912087912088,"Remark 6 (Assumptions in the formulation of Model Zoo). We assume that, both at training time
and test time, the identity of the task is known to the continual learner. Data from past tasks is also"
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.12244897959183673,Published as a conference paper at ICLR 2022
TASK COMPETITION OCCURS FOR HYPOTHESIS SPACES WITH LIMITED CAPACITY,0.12401883830455258,"stored with the task identity. This is known as the task-incremental setting in the literature (Van de
Ven and Tolias, 2019). Recent work in continual learning also studies settings where such task identity
is not known, e.g., (Kaushik et al., 2021), Model Zoo is not designed to handle such settings.
4
Empirical Validation"
SETUP,0.12558869701726844,"4.1
Setup
Datasets. ∗We evaluate on Rotated-MNIST (Lopez-Paz and Ranzato, 2017), Split-MNIST (Zenke
et al., 2017), Permuted-MNIST (Kirkpatrick et al., 2017), Split-CIFAR10 (Zenke et al., 2017),
Split-CIFAR100 (Zenke et al., 2017), Coarse-CIFAR100 (Rosenbaum et al., 2017; Yoon et al.,
2019; Shanahan et al., 2021) and Split-miniImagenet (Vinyals et al., 2016; Chaudhry et al., 2019b).
Split-MNIST, Split-CIFAR10, Split-CIFAR100 and Split-miniImagenet use consecutive groups of
labels (2, 2, 5 and 10, respectively) to form tasks. Coarse-CIFAR100 is a variant of CIFAR100 where
each super-class is considered a diﬀerent task (Yoon et al., 2019; 2021; Shanahan et al., 2021). Our
study in Fig. 2 has found that Coarse-CIFAR100 is a diﬃcult dataset for continual learning, perhaps
because of the semantic diﬀerences among the diﬀerent super-classes.
Neural architectures and training methodology. We use a small wide-residual network
of Zagoruyko and Komodakis (2016) (WRN-16-4 with 3.6M weights) with task-speciﬁc classi-
ﬁers (one fully-connected layer). We also use an even smaller network (0.12M weights) with 3
convolution layers (kernel size 3 and 80 ﬁlters) interleaved with max-pooling, ReLU, batch-norm layers,
with task-speciﬁc classiﬁer layers. Stochastic gradient descent (SGD) with Nesterov’s momentum
and cosine-annealed learning rate is used to train all models in mixed precision. Ray Tune (Liaw
et al., 2018) was used for hyper-parameter tuning using a multi-task learning model on all tasks from
Coarse CIFAR-100. When we do full replay, Model Zoo samples b = min(k, 5) tasks at the kth
episode; for problems with n = 5 tasks, we set b = 2; note that b = 1 indicates no data replay. All
hyper-parameters are kept ﬁxed for all datasets and all experiments (see §4.2).
See Appendix A for more details.
4.2
Evaluating continual learning methods"
SETUP,0.1271585557299843,"There is a wide variety of problem formulations in the continual learning literature (Farquhar and Gal,
2019a; Prabhu et al., 2020; Vogelstein et al., 2020; Lopez-Paz and Ranzato, 2017; Van de Ven and
Tolias, 2019). Formulations vary with respect to whether they allow replaying data from past tasks,
the number of epochs the learner is allowed to train each task for, and the capacity of the model being
ﬁtted. We next explain these diﬀerent formulations, the rationale behind them, and how we execute
Model Zoo to conform to each of these settings."
SETUP,0.12872841444270017,"(i) The strict formulation, e.g., Kirkpatrick et al. (2017); Kaushik et al. (2021), does not allow
any replay of data. For the strict formulation of Model Zoo, we simply set ¯wk,i = 0 for all i ̸= k in (8).
At each episode, a single model is trained on the current task and added to the zoo—we call this rather
simplistic learner Isolated. From a practical standpoint, such a formulation imposes a constraint on
the amount of computational resources (compute and/or memory) available during training."
SETUP,0.130298273155416,"(ii) One can replay data to various degrees, e.g., all of it (Nguyen et al., 2017; Guo et al.,
2020b), or a subset of it (Chaudhry et al., 2019a). Just like AdaBoost, Model Zoo is fundamentally
designed to allow full replay of past tasks. However, we can easily execute it with limited replay by
only using a subset of the data to compute gradient updates and also the accuracy on past tasks in the
kth episode. We use the nomenclature Model Zoo (10% replay) to indicate that only 10% of the data
from past tasks is used; algorithms like A-GEM (Chaudhry et al., 2019a) also use 10% of past data on
CIFAR100 datasets. See Appendix A.4 for implementation details. Note that Model Zoo without
any data replay is simply Isolated. Let us emphasize that across all these problem settings, Model
Zoo remains a legitimate continual learner because it gets access to each task sequentially and has a
ﬁxed computational budget (b tasks) at each episode. For a multi-task learner, the computational
complexity scales with the number of tasks."
SETUP,0.13186813186813187,"(iii) To impose a strict constraint on the computational complexity of each episode some works,
e.g., Chaudhry et al. (2019a), train each task for a single epoch. We therefore show results using
both Model Zoo (single epoch) (where we replay past data for 1 epoch) and Isolated (single epoch)
(no replay). Even if the rationale behind using each datum only once is well-taken, one single
epoch is quite insuﬃcient to train modern deep networks; if one thinks of biological considerations,"
SETUP,0.13343799058084774,"∗Some works (Rebuﬃet al., 2017; Lopez-Paz and Ranzato, 2017; Chaudhry et al., 2019a; Mirzadeh et al.,
2020b) evaluate on a split of the CIFAR100 dataset where each task is random subset of 5 classes. We do not
evaluate on this variant because it is diﬃcult to exactly reproduce the composition of tasks; as Fig. 2 suggests
diﬀerent compositions can have vastly diﬀerent task accuracy. This is also highlighted by large diﬀerences in the
accuracy on Split-CIFAR100 and Coarse-CIFAR100 in our work."
SETUP,0.13500784929356358,Published as a conference paper at ICLR 2022
SETUP,0.13657770800627944,"Method
Replay Single- Rotated- Permuted-
Split-
Split-
Split-
Coarse-
Split-
epoch
MNIST
MNIST MNIST CIFAR10 CIFAR100 CIFAR100 miniImagenet"
SETUP,0.13814756671899528,"EWC (Kirkpatrick et al., 2017)


•84
•96.9
-
-
•42.40
-
46.69
GEM (Lopez-Paz and Ranzato, 2017)


86.07
82.60
-
-
∗67.8
-
51.86
A-GEM (Chaudhry et al., 2019a)


-
89.1
-
-
∗62.3
-
61.13
Stable-SGD (Mirzadeh et al., 2020b)


70.8
80.1
-
-
∗59.9
-
57.79
ER-Reservoir (Chaudhry et al., 2019b)


-
79.8
-
-
∗68.5
-
64.03
MEGA-II (Guo et al., 2020a)


-
91.20
-
-
66.12
-
-
RMN (Kaushik et al., 2021)


-
97.73
99.5
-
80.01
-
-
APD (Yoon et al., 2019)


-
-
-
-
-
56.81
-"
SETUP,0.13971742543171115,"Our methods
Isolated-small


-
-
-
96.88
90.18
69.07
82.48
Model Zoo-small


-
-
-
96.85
92.06
73.72
94.27
Model Zoo-small (10% replay)


-
-
-
96.58
89.76
77.18
84.6
Isolated-Resnet18-S


-
-
-
-
88.95
-
-
Model Zoo-Resnet18-S


-
-
-
-
93.15
-
-
Isolated


99.64
98.03
99.98
97.46
91.90
80.72
86.28
Model Zoo


99.66
97.71
99.97
98.68
94.99
84.27
96.84"
SETUP,0.141287284144427,"Multi-Head (multi-task)
99.66
98.16
99.98
98.11
95.38
83.19
90.83
Table 1: Average per-task accuracy (%) at the end of all episodes. MNIST, Permuted-MNIST and Rotated-
MNIST are not informative benchmarks for judging forward and backward transfer because even Isolated
achieves 99%+ accuracy. Model Zoo outperforms, by signiﬁcant margins, all existing continual learning methods
on all datasets. Accuracy of existing methods is worse than Isolated which suggests little to no forward or
backward transfer. Model Zoo-small and Isolated-small have comparable number of weights as that of existing
methods, and in some cases, much fewer. Model Zoo-Resnet18-S and Isolated-Resnet18-S, make use of the
Resnet18-S architecture from Lopez-Paz and Ranzato (2017). Both Model Zoo/Isolated have similar accuracies
on Split-CIFAR100 with 3 diﬀerent architectures and all of them are better than existing methods. This indicates
that the improvement in accuracy is not a result of the speciﬁc choice of architecture. For single-epoch numbers
refer to Fig. 1 and Table 2. Note: ∗indicates that the evaluation was on Split-CIFAR100 with each task containing
randomly sampled labels and is hence it is not directly comparable to other methods. All numbers without a
marker are from the paper cited in the ﬁrst column. • denotes that the accuracy is not from the original paper but
from one of (Nguyen et al., 2017; Serra et al., 2018; Chaudhry et al., 2019a). Numbers for other methods on
Split-MiniImagenet were computed by us using open-source implementations of the original authors.
local-descent algorithms like stochastic gradient descent (SGD) are quite diﬀerent from recurrent
circuits in the biological brain (Kietzmann et al., 2019). We also run single epoch methods using a
very small model (0.12M weights); these are Model Zoo/Isolated-small (single epoch)."
SETUP,0.14285714285714285,"(iv) Multi-Head trains one single model on all tasks to minimize the average empirical risk with
task-speciﬁc classiﬁers; mini-batches contain samples from diﬀerent tasks. Since Multi-Head is
trained on all tasks together, it is not a continual learner, but its accuracy is expected to be an upper
bound on the accuracy of continual learning methods.
Evaluation criteria. We compare algorithms in terms of the validation accuracy averaged across all
tasks at the end of all episodes, average per-task forward transfer (accuracy on a new task when it
is ﬁrst seen, larger this number more the forward transfer), average per-task forgetting (gap in the
maximal accuracy of a task during continual learning and its accuracy at the end, larger this number
more the forgetting and worse the backward transfer), training and inference time, and memory. Let
us note that forward transfer is also sometimes called “learning accuracy” (Riemer et al., 2018), and
another measure of backward transfer is the gap between the accuracy at the end of training and the
initial accuracy of the task."
RESULTS,0.14442700156985872,"4.3
Results"
RESULTS,0.14599686028257458,"Table 1 shows the validation accuracy of diﬀerent continual learning methods on standard benchmark
problems. There are many striking observations here."
RESULTS,0.14756671899529042,"(i) Accuracy of existing methods compared to in Table 1 (see Table A1 as well) is poorer than
Isolated. This is surprising because Isolated can be thought of as the simplest possible continual
learner—one that unfreezes new capacity at each episode and does not replay data. This indicates
that existing methods may be failing to achieve forward or backward transfer compared to simply
training the task in isolation; Table 2 investigates this further."
RESULTS,0.14913657770800628,"(ii) In comparison, Model Zoo (all three variants: small, small with 10% data replay and the
standard method) has better accuracy compared to both existing methods as well as Isolated.
This shows the utility of splitting the capacity of the learner across multiple tasks."
RESULTS,0.15070643642072212,"(iii) Model Zoo matches the accuracy of the multi-task learner in the last row of Table 1 which
has access to all tasks beforehand. Surprisingly, Model Zoo performs better than Multi-Head in
spite of being trained in continual fashion, especially on harder problems like Coarse-CIFAR100
and Split-miniImagenet. This is a direct demonstration of the eﬀectiveness of Model Zoo in mitigating
task competition: the capacity splitting mechanism not only avoids catastrophic forgetting, but it can
also leverage data from other tasks even if they are shown sequentially."
RESULTS,0.152276295133438,Published as a conference paper at ICLR 2022
RESULTS,0.15384615384615385,"Table 2 shows a comparison of the methods developed in this paper with existing methods on
Split-CIFAR100 in terms of continual-learning speciﬁc metrics. We ﬁnd:"
RESULTS,0.1554160125588697,"(i) There are no signiﬁcant diﬀerences in the forward transfer performance in the single epoch
setting; larger variants of Isolated and Model Zoo do not work well here because a single epoch is not
suﬃcient to train modern deep networks. But Model Zoo and variants show less forgetting, it
is essentially zero. This indicates that although existing methods are designed to avoid forgetting
(the single epoch setting aids this directly), say, A-GEM, or EWC, they do forget. Forgetting can
be mitigated by the capacity splitting mechanism in Model Zoo. The per-task accuracy of existing
methods is also rather low compared to Model Zoo variants."
RESULTS,0.15698587127158556,"(ii) If our methods are implemented in the multi-epoch setting, then the forward transfer is
exceptionally good and almost as good as the average accuracy of the task. Surprisingly, this does
not come at the cost of forgetting, which is again essentially zero."
RESULTS,0.15855572998430142,"(iii) Even if Model Zoo and its variants are implemented with very small models (0.12M
weights/episode, which is 2.42M weights/20 episodes), the accuracy is better (Table 1). This
suggests that Model Zoo is a performant and viable approach to continual learning. In fact, even
the larger model used in Model Zoo is a WRN-16-4 with 3.6M weights and therefore we can train
multiple models on the same GPU easily; this is why the training time of Model Zoo is about the
same as that of Model Zoo-small."
RESULTS,0.16012558869701726,"(iv) The simplicity of Model Zoo and its variants results in much smaller training times and
comparable inference times as compared to existing methods."
RESULTS,0.16169544740973313,"Method
Inference Training
Storage
Metrics (Multi Epoch)
Metrics (Single Epoch)
time
time Samples #Weights Accuracy Forgetting Forward Accuracy Forgetting Forward
(ms/sample)
(min)
(%)
(M)
(%)
(%)
(%)
(%)
(%)
(%)"
RESULTS,0.16326530612244897,"EWC
10.34
50
0
1.6
-
-
-
42.4
17.52
67.76
Prog-NN
-
82
0
23.7
-
-
-
59.2
0.0
59.2
GEM
10.34
1048
5–10
1.6
-
-
-
61.2
6.0
67.61
A-GEM
10.34
88
5–10
1.6
-
-
-
62.3
7.0
70.13
RMN
2712.4
-
0
11.5
80.01
-
-
-
-
-"
RESULTS,0.16483516483516483,"Our methods
Isolated-small
2.34
17.09
0
2.42
90.18
0.0
91.18
71.6
0.0
71.6
Model Zoo-small
11.70
31.71
100
2.42
92.28
0.17
90.0
73.67
0.20
71.91
Model Zoo-small (10% replay)
11.70
22.41
10
2.42
89.76
0.22
89.8
71.09
0.69
70.5
Isolated
2.34
20.76
0
54.8
91.9
0.0
91.0
50.43
0.0
50.43
Model Zoo
31.84
41.86
100
54.8
94.99
0.21
94.02
57.67
0.81
56.58
Table 2: A comparison of continual learning evaluation metrics on Split-CIFAR100 for existing methods
and the methods developed in this paper. Our methods demonstrate strong forward and backward transfer, high
per-task accuracy, smaller training times and comparable inference times. Training times of other methods are
from Chaudhry et al. (2019a) and it is the total training time in minutes for all tasks. The Inference time is the
per sample prediction latency averaged over 50 mini-batches of size 16. See Appendix A.5 for more details."
RESULTS,0.1664050235478807,"Replay
Split-
Split-
(%)
CIFAR100
miniImagenet"
RESULTS,0.16797488226059654,"0
71.91
65.80
1
70.48
67.18
5
71.33
70.71
10
71.97
74.22
100
73.67
81.05"
RESULTS,0.1695447409733124,"# Tasks (b)
Split-
Split-
(100% replay)
CIFAR100
miniImagenet"
RESULTS,0.17111459968602827,"1
71.91
65.02
2
72.26
67.33
5
73.67
81.05
7
73.97
88.76
9
74.13
84.9"
RESULTS,0.1726844583987441,"Method
Model
Ensemble of"
RESULTS,0.17425431711145997,Zoo Isolated (100×)
RESULTS,0.17582417582417584,"Split-CIFAR100
73.67
71.46"
RESULTS,0.17739403453689168,"Split-miniImagenet
81.05
67.26"
RESULTS,0.17896389324960754,"Figure 4: Ablation studies that show the average per-task accuracy as we vary the size of data replay for Model
Zoo (left), the number of past tasks sampled at each episode (middle, b = 1 implies no replay), and compare
Model Zoo with an ensemble of Isolated models (right). These results are for the single-epoch setting and
are therefore directly comparable to those in Table 2 and Table 1 as far as comparison to other methods is
concerned. Accuracy is roughly the same on Split-CIFAR100 across varying degrees of replay while it improves
signiﬁcantly on Split-miniImagenet; this suggests that Model Zoo also works with very small amounts of data
replay. Accuracy on Split-CIFAR100 is consistent as the number of replay tasks is changed but increases on
larger datasets like Split-miniImagenet where there are many more tasks. Finally, the performance of Model Zoo
is not merely an artifact of ensembling. Even if Isolated is a strong model, a very large ensemble of Isolated
compares poorly to Model Zoo with 100% replay; this indicates that Model Zoo can eﬀectively leverage data
from past tasks without forgetting. See the Appendix for more ablation studies."
RELATED WORK,0.18053375196232338,"5
Related Work"
RELATED WORK,0.18210361067503925,"Theoretical work on learning from multiple tasks. Works such as Baxter (2000); Maurer (2006),
or recent ones like Du et al. (2020); Tripuraneni et al. (2020) study a shared feature generator with
task-speciﬁc classiﬁers, and show that the sample complexity of learning a task improves if true
task-speciﬁc classiﬁers are diverse enough. It is also appreciated that such a shared feature generator
may not exist for dissimilar tasks. So a diﬀerent perspective on the problem can found in Crammer
et al. (2008); Ben-David et al. (2010); Ben-David and Borbely (2008) who show that learning diverse"
RELATED WORK,0.1836734693877551,Published as a conference paper at ICLR 2022
RELATED WORK,0.18524332810047095,"tasks requires a larger feature generator and, thereby, more samples; we discuss this in §2.2. We
build upon Hanneke and Kpotufe (2019; 2020) to construct the transfer exponent in §2; their work
shows that even in very favorable settings, e.g., when all tasks have the same optimal classiﬁer, having
access to a large number of tasks may not help. Model Zoo is strongly inﬂuenced from these results
and we think of it as essentially a way to circumvent them.
There are a number of algorithmic tools to estimate task relatedness, e.g., Evgeniou et al. (2005);
Cavallanti et al. (2010); Kumar and Daume III (2012), and although such methods are popular in
transfer learning (Pentina and Lampert, 2015; Jaakkola and Haussler, 1999), one cannot apply them
in continual learning because we do not know the tasks beforehand. As §2 shows, task relatedness is
critical to good learning. So, taking inspiration from AdaBoost (Schapire and Freund, 2013), Model
Zoo uses a simple indicator of which past tasks can beneﬁt from future ones, these are the ones with
low accuracy under the current ensemble.
Catastrophic forgetting. has been the focus of a number of continual learning techniques, e.g.,
episodic memory-based ones (Lopez-Paz and Ranzato, 2017; Chaudhry et al., 2019a; Farajtabar
et al., 2020; Guo et al., 2020a), data replay (Robins, 1995; Shin et al., 2017; Lee et al., 2017), new
architectures (Serra et al., 2018), generative replay-based (Mocanu et al., 2016; Shin et al., 2017; Liu
et al., 2020; Ven et al., 2020), ensemble-based (Aljundi et al., 2017; Wen et al., 2020) and methods that
select locally-redundant directions in the weight space (Kirkpatrick et al., 2017; Aljundi et al., 2018;
Mallya et al., 2018; Zenke et al., 2017; Chaudhry et al., 2018). Variational methods, e.g., (Nguyen
et al., 2017; Farquhar and Gal, 2019b), sequentially update a posterior over the weights and have an
elegant foundation in Bayesian methods but implementing them for large datasets remains a challenge.
In spite of intense activity, an eﬀective solution to forgetting remains largely unknown.
Model Zoo embraces the fact that forgetting is a fundamental phenomenon of learning multiple
tasks and therefore splitting the capacity may be essential; our results indicate that this approach
is eﬀectively at tackling forgetting. This approach also signiﬁcantly improves other key metrics,
e.g., forward-backward transfer and computational complexity of training and inference that have
received limited attention (Díaz-Rodríguez et al., 2018). Let us note that Model Zoo is designed for
the task-incremental continual learning setting (Van de Ven and Tolias, 2019).
Parameter sharing/isolation. A single shared feature generator (i.e., hard parameter sharing) is a
popular architecture (Kirkpatrick et al., 2017; Lopez-Paz and Ranzato, 2017; Rebuﬃet al., 2017;
Nguyen et al., 2017; Mirzadeh et al., 2020b; Chaudhry et al., 2019b). It has been recognized that this
is not suﬃcient; this has given rise to methods for soft-parameter sharing that either design or learn
specialized routing architectures (Rosenbaum et al., 2017; Sun et al., 2019; Fernando et al., 2017;
Devin et al., 2017; Misra et al., 2016; Vandenhende et al., 2019). Model Zoo is a very simplistic
instantiation of parameter isolation, or growing (Rusu et al., 2016; Mallya and Lazebnik, 2018; Xu
and Zhu, 2018). Model Zoo trains on one episode and never updates the model again but its accuracy
does play a role in determining whether a new model should be used for that past task, or not. To
extend the analogy, just like soft-parameter sharing architectures use, say gradient conﬂict (Aljundi
et al., 2018) or attention (Serra et al., 2018), to determine which synapses to share, Model Zoo uses
the training loss of the ensemble to decide what task the new model should be trained upon. It is
remarkable that such a simple instantiation performs so well; this has not been noticed before.
6
Discussion"
RELATED WORK,0.18681318681318682,"Continual learning is an important problem as deep learning systems transition from the traditional
paradigm of having a ﬁxed model that makes inferences on user queries to settings where we would
like to update the model to handle new types of queries. The key desiderata of such a system are
clear: it must display high per-task accuracy and strong forward-backward transfer. This paper seeks
to develop such a continual learner and investigates the problem using the lens of task relatedness. It
argues that the learner must split its capacity across sets of tasks to mitigate competition between
tasks and beneﬁt from synergies among them. We develop Model Zoo, which is a continual learning
algorithm inspired by AdaBoost, that grows an ensemble of models, each of which is trained on
data from the current episode along with a subset of past tasks. We show that across a wide
variety of datasets, problem formulations, and evaluation criteria, Model Zoo and its variants
outperform existing continual learning methods. We also show that a simple baseline method,
where a separate, small model is trained independently in each episode, outperforms a number of
existing continual methods. Appendix D discusses these results further."
RELATED WORK,0.18838304552590268,Published as a conference paper at ICLR 2022
ETHICS STATEMENT,0.18995290423861852,"7
Ethics Statement"
ETHICS STATEMENT,0.19152276295133439,This work does not raise any ethical concerns.
REPRODUCIBILITY STATEMENT,0.19309262166405022,"8
Reproducibility Statement"
REPRODUCIBILITY STATEMENT,0.1946624803767661,"To ensure the reproducability of our work, the full source code is available at https://github.
com/rahul13ramesh/modelzoo_continual. The code contains scripts to download all datasets,
implementations of diﬀerent variants of our method discussed in the paper, scripts for hyper-parameter
tuning, and data analysis. We note here that we use the same set of hyper-parameters for all our
experiments; this will help other researchers reproduce our results."
REFERENCES,0.19623233908948196,References
REFERENCES,0.1978021978021978,"Aljundi, R., Babiloni, F., Elhoseiny, M., Rohrbach, M., and Tuytelaars, T. (2018). Memory aware synapses:
Learning what (not) to forget. In Proceedings of the European Conference on Computer Vision (ECCV), pages
139–154."
REFERENCES,0.19937205651491366,"Aljundi, R., Chakravarty, P., and Tuytelaars, T. (2017). Expert gate: Lifelong learning with a network of experts.
In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, pages 3366–3375."
REFERENCES,0.20094191522762953,"Baxter, J. (2000). A model of inductive bias learning. Journal of artiﬁcial intelligence research, 12:149–198."
REFERENCES,0.20251177394034536,"Ben-David, S., Blitzer, J., Crammer, K., Kulesza, A., Pereira, F., and Vaughan, J. W. (2010). A theory of learning
from diﬀerent domains. Machine learning, 79(1-2):151–175."
REFERENCES,0.20408163265306123,"Ben-David, S. and Borbely, R. S. (2008). A notion of task relatedness yielding provable multiple-task learning
guarantees. Machine learning, 73(3):273–287."
REFERENCES,0.20565149136577707,"Ben-David, S. and Schuller, R. (2003). Exploiting task relatedness for learning multiple tasks. In Proceedings of
the 16th Annual Conference on Learning Theory."
REFERENCES,0.20722135007849293,"Breiman, L. (1998). Arcing classiﬁer (with discussion and a rejoinder by the author). Annals of Statistics,
26(3):801–849."
REFERENCES,0.2087912087912088,"Cavallanti, G., Cesa-Bianchi, N., and Gentile, C. (2010). Linear algorithms for online multitask classiﬁcation.
The Journal of Machine Learning Research, 11:2901–2934."
REFERENCES,0.21036106750392464,"Chaudhry, A., Dokania, P. K., Ajanthan, T., and Torr, P. H. (2018). Riemannian walk for incremental learning:
Understanding forgetting and intransigence. In Proceedings of the European Conference on Computer Vision
(ECCV), pages 532–547."
REFERENCES,0.2119309262166405,"Chaudhry, A., Ranzato, M., Rohrbach, M., and Elhoseiny, M. (2019a). Eﬃcient lifelong learning with a-gem. In
ICLR."
REFERENCES,0.21350078492935637,"Chaudhry, A., Rohrbach, M., Elhoseiny, M., Ajanthan, T., Dokania, P. K., Torr, P. H., and Ranzato, M. (2019b).
On tiny episodic memories in continual learning. arXiv preprint arXiv:1902.10486."
REFERENCES,0.2150706436420722,"Crammer, K., Kearns, M., and Wortman, J. (2008). Learning from multiple sources. Journal of Machine
Learning Research, 9(8)."
REFERENCES,0.21664050235478807,"Devin, C., Gupta, A., Darrell, T., Abbeel, P., and Levine, S. (2017). Learning modular neural network policies
for multi-task and multi-robot transfer. In 2017 IEEE International Conference on Robotics and Automation
(ICRA), pages 2169–2176. IEEE."
REFERENCES,0.21821036106750394,"Díaz-Rodríguez, N., Lomonaco, V., Filliat, D., and Maltoni, D. (2018). Don’t forget, there is more than forgetting:
new metrics for continual learning. arXiv preprint arXiv:1810.13166."
REFERENCES,0.21978021978021978,"Du, S. S., Hu, W., Kakade, S. M., Lee, J. D., and Lei, Q. (2020). Few-Shot Learning via Learning the
Representation, Provably. arXiv:2002.09434 [cs, math, stat]."
REFERENCES,0.22135007849293564,"Evgeniou, T., Micchelli, C. A., Pontil, M., and Shawe-Taylor, J. (2005). Learning multiple tasks with kernel
methods. Journal of machine learning research, 6(4)."
REFERENCES,0.22291993720565148,"Farajtabar, M., Azizan, N., Mott, A., and Li, A. (2020). Orthogonal gradient descent for continual learning. In
International Conference on Artiﬁcial Intelligence and Statistics, pages 3762–3773. PMLR."
REFERENCES,0.22448979591836735,"Farquhar, S. and Gal, Y. (2019a). Towards Robust Evaluations of Continual Learning. arXiv:1805.09733 [cs,
stat]."
REFERENCES,0.2260596546310832,"Farquhar, S. and Gal, Y. (2019b). A unifying bayesian view of continual learning. arXiv preprint arXiv:1902.06494."
REFERENCES,0.22762951334379905,"Fernando, C., Banarse, D., Blundell, C., Zwols, Y., Ha, D., Rusu, A. A., Pritzel, A., and Wierstra, D. (2017).
PathNet: Evolution Channels Gradient Descent in Super Neural Networks. arXiv:1701.08734 [cs]."
REFERENCES,0.22919937205651492,"Guo, Y., Liu, M., Yang, T., and Rosing, T. (2020a). Improved schemes for episodic memory-based lifelong
learning. In Advances in Neural Information Processing Systems."
REFERENCES,0.23076923076923078,Published as a conference paper at ICLR 2022
REFERENCES,0.23233908948194662,"Guo, Y., Liu, M., Yang, T., and Rosing, T. (2020b). Improved schemes for episodic memory based lifelong
learning algorithm. In NeurIPS."
REFERENCES,0.23390894819466249,"Hanneke, S. and Kpotufe, S. (2019). On the value of target data in transfer learning. In NeurIPS."
REFERENCES,0.23547880690737832,"Hanneke, S. and Kpotufe, S. (2020).
A no-free-lunch theorem for multitask learning.
arXiv preprint
arXiv:2006.15785."
REFERENCES,0.2370486656200942,"Jaakkola, T. and Haussler, D. (1999). Exploiting generative models in discriminative classiﬁers. In Advances in
Neural Information Processing Systems, pages 487–493."
REFERENCES,0.23861852433281006,"Kaushik, P., Gain, A., Kortylewski, A., and Yuille, A. (2021). Understanding catastrophic forgetting and
remembering in continual learning with optimal relevance mapping. arXiv preprint arXiv:2102.11343."
REFERENCES,0.2401883830455259,"Kietzmann, T. C., Spoerer, C. J., Sörensen, L. K., Cichy, R. M., Hauk, O., and Kriegeskorte, N. (2019).
Recurrence is required to capture the representational dynamics of the human visual system. Proceedings of
the National Academy of Sciences, 116(43):21854–21863."
REFERENCES,0.24175824175824176,"Kirkpatrick, J., Pascanu, R., Rabinowitz, N., Veness, J., Desjardins, G., Rusu, A. A., Milan, K., Quan, J.,
Ramalho, T., Grabska-Barwinska, A., et al. (2017). Overcoming catastrophic forgetting in neural networks.
Proceedings of the national academy of sciences, 114(13):3521–3526."
REFERENCES,0.24332810047095763,"Kumar, A. and Daume III, H. (2012). Learning task grouping and overlap in multi-task learning. arXiv preprint
arXiv:1206.6417."
REFERENCES,0.24489795918367346,"Lee, S.-W., Kim, J.-H., Jun, J., Ha, J.-W., and Zhang, B.-T. (2017). Overcoming catastrophic forgetting by
incremental moment matching. Advances in Neural Information Processing Systems, 30:4652–4662."
REFERENCES,0.24646781789638933,"Li, L., Jamieson, K., Rostamizadeh, A., Gonina, E., Hardt, M., Recht, B., and Talwalkar, A. (2018). A system for
massively parallel hyperparameter tuning. arXiv preprint arXiv:1810.05934."
REFERENCES,0.24803767660910517,"Liaw, R., Liang, E., Nishihara, R., Moritz, P., Gonzalez, J. E., and Stoica, I. (2018). Tune: A research platform
for distributed model selection and training. arXiv preprint arXiv:1807.05118."
REFERENCES,0.24960753532182103,"Liu, X., Wu, C., Menta, M., Herranz, L., Raducanu, B., Bagdanov, A. D., Jui, S., and de Weĳer, J. v. (2020).
Generative feature replay for class-incremental learning. In Proceedings of the IEEE/CVF Conference on
Computer Vision and Pattern Recognition Workshops, pages 226–227."
REFERENCES,0.25117739403453687,"Lopez-Paz, D. and Ranzato, M. (2017). Gradient episodic memory for continual learning. In Proceedings of the
31st International Conference on Neural Information Processing Systems, pages 6470–6479."
REFERENCES,0.25274725274725274,"Mallya, A., Davis, D., and Lazebnik, S. (2018). Piggyback: Adapting a single network to multiple tasks by
learning to mask weights. In Proceedings of the European Conference on Computer Vision (ECCV), pages
67–82."
REFERENCES,0.2543171114599686,"Mallya, A. and Lazebnik, S. (2018). Packnet: Adding multiple tasks to a single network by iterative pruning. In
Proceedings of the IEEE conference on Computer Vision and Pattern Recognition, pages 7765–7773."
REFERENCES,0.25588697017268447,"Malviya, P., Ravindran, B., and Chandar, S. (2021). Tag: Task-based accumulated gradients for lifelong learning.
arXiv preprint arXiv:2105.05155."
REFERENCES,0.25745682888540034,"Mason, L., Baxter, J., Bartlett, P., and Frean, M. (1999). Boosting algorithms as gradient descent. In Proceedings
of the 12th International Conference on Neural Information Processing Systems, NIPS’99, pages 512–518,
Cambridge, MA, USA. MIT Press."
REFERENCES,0.25902668759811615,"Maurer, A. (2006). Bounds for linear multi-task learning. The Journal of Machine Learning Research, 7:117–139."
REFERENCES,0.260596546310832,"Mirzadeh, S. I., Farajtabar, M., Gorur, D., Pascanu, R., and Ghasemzadeh, H. (2020a). Linear mode connectivity
in multitask and continual learning. arXiv preprint arXiv:2010.04495."
REFERENCES,0.2621664050235479,"Mirzadeh, S. I., Farajtabar, M., Pascanu, R., and Ghasemzadeh, H. (2020b). Understanding the role of training
regimes in continual learning. arXiv preprint arXiv:2006.06958."
REFERENCES,0.26373626373626374,"Misra, I., Shrivastava, A., Gupta, A., and Hebert, M. (2016). Cross-stitch networks for multi-task learning. In
Proceedings of the IEEE conference on computer vision and pattern recognition, pages 3994–4003."
REFERENCES,0.2653061224489796,"Mocanu, D. C., Vega, M. T., Eaton, E., Stone, P., and Liotta, A. (2016). Online contrastive divergence with
generative replay: Experience replay without storing data. arXiv preprint arXiv:1610.05555."
REFERENCES,0.2668759811616955,"Nguyen, C. V., Li, Y., Bui, T. D., and Turner, R. E. (2017). Variational continual learning. arXiv preprint
arXiv:1710.10628."
REFERENCES,0.2684458398744113,"Pan, P., Swaroop, S., Immer, A., Eschenhagen, R., Turner, R., and Khan, M. E. E. (2020). Continual deep
learning by functional regularisation of memorable past. In Larochelle, H., Ranzato, M., Hadsell, R., Balcan,
M. F., and Lin, H., editors, Advances in Neural Information Processing Systems, volume 33, pages 4453–4464.
Curran Associates, Inc."
REFERENCES,0.27001569858712715,"Pentina, A. and Lampert, C. H. (2015). Lifelong learning with non-iid tasks. Adv. Neural Inf. Process. Syst."
REFERENCES,0.271585557299843,Published as a conference paper at ICLR 2022
REFERENCES,0.2731554160125589,"Prabhu, A., Torr, P. H., and Dokania, P. K. (2020). Gdumb: A simple approach that questions our progress in
continual learning. In European conference on computer vision, pages 524–540. Springer."
REFERENCES,0.27472527472527475,"Rapin, J. and Teytaud, O. (2018). Nevergrad - A gradient-free optimization platform. https://GitHub.com/
FacebookResearch/Nevergrad."
REFERENCES,0.27629513343799056,"Rebuﬃ, S.-A., Bilen, H., and Vedaldi, A. (2017). Learning multiple visual domains with residual adapters. In
Proceedings of the 31st International Conference on Neural Information Processing Systems, pages 506–516."
REFERENCES,0.2778649921507064,"Riemer, M., Cases, I., Ajemian, R., Liu, M., Rish, I., Tu, Y., and Tesauro, G. (2018). Learning to learn without
forgetting by maximizing transfer and minimizing interference. arXiv preprint arXiv:1810.11910."
REFERENCES,0.2794348508634223,"Robins, A. (1995). Catastrophic forgetting, rehearsal and pseudorehearsal. Connection Science, 7(2):123–146."
REFERENCES,0.28100470957613816,"Rosenbaum, C., Klinger, T., and Riemer, M. (2017). Routing networks: Adaptive selection of non-linear functions
for multi-task learning. arXiv preprint arXiv:1711.01239."
REFERENCES,0.282574568288854,"Rusu, A. A., Rabinowitz, N. C., Desjardins, G., Soyer, H., Kirkpatrick, J., Kavukcuoglu, K., Pascanu, R., and
Hadsell, R. (2016). Progressive neural networks. arXiv preprint arXiv:1606.04671."
REFERENCES,0.28414442700156983,"Schapire, R. E. and Freund, Y. (2013). Boosting: Foundations and Algorithms. Emerald Group Publishing
Limited."
REFERENCES,0.2857142857142857,"Serra, J., Suris, D., Miron, M., and Karatzoglou, A. (2018). Overcoming catastrophic forgetting with hard
attention to the task. In International Conference on Machine Learning, pages 4548–4557. PMLR."
REFERENCES,0.28728414442700156,"Shanahan, M., Kaplanis, C., and Mitrović, J. (2021). Encoders and ensembles for task-free continual learning.
arXiv preprint arXiv:2105.13327."
REFERENCES,0.28885400313971743,"Shin, H., Lee, J. K., Kim, J., and Kim, J. (2017). Continual learning with deep generative replay. In Proceedings
of the 31st International Conference on Neural Information Processing Systems, pages 2994–3003."
REFERENCES,0.2904238618524333,"Sun, X., Panda, R., Feris, R., and Saenko, K. (2019). Adashare: Learning what to share for eﬃcient deep
multi-task learning. arXiv preprint arXiv:1911.12423."
REFERENCES,0.29199372056514916,"Thrun, S. and Pratt, L. (2012). Learning to Learn. Springer Science & Business Media."
REFERENCES,0.29356357927786497,"Titsias, M. K., Schwarz, J., de G. Matthews, A. G., Pascanu, R., and Teh, Y. W. (2020). Functional regularisation
for continual learning with gaussian processes. In International Conference on Learning Representations."
REFERENCES,0.29513343799058084,"Tripuraneni, N., Jordan, M. I., and Jin, C. (2020). On the Theory of Transfer Learning: The Importance of Task
Diversity. arXiv:2006.11650 [cs, stat]."
REFERENCES,0.2967032967032967,"Van de Ven, G. M. and Tolias, A. S. (2019).
Three scenarios for continual learning.
arXiv preprint
arXiv:1904.07734."
REFERENCES,0.29827315541601257,"Vandenhende, S., Georgoulis, S., De Brabandere, B., and Van Gool, L. (2019). Branched multi-task networks:
Deciding what layers to share. arXiv preprint arXiv:1904.02920."
REFERENCES,0.29984301412872844,"Vapnik, V. (1998). Statistical Learning Theory. John Wiley & Sons."
REFERENCES,0.30141287284144425,"Ven, G. M., Siegelmann, H. T., Tolias, A. S., et al. (2020). Brain-inspired replay for continual learning with
artiﬁcial neural networks. Nature Communications, 11(1):1–14."
REFERENCES,0.3029827315541601,"Vinyals, O., Blundell, C., Lillicrap, T., Wierstra, D., et al. (2016). Matching networks for one shot learning.
Advances in Neural Information Processing Systems, 29:3630–3638."
REFERENCES,0.304552590266876,"Vogelstein, J. T., Dey, J., Helm, H. S., LeVine, W., Mehta, R. D., Geisa, A., van de Ven, G. M., Chang, E.,
Gao, C., Yang, W., et al. (2020). Omnidirectional transfer for quasilinear lifelong learning. arXiv preprint
arXiv:2004.12908."
REFERENCES,0.30612244897959184,"Wen, Y., Tran, D., and Ba, J. (2020). Batchensemble: an alternative approach to eﬃcient ensemble and lifelong
learning. arXiv preprint arXiv:2002.06715."
REFERENCES,0.3076923076923077,"Xu, J. and Zhu, Z. (2018). Reinforced continual learning. In Proceedings of the 32nd International Conference
on Neural Information Processing Systems, pages 907–916."
REFERENCES,0.3092621664050236,"Yoon, J., Jeong, W., Lee, G., Yang, E., and Hwang, S. J. (2021). Federated continual learning with weighted
inter-client transfer. In International Conference on Machine Learning, pages 12073–12086. PMLR."
REFERENCES,0.3108320251177394,"Yoon, J., Kim, S., Yang, E., and Hwang, S. J. (2019). Scalable and order-robust continual learning with additive
parameter decomposition. arXiv preprint arXiv:1902.09432."
REFERENCES,0.31240188383045525,"Zagoruyko, S. and Komodakis, N. (2016). Wide residual networks. arXiv preprint arXiv:1605.07146."
REFERENCES,0.3139717425431711,"Zenke, F., Poole, B., and Ganguli, S. (2017). Continual learning through synaptic intelligence. In International
Conference on Machine Learning, pages 3987–3995. PMLR."
REFERENCES,0.315541601255887,Published as a conference paper at ICLR 2022
REFERENCES,0.31711145996860285,"A
Details of the experimental setup"
REFERENCES,0.31868131868131866,"A.1
Datasets
We performed experiments using the following datasets."
REFERENCES,0.3202511773940345,"1. Rotated-MNIST (Lopez-Paz and Ranzato, 2017) uses the MNIST dataset to generate 5
diﬀerent 10-way classiﬁcation tasks. Each task involves using the entire MNIST dataset
rotated by 0, 10, 20, 30, and 40 degrees, respectively.
2. Permuted-MNIST (Kirkpatrick et al., 2017) involves 5 diﬀerent 10-way classiﬁcation tasks
with each task being a diﬀerent permutation of the input pixels. The ﬁrst task is the original
MNIST task as is convention. All other tasks are distinct random permutations of MNIST
images.
3. Split-MNIST (Zenke et al., 2017) has 5 tasks with each task consisting of 2 consecutive
labels (0-1, 2-3, 4-5, 6-7, 8-9) of MNIST.
4. Split-CIFAR10 (Zenke et al., 2017) has 5 tasks with each task consisting of 2 consecutive
labels (airplane-automobile, bird-cat, deer-dog, frog-horse, ship-truck) of CIFAR10.
5. Split-CIFAR100 (Zenke et al., 2017) has 20 tasks with each task consisting of 5 consecutive
labels of CIFAR100. See the original paper for the exact constitution of each task.
6. Coarse-CIFAR100 (Rosenbaum et al., 2017) has 20 tasks with each task consisting of
5 labels. The tasks are based on an existing categorization of classes into super-classes
(https://www.cs.toronto.edu/ kriz/cifar.html).
7. Split-miniImagenet (Vinyals et al., 2016) is a ariant introduced in Chaudhry et al. (2019b),
consisting of 20 tasks, with each task consisting of 10 consecutive labels. We merge the
meta-train and meta-test categories to obtain a continual learning problem with 20 tasks.
Each task containing 10 consecutive labels and 20% of the samples are used as the validation
set.
The CIFAR10 and CIFAR100-based datasets consist of RGB images of size 32×32 while
MNIST-based datasets consist of images of size 28×28. The Mini-imagenet dataset consists of RGB
images of size 84×84.
A.2
Architecture"
REFERENCES,0.3218210361067504,"We use the Wide-Resnet (Zagoruyko and Komodakis, 2016) architecture for some of our experiments.
The ﬁnal pooling layer is replaced with an adaptive pooling layer in order to handle input images of
diﬀerent sizes. Convolutional layers are initialized using the Kaiming-Normal initialization. The bias
parameter in batch normalization is set to zero with the aﬃne scaling term set to one. The bias of the
ﬁnal classiﬁcation layer is also set to zero; this helps keep the logits of the diﬀerent tasks on a similar
scale.
To ensure that the number of weights is similar to those in other methods, we also consider a
smaller convolution neural network consisting of 3 convolution layers, with batch-normalization,
ReLU and max-pooling present between each layer.
A.3
Training setup
Optimization. All models are trained in mixed-precision (32-bit weights, 16-bit gradients) using
Stochastic Gradient Descent (SGD) with Nesterov’s acceleration with momentum coeﬃcient set to
0.9 and cosine annealing of the learning rate schedule for 200 epochs. Training of any model with
multiple tasks involves mini-batches that contain samples from all tasks.
Hyper-parameter optimization. We used Ray Tune (Liaw et al., 2018) for hyper-parameter opti-
mization. The Async Successive Halving Algorithm (ASHA) scheduler (Li et al., 2018) was used to
prune hyper-parameter choices with the search space determined by Nevergrad (Rapin and Teytaud,
2018). The mini-batch size was varied over [8, 16, 32, 64]; the logarithm (base 10) of the learning
rate was sampled from a uniform distribution on [−4, −2]; dropout probability was sampled from
a uniform distribution on [0.1, 0.5]; logarithm of the weight decay coeﬃcient was sampled from
[−6, −2]. We used a set of experiments for continual learning on the Coarse-CIFAR100 dataset with
diﬀerent samples/class (100 and 500) to perform hyper-parameter tuning.
The ﬁnal values of training hyper-parameters that were chosen are, learning-rate of 0.01,
mini-batch size of 16, dropout probability of 0.2 and weight-decay of 10−5.
Model Zoo uses b = min(k, 5) at each round of continual learning where n is the number of
tasks; for tasks with only 5 tasks (MNIST-variants) we use b = 2. We did not tune these two
hyper-parameters using Ray because it is quite cumbersome to do so. We selected these values
manually across a few experiments; changing them may result in improved accuracy for Model Zoo."
REFERENCES,0.32339089481946626,Published as a conference paper at ICLR 2022
REFERENCES,0.3249607535321821,"All hyper-parameters are kept ﬁxed for all datasets, architectures, and experimental settings. .
We are interested in characterizing the performance of Model Zoo and its variants across a broad
spectrum of problems and datasets. While we believe we can get even better numerical accuracy, by
tuning hyper-parameters specially for each problem, we do not so for the sake of simplicity. As the
main paper discusses, we outperform existing methods quite convincingly across the board in both
multi-task and continual learning.
Data augmentation. MNIST and CIFAR10/100 datasets use padding (4 pixels) with random cropping
to an image of size 28×28 or 32×32 respectively for data augmentation. CIFAR10/100 images
additionally have random left/right ﬂips for data augmentation. Images are ﬁnally normalized to have
mean 0.5 and standard deviation 0.25. Split-miniImagenet uses the same augmentation as CIFAR-10
and CIFAR-100. We use augmentation even in the single epoch setting."
REFERENCES,0.32653061224489793,"A.4
Model Zoo with Limited Replay"
REFERENCES,0.3281004709576138,"As discussed in §4.2, this work considers Model Zoo (10%) which stores only 10% of the data from
the past tasks, in order to compare to other methods that make use of limited replay. When the task
(say task A) is ﬁrst seen, Model Zoo is allowed to use all available data. For all future episodes, if
Model Zoo picks a past task to retrain with, such a retraining uses only a ﬁxed subset of the tasks’
data (10% of the samples are selected at random for this purpose). We sample each mini-batch to
contain an equal number of samples from all past and current task. At inference time, the member of
Model Zoo that is trained on all data of task A (this is the model that was ﬁtted when task A was
ﬁrst shown to the continual learner) is assigned a proportionately larger weight in Eq. (7). For 10%
replay, this will amount to 10 × larger weight than other models which used 10% data from task A.
Mathematically, both of these training and inference modiﬁcations are equivalent to using coeﬃcients
that scale up the loss of the past task depending upon the number of samples that it has."
REFERENCES,0.32967032967032966,"A.5
Evaluating Training and Inference Times"
REFERENCES,0.33124018838304553,"In this section, we describe the methodology used to estimate training and inference times reported in
Table 2.
Inference time. The column titled inference time corresponds to per-sample prediction latency in
milli-seconds. All entries for inference time in Table 2 were computed by us on an Nvidia V100
GPU and therefore they can be compared directly with each other. Note that inference times can
be computed using only the architecture built by each method at the end of all continual learning
episodes. We obtained the architectures used in each method from open-source implementations of the
original authors (https://github.com/facebookresearch/agem and https://github.com/imirzadeh/stable-
continual-learning). Inference time is computed by processing 50 mini-batches from CIFAR-100,
each of batch-size 16. The inference time is computed by normalizing the total computation time by
(size of mini-batch × number of mini-batches), which gives the average inference-time per sample.
For Model-Zoo, we assume that inference time is approximately b = 5 times the inference time of
Isolated, where b is number of tasks sampled in every round).
Training time. corresponds to the time (in minutes) required to train all episodes of the Split-
CIFAR100 dataset. Establishing an accurate comparison is diﬃcult because diﬀerent papers used
diﬀerent hardware but we have strived to be fair. The training time for EWC, Prog-NN, GEM and
A-GEM are obtained from Chaudhry et al. (2019a) (we divide the numbers by 5 since this paper
reports the sum of training times of 5 diﬀerent runs). Chaudhry et al. (2019a) also report the training
time for naive ﬁne-tuning (21 mins) which in theory, should be very similar to the training time of our
Isolated learner (the training time for us is 20.76 mins on one V100 GPU). Since the two numbers
are quite similar, we can estimate training time of the other continual learning methods using their
computational cost relative to naive ﬁne-tuning. Therefore, the estimate of the training times that we
have reported in Table 2 can be compared to each other."
REFERENCES,0.3328100470957614,"B
Additional Experiments"
REFERENCES,0.33437990580847726,"B.1
Understanding task competition"
REFERENCES,0.3359497645211931,"To understand which tasks aid each other’s learning and which compete for capacity and may thereby
deteriorate performance, we investigated the Coarse-CIFAR100 dataset extensively. We ﬁrst computed
the pairwise task competition by comparing the relative gain/drop in classiﬁcation accuracy of each
pair of tasks when the row task is trained in isolated versus training the row and column tasks together
using a simple multi-task learner (Multi-Head). Fig. A1 discusses the results.
Fig. A2, is the extended version of Fig. 2. It shows the validation accuracy of each task (along a
single row) as more tasks are added to Multi-Head. Each column is a single Multi-Head model trained
on a subset of tasks from scratch. As more tasks are added, the accuracy of most tasks increases."
REFERENCES,0.33751962323390894,Published as a conference paper at ICLR 2022
REFERENCES,0.3390894819466248,Med. Mammals
REFERENCES,0.34065934065934067,Aq. Mammals Fish
REFERENCES,0.34222919937205654,Flowers
REFERENCES,0.34379905808477235,Food Container
REFERENCES,0.3453689167974882,Fruits and Veggies
REFERENCES,0.3469387755102041,Electrical Devices
REFERENCES,0.34850863422291994,Household Furniture
REFERENCES,0.3500784929356358,Insects
REFERENCES,0.3516483516483517,Large Carnivores
REFERENCES,0.3532182103610675,Man-made Outdoor
REFERENCES,0.35478806907378335,Natural Outdoor
REFERENCES,0.3563579277864992,Omni-Herbivores
REFERENCES,0.3579277864992151,People
REFERENCES,0.35949764521193095,Reptiles
REFERENCES,0.36106750392464676,Small Mammals Trees
REFERENCES,0.3626373626373626,Invertebrates
REFERENCES,0.3642072213500785,Vehicles 1
REFERENCES,0.36577708006279436,Vehicles 2
REFERENCES,0.3673469387755102,Other Task used in multi-task training
REFERENCES,0.36891679748822603,Med. Mammals
REFERENCES,0.3704866562009419,Aq. Mammals Fish
REFERENCES,0.37205651491365777,Flowers
REFERENCES,0.37362637362637363,Food Container
REFERENCES,0.3751962323390895,Fruits and Veggies
REFERENCES,0.37676609105180536,Electrical Devices
REFERENCES,0.3783359497645212,Household Furniture
REFERENCES,0.37990580847723704,Insects
REFERENCES,0.3814756671899529,Large Carnivores
REFERENCES,0.38304552590266877,Man-made Outdoor
REFERENCES,0.38461538461538464,Natural Outdoor
REFERENCES,0.38618524332810045,Omni-Herbivores
REFERENCES,0.3877551020408163,People
REFERENCES,0.3893249607535322,Reptiles
REFERENCES,0.39089481946624804,Small Mammals Trees
REFERENCES,0.3924646781789639,Invertebrates
REFERENCES,0.3940345368916798,Vehicles 1
REFERENCES,0.3956043956043956,Vehicles 2
REFERENCES,0.39717425431711145,Rel. change in Task Accuracy from Multi-task training
REFERENCES,0.3987441130298273,"0
2
4.6
3
2.6
2.6
3.2
2.6
3
5
1.4
2.6
2.6
2.8
2
0
4.2
4
4.6
1.8"
REFERENCES,0.4003139717425432,"5.4
0
5.6
4.8
4
-0.8 4.8
5.6
4.4
3
6.6
3.8
4.4
4
5
1.4
3
4
4.4
5.8"
REFERENCES,0.40188383045525905,"5.2
0.8
0
1.8
2.8
1.4
2.8
4.2
1.6
4
4.8
2.8
0.6
1.8
6.2
2.6
2
2
2.8
3"
REFERENCES,0.40345368916797486,"-0.6
-5
1
0
1.4 -0.8
2
0
-0.2 1.8
0
-0.2
-1
-2.8 0.8
1.6 -4.2 -0.2 -3.8 -1.2"
REFERENCES,0.4050235478806907,"-3.6
-3
-3.6 -2.2
0
-2.4
4
1
-3
-5.2 -2.2
1
-2.6 -1.4 -2.4 -1.6 -1.8 -4.2 0.2
0"
REFERENCES,0.4065934065934066,"2.4
-2
2
1.6
3.2
0
5.8
3
0.4
6
4.6
2.4
2.4
1
2.6
1.2
2.2
0.4
2.2
4.2"
REFERENCES,0.40816326530612246,"-1.2 -3.4 -2.6 -1.8 3.4 -2.2
0
3.4 -4.6 0.8 -3.2 -3.8 -6.2 -0.8 -1.2 -3.4 -1.4 0.8 -2.8 -0.4"
REFERENCES,0.4097331240188383,"5.2
4.4
4.6
2.6
10
3.4
9.4
0
2.4
5.2
7
7.4
4.8
2.4
5.6
2.6
7.6
1.4
6.2
5.8"
REFERENCES,0.41130298273155413,"5.2
1.8
3.4
1.4
7
3.6
5.8
2.6
0
4.4
3.2
1.6
2.2
0.2
1.6 -0.4
2
3.8
2.8
3.2"
REFERENCES,0.41287284144427,"3.2
2.4
3
3
1.4
2.8
2.2
2.4
0.6
0
3.4
2
1
-1
1.6
0.2
0.6
3.4
2.6
4.2"
REFERENCES,0.41444270015698587,"0
0
-0.4 -1.2
1
-1.2 0.8
0.6 -2.2 1.2
0
-1
-2.4 -3.4
1
-1.4
-2
-3.6
1
1"
REFERENCES,0.41601255886970173,"-0.8 -2.8
-4
2
2
-0.4 1.8
0.8 -2.2
1
1.8
0
-0.4 0.8 -1.4 -1.8 0.6
0.2 -1.4
0"
REFERENCES,0.4175824175824176,"5.4 -0.4 2.8
2.8
3.6
1.2
3.4
1.8
2
2.4
4.4
-1
0
-2
1.2 -1.8 1.8
1.6
2.6
3.4"
REFERENCES,0.41915227629513346,"2.4
3.8
6
3
5.4
6.6
3
3.8
3.4
2.4
2
4.4
1.8
0
3.2
2.2
5.2
4.6
2.8
2.4"
REFERENCES,0.4207221350078493,"0.4
0
0.2
2.8 -0.4 1.8
3
2.2
2.4
0.8
0.8
0.4
1.2 -2.2
0
-1.4
-1
3.4
0.6 -0.4"
REFERENCES,0.42229199372056514,"2
1.8 -2.6 0.4
2.8
-1
2
2
0.8
6
2.2
1.4 -2.8
0
3.2
0
4.8
4
-0.4 5.2"
REFERENCES,0.423861852433281,"-1.6 -2.6 -0.8 0.2
2.4 -1.4 4.2
2
0.6
3.4
2.4
3.4 -1.6 -0.8
-1
1.8
0
0.8 -0.8 -0.4"
REFERENCES,0.42543171114599687,"1.8
0.4
0.8
5.4
4.4 -0.4 8.6
6
6
3.8
6.6
4.4
1.6
2.8
8.8 -0.2 3.2
0
4.6
5"
REFERENCES,0.42700156985871274,"1.4 -3.4
-1
2.2
3
-0.2 1.4
2
3.2
2.2
3.6 -1.6 2.4
2.6
4.8 -0.6 0.4
-2
0
4"
REFERENCES,0.42857142857142855,"1.2
1
-3.2 2.8
5.4
1
0.4
1.8
3.6
3.8
4.8
4
1.8 -2.4 3.8
0.6 -0.8 -0.2 3.6
0"
REFERENCES,0.4301412872841444,"Figure A1: Pairwise task competition matrix. Cells are colored by the gain(green)/loss(warm) of accuracy
of pairwise Multi-Head training as compared to training the row-task in isolation; this is a good proxy for the
transfer coeﬃcient ρij in (5). Although most pairs beneﬁt each other (green), certain tasks, e.g., “Food Container”
are best trained in isolation while others such as “Aquatic Mammals” are typically detrimental to most other
tasks. One can study this matrix and identify many more such properties. In summary, whether tasks aid or hurt
each other is quite nuanced even for CIFAR100."
REFERENCES,0.4317111459968603,Published as a conference paper at ICLR 2022
REFERENCES,0.43328100470957615,"1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
Number of tasks trained together"
REFERENCES,0.434850863422292,Med. Mammals
REFERENCES,0.4364207221350079,Aq. Mammals Fish
REFERENCES,0.4379905808477237,Flowers
REFERENCES,0.43956043956043955,Food Container
REFERENCES,0.4411302982731554,Fruits and Veggies
REFERENCES,0.4427001569858713,Electrical Devices
REFERENCES,0.44427001569858715,Household Furniture
REFERENCES,0.44583987441130296,Insects
REFERENCES,0.4474097331240188,Large Carnivores
REFERENCES,0.4489795918367347,Man-made Outdoor
REFERENCES,0.45054945054945056,Natural Outdoor
REFERENCES,0.4521193092621664,Omni-Herbivores
REFERENCES,0.45368916797488223,People
REFERENCES,0.4552590266875981,Reptiles
REFERENCES,0.45682888540031397,Small Mammals Trees
REFERENCES,0.45839874411302983,Invertebrates
REFERENCES,0.4599686028257457,Vehicles 1
REFERENCES,0.46153846153846156,Vehicles 2
REFERENCES,0.4631083202511774,Accuracy of task
REFERENCES,0.46467817896389324,"72.20
73.65
74.95
73.20
73.95
73.95
76.05
74.95
74.60
75.70
75.75
76.25
75.60
75.85
75.20
76.30
76.20
76.15
76.90
75.40"
REFERENCES,0.4662480376766091,"53.05
53.70
53.50
53.05
52.85
55.00
55.25
54.65
53.25
56.60
54.75
56.30
54.45
56.70
56.60
55.85
56.65
56.65
57.05"
REFERENCES,0.46781789638932497,"64.80
66.20
65.15
65.80
65.25
66.60
67.25
67.70
67.80
67.95
67.20
68.35
67.75
68.90
68.95
69.00
67.60
69.15"
REFERENCES,0.46938775510204084,"63.60
64.95
64.95
66.35
67.70
65.85
66.45
67.80
66.50
65.70
65.35
66.65
67.25
66.90
66.45
66.90
69.10"
REFERENCES,0.47095761381475665,"63.00
63.20
65.10
66.00
66.40
65.50
66.30
66.30
68.35
65.50
66.65
66.05
66.80
65.85
67.45
67.50"
REFERENCES,0.4725274725274725,"75.90
77.55
78.10
77.15
77.75
79.40
77.70
78.20
77.00
77.00
77.60
77.30
78.35
76.60
78.35"
REFERENCES,0.4740973312401884,"68.75
69.85
69.30
68.75
70.25
69.65
69.00
67.35
69.05
69.25
69.60
69.75
70.15
70.90"
REFERENCES,0.47566718995290425,"65.85
65.60
65.70
66.30
66.25
66.40
66.10
65.80
65.85
65.25
66.90
66.65
67.90"
REFERENCES,0.4772370486656201,"68.00
68.95
69.30
68.55
69.15
68.70
68.45
69.75
68.45
70.40
69.35
69.00"
REFERENCES,0.478806907378336,"74.65
75.00
75.20
73.05
73.50
73.50
73.60
73.85
73.70
74.10
73.05"
REFERENCES,0.4803767660910518,"78.55
77.55
78.15
79.15
78.35
78.40
77.45
78.00
78.70
79.10"
REFERENCES,0.48194662480376765,"79.25
78.25
77.60
78.55
78.40
77.40
78.65
80.05
78.45"
REFERENCES,0.4835164835164835,"71.10
67.95
70.10
69.50
69.60
68.70
69.75
70.00"
REFERENCES,0.4850863422291994,"42.65
40.80
41.05
41.75
43.20
42.65
41.55"
REFERENCES,0.48665620094191525,"58.75
57.70
57.05
57.85
59.25
59.00"
REFERENCES,0.48822605965463106,"56.45
55.15
56.90
57.05
57.15"
REFERENCES,0.4897959183673469,"61.10
61.20
62.55
61.95"
REFERENCES,0.4913657770800628,"64.35
65.10
66.20"
REFERENCES,0.49293563579277866,"74.05
73.80 84.30"
REFERENCES,0.4945054945054945,"Figure A2: In order to demonstrate how some tasks help and some tasks hurt each other, we run Multi-Head
for a varying number of tasks (X-axis) and track the accuracy on a few tasks from Coarse-CIFAR100. The
order of tasks is the same for rows (top to bottom) and the columns (left to right). In other words, the ﬁrst
cell (the diagonal) indicates the accuracy of the task trained by itself in isolation (Isolated). Cells are colored
warm if accuracy is worse than the median accuracy of that row. For instance, multi-task training with 11 tasks
is beneﬁcial for “Man-made Outdoor” but accuracy drops drastically upon introducing task #12, it improves
upon introducing #14, while task #17 again leads to a drop. One may study the other rows to reach a similar
conclusion: there is non-trivial competition between tasks, even in commonly used datasets. Tackling this issue
eﬀectively is the key to obtaining good performance on multi-task learning problems"
REFERENCES,0.49607535321821034,"However, the increase is not monotonic with each added task, and if one follows a particular row, there
are non-trivial patterns wherein adding a particular task may deteriorate the performance on the row
task and adding some other task later may recover the lost accuracy. This is a direct demonstration of
the tussle between the task competition term (ﬁrst) and the concentration term (third) in Theorem 2.
This indicates that training on the appropriate set of tasks is crucial to learn from multiple tasks."
REFERENCES,0.4976452119309262,"B.2
Competition between tasks of typical benchmark datasets"
REFERENCES,0.49921507064364207,"Next, we investigated such task competition on other continual learning datasets, namely, Permuted-
MNIST, Rot-MNIST, Split-CIFAR10, and Split-MNIST. It is clear from Fig. A3 that there is very
little competition in this case. Either the tasks are quite diﬀerent from each other (like the case of
Permuted-MNIST), or they are synergistic (most cells are green), or they do not hurt each other’s
performance, i.e., they may correspond to the model in §2.2. Note that Rotated-MNIST exactly
corresponds to the multi-view setting discussed in §2.2 were diﬀerent input images are simple
transformations of each other."
REFERENCES,0.5007849293563579,"B.3
Visualizing successive iterations of Model Zoo"
REFERENCES,0.5023547880690737,"In order to understand how the accuracy of Model Zoo evolves on all tasks as a function of the episodes,
we created Fig. A4. This is a very insightful picture and we can draw the following conclusions from
it."
REFERENCES,0.5039246467817896,"(i) The accuracy along the diagonal of most tasks increases along the row, i.e., across episodes.
Only for a few tasks like Food Container the accuracy drops in later episodes. Note that we
also see from Fig. A1 that Food Container is a task that is best trained in isolation because it
leads to deterioration of accuracy when trained with essentially any other task.
(ii) The is strong backward transfer throughout the dataset, i.e., the accuracy of a task shown in
earlier rounds increases, sometimes a large number, as later synergistic tasks are shown to
the learner."
REFERENCES,0.5054945054945055,Published as a conference paper at ICLR 2022
REFERENCES,0.5070643642072213,"Task1
Task2
Task3
Task4
Task5
Other Task used in multi-task training"
REFERENCES,0.5086342229199372,"Task1
Task2
Task3
Task4
Task5
Rel. change in Task Accuracy"
REFERENCES,0.5102040816326531,"-1.37
0.35
2.65
1.02"
REFERENCES,0.5117739403453689,"-0.34
0.58
-1.72
0.47"
REFERENCES,0.5133437990580848,"1.18
1.26
0.74
0.79"
REFERENCES,0.5149136577708007,"3.94
-0.19
3.13
0.70"
REFERENCES,0.5164835164835165,"0.09
-0.88
-0.31
-1.84"
REFERENCES,0.5180533751962323,Permuted-MNIST
REFERENCES,0.5196232339089482,"Task1
Task2
Task3
Task4
Task5
Other Task used in multi-task training"
REFERENCES,0.521193092621664,"Task1
Task2
Task3
Task4
Task5
Rel. change in Task Accuracy"
REFERENCES,0.5227629513343799,"-0.23
-0.34
-0.11
-0.07"
REFERENCES,0.5243328100470958,"0.47
-0.06
-0.07
-0.13"
REFERENCES,0.5259026687598116,"0.75
0.55
0.10
0.17"
REFERENCES,0.5274725274725275,"0.43
0.59
0.34
-0.17"
REFERENCES,0.5290423861852434,"0.53
0.43
0.41
0.35"
REFERENCES,0.5306122448979592,Rot-MNIST
REFERENCES,0.5321821036106751,"Task1
Task2
Task3
Task4
Task5
Other Task used in multi-task training"
REFERENCES,0.533751962323391,"Task1
Task2
Task3
Task4
Task5
Rel. change in Task Accuracy"
REFERENCES,0.5353218210361067,"2.10
0.50
0.45
4.45"
REFERENCES,0.5368916797488226,"-0.90
1.00
1.35
-0.30"
REFERENCES,0.5384615384615384,"2.05
1.75
3.70
1.70"
REFERENCES,0.5400313971742543,"-0.25
-0.60
1.45
0.35"
REFERENCES,0.5416012558869702,"6.95
4.80
7.15
7.55"
REFERENCES,0.543171114599686,Split-CIFAR10
REFERENCES,0.5447409733124019,"Task1
Task2
Task3
Task4
Task5
Other Task used in multi-task training"
REFERENCES,0.5463108320251178,"Task1
Task2
Task3
Task4
Task5
Rel. change in Task Accuracy"
REFERENCES,0.5478806907378336,"5.39
5.11
5.34
4.44"
REFERENCES,0.5494505494505495,"-0.15
-0.34
-0.24
-0.10"
REFERENCES,0.5510204081632653,"2.67
1.23
2.35
2.35"
REFERENCES,0.5525902668759811,"0.40
0.20
0.40
0.05"
REFERENCES,0.554160125588697,"2.72
0.66
2.42
2.67"
REFERENCES,0.5557299843014128,Split-MNIST
REFERENCES,0.5572998430141287,"Figure A3: Each row is the relative increase/decrease (green/red) in accuracy of a two task Multi-Head learner
compared to Isolated trained on the task corresponding to the particular row; all entries are computed using 100
samples/class. Cells are colored green for accuracy gained, and warm for accuracy dropped; the entries in this
matrix are a good proxy for the transfer coeﬃcient ρij in (5). A similar plot for Coarse-CIFAR100 tasks is shown
in the right panel of Fig. 2. Split-CIFAR10 and Split-MNIST indicate that most tasks mutually beneﬁt each other.
This is also true, but to a lesser extent, for Rotated-MNIST. Permuted-MNIST is a qualitatively diﬀerent problem
than these, perhaps because there is no obvious relationship between the tasks and there exist some tasks that
lead to a large deterioration of accuracy."
REFERENCES,0.5588697017268446,"(iii) We also see strong forward transfer. Roughly speaking, in the second half of the rows,
the initial accuracy of most tasks does not improve much with successive episodes. This
suggests that these tasks already have a good initial accuracy, i.e., there is good forward
transfer in the learner.
We advocate that such plots should be made for diﬀerent continual learning algorithms to obtain a
precise picture of the amount of forward and backward transfer."
REFERENCES,0.5604395604395604,Published as a conference paper at ICLR 2022
REFERENCES,0.5620094191522763,Round-0
REFERENCES,0.5635792778649922,Round-1
REFERENCES,0.565149136577708,Round-2
REFERENCES,0.5667189952904239,Round-3
REFERENCES,0.5682888540031397,Round-4
REFERENCES,0.5698587127158555,Round-5
REFERENCES,0.5714285714285714,Round-6
REFERENCES,0.5729984301412873,Round-7
REFERENCES,0.5745682888540031,Round-8
REFERENCES,0.576138147566719,Round-9
REFERENCES,0.5777080062794349,Round-10
REFERENCES,0.5792778649921507,Round-11
REFERENCES,0.5808477237048666,Round-12
REFERENCES,0.5824175824175825,Round-13
REFERENCES,0.5839874411302983,Round-14
REFERENCES,0.5855572998430141,Round-15
REFERENCES,0.5871271585557299,Round-16
REFERENCES,0.5886970172684458,Round-17
REFERENCES,0.5902668759811617,Round-18
REFERENCES,0.5918367346938775,Round-19
REFERENCES,0.5934065934065934,Aq. Mammals Fish
REFERENCES,0.5949764521193093,Flowers
REFERENCES,0.5965463108320251,Food Container
REFERENCES,0.598116169544741,Fruits and Veggies
REFERENCES,0.5996860282574569,Electrical Devices
REFERENCES,0.6012558869701727,Household Furniture
REFERENCES,0.6028257456828885,Insects
REFERENCES,0.6043956043956044,Large Carnivores
REFERENCES,0.6059654631083202,Man-made Outdoor
REFERENCES,0.6075353218210361,Natural Outdoor
REFERENCES,0.609105180533752,Omni-Herbivores
REFERENCES,0.6106750392464678,Med. Mammals
REFERENCES,0.6122448979591837,Invertebrates
REFERENCES,0.6138147566718996,People
REFERENCES,0.6153846153846154,Reptiles
REFERENCES,0.6169544740973313,Small Mammals Trees
REFERENCES,0.6185243328100472,Vehicles 1
REFERENCES,0.6200941915227629,Vehicles 2
REFERENCES,0.6216640502354788,"84
86
86
86
91
91
91"
REFERENCES,0.6232339089481946,"95
96
96
93
93
91
91"
REFERENCES,0.6248037676609105,"85
87
94
94
94
94
94"
REFERENCES,0.6263736263736264,"83
83
89
93
93
93
93
90
87
87
87"
REFERENCES,0.6279434850863422,"74
74
74
74
74
74
68
68
68
68
80"
REFERENCES,0.6295133437990581,"61
78
80
83
83
83
90
92"
REFERENCES,0.631083202511774,"71
71
71
71
71
71
71
82
94"
REFERENCES,0.6326530612244898,"91
87
87
87
92
92
92
92"
REFERENCES,0.6342229199372057,"96
92
88
88
88"
REFERENCES,0.6357927786499215,"76
82
82
82
82
82
82
82"
REFERENCES,0.6373626373626373,"62
62
62
62
62
62
62
62
62"
REFERENCES,0.6389324960753532,"77
77
77
77
77
77
77
77"
REFERENCES,0.640502354788069,"70
70
70
85
85
85"
REFERENCES,0.6420722135007849,"68
68
68
68
68
68"
REFERENCES,0.6436420722135008,"65
65
65
65 88
92 82 69
69 56"
REFERENCES,0.6452119309262166,"62
63
62
75
82
80
84
86
91
90
88
91
92"
REFERENCES,0.6467817896389325,"72
74
78
90
96
95
96
96
96
94
93
91"
REFERENCES,0.6483516483516484,"56
74
74
86
82
89
85
87
90
94
93"
REFERENCES,0.6499215070643642,"72
83
89
93
90
87"
REFERENCES,0.6514913657770801,"67
75
74
68
80"
REFERENCES,0.6530612244897959,"61
78
80
83
90
95
92"
REFERENCES,0.6546310832025117,"58
71
82
91
94"
REFERENCES,0.6562009419152276,"56
82
91
87
92"
REFERENCES,0.6577708006279435,"70
88
83
89
96
92
88"
REFERENCES,0.6593406593406593,"74
76
82 62 77 70
85 68 65
65"
REFERENCES,0.6609105180533752,"69
88
92"
REFERENCES,0.6624803767660911,"71
82
79 69 56 77"
REFERENCES,0.6640502354788069,"Figure A4: The iterations of Model Zoo are visualized for the Split-miniImagenet dataset for 20 rounds, with 5
tasks selected in every iteration of Model Zoo. Red elements are tasks that were selected by boosting in that
particular round. We observe that the accuracy of most tasks improves over the rounds, which indicates the utility
of Model Zoo-like training scheme This plot also indicates that Model Zoo can improve the per-task accuracy on
nearly all tasks. The model is trained for only a single-epch per boosting round."
REFERENCES,0.6656200941915228,Published as a conference paper at ICLR 2022
REFERENCES,0.6671899529042387,"B.4
Baseline performance of isolated training on Coarse-CIFAR100"
REFERENCES,0.6687598116169545,Aq. Mammals
REFERENCES,0.6703296703296703,Electrical Devices Fish
REFERENCES,0.6718995290423861,Flowers
REFERENCES,0.673469387755102,Food Container
REFERENCES,0.6750392464678179,Fruits and Veggies
REFERENCES,0.6766091051805337,Household Furniture
REFERENCES,0.6781789638932496,Insects
REFERENCES,0.6797488226059655,Invertebrates
REFERENCES,0.6813186813186813,Large Carnivores
REFERENCES,0.6828885400313972,Man-made Outdoor
REFERENCES,0.6844583987441131,Med. Mammals
REFERENCES,0.6860282574568289,Natural Outdoor
REFERENCES,0.6875981161695447,Omni-Herbivores
REFERENCES,0.6891679748822606,People
REFERENCES,0.6907378335949764,Reptiles
REFERENCES,0.6923076923076923,Small Mammals Trees
REFERENCES,0.6938775510204082,Vehicles 1
REFERENCES,0.695447409733124,Vehicles 2 Task 0 25 50 75 100
REFERENCES,0.6970172684458399,Accuracy 51.7 68.8
REFERENCES,0.6985871271585558,64.5 65.1 69.8 76.0
REFERENCES,0.7001569858712716,65.6 65.7 61.3 72.8
REFERENCES,0.7017268445839875,76.6 74.5 78.4 63.2 37.7
REFERENCES,0.7032967032967034,54.2 52.2 55.8 72.4 80.4
REFERENCES,0.7048665620094191,Isolated Accuracies (100 samples/label)
REFERENCES,0.706436420722135,Aq. Mammals
REFERENCES,0.7080062794348508,Electrical Devices Fish
REFERENCES,0.7095761381475667,Flowers
REFERENCES,0.7111459968602826,Food Container
REFERENCES,0.7127158555729984,Fruits and Veggies
REFERENCES,0.7142857142857143,Household Furniture
REFERENCES,0.7158555729984302,Insects
REFERENCES,0.717425431711146,Invertebrates
REFERENCES,0.7189952904238619,Large Carnivores
REFERENCES,0.7205651491365777,Man-made Outdoor
REFERENCES,0.7221350078492935,Med. Mammals
REFERENCES,0.7237048665620094,Natural Outdoor
REFERENCES,0.7252747252747253,Omni-Herbivores
REFERENCES,0.7268445839874411,People
REFERENCES,0.728414442700157,Reptiles
REFERENCES,0.7299843014128728,Small Mammals Trees
REFERENCES,0.7315541601255887,Vehicles 1
REFERENCES,0.7331240188383046,Vehicles 2 Task 0 25 50 75 100
REFERENCES,0.7346938775510204,Accuracy 67.6 87.0 75.0
REFERENCES,0.7362637362637363,82.2 82.8 85.4
REFERENCES,0.7378335949764521,81.2 83.2 83.2
REFERENCES,0.7394034536891679,86.6 87.8 88.2 86.2 80.8 52.4 74.8 71.8 74.6
REFERENCES,0.7409733124018838,91.0 92.6
REFERENCES,0.7425431711145997,Isolated Accuracies (500 samples/label)
REFERENCES,0.7441130298273155,"Figure A5: Per-task accuracies of Isolated on the Coarse-CIFAR100 dataset for two cases, one with 100
samples/class (top) and another with all 500 samples/class (bottom). Two points are very important to note here.
First, there is a large improvement in the two accuracies for all tasks when the learner has access to more samples.
Second, diﬀerent tasks have very diﬀerent accuracies when trained in isolation (using the same WRN-16-4
model). This indicates that diﬀerent tasks are very diﬀerent in terms how hard they are, for some tasks such as
People, the base accuracy of the model is quite low and one must have lots of samples in order to perform well.
A lot of other multi-task learning datasets, e.g., derivatives of MNIST (or even CIFAR10 to an extent) are unlike
CIFAR100 in this respect."
REFERENCES,0.7456828885400314,"B.5
Additional experiments"
REFERENCES,0.7472527472527473,Table A1 is a more detailed version of Table 1 in the main paper.
REFERENCES,0.7488226059654631,Published as a conference paper at ICLR 2022
REFERENCES,0.750392464678179,"Method
Replay Single Rotated- Permuted-
Split-
Split-
Split-
Coarse-
Split-
Epoch
MNIST
MNIST MNIST CIFAR10 CIFAR100 CIFAR100 MiniImagenet"
REFERENCES,0.7519623233908949,"GEM (Lopez-Paz and Ranzato, 2017)


86.07
82.60
-
-
67.8∗
-
51.86
A-GEM (Chaudhry et al., 2019a)


-
89.1
-
-
62.3∗
-
61.13
ER-Reservoir (Chaudhry et al., 2019b)


-
79.8
-
-
68.5∗
-
64.03
MC-SGD (Mirzadeh et al., 2020a)


82.63
85.3
-
-
63.30
-
-
MEGA-II (Guo et al., 2020a)


-
91.20
-
-
66.12
-
-
OGD (Farajtabar et al., 2020)


88.32
86.44
98.84
-
-
-
-
Stable-SGD (Mirzadeh et al., 2020b)


70.8
80.1
-
-
59.9∗
-
57.79
TAG (Malviya et al., 2021)


-
-
-
-
62.79
-
57.2
VCL (Nguyen et al., 2017)


-
95.5
98.4
-
-
-
-
FRCL (Titsias et al., 2020)


-
94.3
97.8
-
-
-
-
FROMP (Pan et al., 2020)


-
94.9
99.0
-
-
-
-
EWC (Kirkpatrick et al., 2017)


•84
•96.9
-
-
•42.40
-
-
Prog-Nets (Rusu et al., 2016)


-
•93.5
-
-
•59.2
-
-
SI (Zenke et al., 2017)


-
•97.1
•98.9
-
-
-
-
HAT(Serra et al., 2018)


-
98.6
99.0
-
-
-
-
APD (Yoon et al., 2019)


-
-
-
-
-
56.81
-
FedWeIT (Yoon et al., 2021)


-
-
-
-
-
55.16
-
RMN (Kaushik et al., 2021)


-
97.73
99.5
-
80.01
-
-"
REFERENCES,0.7535321821036107,"Our methods
Isolated-small


-
-
-
96.88
90.18
69.07
82.48
Model Zoo-small


-
-
-
96.85
92.06
73.72
94.27
Model Zoo-small (10% replay)


-
-
-
96.58
89.76
77.18
84.6
Isolated-Resnet


-
-
-
-
88.95
-
-
Model Zoo-Resnet


-
-
-
-
93.15
-
-
Isolated


99.64
98.03
99.98
97.46
91.90
80.72
86.28
Model Zoo


99.66
97.71
99.97
98.68
94.99
84.27
96.84"
REFERENCES,0.7551020408163265,"Multi-Head (multi-task)
99.66
98.16
99.98
98.11
95.38
83.19
90.83"
REFERENCES,0.7566718995290423,"Table A1: Average per-task accuracy (%) for continual learning at the end of all episodes. MNIST, Permuted-
MNIST and Rotated-MNIST are not informative benchmarks for judging forward and backward transfer because
even Isolated achieves 99%+ accuracies. Model Zoo outperforms, by signiﬁcant margins, all existing continual
learning methods; in fact their accuracy is worse than Isolated which suggests little to no forward or backward
transfer. Note: ∗indicates that the evaluation was on Split-CIFAR100 with each task containing randomly
sampled labels and is hence it is not directly comparable to other methods. All numbers without a marker
are from the paper cited in the ﬁrst column.
• denotes that the accuracy is not from the original paper but
from one of (Nguyen et al., 2017; Serra et al., 2018; Chaudhry et al., 2019a). Numbers for other methods on
Split-MiniImagenet were computed by us using open-source implementations of the original authors.
B.6
Single Epoch Metrics"
REFERENCES,0.7582417582417582,"We obtain metrics from publicly available implementations of a few diﬀerent continual learning
algorithms, which are shown in Tables A2 and A3. We see that Model Zoo and its variants uniformly
have essentially no forgetting and good forward transfer. The average per-task accuracy is also higher
than existing methods on these datasets. These tables show results for single-epoch training (to be
consistent with the implementation of these existing methods)."
REFERENCES,0.7598116169544741,"Method
Avg. Accuracy
Forgetting
Forward"
REFERENCES,0.7613814756671899,"SGD
34.52
19.88
53.30
EWC
34.71
18.60
52.19
AGEM
37.23
16.96
52.72
ER
41.36
14.29
54.87
Stable-SGD
37.27
12.07
48.43
TAG
43.33
12.39
55.1"
REFERENCES,0.7629513343799058,"Isolated-small
58.719
0.0
58.71
Model Zoo-small
60.3
0.370
59.13
Isolated-large
41.28
0.0
41.28
Model Zoo-large
46.98
0.38
44.43"
REFERENCES,0.7645211930926217,Table A2: Single Epoch continual learning metrics on Coarse-CIFAR100
REFERENCES,0.7660910518053375,Published as a conference paper at ICLR 2022
REFERENCES,0.7676609105180534,"Method
Avg. Accuracy
Forgetting
Forward"
REFERENCES,0.7692307692307693,"SGD
46.69
16.653
62.35
EWC
47.93
14.26
61.34
AGEM
51.86
10.102
61.13
ER
55.41
9.52
64.03
Stable-SGD
49.28
9.76
57.79
TAG
58.38
5.15
63.00"
REFERENCES,0.7708006279434851,"Isolated-small
65.8
0.0
65.8
Model Zoo-small
81.049
1.278
66.57
Isolated-large
40.2
0.0
40.25
Model Zoo-large
64.12
0.27
48.34"
REFERENCES,0.7723704866562009,"Table A3: Single Epoch continual learning metrics on Split-MinImagenet
B.7
Tracking Individual Task Accuracies"
REFERENCES,0.7739403453689168,"We next study how the individual per-task accuracy evolves on diﬀerent datasets. The following
ﬁgures are extended versions of the right panel of Fig. 1. We see that the accuracy of all tasks increases
with successive episodes. This is quite uncommon for continual learning methods and indicates
that Model Zoo essentially does not suﬀer from catastrophic forgetting. We have also juxtaposed
the corresponding curves of the single-epoch setting with the multi-epoch training in Model Zoo;
we would like to demonstrate the dramatic gap in the accuracy of these problem settings. Even if
single-epoch variant of Model Zoo also does not forget (its accuracy is much better than existing
continual learning methods), the multi-epoch variant has much higher accuracy for every task. This
indicates that continual learning algorithms should also focus on per-task accuracy in addition to
mitigating forgetting, if they are to be performant. The performance of Model Zoo is evidence that
we can build eﬀective continual learning methods that do not forget."
REFERENCES,0.7755102040816326,"5
10
15
20
Number of Tasks 0 25 50 75 100"
REFERENCES,0.7770800627943485,Task Accuracy (%)
REFERENCES,0.7786499215070644,"Isolated
Multi Epoch
Single Epoch"
REFERENCES,0.7802197802197802,Aq. Mammals Fish
REFERENCES,0.7817896389324961,Flowers
REFERENCES,0.783359497645212,Food Container
REFERENCES,0.7849293563579278,Fruits and Veggies
REFERENCES,0.7864992150706437,Electrical Devices
REFERENCES,0.7880690737833596,Household Furniture
REFERENCES,0.7896389324960753,Insects
REFERENCES,0.7912087912087912,Large Carnivores
REFERENCES,0.792778649921507,Man-made Outdoor
REFERENCES,0.7943485086342229,Natural Outdoor
REFERENCES,0.7959183673469388,Omni-Herbivores
REFERENCES,0.7974882260596546,Med. Mammals
REFERENCES,0.7990580847723705,Invertebrates
REFERENCES,0.8006279434850864,People
REFERENCES,0.8021978021978022,Reptiles
REFERENCES,0.8037676609105181,Small Mammals Trees
REFERENCES,0.8053375196232339,Vehicles 1
REFERENCES,0.8069073783359497,Vehicles 2
REFERENCES,0.8084772370486656,Individual Task Accuracies on Coarse-CIFAR100
REFERENCES,0.8100470957613815,Figure A6: Evolution of task accuracy on Coarse-CIFAR100
REFERENCES,0.8116169544740973,Published as a conference paper at ICLR 2022
REFERENCES,0.8131868131868132,"5
10
15
20
Number of Tasks 50 60 70 80 90 100"
REFERENCES,0.814756671899529,Task Accuracy (%)
REFERENCES,0.8163265306122449,"Isolated
Multi Epoch
Single Epoch Task1 Task2 Task3 Task4 Task5 Task6 Task7 Task8 Task9"
REFERENCES,0.8178963893249608,Task10
REFERENCES,0.8194662480376766,Task11
REFERENCES,0.8210361067503925,Task12
REFERENCES,0.8226059654631083,Task13
REFERENCES,0.8241758241758241,Task14
REFERENCES,0.82574568288854,Task15
REFERENCES,0.8273155416012559,Task16
REFERENCES,0.8288854003139717,Task17
REFERENCES,0.8304552590266876,Task18
REFERENCES,0.8320251177394035,Task19
REFERENCES,0.8335949764521193,Task20
REFERENCES,0.8351648351648352,Individual Task Accuracies on Split-CIFAR100
REFERENCES,0.8367346938775511,Figure A7: Evolution of task accuracy on Split-CIFAR100
REFERENCES,0.8383045525902669,"5
10
15
20
Number of Tasks 0 25 50 75 100"
REFERENCES,0.8398744113029827,Task Accuracy (%)
REFERENCES,0.8414442700156985,Isolated
REFERENCES,0.8430141287284144,"Multi Epoch
Single Epoch Task1 Task2 Task3 Task4 Task5 Task6 Task7 Task8 Task9"
REFERENCES,0.8445839874411303,Task10
REFERENCES,0.8461538461538461,Task11
REFERENCES,0.847723704866562,Task12
REFERENCES,0.8492935635792779,Task13
REFERENCES,0.8508634222919937,Task14
REFERENCES,0.8524332810047096,Task15
REFERENCES,0.8540031397174255,Task16
REFERENCES,0.8555729984301413,Task17
REFERENCES,0.8571428571428571,Task18
REFERENCES,0.858712715855573,Task19
REFERENCES,0.8602825745682888,Task20
REFERENCES,0.8618524332810047,Individual Task Accuracies on Split-miniImagenet
REFERENCES,0.8634222919937206,Figure A8: Evolution of task accuracy on Split-miniImagenet
REFERENCES,0.8649921507064364,Published as a conference paper at ICLR 2022
REFERENCES,0.8665620094191523,"B.8
Comparison To Existing Methods"
REFERENCES,0.8681318681318682,"5
10
15
20
Number of Tasks 30 40 50 60 70"
REFERENCES,0.869701726844584,Avg. Accuracy (%)
REFERENCES,0.8712715855572999,"SGD (35)
EWC (35)"
REFERENCES,0.8728414442700158,"AGEM (37)
ER (41)"
REFERENCES,0.8744113029827315,"Stable-SGD (37)
TAG (43)"
REFERENCES,0.8759811616954474,"Isolated-small (60)
Model Zoo-small (59)"
REFERENCES,0.8775510204081632,"Isolated-large (47)
Model Zoo-large (41)"
REFERENCES,0.8791208791208791,Coarse-CIFAR100
REFERENCES,0.880690737833595,"5
10
15
20
Number of Tasks 40 50 60 70"
REFERENCES,0.8822605965463108,Avg. Accuracy (%)
REFERENCES,0.8838304552590267,"SGD (52)
EWC (51)"
REFERENCES,0.8854003139717426,"AGEM (53)
ER (60)"
REFERENCES,0.8869701726844584,"Stable-SGD (52)
TAG (63)"
REFERENCES,0.8885400313971743,"Isolated-small (74)
Model Zoo-small (72)"
REFERENCES,0.8901098901098901,"Isolated-large (50)
Model Zoo-large (58)"
REFERENCES,0.8916797488226059,Split-CIFAR100
REFERENCES,0.8932496075353218,"Figure A9: This ﬁgure compares Model Zoo to existing continual learning methods on the Coarse-CIFAR100
and Split-CIFAR100 datasets with respect to average task accuracy. Model Zoo and its variants are in bold,
similar to the left panel of Fig. 1 (which is for Split-miniImagenet). Isolated-small and Model Zoo-small
signiﬁcantly outperform existing methods. All methods in the ﬁgure are run in the single-epoch setting."
REFERENCES,0.8948194662480377,"B.9
Additional Continual Learning Experiments on 100 samples/label"
REFERENCES,0.8963893249607535,"We also performed continual learning experiments with 100 samples/class in Table A4. We ﬁnd that
Model Zoo-continual obtains an accuracy that lies in between those of Isolated and the approximate
upper bound given by Multi-Head (multi-task learning). Note that we have shown that matching or
improving upon the performance of Isolated (which trains a model independently for each task) for
continual learning is quite diﬃcult because it necessitates eﬀective forward-backward transfer. Doing
so indicates strong ability of the learner for both forward and backward transfer. In some cases, the
continual learner even outperforms Multi-Head trained on all tasks together. This table indicates that
Model Zoo can be used as a continual learning and demonstrate nontrivial forward and backward
transfer even with few samples from each class."
REFERENCES,0.8979591836734694,"Dataset
Isolated
Multi-Head (multi-task)
Model Zoo-Continual"
REFERENCES,0.8995290423861853,"Rotated-MNIST
98.17 ± 0.24
98.47 ± 0.18
98.44 ± 0.17
Split-MNIST
97.11 ± 1.21
99.47 ± 0.08
98.98 ± 0.51
Permuted-MNIST
84.59 ± 1.65
86.36 ± 1.15
86.04 ± 1.68"
REFERENCES,0.9010989010989011,"Split-CIFAR10
82.09 ± 0.76
85.73 ± 0.60
84.17 ± 0.60"
REFERENCES,0.902668759811617,"Split-CIFAR100
80.04 ± 0.44
87.93 ± 0.50
86.27 ± 0.19
Coarse-CIFAR100
65.34 ± 0.41
69.05 ± 0.38
66.80 ± 6.27"
REFERENCES,0.9042386185243328,"Table A4: Average per-task accuracy (%) for continual learning at the end of all episodes using 100 samples/class,
bootstrapped across 5 datasets (mean ± std. dev.). Model Zoo-continual performs better than Isolated on all
problems even if tasks are shown sequentially."
REFERENCES,0.9058084772370487,"We next visualize the evolution of the per-task test accuracy for various datasets. This is a
qualitative way to investigate forward and backward transfer in the learner. Forward transfer is
positive if the accuracy of a newly introduced task in a particular episode is higher than what it would
be if the task were trained in isolation. Backward transfer is positive if successive episodes and
tasks result in an increase in the accuracy of tasks that were introduced earlier in continual learning.
Both Appendix B.7 and Fig. A10 consistently show non-trivial forward and backward transfer."
REFERENCES,0.9073783359497645,Published as a conference paper at ICLR 2022
REFERENCES,0.9089481946624803,"1
2
3
4
5
Number of Tasks 90 92.5 95 97.5 100"
REFERENCES,0.9105180533751962,Accuracy (%)
REFERENCES,0.9120879120879121,"MNIST-01 (100)
MNIST-23 (100)
MNIST-45 (98)
MNIST-67 (100)
MNIST-89 (98)"
REFERENCES,0.9136577708006279,Split-MNIST
REFERENCES,0.9152276295133438,"1
2
3
4
5
Number of Tasks 90 92.5 95 97.5 100"
REFERENCES,0.9167974882260597,Accuracy (%)
REFERENCES,0.9183673469387755,"Rot-MNIST-0 (98)
Rot-MNIST-10 (98)
Rot-MNIST-20 (98)
Rot-MNIST-30 (98)
Rot-MNIST-40 (98)"
REFERENCES,0.9199372056514914,Rot-MNIST
REFERENCES,0.9215070643642073,"1
2
3
4
5
Number of Tasks 70 80 90 100"
REFERENCES,0.9230769230769231,Accuracy (%)
REFERENCES,0.9246467817896389,"P-MNIST-1 (98)
P-MNIST-2 (87)
P-MNIST-3 (85)
P-MNIST-4 (86)
P-MNIST-5 (81)"
REFERENCES,0.9262166405023547,Permuted-MNIST
REFERENCES,0.9277864992150706,"1
2
3
4
5
Number of Tasks 70 80 90 100"
REFERENCES,0.9293563579277865,Accuracy (%)
REFERENCES,0.9309262166405023,"CIFAR10-01 (90)
CIFAR10-23 (73)
CIFAR10-45 (81)
CIFAR10-67 (92)
CIFAR10-89 (86)"
REFERENCES,0.9324960753532182,Split-CIFAR10
REFERENCES,0.9340659340659341,"Figure A10: Per-task validation accuracy as a function of the number of episodes of continual learning for
problems using variants of CIFAR10 and MNIST datasets using Model Zoo-continual. Each task has 100
samples/class. X-markers denote accuracy of Isolated on the new task. We see both forward transfer (Model Zoo
often starts with a higher accuracy than Isolated) and backward transfer (accuracy of some past tasks improves in
later episodes). For problems like Permuted-MNIST and Rotated-MNIST, there is little forward or backward
transfer."
REFERENCES,0.9356357927786499,"B.10
Model Zoo with Uniform sampling"
REFERENCES,0.9372056514913658,"At each round of boosting, Model Zoo samples tasks according to equation (8) i.e., tasks with high
loss under the current ensemble have a higher probability of being selected in the next round. To study
the importance of this heuristic, we compare Model Zoo to a variant called Model Zoo (uniform).
Model Zoo (uniform) samples uniformly over all seen tasks for each round, as opposed to using
equation (8).
Table A5 compares the accuracy of Model Zoo and Model Zoo (uniform) on the Coarse-CIFAR100
dataset. Model Zoo is marginally better than Model Zoo (uniform) indicating that using the training
loss is a cheap proxy for splitting the capacity amongst related tasks. At the same time, this also
indicates that a better measure of task-distances can further improve performance."
REFERENCES,0.9387755102040817,"Method
Avg. Accuracy"
REFERENCES,0.9403453689167975,"Model Zoo
84.27
Model Zoo (uniform)
83.60"
REFERENCES,0.9419152276295133,Table A5: Comparison of accuracies on the Coarse-CIFAR100 dataset
REFERENCES,0.9434850863422292,"C
Proofs"
REFERENCES,0.945054945054945,"Proof of Theorem 2. From the deﬁnition of ρij relatedness for tasks, we have"
REFERENCES,0.9466248037676609,"c E1/ρi1
Pi
(h) ≥EP1(h, h∗
i )"
REFERENCES,0.9481946624803768,"= EP1(h) −EP1(h∗
i , h∗
1).
for any i, j ≤n and h ∈H. Let us denote ρ(i) = ρi1. We can sum over i ∈{1, . . . , k} and divide by
k to get"
REFERENCES,0.9497645211930926,"EP1(h) ≤1 k k
X"
REFERENCES,0.9513343799058085,"i=1
EP1(h∗
(i)) + c k k
X"
REFERENCES,0.9529042386185244,"i=1
E
1/ρ(i)
P(i)
(h)."
REFERENCES,0.9544740973312402,Published as a conference paper at ICLR 2022
REFERENCES,0.9560439560439561,"The ﬁrst term is a discrepancy term that measures how distinct diﬀerent tasks are as measured by
the probability of the disagreement of their individual hypotheses h∗
(i) with that of h∗
1 under samples
drawn from task P1. We need to bound the second term on the right-hand side to prove Theorem 2.
We have
1
k k
X"
REFERENCES,0.957613814756672,"i=1
E
1/ρ(i)
P(i)
(h) ≤1 k k
X"
REFERENCES,0.9591836734693877,"i=1
E1/ρmax
P(i)
(h) = 1 k k
X"
REFERENCES,0.9607535321821036,"i=1
(ePi(h) −ePi(h∗
i ))1/ρmax ≤1 k k
X"
REFERENCES,0.9623233908948194,"i=1
e1/ρmax
Pi
(h) ≤e1/ρmax
¯
P
(h)."
REFERENCES,0.9638932496075353,"where the ﬁnal step involves Jensen’s inequality and ¯P = 1/k Pk
i=1 P(i). This is the population risk
of a hypothesis h on the mixture distribution ¯P and by uniform convergence, we can bound it as"
REFERENCES,0.9654631083202512,"e1/ρmax
¯
P
(h) ≤ "
REFERENCES,0.967032967032967,"e ¯S(h) + c′
D −log δ km"
REFERENCES,0.9686028257456829,1/2!1/ρmax
REFERENCES,0.9701726844583988,"for any h ∈H, in particular ˆhk, with probability 1 −δ. Putting it all together we have:"
REFERENCES,0.9717425431711146,"EP1(h) ≤1 k k
X"
REFERENCES,0.9733124018838305,"i=1
EP1(h∗
(i)) + c k k
X"
REFERENCES,0.9748822605965463,"i=1
E
1/ρ(i)
P(i)
(h) ≤1 k k
X"
REFERENCES,0.9764521193092621,"i=1
EP1(h∗
(i)) + c k "
REFERENCES,0.978021978021978,"e ¯S(h) + c′
D −log δ km"
REFERENCES,0.9795918367346939,1/2!1/ρmax
REFERENCES,0.9811616954474097,"D
Frequently asked questions (FAQs)"
REFERENCES,0.9827315541601256,"1. Why do you consider the setting with unlimited replay?
As mentioned in §6, we would like to ground the practice of continual learning. Our
investigation is inspired by the existing work on continual learning and with this paper we
seek to encourage future works to focus their investigations on key desiderata of continual
learning, namely per-task accuracy and forward-backward transfer.
With this goal, we are motivated by our results in Theorem 2 that ﬁtting a single model on
a set of tasks is fundamentally limiting in performance due to competition between tasks,
this problem is only exacerbated by introducing the tasks sequentially. We have developed
a general method named Model Zoo that, although designed for unlimited replay, can be
executed in any of the standard continual learning settings. Our experiments show that
Model Zoo signiﬁcantly outperforms existing methods in all of these settings, including
problem settings with no replay.
We allow Model Zoo to revisit past data and grow its capacity iteratively in order to get
to the heart of the problem of learning multiple tasks sequentially. In our view, if we can
demonstrate eﬀective continual learning without forgetting at least in this setting, it will
provide a good foundation to build methods that conform to the stricter problem formulations.
We believe that such a foundation is needed today if we are to advance the practice of
continual learning. Let us explain why with an example. The simplest “baseline” algorithm
named Isolated in our work, surprisingly outperforms all existing continual learning methods,
without performing any data replay, or leveraging data from multiple tasks. An upper bound
for performance of a continual learner is the accuracy obtained by a multi-task learner that
has access to all tasks before training. We argue that a good continual learner’s performance
should lie in between the above two: it should be—at least–comparable to training the task
in isolation, and as close to the performance of the multi-task learner as possible. The fact
that existing methods perform much poorly than even Isolated indicates that we need to
thoroughly investigate the tradeoﬀs that these methods make, e.g., while the single epoch
setting helps mitigate forgetting, it has quite poor accuracy."
REFERENCES,0.9843014128728415,Published as a conference paper at ICLR 2022
REFERENCES,0.9858712715855573,"In short, we would like to argue that before we design new sophisticated methods for
continual learning, we should take a step back and evaluate what simple methods can do
and ascertain some level of baseline performance, so that we have a sound benchmark to
compare the sophisticated method against. This is our rationale for considering the problem
setting with unlimited replay. We would also like to emphasize that Model Zoo is a
legitimate continual learner because it gets access to each task sequentially, and has a
ﬁxed computational budget at each episode. For a multi-task learner, the computational
complexity scales with the number of tasks."
REFERENCES,0.9874411302982732,"2. Why do you call it continual learning, instead of, say, incremental or lifelong learning?
The current literature is quite inconclusive about the formal distinction between continual,
incremental and lifelong learning. We have chosen to call our problem “continual learning”
and, by that, we simply mean that the learner gets access to tasks sequentially instead of
having access to all tasks before training begins."
REFERENCES,0.989010989010989,"3. Why are you not using the same neural architectures as those in the existing literature?
Perhaps the methods in this paper work better because you use a larger/diﬀerent neural
architecture.
We use a small deep network (WRN-16-4 with 3.6M weights) for all our experiments. In
particular, this is smaller than the Resnet-12 or Resnet-18 architectures that are used in a
number of continual learning experiments (see Kaushik et al. (2021)) and the Model Zoo
has a comparable number of weights. The exceptional performance of Model Zoo indicates
that these observations indicate that the signiﬁcant gains in accuracy of Model Zoo are not
simply a result of using a larger model. We also demonstrate results on continual learning
with a much smaller model, a CNN with 0.12M weights (which entails that Model Zoo has
about 2.42M weights). This is an extremely small model, and even this model, under all
problem settings, improves the accuracy of continual learning over existing methods."
REFERENCES,0.9905808477237049,"4. Why not compare Model Zoo to ensemble versions of other methods?
We compare the performance of Model Zoo with ensemble versions of Isolated in Fig. 4.
We observe that Model Zoo performs better than an ensemble of Isolated models. We did
not compare against ensemble variants of existing continual learning methods because as
our results show in multiple places, Isolated signiﬁcantly outperforms the state of the art as a
continual learner. We therefore expect that Model Zoo will also outperform ensembles of
existing methods."
REFERENCES,0.9921507064364207,"5. Boosting is not novel.
We do not claim any novelty in developing boosting and moreover our method is only loosely
inspired by it. The key property of Model Zoo that makes it eﬀective is the ability to split
the capacity of the learner across diﬀerent sets of tasks, the ones that are chosen at each
round. This entails that the implementation of Model Zoo is similar to that of boosting-based
algorithms such as AdaBoost, but that is the extent of the similarity between the two. In
particular, Model Zoo only uses the models that were trained on a particular task in order
to make predictions for it. Unlike AdaBoost which combines all the weak-learners using
speciﬁc weights, we simply average the predictions of all models trained on each task. To
emphasize, boosting is not novel, but the ability of Model Zoo to split learning capacity
across multiple models, one from each round, trained on a set of tasks, is novel."
REFERENCES,0.9937205651491365,"6. Identifying that tasks compete is not novel.
See §6 and the references in §2.1. The fact that tasks compete with each other is broadly
appreciated–if not rigorously studied–in the theoretical machine learning literature. It is
also appreciated broadly under the name of catastrophic forgetting in continual learning.
Theorem 2 elucidates this competition and shows, together with Fig. 2, that it can be quite
non-trivial. Even if some tasks compete, i.e., a hypothesis that is optimal for one performs
poorly on the other, they may beneﬁt each other if we have access to lots of samples from
each task. An eﬀective way to resolve this competition has been missing. Model Zoo is a
simple and eﬀective framework to tackle task competition; such a mechanism, and certainly
its use for continual learning, is novel to our knowledge."
REFERENCES,0.9952904238618524,"7. Why does the rate of convergence in Theorem 2 depend upon ρmax, this seems quite
ineﬃcient.
The convergence rate in Theorem 2 which depends on ρmax indeed seems pessimistic if
one chooses a bad set of tasks to train together. But this may be a fundamental limitation
of non-adaptive methods, e.g., that pool data from all tasks together to compute ˆhk. If the"
REFERENCES,0.9968602825745683,Published as a conference paper at ICLR 2022
REFERENCES,0.9984301412872841,"learner uses adaptive methods, e.g., if it has access to ρij and iteratively restricts the search
space at iteration k to only consider hypotheses that achieve a low empirical risk ˆeS(i) on
all tasks closer than ρ(k), then as (Hanneke and Kpotufe, 2020) shows, we can get better
convergence rates if all tasks have the same optimal hypothesis. Let us note that we have
chosen some drastic inequalities in Appendix C in order to elucidate the main point, and it
may be possible to improve upon the rate.
8. Can you give some intuition for the transfer exponent?
The transfer exponent discussed in (5) is inspired by the work of Hanneke and Kpotufe
(2020) and is deﬁned by the smallest value such that
c E1/ρij
Pi
(h) ≥EPj(h, h∗
i ) = EPj(h) + ePj(h∗
j) −ePj(h∗
i )
for all h ∈H. This should be understood as a measure of similarity between tasks that
incorporates properties of the hypothesis space. A small value of ρij ≈1 suggests that
minimizing the excess risk on task Pi (the left-hand side) is a good strategy if we want to
minimize the excess risk on task Pj (the right-hand side). But there may be instances when
we can only reduce the left hand-side up to an additive term
ePj(h∗
j) −ePj(h∗
i )
that may be non-zero (or large) if the optimal hypotheses h∗
j and h∗
i perform very diﬀerently on
samples from Pj. Mathematically, ρij is seen as the rate of convergence of the concentration
term in Theorem 2 if samples from Pi are used to select a hypothesis for Pj; larger the
transfer exponent, more ineﬃcient these samples, even if this additive term is zero."
