Section,Section Appearance Order,Paragraph
ABSTRACT,0.0,ABSTRACT
ABSTRACT,0.002967359050445104,"Machine learning under the constraint of symmetries, given by group invariances
or equivariances, has emerged as a topic of active interest in recent years. Natural
settings for such applications include the multi-reference alignment and cryo elec-
tron microscopy, multi-object tracking, spherical images, and so on. A fundamental
paradigm among such symmetries is the action of a group by symmetries, which
often pertains to change of basis or relabelling of objects in pure and applied
mathematics. Thus, a naturally signiﬁcant class of functions consists of those that
are intrinsic to the problem, in the sense of being independent of such base change
or relabelling; in other words invariant under the conjugation action by a group.
In this work, we investigate such functions, known as class functions, leveraging
tools from group representation theory. A fundamental ingredient in our approach
are given by the so-called irreducible characters of the group, which are canonical
tracial class functions related to its irreducible representations. Such functions
form an orthogonal basis for the class functions, extending ideas from Fourier
analysis to this domain, and accord a very explicit structure. Exploiting a tensorial
structure on representations, which translates into a multiplicative algebra structure
for irreducible characters, we propose to efﬁciently approximate class functions
using polynomials in a small number of such characters. Thus, our approach
provides a global, non-linear coordinate system to describe functions on the group
that is intrinsic in nature, in the sense that it is independent of local charts, and
can be easily computed in concrete models. We demonstrate that such non-linear
approximation using a small dictionary can be effectively implemented using a
deep neural network paradigm. This allows us to learn a class function efﬁciently
from a dataset of its outputs."
INTRODUCTION,0.005934718100890208,"1
INTRODUCTION"
INTRODUCTION,0.008902077151335312,"Learning under group actions. Learning under group actions has emerged as a topic of key interest
in recent years. The natural motivation for this paradigm comes from the many applications in which
there is a canonical action of a group of symmetries, often arising as isometries or invariances of the
model under consideration (Jebara & Kondor, 2008; Wein, 2018)."
INTRODUCTION,0.011869436201780416,"Instances of learning models that admit natural group actions are manifold. Examples range from
natural image data that exhibit symmetries accorded by rotations and translations (Kondor, 2007;
Kakarala, 2012); data arising in tomography (Vasco, 2007; Moroder et al., 2012); network based
data (Giridhar & Kumar, 2006; Herzig et al., 2018); synchronization problems in robotics (Rosen
et al., 2020); computer vision (Agrawal et al., 2006); problems like multi object tracking where
many natural questions are invariant under the rearrangements of object labels (Kondor et al., 2007);
atomic physics (Seko et al., 2019); learning permutations (Huang et al., 2009); Gaussian mixture
models under group actions (Brunel, 2019), among many others (Bandeira et al., 2015b). Signiﬁcant
recent trends include neural networks that are equivariant under group actions on the data (Kondor &
Trivedi, 2018; Worrall et al., 2016; Weiler et al., 2018a; Thiede et al., 2021) and related convolutional
neural networks (CNNs) (Kondor et al., 2018; Cohen et al., 2018b; Niepert et al., 2016; Defferrard
et al., 2016; Cohen & Welling, 2016; Cohen et al., 2018a; Esteves et al., 2018; Weiler et al., 2018b);
multi-reference alignment (MRA) (Bandeira et al., 2014; Perry et al., 2019; Bendory et al., 2017;
Sorzano et al., 2010; Abbe et al., 2018; Fan et al., 2020) and cryo electron microscopy (cryo EM)"
INTRODUCTION,0.01483679525222552,Under review as a conference paper at ICLR 2022
INTRODUCTION,0.017804154302670624,"under the action of the relevant Euclidean isometries (Singer et al., 2018; Hadani & Singer, 2011;
Bendory et al., 2020; Bandeira et al., 2015a); and so forth."
INTRODUCTION,0.020771513353115726,"Invariant functionals. A signiﬁcant class of observables (i.e., functionals of the data) that attract
natural interest in this setting consist of those that are invariant with respect to the group action under
consideration; e.g., mutual distances under the action of a group of isometries, or the relative order of
two objects under the permutation of their labels. In this work, we focus on a fundamental category
of such observables, called class functions, that are invariant under the conjugation action of a group."
INTRODUCTION,0.02373887240356083,"The conjugation action. Group action by conjugation is one of the foundational ways in which
a group can act, and usually corresponds to a change of basis, or relabelling of objects or indices.
A simple example is accorded by data in the form of matrices, where conjugation by an invertible
matrix translates into a change of Euclidean basis, leading to the presentation of the information in a
different co-ordinate system. In this setting, any function of the spectrum of the data matrix remains
invariant under the change of basis (i.e., the conjugation action), and is clearly a signiﬁcant feature to
study. Yet another ready example is accorded by the permutation of the node labels in a network,
which leaves invariant important network properties, such as diameter, subgraph counts and other
aspects of network geometry, as well as the spectral properties of the network."
INTRODUCTION,0.026706231454005934,"Symmetries, group representations and Fourier analysis. Fourier analysis is a central tool in
fundamental machine learning tasks, entailing a vast collection of concepts including bandlimited
functions and low pass ﬁlters, productively focussing on the low frequency part of the Fourier
spectrum of a signal as the most signiﬁcant component. At a conceptual level, much of this originates
from the actions of the translational group of symmetries acting canonically on signals deﬁned on
Euclidean spaces; in particular, the structural simplicity is largely a consequence of the fact that these
groups are abelian or commutative."
INTRODUCTION,0.02967359050445104,"However, natural learning scenarios where the canonical symmetries form a non-abelian group
(i.e., non-commutative) are numerous; even on Euclidean spaces, the translational symmetries when
augmented with rotations constitute a ready example. In such settings, group representation theory
(Simon, 1996) accords an extension of many of the Fourier analytic concepts; for instance the
expansion of a function in terms of matrix-valued Fourier coefﬁcients indexed by the so-called
irreducible representations of the group. For a more detailed discussion on the fundamental synergies
between Fourier analysis and group representations, we refer the reader to Sec. E in the appendix."
INTRODUCTION,0.032640949554896145,"A non-linear conjugation invariant learning paradigm with neural networks. In the present
work, we are focussed on learning conjugation invariant functions (i.e., class functions), which
happen to accord a much simpler version of the non-commutative Fourier analysis discussed above.
This is realised via an orthogonal linear basis of the so-called irreducible characters, which are
essentially traces of certain minimal matrix representations of the group, and are well-understood
in many concrete applications (c.f. Sec. E in appendix for details). It turns out that the space of
irreducible characters exhibit a much richer structure in the form an algebra, which entails that it
is closed under polynomial combinations. As an upshot, using polynomials of a few irreducible
characters of relatively low order, one is able to express much more complicated characters of
substantially higher order; leading to an approximation paradigm for general class functions via
non-linear, polynomial combinations of a small alphabet of irreducible characters."
INTRODUCTION,0.03560830860534125,"In implementing our programme, a fundamental role is played by neural networks, which allow us
to effectively implement this non-linear approximation scheme. Our approach, in essence, leads to
a global co-ordinate system for learning conjugation invariant functions on groups. Viewed from
the perspective of function space approximation, our paradigm may be seen as a kind of non-linear
dimension reduction tool for class functions."
INTRODUCTION,0.03857566765578635,"Groups acting on homogeneous spaces. In some applications, the group of symmetries G acts on a
set X of objects (e.g., rotations acting on a sphere) ; such a set (under a mild transitivity assumption)
is referred to as a homogeneous space of the group. Our setup may be extended to cover such
settings, using a canonical ‘lift’ of any function f : X 7→R to a function ˜f : G 7→R that satisﬁes
˜f = f ◦π, for a standard quotient map π : G 7→X (Dummit & Foote, 2004). Stipulating that ˜f is
conjugation-invariant is equivalent to f being [G, G]-invariant on X, where [G, G] is the so-called
commutator subgroup of G (c.f. Lemma C.1 in appendix). This covers the setting of functions f that
are constant on the orbits of [G, G] acting on X. Such functions include binary classiﬁers on the
permutation group Sn, classiﬁcation problems on the dihedral group D2n, and so on. For a detailed"
INTRODUCTION,0.04154302670623145,Under review as a conference paper at ICLR 2022
INTRODUCTION,0.04451038575667656,"discussion, we refer the reader to Sec. C in the appendix. Further applications of our paradigm to
groups acting on homogeneous spaces can be obtained via a general averaging paradigm, e.g. in the
context of image alignment problems (c.f. Proposition 2.1)."
INTRODUCTION,0.04747774480712166,"Related literature. Class functions have appeared in various forms as useful methodological tools in
the machine learning literature. These include the study of bi-invariant kernels in the context of RKHS
on groups and homogeneous spaces (Jebara & Kondor, 2008); applications to problems of multi-object
tracking Kondor et al. (2007); learning permutations (Jebara & Kondor, 2008); diffusion kernels on
graphs Kondor & Lafferty (2002); Saloff-Coste (2001), and so on. Yarotsky (2021) examines an
invariant theory based approach to learning under general symmetries via two layer neural nets with
rather complex polynomial inputs; in contrast our approach inputs the ubiquitous group characters
and approximates polynomials of high degree, via a few-layer network architecture that exploits the
compositional aspect of neural nets in a non-trivial way. To the best of our knowledge, our approach
to efﬁcient learning of conjugation invariant functions through the lens of group character theory
appears to be rather novel, and prior literature in a similar vein appears to be highly limited."
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.050445103857566766,"2
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS"
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.05341246290801187,"Our interest in this paper would be focussed on the so-called class functions, so we begin with a
concrete deﬁnition."
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.05637982195845697,"Deﬁnition. Let G be a group. Two elements x, y ∈G are said to be conjugate if ∃t ∈G such that
txt−1 = y. A function f : G 7→S for any set S is called a class function if f(txt−1) = f(x)
∀t ∈
G."
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.05934718100890208,"Conjugacy is an equivalence relation, partitioning G into equivalence classes which are referred to as
conjugacy classes. It follows from the deﬁnition that conjugation-invariant functions are constant on
these conjugacy classes, hence the name class functions."
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.06231454005934718,"Class functions on SO(3) and Sn. Elements of the 3-D rotation group SO(3) are precisely 3 × 3
orthogonal matrices with determinant equal to 1. Two elements of SO(3) are conjugate if and only
if they are similar matrices. This means that class functions on SO(3) only depend on the matrix
spectrum of the elements of SO(3). In fact, every R ∈SO(3) is similar (via conjugation) to a block"
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.06528189910979229,diagonal matrix of the form
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.06824925816023739,"cos θ
−sin θ
0
sin θ
cos θ
0
0
0
1 !"
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.0712166172106825,". In geometric terms, the conjugacy classes of"
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.07418397626112759,"SO(3) are the sets of rotations by the same angle θ about different axes. The trace of these matrices is
an example of a class function; tr(R) = 1 + 2 cos θ."
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.0771513353115727,"In the case of the symmetric group Sn, two permutations lie in the same conjugacy class if and only
if they have the same cycle shape. Since cycle shapes are conveniently labelled using partitions, the
conjugacy classes of Sn are most commonly labelled using partitions of n."
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.08011869436201781,"Class functions arise in many natural settings in machine learning. We provide below several such
scenarios where class functions are of key importance."
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.0830860534124629,"A general averaging paradigm. We ﬁrst provide a general setting where class functions arise
naturally through a process of averaging over the group; conjugation invariant functionals often
emerge in practical problems through such a procedure. Let G be a group acting on a space X; that is
for every g ∈G, we may associate a map Tg : X →X such that Te = idX is the identity map on the
space X (where e is the identity element in the group G), and Tgh = Tg ◦Th
∀g, h ∈G. Let µ be
the left Haar measure on the group G, i.e., dµ(g · h) = dµ(h) for all g, h ∈G. Then we may state:"
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.08605341246290801,"Proposition 2.1. Let f : X × X 7→R be such that f(g(x), g(y)) = f(x, y) ∀x, y ∈X, g ∈G. For
any pair x, y ∈X and T ∈G, deﬁne ˜fx,y(T) :=
R"
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.08902077151335312,"G f(Tg(x), g(y))dµ(g). Then ˜fx,y is a class
function."
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.09198813056379822,"Functions f as in Proposition 2.1 that are invariant under the diagonal action of G naturally occur
in a wide array of settings; prominent among them being in the form of distances (or angles) on a
Euclidean space X under the action of a group of isometries G. For a concrete use-case, we refer to
the image alignment application below."
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.09495548961424333,Under review as a conference paper at ICLR 2022
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.09792284866468842,"Proof of Proposition 2.1. Given any h, T ∈G, we have"
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.10089020771513353,"˜fx,y(hTh−1) =
Z"
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.10385756676557864,"G
f(hTh−1g(x), g(y))dµ(g) =
Z"
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.10682492581602374,"G
f(Th−1g(x), h−1g(y))dµ(g) =
Z"
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.10979228486646884,"G
f(Tg′(x), g′(y))dµ(g′) = ˜fx,y(T)."
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.11275964391691394,The third equality is due to left-invariance of µ and setting g′ = h−1g.
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.11572700296735905,"Image Alignment. Image alignment problems have received considerable attention in recent years,
and furnish a natural example of class functions. To set the stage, we consider spherical images,
which are well-motivated by projections of planar images onto the northern sphere (Kondor et al.,
2018; Jebara & Kondor, 2008), images in the form of photos taken using a 360◦camera, and so on. In
the setting of Proposition 2.1, we set G = SO(3), X = S2 and f(x, y) to be the Euclidean distance
between x and y, which would naturally be rotation invariant. Then ˜fx,y(T) is a measure of how well
an image centered at x is aligned with an image centered at y after applying the rotation operator T.
The quantity Mx,y = minT
˜fx,y(T) captures the maximal alignment between the images, and can
be used e.g. for classiﬁcation tasks (e.g., if x is a prototype and y is a new image, then we classify y
to the category of x if Mx,y smaller than a threshold). Proposition 2.1 demonstrates that ˜fx,y is a
class function on SO(3)."
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.11869436201780416,"Quadratic Assignment Problem. Let Pn denote the group of n × n permutation matrices; that is
matrices having exactly one entry equal to 1 in each row and column, and the remaining entries being
0. The quadratic assignment problem (QAP) is a fundamental problem in combinatorial optimization
Koopmans & Beckmann (1957), where the goal is to ﬁnd arg min
X∈Pn
tr(AXBXT ); we will consider"
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.12166172106824925,"this problem in the setting where A ∈Pn and B is a general n × n matrix.
Proposition 2.2. Let f : Pn 7→R be given by f(A) := min
X∈Pn tr(AXBXT ), and B be an n × n"
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.12462908011869436,matrix. Then f is a class function.
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.12759643916913946,"Proof. We verify that f is a class function. Fix any Q, A ∈Pn. Note that QT = Q−1."
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.13056379821958458,"f(QAQ−1) = min
X∈Pn tr(QAQT XBXT ) = min
X∈Pn tr(QT (QAQT XBXT )Q)"
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.13353115727002968,"= min
X∈Pn tr(AQT XBXT Q) = min
X∈Pn tr(A(QT X)B(QT X)T )"
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.13649851632047477,= f(A).
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.1394658753709199,"This gives us a stopping algorithm (or target) for QAP in the following sense. Once we learn the
function f, we could obtain or approximate the objective minimum f(A) for the QAP. We can then
use some optimization algorithm (such as gradient descent) to update the matrix X in order to decrease
the objective tr(AXBXT ), and terminate the optimization process once tr(AXBXT ) −f(A) < ϵ
for some acceptable error tolerance threshold ϵ > 0."
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.142433234421365,"Testing on comparative rankings. Denote {1, 2, . . . , n} by [n]. Let Sn be the symmetric group on
[n]. Suppose that we have two real-valued functions f1, f2 : [n] →R. Then, f1 and f2 would induce
orderings σ1 and σ2 respectively of [n]. For instance, we could have n individuals and f1(k), f2(k)
are resp. the height and weight of individual k, leading to their ranking by heights or weights
(denoted resp. by σ1, σ2). A natural question is the comparative analysis of such rankings, e.g.
testing whether they are approximately similar. In such considerations, of natural interest are statistics
like the number of individuals having the same rank, given by Ln := 1 n
P"
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.14540059347181009,"k∈[n] 1[σ1(k)=σ2(k)] =
1
n
P"
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.14836795252225518,"k∈[n] 1[σ−1
2
σ1(k)=k], where 1 is the indicator function."
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.1513353115727003,"Let f : Sn →R be the function f(σ) =
1
n
P"
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.1543026706231454,"k∈[n] 1[σ(k)=k] for all σ ∈Sn; notice that
Ln = f(σ−1
2 σ1). For any π, σ ∈Sn, we may compute f(πσπ−1) = 1 n
P"
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.1572700296735905,"k∈[n] 1[πσπ−1(k)=k] =
1
n
P"
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.16023738872403562,"k∈[n] 1[σπ−1(k)=π−1(k)] = f(σ). This demonstrates that the important statistic Ln = f is a class
function."
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.1632047477744807,Under review as a conference paper at ICLR 2022
CONJUGATION INVARIANT FUNCTIONS AND THEIR APPLICATIONS,0.1661721068249258,"Multi-object tracking.
In the multi-object tracking problem, there are k objects with labels
{1, . . . , k}, and we observe their arrangement which evolves with time; e.g. the evolution of
the formation of jets ﬂying in an air show. The data is succinctly described in terms of a permutation
σ(t) mapping each label to its position in the arrangement at time t. Most of the fundamental
questions about this model are actually independent of the labels; e.g., whether the starting and the
ﬁnal arrangements are the same, or the ﬁrst time t = t0 at which σ(t) undergoes a change. etc. Any
change in object labels amounts to a conjugation σ(t) 7→πσ(t)π−1 for some permutation π, leading
to the fact that the answer to the above natural questions pertaining to relative order are all class
functions."
TENSOR PRODUCTS AND THE ALGEBRA OF CHARACTERS,0.16913946587537093,"3
TENSOR PRODUCTS AND THE ALGEBRA OF CHARACTERS"
TENSOR PRODUCTS AND THE ALGEBRA OF CHARACTERS,0.17210682492581603,"The theoretical foundations of our approach are underlaid by the theory of tensor products of group
representations, which manifests itself in the form of a polynomial algebra structure on group
characters. Below, we provide a rudimentary outline of this theory, focussing on aspects that are
fundamental to our approach. For an account of group representation theory essential for our approach,
we refer the reader to Sec. E in the appendix."
TENSOR PRODUCTS AND THE ALGEBRA OF CHARACTERS,0.17507418397626112,"The character χρ of a matrix representation ρ of a group G is the function χ : G →C deﬁned by
χ(x) = tr(ρ(x)). The characters inherit the inner product from the L2 structure on the group G. We
call dρ the order of ρ or χρ. If ρ is an irreducible representation, we say that χρ is an irreducible
character. Since tr(T −1AT) = tr(A), it is evident that χρ is a class function. By the celebrated
Peter-Weyl theorem (Simon, 1996), the set of irreducible characters form an orthonornal basis for the
space of square integrable class functions."
TENSOR PRODUCTS AND THE ALGEBRA OF CHARACTERS,0.17804154302670624,"Let ρ1 and ρ2 be two representations of G with corresponding characters χ1 and χ2 respectively.
The tensor product representation is deﬁned as ρ1 ⊗ρ2(g):= ρ1(g) ⊗ρ2(g) for all g ∈G (to be
understood in the form of tensor products of matrices). In general, if ρ1 ⊗ρ2 is not an irreducible
representation of G even if ρ1 and ρ2 are irreducible. However, the theorem of complete reducibility
(Simon, 1996) tells us that it must decompose uniquely as a direct sum of irreducible representations
of G.
ρ1(g) ⊗ρ2(g) ∼=
M"
TENSOR PRODUCTS AND THE ALGEBRA OF CHARACTERS,0.18100890207715134,"ρ∈R(G)
ρ⊕cρ1,ρ2,ρ,
(1)"
TENSOR PRODUCTS AND THE ALGEBRA OF CHARACTERS,0.18397626112759644,"where ρ⊕m just means the direct sum of m copies of ρ, Lm
k=1 ρ, and R(G) is the set of all irreducible
representations of G; we also note the simple relation χρ1⊕ρ2 = χρ1 +χρ2. Let χ1⊗2 be the character
corresponding to ρ1 ⊗ρ2. An important observation is that χ1⊗2(g) = χ1(g)χ2(g), a relation
that may be understood in the context of the tracial identity for matrix tensor products; namely,
tr(A ⊗B) = tr(A)tr(B). Thus, we have"
TENSOR PRODUCTS AND THE ALGEBRA OF CHARACTERS,0.18694362017804153,"χ1(g)χ2(g) =
X"
TENSOR PRODUCTS AND THE ALGEBRA OF CHARACTERS,0.18991097922848665,"ρ
cρ1,ρ2,ρχρ(g).
(2)"
TENSOR PRODUCTS AND THE ALGEBRA OF CHARACTERS,0.19287833827893175,"(2) induces a canonical polynomial algebra structure on characters, which we will exploit in our
approach. In the literature, the coefﬁcients cρ1,ρ2,ρ are known as the Clebsch-Gordan coefﬁcients;
they are well understood for many groups (Costa & Fogli, 2012). These coefﬁcients are known
to be of fundamental importance in quantum mechanics, where they arise in the consideration of
independent quantum systems."
TENSOR PRODUCTS AND THE ALGEBRA OF CHARACTERS,0.19584569732937684,"4
OUR PARADIGM : NON-LINEAR APPROXIMATION VIA NEURAL NETWORKS"
LINEAR VS NON-LINEAR APPROXIMATION,0.19881305637982197,"4.1
LINEAR VS NON-LINEAR APPROXIMATION"
LINEAR VS NON-LINEAR APPROXIMATION,0.20178041543026706,"In this work, we focus on the task of effective approximation of class functions with a limited
alphabet (i.e., dictionary or collection) of irreducible characters, thereby achieving a kind of non-
linear dimension reduction. Peter-Weyl theory guarantees that the set χ(G) of irreducible characters
form an orthonormal basis for the space of class functions on G. Therefore, in principle, any class
function f can be learned simply by linear regression onto χ(G). However, χ(G) is ﬁnite if and
only if G is ﬁnite; so for inﬁnite compact groups (such as SO(3)) or even large ﬁnite groups, we"
LINEAR VS NON-LINEAR APPROXIMATION,0.20474777448071216,Under review as a conference paper at ICLR 2022
LINEAR VS NON-LINEAR APPROXIMATION,0.20771513353115728,"can only aspire to learn f from irreducible characters upto sufﬁciently high order while maintaining
a reasonable computational expense. In natural applications, the class function of interest may be
highly irregular (e.g. a ﬁnite linear combination of indicators in a classiﬁcation problem); since
characters are generally highly regular (e.g., smooth) functions, we would require a very large number
of characters to obtain effective linear approximation of irregular functions."
NON-LINEARITY VIA NEURAL NETS,0.21068249258160238,"4.2
NON-LINEARITY VIA NEURAL NETS"
NON-LINEARITY VIA NEURAL NETS,0.21364985163204747,"The cornerstone of our approach is to exploit the non-linear, polynomial tensor algebra structure
of the group characters in order to amplify and augment the expressive power of a small alphabet
of irreducible characters (c.f., Section 3). In implementing our programme, a key role is played by
neural networks, which allow us to obtain effective non-linear approximations of class functions in
an efﬁcient manner. Apart from their well-known effectiveness in tackling non-linearities, we do not
need to a-priori specify explicit polynomial expressions of higher order characters in terms of those
in the alphabet; such expressions can be complicated to compute explicitly."
"A NEURAL NETWORK BASED CONJUGATION INVARIANT LEARNING PROTOCOL WITH A
SMALL ALPHABET",0.2166172106824926,"4.3
A NEURAL NETWORK BASED CONJUGATION INVARIANT LEARNING PROTOCOL WITH A
SMALL ALPHABET"
"A NEURAL NETWORK BASED CONJUGATION INVARIANT LEARNING PROTOCOL WITH A
SMALL ALPHABET",0.2195845697329377,We delineate below the main steps of our procedure to approximate a class function f on a group G.
"A NEURAL NETWORK BASED CONJUGATION INVARIANT LEARNING PROTOCOL WITH A
SMALL ALPHABET",0.22255192878338279,"Input. A small subset of irreducible characters {χ1, χ2, . . . , χw} ⊂R(G) as alphabet; input data in
the form of pairs {(gi, f(gi)) : gi ∈G; 1 ≤i ≤m}.
Step 1. For each 1 ≤i ≤m, compute vi = (χ1(gi), χ2(gi), . . . , χw(gi)).
Step 2. Use {(vi, f(gi)) : 1 ≤i ≤m} as the training dataset to train a neural network with width w
for the initial layer, and width 1 for the ﬁnal layer.
Step 3. For any new input argument g ∈G, we compute the prediction ˆf(g) as follows:
Step 3a. Compute vg = (χ1(g), χ2(g), . . . , χw(g)).
Step 3b. Perform forward propagation in the neural network output in Step 2 above, with input vg.
Step 3c. Output the result of Step 3b above as the estimate ˆf(g)."
A GLOBAL COORDINATE SYSTEM AND NON-LINEAR DIMENSION REDUCTION,0.22551928783382788,"4.4
A GLOBAL COORDINATE SYSTEM AND NON-LINEAR DIMENSION REDUCTION"
A GLOBAL COORDINATE SYSTEM AND NON-LINEAR DIMENSION REDUCTION,0.228486646884273,"Our approach, in essence leads to a global co-ordinate system for learning conjugation invariant
functions on groups (see Sec. B in appendix for detailed discussion). The global co-ordinates
of a point g ∈G would be given by (χ1(g), . . . , χw(g)), where {χi}w
i=1 is our small alphabet of
characters. This stands in contrast to local co-ordinate systems on manifolds or Lie group, which are
based on local charts and therefore are effective only in small neighbourhoods; for discrete groups,
even such local charts are not available. Further, our alphabet can effectively approximate general
class functions via non-linear combinations, thereby according us a low dimensional non-linear
co-ordinate system to approximate the inﬁnite dimensional space of class functions. From this
perspective, our limited alphabet of characters may be seen as a non-linear dimension reduction tool
for class functions."
THE EXPRESSIVE POWER OF SMALL ALPHABETS AND NON-LINEARITY,0.2314540059347181,"5
THE EXPRESSIVE POWER OF SMALL ALPHABETS AND NON-LINEARITY"
THE EXPRESSIVE POWER OF SMALL ALPHABETS AND NON-LINEARITY,0.2344213649851632,"In this section, we explore the expressive power of small alphabets of characters for some signiﬁcant
groups. We demonstrate that non-linear, polynomial functions of a very small collection of irreducible
characters in groups such as SO(3) and SU(3) are sufﬁcient to generate all characters in these groups,
thereby leading to an approximation of arbitrary class functions. This provides a strong theoretical
basis to substantiate our approach of learning arbitrary class functions using deep neural networks
with a small set of low order irreducible characters as global coordinates. Although the results
presented in this section focus on SO(3) and SU(3), we believe that similar analysis can be extended
to other groups of practical signiﬁcance. Such groups often admit a detailed representation theory in
general, and an explicit Clebsch-Gordan tensorial decomposition in particular, stemming from their
importance in physics and applied mathematics. We refer the reader to Sec. A in the appendix for"
THE EXPRESSIVE POWER OF SMALL ALPHABETS AND NON-LINEARITY,0.23738872403560832,Under review as a conference paper at ICLR 2022
THE EXPRESSIVE POWER OF SMALL ALPHABETS AND NON-LINEARITY,0.2403560830860534,"discussion on the symmetric group Sn. For computational techniques for general groups, see Unger
(2006); Babai & R´onyai (1990) in the discrete and Blaha (1969); Green (1971) in the continuum
setting. The degree of the polynomial in a small alphabet that is needed to express a higher order
character may be taken as a measure of the expressive power of the alphabet, with a low degree
signifying high expressive power. Below, we demonstrate that for groups of fundamental interest in
applications, we are able to obtain high expressive power with a very small alphabet of irreducible
characters."
THE EXPRESSIVE POWER OF SMALL ALPHABETS AND NON-LINEARITY,0.2433234421364985,"5.1
EXPRESSIVE POWER AND CLEBSCH-GORDAN STRUCTURE FOR SO(3)."
THE EXPRESSIVE POWER OF SMALL ALPHABETS AND NON-LINEARITY,0.24629080118694363,"The irreducible representations of SO(3), the 3D rotation group, may be conveniently labelled by
{ρj | j ∈Z≥0}, where each ρj is of order 2j + 1 (ρ0 is the one-dimensional trivial representation).
Let χj be the corresponding irreducible character. The Clebsch-Gordan decomposition for SO(3)
turns out to be very explicit. For l ≥m, we have"
THE EXPRESSIVE POWER OF SMALL ALPHABETS AND NON-LINEARITY,0.24925816023738873,ρl ⊗ρm ∼= ρl+m ⊕ρl+m−1 ⊕· · · ⊕ρl−m.
THE EXPRESSIVE POWER OF SMALL ALPHABETS AND NON-LINEARITY,0.2522255192878338,"In terms of characters, we have for l ≥m"
THE EXPRESSIVE POWER OF SMALL ALPHABETS AND NON-LINEARITY,0.2551928783382789,"χl · χm = χl+m + χl+m−1 + · · · + χl−m.
(3)"
THE EXPRESSIVE POWER OF SMALL ALPHABETS AND NON-LINEARITY,0.258160237388724,"Theorem 5.1. Fix any l ≥0. Then, χl ∈Z[χ1]. Moreover, χl is a polynomial of degree l."
THE EXPRESSIVE POWER OF SMALL ALPHABETS AND NON-LINEARITY,0.26112759643916916,Proof. Setting m = 1 in (3) yields
THE EXPRESSIVE POWER OF SMALL ALPHABETS AND NON-LINEARITY,0.26409495548961426,"χl+1 = χl · χ1 −χl −χl−1,
l ≥1.
(4)"
THE EXPRESSIVE POWER OF SMALL ALPHABETS AND NON-LINEARITY,0.26706231454005935,We will prove this result by induction on l.
THE EXPRESSIVE POWER OF SMALL ALPHABETS AND NON-LINEARITY,0.27002967359050445,"Base case l ≤1 : χ0 is the trivial character, which is the constant function χ0(g) = 1 ∀g ∈SO(3), so
it is a polynomial of degree 0. We of course have that χ1 is a polynomial of degree 1 in Z[χ1]."
THE EXPRESSIVE POWER OF SMALL ALPHABETS AND NON-LINEARITY,0.27299703264094954,"Suppose that for every 0 ≤j ≤l, χj lies in Z[χ1] and that it is a polynomial of degree j. We want to
prove that χl+1 lies in Z[χ1] and that it is a polynomial of degree l + 1."
THE EXPRESSIVE POWER OF SMALL ALPHABETS AND NON-LINEARITY,0.27596439169139464,"By (4), we have χl+1 = χl · χ1 −χl −χl−1. By our inductive hypothesis, the right-hand side is
evidently a polynomial of degree l + 1 in Z[χ1]."
THE EXPRESSIVE POWER OF SMALL ALPHABETS AND NON-LINEARITY,0.2789317507418398,"5.2
EXPRESSIVE POWER AND CLEBSCH-GORDAN STRUCTURE FOR SU(3)."
THE EXPRESSIVE POWER OF SMALL ALPHABETS AND NON-LINEARITY,0.2818991097922849,"SU(3), the group of 3 × 3 unitary matrices with determinant 1, is of key interest in the celebrated
Yang-Mills theory and related areas of physics, and has seen a recent surge of activity from a machine
learning perspective (Matsumoto et al., 2021; Anderson et al., 2020). The irreducible representations
of SU(3) may be succinctly labelled as {D(p, q) | p, q ∈Z≥0}; in physical terms, p is the number of
quarks and q is the number of antiquarks (D(0, 0) is the trivial representation) (Hall, 2015). D(p, q)
is known to have order 1"
THE EXPRESSIVE POWER OF SMALL ALPHABETS AND NON-LINEARITY,0.28486646884273,"2(p + 1)(q + 1)(p + q + 2). There are many algorithms for computing the
Clebsch-Gordan coefﬁcients for SU(3) in general; however, they are rather complicated in nature.
We list three simple recursive relations which are sufﬁcient for our study of expressive power."
THE EXPRESSIVE POWER OF SMALL ALPHABETS AND NON-LINEARITY,0.2878338278931751,"D(p, 0) ⊗D(0, q) ∼= D(p, q) ⊕[D(p −1, 0) ⊗D(0, q −1)],
p, q > 0."
THE EXPRESSIVE POWER OF SMALL ALPHABETS AND NON-LINEARITY,0.29080118694362017,"D(p, 0) ⊗D(1, 0) ∼= D(p + 1, 0) ⊕D(p −1, 1),
p > 0."
THE EXPRESSIVE POWER OF SMALL ALPHABETS AND NON-LINEARITY,0.29376854599406527,"D(0, q) ⊗D(0, 1) ∼= D(0, q + 1) ⊕D(1, q −1),
q > 0."
THE EXPRESSIVE POWER OF SMALL ALPHABETS AND NON-LINEARITY,0.29673590504451036,"In terms of irreducible characters, we have respectively for p, q > 0; p > 0 and q > 0 :"
THE EXPRESSIVE POWER OF SMALL ALPHABETS AND NON-LINEARITY,0.2997032640949555,"χp,q = χp,0χ0,q −χp−1,0χ0,q−1;
χp+1,0 = χp,0χ1,0 −χp−1,1;
χ0,q+1 = χ0,qχ0,1 −χ1,q−1"
THE EXPRESSIVE POWER OF SMALL ALPHABETS AND NON-LINEARITY,0.3026706231454006,"(5)
We now use these recursive relations to prove by induction on p + q that every irreducible character
χp,q occurs as a polynomial of the two lowest order (order 3) non-trivial irreducible characters χ1,0
and χ0,1."
THE EXPRESSIVE POWER OF SMALL ALPHABETS AND NON-LINEARITY,0.3056379821958457,"Theorem 5.2. Fix any p, q ∈Z≥0. Then, χp,q ∈Z[χ1,0, χ0,1]. Moreover, χp,q is a polynomial of
degree at most p + q."
THE EXPRESSIVE POWER OF SMALL ALPHABETS AND NON-LINEARITY,0.3086053412462908,Under review as a conference paper at ICLR 2022
THE EXPRESSIVE POWER OF SMALL ALPHABETS AND NON-LINEARITY,0.3115727002967359,Proof. We prove the statement by induction on N = p + q.
THE EXPRESSIVE POWER OF SMALL ALPHABETS AND NON-LINEARITY,0.314540059347181,"Base case N = p + q ≤1 : χ0,0 = 1, χ1,0, χ0,1 ∈Z[χ1,0, χ0,1]. There is nothing to show here."
THE EXPRESSIVE POWER OF SMALL ALPHABETS AND NON-LINEARITY,0.31750741839762614,"Suppose that χr,s ∈Z[χ1,0, χ0,1], having degree ≤r + s, whenever r + s ≤N. We want to prove
that χp,q ∈Z[χ1,0, χ0,1], with degree ≤p + q, whenever p + q = N + 1."
THE EXPRESSIVE POWER OF SMALL ALPHABETS AND NON-LINEARITY,0.32047477744807124,"Case 1: p + q = N + 1, p, q > 0. By (5), we have χp,q = χp,0χ0,q −χp−1,0χ0,q−1. The right-hand
side is a polynomial of the form χr,s such that r + s ≤N, therefore χp,q ∈Z[χ1,0, χ0,1] as required."
THE EXPRESSIVE POWER OF SMALL ALPHABETS AND NON-LINEARITY,0.32344213649851633,"Case 2: p = N +1, q = 0. By (5), we have χN+1,0 = χN,0χ1,0−χN−1,1. Once again, the right-hand
side is a polynomial of the form χr,s such that r + s ≤N, therefore χN+1,0 ∈Z[χ1,0, χ0,1]."
THE EXPRESSIVE POWER OF SMALL ALPHABETS AND NON-LINEARITY,0.3264094955489614,"Case 3: p = 0, q = N + 1. By (5), we have χ0,N+1 = χ0,Nχ0,1 −χ1,N−1. Once again, the
right-hand side is a polynomial of χr,s such that r + s ≤N, therefore χ0,N+1 ∈Z[χ1,0, χ0,1]."
EXPERIMENTS,0.3293768545994065,"6
EXPERIMENTS"
EXPERIMENTS,0.3323442136498516,"In this section, we provide a brief description of demonstrative numerical experiments to show the
feasibility and efﬁcacy of our learning paradigm in several distinct contexts, . The reader may refer to
the appendix Sec. F for a more detailed description and additional experiments. We used TensorFlow
(Apache License 2.0) and Keras (MIT License) to run our experiments Abadi et al. (2015); Chollet
et al. (2015) on an Intel i7-5500U chip."
EXPERIMENTS,0.3353115727002967,"The group SO(3) is the standard rotation group on the Euclidean space R3, signiﬁcant in many
applications such as imaging. Let χj be the irreducible character of SO(3) as mentioned in Sec.
5.1. We use a fully connected neural network with 3 hidden layers (ConjInv) with the ReLU
activation function at every layer except the last and input alphabet {χ0, χ1, . . . , χ10} (see Sec.
4.3) to learn class functions f (speciﬁed below) on SO(3). For each experiment, 24000 points
g = (α, β, γ) ∈[0, 2π] × [0, π] × [0, 2π] on SO(3) are picked uniformly at random to generate our
data of the form (g, f(β)) (note that class functions on SO(3) only depend on β). We split our data into
train, validation and test sets with 20000, 2000 and 2000 points respectively. Throughout this section,
we minimize the squared error loss (MSE) using Adam Kingma & Ba (2017). Hyperparameters are
tuned according to the validation set and the ﬁnal performance is measured on the test set."
EXPERIMENTS,0.33827893175074186,"We benchmark our results against a fully connected neural network with 6 hidden layers (DeepEuler)
that takes the group elements g = (α, β, γ) ∈SO(3) directly as inputs as well as a linear regression
model (Regression) with input alphabet {χ0, χ1, . . . , χ32}. The Euler angles fully describe the group
elements in SO(3), and thus a comparison of DeepEuler with ConjInv provides a concrete measure
of the effectiveness of an alphabet of irreducible characters. On the other hand, since characters form
a linear basis of the space of conjugation-invariant functions, regression on characters will provide
nearly exact learning if the number of characters is high, which suggests such regression as another
benchmark to compare against. Our experiments demonstrate that conjugation invariant learning
with group characters outperforms both DeepEuler and Regression."
EXPERIMENTS,0.34124629080118696,"Learning continuous class functions on SO(3). We randomly generate 100 class functions f
as Gaussian linear combinations of χ50, χ51, . . . , χ59 to be learned by ConjInv, DeepEuler and
Regression as described above. The three models are compared based on their log-loss on the test
set. See Fig. 1."
EXPERIMENTS,0.34421364985163205,"Learning discontinuous class functions on SO(3). We randomly generate 100 discontinuous
class functions f by taking Gaussian linear combinations of some binary valued indicator func-"
EXPERIMENTS,0.34718100890207715,"tions 10, 11, . . . , 19, where 1k(α, β, γ) =
1
if 0.1πk ≤β ≤0.1πk + 0.12π,
0
otherwise.
These functions"
EXPERIMENTS,0.35014836795252224,"are learned by ConjInv, DeepEuler and Regression as described above. The three models are
compared based on their log-loss on the test set. See Fig. 2."
EXPERIMENTS,0.35311572700296734,"Learning class functions on Sn. This is an important model of a highly non-commutative discrete
group that arises in various applications. For the detailed experiment, we refer the reader to Section
F.1 the appendix."
EXPERIMENTS,0.3560830860534125,"Learning discontinuous class functions on SU(3). This is a crucial model of a Lie group that has
signiﬁcant physical applications, including in particular in quantum chromodynamics Halzen &"
EXPERIMENTS,0.3590504451038576,Under review as a conference paper at ICLR 2022
EXPERIMENTS,0.3620178041543027,Figure 1
EXPERIMENTS,0.3649851632047478,Figure 2
EXPERIMENTS,0.36795252225519287,"Martin (2008); additional computational challenges result from the matrix entries being complex
numbers. We refer the reader to the Section F.4 in the appendix."
DISCUSSION,0.37091988130563797,"7
DISCUSSION"
DISCUSSION,0.37388724035608306,"We investigate conjugation invariant functions on groups, and propose an effective learning paradigm
for such functions via non-linear functions of a small alphabet of characters. We substantiate our
approach via theoretical analysis on several groups signiﬁcant in applications, and via synthetic
experiments using neural networks to efﬁciently capture the non-linearities."
DISCUSSION,0.3768545994065282,"To our knowledge, the present submission is the ﬁrst work to explore the problem of learning
conjugation invariant functions. Another key aspect of our work is to propose the extensive use of
group characters, particularly their non-linear polynomial functionals, as a tool in machine learning
under group action. Further, we set up our approach to be applicable in the context of the actions of
any group, whereas many of the popular methods (such as CNNs) are tailored to speciﬁc kinds of
group actions, or speciﬁc application domains. As such, there is very little benchmark to compare
against for the problem at hand. We emphasize that, given that this is the ﬁrst exploration in this area,
our experiments are more for demonstrative purposes to provide proof-of-concept for our paradigm;
the main contributions of the paper being in the realm of theory and ideas."
DISCUSSION,0.3798219584569733,"The investigations in the present paper call forth natural directions for future work, including
experiments with real-life data, a theoretical as well as experimental study of how to optimally choose
the size of the input character alphabet in relation to the computational budget available (e.g., depth
of the neural net), a theoretical analysis of expressive power that subsumes general classes of group
actions, and domain-speciﬁc applications such as graph neural networks Maron et al. (2018); Azizian
& Lelarge (2020); Keriven & Peyr´e (2019). We believe that our work will motivate new perspectives
within the general ambit of learning under group actions."
DISCUSSION,0.3827893175074184,Under review as a conference paper at ICLR 2022
REFERENCES,0.3857566765578635,REFERENCES
REFERENCES,0.3887240356083086,"Mart´ın Abadi, Ashish Agarwal, Paul Barham, Eugene Brevdo, Zhifeng Chen, Craig Citro, Greg S.
Corrado, Andy Davis, Jeffrey Dean, Matthieu Devin, Sanjay Ghemawat, Ian Goodfellow, Andrew
Harp, Geoffrey Irving, Michael Isard, Yangqing Jia, Rafal Jozefowicz, Lukasz Kaiser, Manjunath
Kudlur, Josh Levenberg, Dandelion Man´e, Rajat Monga, Sherry Moore, Derek Murray, Chris Olah,
Mike Schuster, Jonathon Shlens, Benoit Steiner, Ilya Sutskever, Kunal Talwar, Paul Tucker, Vincent
Vanhoucke, Vijay Vasudevan, Fernanda Vi´egas, Oriol Vinyals, Pete Warden, Martin Wattenberg,
Martin Wicke, Yuan Yu, and Xiaoqiang Zheng. TensorFlow: Large-scale machine learning on
heterogeneous systems, 2015. URL https://www.tensorflow.org/. Software available
from tensorﬂow.org."
REFERENCES,0.3916913946587537,"Emmanuel Abbe, Tamir Bendory, William Leeb, Jo˜ao M Pereira, Nir Sharon, and Amit Singer.
Multireference alignment is easier with an aperiodic translation distribution. IEEE Transactions
on Information Theory, 65(6):3565–3584, 2018."
REFERENCES,0.39465875370919884,"Amit Agrawal, Ramesh Raskar, and Rama Chellappa. What is the range of surface reconstructions
from a gradient ﬁeld? In European conference on computer vision, pp. 578–591. Springer, 2006."
REFERENCES,0.39762611275964393,"Lara B Anderson, Mathis Gerdes, James Gray, Sven Krippendorf, Nikhil Raghuram, and Fabian
Ruehle. Moduli-dependent calabi-yau and su (3)-structure metrics from machine learning. arXiv
preprint arXiv:2012.04656, 2020."
REFERENCES,0.40059347181008903,"Wa¨ıss Azizian and Marc Lelarge. Expressive power of invariant and equivariant graph neural networks.
arXiv preprint arXiv:2006.15646, 2020."
REFERENCES,0.4035608308605341,"L´aszl´o Babai and Lajos R´onyai. Computing irreducible representations of ﬁnite groups. Mathematics
of computation, 55(192):705–722, 1990."
REFERENCES,0.4065281899109792,"Afonso S Bandeira, Moses Charikar, Amit Singer, and Andy Zhu. Multireference alignment using
semideﬁnite programming. In Proceedings of the 5th conference on Innovations in theoretical
computer science, pp. 459–470, 2014."
REFERENCES,0.4094955489614243,"Afonso S Bandeira, Yutong Chen, and Amit Singer. Non-unique games over compact groups and
orientation estimation in cryo-em. arXiv preprint arXiv:1505.03840, 2015a."
REFERENCES,0.4124629080118694,Afonso S Bandeira et al. Convex relaxations for certain inverse problems on graphs. 2015b.
REFERENCES,0.41543026706231456,"Tamir Bendory, Nicolas Boumal, Chao Ma, Zhizhen Zhao, and Amit Singer. Bispectrum inversion
with application to multireference alignment. IEEE Transactions on signal processing, 66(4):
1037–1050, 2017."
REFERENCES,0.41839762611275966,"Tamir Bendory, Alberto Bartesaghi, and Amit Singer. Single-particle cryo-electron microscopy: Math-
ematical theory, computational challenges, and opportunities. IEEE signal processing magazine,
37(2):58–76, 2020."
REFERENCES,0.42136498516320475,"Stephen Blaha. Character analysis of u (n) and su (n). Journal of Mathematical Physics, 10(12):
2156–2168, 1969."
REFERENCES,0.42433234421364985,"Victor-Emmanuel Brunel. Learning rates for gaussian mixtures under group action. In Alina
Beygelzimer and Daniel Hsu (eds.), Proceedings of the Thirty-Second Conference on Learning
Theory, volume 99 of Proceedings of Machine Learning Research, pp. 471–491, Phoenix, USA,
25–28 Jun 2019. PMLR. URL http://proceedings.mlr.press/v99/brunel19a.
html."
REFERENCES,0.42729970326409494,"Franc¸ois Chollet et al. Keras. https://keras.io, 2015."
REFERENCES,0.43026706231454004,"Taco Cohen and Max Welling. Group equivariant convolutional networks. In International conference
on machine learning, pp. 2990–2999. PMLR, 2016."
REFERENCES,0.4332344213649852,"Taco Cohen, Mario Geiger, and Maurice Weiler. A general theory of equivariant cnns on homogeneous
spaces. arXiv preprint arXiv:1811.02017, 2018a."
REFERENCES,0.4362017804154303,Under review as a conference paper at ICLR 2022
REFERENCES,0.4391691394658754,"Taco S. Cohen, Mario Geiger, Jonas K¨ohler, and Max Welling. Spherical CNNs. In International
Conference on Learning Representations, 2018b. URL https://openreview.net/forum?
id=Hkbd5xZRb."
REFERENCES,0.4421364985163205,"Giovanni Costa and Gianluigi Fogli. Symmetries and group theory in particle physics: An introduction
to space-time and internal symmetries, volume 823. Springer Science & Business Media, 2012."
REFERENCES,0.44510385756676557,"Micha¨el Defferrard, Xavier Bresson, and Pierre Vandergheynst. Convolutional neural networks on
graphs with fast localized spectral ﬁltering. arXiv preprint arXiv:1606.09375, 2016."
REFERENCES,0.44807121661721067,"David Steven Dummit and Richard M Foote. Abstract algebra, volume 3. Wiley Hoboken, 2004."
REFERENCES,0.45103857566765576,"Carlos Esteves, Christine Allen-Blanchette, Ameesh Makadia, and Kostas Daniilidis. Learning so (3)
equivariant representations with spherical cnns. In Proceedings of the European Conference on
Computer Vision (ECCV), pp. 52–68, 2018."
REFERENCES,0.4540059347181009,"Zhou Fan, Yi Sun, Tianhao Wang, and Yihong Wu. Likelihood landscape and maximum likelihood
estimation for the discrete orbit recovery model. arXiv preprint arXiv:2004.00041, 2020."
REFERENCES,0.456973293768546,"Arvind Giridhar and Praveen R Kumar. Distributed clock synchronization over wireless networks:
Algorithms and analysis. In Proceedings of the 45th IEEE Conference on Decision and Control,
pp. 4915–4920. IEEE, 2006."
REFERENCES,0.4599406528189911,"HS Green. Characteristic identities for generators of gl (n), o (n) and sp (n). Journal of Mathematical
Physics, 12(10):2106–2113, 1971."
REFERENCES,0.4629080118694362,"Ronny Hadani and Amit Singer. Representation theoretic patterns in three dimensional cryo-electron
microscopy i: The intrinsic reconstitution algorithm. Annals of mathematics, 174(2):1219, 2011."
REFERENCES,0.4658753709198813,"Brian Hall. Lie groups, Lie algebras, and representations: an elementary introduction, volume 222.
Springer, 2015."
REFERENCES,0.4688427299703264,"Francis Halzen and Alan D Martin. Quark & Leptons: An Introductory Course In Modern Particle
Physics. John Wiley & Sons, 2008."
REFERENCES,0.47181008902077154,"Roei Herzig, Moshiko Raboh, Gal Chechik, Jonathan Berant, and Amir Globerson. Mapping images
to scene graphs with permutation-invariant structured prediction. arXiv preprint arXiv:1802.05451,
2018."
REFERENCES,0.47477744807121663,"Jonathan Huang, Carlos Guestrin, and Leonidas Guibas. Fourier theoretic probabilistic inference
over permutations.
Journal of Machine Learning Research, 10(37):997–1070, 2009.
URL
http://jmlr.org/papers/v10/huang09a.html."
REFERENCES,0.47774480712166173,T. Jebara and I. Kondor. Group theoretical methods in machine learning. 2008.
REFERENCES,0.4807121661721068,"Ramakrishna Kakarala. The bispectrum as a source of phase-sensitive invariants for fourier descrip-
tors: a group-theoretic approach. Journal of Mathematical Imaging and Vision, 44(3):341–353,
2012."
REFERENCES,0.4836795252225519,"Nicolas Keriven and Gabriel Peyr´e. Universal invariant and equivariant graph neural networks.
Advances in Neural Information Processing Systems, 32:7092–7101, 2019."
REFERENCES,0.486646884272997,"Diederik P. Kingma and Jimmy Ba. Adam: A method for stochastic optimization, 2017."
REFERENCES,0.4896142433234421,"Risi Kondor. A novel set of rotationally and translationally invariant features for images based on the
non-commutative bispectrum. arXiv preprint cs/0701127, 2007."
REFERENCES,0.49258160237388726,"Risi Kondor and Shubhendu Trivedi. On the generalization of equivariance and convolution in neural
networks to the action of compact groups. In Jennifer Dy and Andreas Krause (eds.), Proceedings
of the 35th International Conference on Machine Learning, volume 80 of Proceedings of Machine
Learning Research, pp. 2747–2755. PMLR, 10–15 Jul 2018. URL http://proceedings.
mlr.press/v80/kondor18a.html."
REFERENCES,0.49554896142433236,"Risi Kondor, Andrew Howard, and Tony Jebara. Multi-object tracking with representations of the
symmetric group. In Artiﬁcial Intelligence and Statistics, pp. 211–218. PMLR, 2007."
REFERENCES,0.49851632047477745,Under review as a conference paper at ICLR 2022
REFERENCES,0.5014836795252225,"Risi Kondor, Zhen Lin, and Shubhendu Trivedi. Clebsch–gordan nets: a fully fourier space spher-
ical convolutional neural network.
In S. Bengio, H. Wallach, H. Larochelle, K. Grauman,
N. Cesa-Bianchi, and R. Garnett (eds.), Advances in Neural Information Processing Systems,
volume 31. Curran Associates, Inc., 2018. URL https://proceedings.neurips.cc/
paper/2018/file/a3fc981af450752046be179185ebc8b5-Paper.pdf."
REFERENCES,0.5044510385756676,"Risi Imre Kondor and John Lafferty. Diffusion kernels on graphs and other discrete structures. In
Proceedings of the 19th international conference on machine learning, volume 2002, pp. 315–322,
2002."
REFERENCES,0.5074183976261127,"Tjalling C Koopmans and Martin Beckmann. Assignment problems and the location of economic
activities. Econometrica: journal of the Econometric Society, pp. 53–76, 1957."
REFERENCES,0.5103857566765578,"Haggai Maron, Heli Ben-Hamu, Nadav Shamir, and Yaron Lipman. Invariant and equivariant graph
networks. arXiv preprint arXiv:1812.09902, 2018."
REFERENCES,0.5133531157270029,"Takuya Matsumoto, Masakiyo Kitazawa, and Yasuhiro Kohno. Classifying topological charge in su
(3) yang–mills theory with machine learning. Progress of Theoretical and Experimental Physics,
2021(2):023D01, 2021."
REFERENCES,0.516320474777448,"Tobias Moroder, Philipp Hyllus, G´eza T´oth, Christian Schwemmer, Alexander Niggebaum, Stefanie
Gaile, Otfried G¨uhne, and Harald Weinfurter. Permutationally invariant state reconstruction. New
Journal of Physics, 14(10):105001, 2012."
REFERENCES,0.5192878338278932,"Mathias Niepert, Mohamed Ahmed, and Konstantin Kutzkov. Learning convolutional neural networks
for graphs. In International conference on machine learning, pp. 2014–2023. PMLR, 2016."
REFERENCES,0.5222551928783383,"Amelia Perry, Jonathan Weed, Afonso S Bandeira, Philippe Rigollet, and Amit Singer. The sample
complexity of multireference alignment. SIAM Journal on Mathematics of Data Science, 1(3):
497–517, 2019."
REFERENCES,0.5252225519287834,"David M Rosen, Luca Carlone, Afonso S Bandeira, and John J Leonard. A certiﬁably correct
algorithm for synchronization over the special euclidean group. In Algorithmic Foundations of
Robotics XII, pp. 64–79. Springer, 2020."
REFERENCES,0.5281899109792285,"Laurent Saloff-Coste. Probability on groups: random walks and invariant diffusions. Notices of the
AMS, 48(9):968–977, 2001."
REFERENCES,0.5311572700296736,"Atsuto Seko, Atsushi Togo, and Isao Tanaka. Group-theoretical high-order rotational invariants for
structural representations: Application to linearized machine learning interatomic potential. Phys.
Rev. B, 99:214108, Jun 2019. doi: 10.1103/PhysRevB.99.214108. URL https://link.aps.
org/doi/10.1103/PhysRevB.99.214108."
REFERENCES,0.5341246290801187,"Barry Simon. Representations of ﬁnite and compact groups. Number 10. American Mathematical
Soc., 1996."
REFERENCES,0.5370919881305638,"Amit Singer et al. Mathematics for cryo-electron microscopy. arXiv preprint arXiv:1803.06714,
2018."
REFERENCES,0.5400593471810089,"Carlos Oscar S Sorzano, JR Bilbao-Castro, Y Shkolnisky, M Alcorlo, R Melero, G Caffarena-
Fern´andez, M Li, G Xu, R Marabini, and JM Carazo. A clustering approach to multireference
alignment of single-particle projections in electron microscopy. Journal of structural biology, 171
(2):197–206, 2010."
REFERENCES,0.543026706231454,"Erik Henning Thiede, Wenda Zhou, and Risi Kondor. Autobahn: Automorphism-based graph neural
nets. arXiv preprint arXiv:2103.01710, 2021."
REFERENCES,0.5459940652818991,"William R Unger. Computing the character table of a ﬁnite group. Journal of Symbolic Computation,
41(8):847–862, 2006."
REFERENCES,0.5489614243323442,"DW Vasco.
Invariance, groups, and non-uniqueness: the discrete case.
Geophysical Journal
International, 168(2):473–490, 2007."
REFERENCES,0.5519287833827893,Under review as a conference paper at ICLR 2022
REFERENCES,0.5548961424332344,"M. Weiler, F. A. Hamprecht, and M. Storath. Learning steerable ﬁlters for rotation equivariant cnns.
In 2018 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR), pp. 849–858,
Los Alamitos, CA, USA, jun 2018a. IEEE Computer Society. doi: 10.1109/CVPR.2018.00095.
URL https://doi.ieeecomputersociety.org/10.1109/CVPR.2018.00095."
REFERENCES,0.5578635014836796,"Maurice Weiler, Mario Geiger, Max Welling, Wouter Boomsma, and Taco Cohen. 3d steerable cnns:
Learning rotationally equivariant features in volumetric data, 2018b."
REFERENCES,0.5608308605341247,"Alexander Spence Wein.
Statistical estimation in the presence of group actions.
PhD thesis,
Massachusetts Institute of Technology, 2018."
REFERENCES,0.5637982195845698,"Daniel Worrall, Stephan Garbin, Daniyar Turmukhambetov, and Jourdan Gabriel. Harmonic networks:
Deep translation and rotation equivariance. 12 2016."
REFERENCES,0.5667655786350149,"Dmitry Yarotsky. Universal approximations of invariant maps by neural networks. Constructive
Approximation, pp. 1–68, 2021."
REFERENCES,0.56973293768546,Under review as a conference paper at ICLR 2022
REFERENCES,0.5727002967359051,"APPENDIX TO CONJUGATION INVARIANT LEARNING
WITH NEURAL NETWORKS"
REFERENCES,0.5756676557863502,"Anonymous authors
Paper under double-blind review"
REFERENCES,0.5786350148367952,"A
EXPRESSIVE POWER AND CLEBSCH-GORDAN STRUCTURE FOR
SYMMETRIC GROUPS."
REFERENCES,0.5816023738872403,"Let Sn be the symmetric group on n letters. Two permutations in Sn are conjugate if and only if they
have the same cycle shape."
REFERENCES,0.5845697329376854,"Deﬁnition. We say that an m-tuple (λ1, λ2, . . . , λm) is a partition of n if λi ∈Z>0, λi+1 ≤λi and
m
P"
REFERENCES,0.5875370919881305,"i=1
λi = n. The number of parts of λ is denoted by l(λ) = m."
REFERENCES,0.5905044510385756,"We denote the set of all partitions of n by P(n). A natural ordering of P(n) is the lexicographic
order."
REFERENCES,0.5934718100890207,"Deﬁnition. If λ and µ are partitions of n, we write λ > µ if and only if the least j for which λj ̸= µj
satisﬁes λj > µj."
REFERENCES,0.5964391691394659,"Cycle shapes may be canonically represented by partitions of n. It is a well known fact that for
any ﬁnite group G, the set of irreducible representations of G over C is in bijection with the
conjugacy classes of G (in particular, character tables for ﬁnite groups are square). Therefore, it is not
surprising that the irreducible representations of Sn may be conveniently labelled by the partitions
of n. For each λ ∈P(n), there is an associated irreducible representation V λ (known as Specht
modules in the literature) of Sn. Some examples are the one-dimensional trivial representation
V (n) and the one-dimensional sign representation V (1n), where (1n) is a shorthand for the partition
(1, 1, . . . , 1) ∈P(n). For a more detailed description of the Specht modules, the reader may refer to
Gordan James’s classical textbook James (2006)."
REFERENCES,0.599406528189911,Deﬁnition. Let λ ∈P(n). The Young diagram of λ is deﬁned to be the set
REFERENCES,0.6023738872403561,"[λ] = {(a, b) ∈Z>0 × Z>0 | 1 ≤a ≤l(λ), 1 ≤b ≤λa}."
REFERENCES,0.6053412462908012,The elements of [λ] are called the nodes of λ.
REFERENCES,0.6083086053412463,"Deﬁnition. The conjugate of a partition λ is the partition λ′ = (λ′
1, λ′
2, . . . ) such that λ′
i = #{j ≥
1 | λj ≥i}."
REFERENCES,0.6112759643916914,"In other words, the Young diagram [λ′] may be obtained by swapping the rows and columns of [λ]:"
REFERENCES,0.6142433234421365,"[λ′] = {(b, a) ∈Z>0 × Z>0 | (a, b) ∈[λ]}."
REFERENCES,0.6172106824925816,"In particular, we note that (λ′)′ = λ. This induces a pairing of partitions in P(n)."
REFERENCES,0.6201780415430267,"The Young diagram of a partition λ may be represented pictorially by a diagram. For each (i, j) ∈[λ],
we insert a box into the ith row and jth column of the diagram."
REFERENCES,0.6231454005934718,Under review as a conference paper at ICLR 2022
REFERENCES,0.6261127596439169,"Example. Suppose that λ = (7, 6, 5, 5, 1) ∈P(24) so that l(λ) = 5. [λ] :"
REFERENCES,0.629080118694362,"λ′ = (5, 44, 2, 1). [λ′] :"
REFERENCES,0.6320474777448071,"The Clebsch-Gordan coefﬁcients for Sn are also known as the Kronecker coefﬁcients in the literature.
A fundamental problem in the representation theory of Sn is to understand the Kronecker coefﬁcients.
Apart from some special cases Bowman et al. (2015); Tewari (2015); Hamermesh (2012) such as
when the partitions have only two parts or are hook-shaped, there are more questions than answers in
general."
REFERENCES,0.6350148367952523,"A fundamental yet simple method of constructing representations of Sn is by taking an existing
representation and tensoring it with the one-dimensional sign representation V (1n). Doing this for
the irreducible Specht module V λ produces its conjugate Specht module V λ′:"
REFERENCES,0.6379821958456974,"V λ ⊗V (1n) ∼= V λ′
∀λ ∈P(n)."
REFERENCES,0.6409495548961425,"Let χλ be the irreducible character corresponding to V λ. In terms of characters, the above result is
simply
χλχ(1n) = χλ′.
(1)"
REFERENCES,0.6439169139465876,"Let R(G) denote the set of irreducible characters of a group G. This means that we may pick a single
representative character χλ for every pair of characters (χλ, χλ′) when curating an alphabet X to
generate R(Sn) as a polynomial in R[X]. In other words, the size of the minimal generating alphabet
X is at most about half that of R(Sn). We believe that in most cases, the minimal generating alphabet
size will be even smaller. However, due to the difﬁculty of working with Kronecker coefﬁcients, a
general result of this form is beyond the scope of this paper and may be discussed in a future work.
We demonstrate this with a small example using only one more basic fact Hamermesh (2012) about
Kronecker coefﬁcients. For any n ∈Z>0 and λ ∈P(n),"
REFERENCES,0.6468842729970327,"χλχ(n−1,1) = (#{λi} −1)χλ +
X"
REFERENCES,0.6498516320474778,"µ
χµ,
(2)"
REFERENCES,0.6528189910979229,"where the sum is over all partitions µ whose Young diagram [µ] is obtained from the Young diagram
[λ] by removing a node and adding another node, and #{λi} −1 is one less than the number of
different row lengths of [λ].
Example. Let n = 6. We list all 11 partitions of 6 in the following table:"
REFERENCES,0.655786350148368,"λ
(6)
(5, 1)
(4, 2)
(4, 1, 1)
(3, 3)
(3, 2, 1)
λ′
(16)
(2, 1, 1, 1, 1)
(2, 2, 1, 1)
(3, 1, 1, 1)
(2, 2, 2)
(3, 2, 1)"
REFERENCES,0.658753709198813,"Recall that χ(6) is the trivial character that takes constant value 1. By (1), we have R[R(S6)] =
R[χ(5,1), χ(4,2), χ(4,1,1), χ(3,3), χ(3,2,1), χ(16)]. We show that in fact,"
REFERENCES,0.6617210682492581,"R[R(S6)] = A := R[χ(5,1), χ(4,2), χ(16)]."
REFERENCES,0.6646884272997032,"It sufﬁces to show that χ(4,1,1), χ(3,3) and χ(3,2,1) ∈A. By (2), we have χ(5,1)χ(5,1) = 1 + χ(5,1) +
χ(4,2) + χ(4,1,1), thus χ(4,1,1) ∈A."
REFERENCES,0.6676557863501483,Under review as a conference paper at ICLR 2022
REFERENCES,0.6706231454005934,"Using (2) again, we obtain"
REFERENCES,0.6735905044510386,"χ(5,1)χ(4,2) = χ(5,1) + χ(4,2) + χ(4,1,1) + χ(3,3) + χ(3,2,1) and"
REFERENCES,0.6765578635014837,"χ(5,1)χ(4,1,1) = χ(5,1) + χ(4,2) + χ(4,1,1) + χ(3,2,1) + χ(3,1,1,1).
Hence, χ(3,3) + χ(3,2,1) ∈A and χ(3,2,1) + χ(3,1,1,1) ∈A. Since (3, 1, 1, 1) = (4, 1, 1)′, we have
χ(3,1,1,1) = χ(4,1,1)χ(16) ∈A by (1)."
REFERENCES,0.6795252225519288,"Therefore, χ(3,2,1) ∈A and χ(3,3) ∈A."
REFERENCES,0.6824925816023739,"This completes the proof that R[R(S6)] = R[χ(5,1), χ(4,2), χ(16)]."
REFERENCES,0.685459940652819,"Remark. Similarly, one can show using (1) and (2) that R[R(S7)] = R[χ(6,1), χ(5,2), χ(17)]. Note
that |P(7)| = 15."
REFERENCES,0.6884272997032641,"B
GLOBAL COORDINATES VIA IRREDUCIBLE CHARACTERS"
REFERENCES,0.6913946587537092,"In the main text, Sec. 4.4, we indicated that our approach, in essence leads to a global co-ordinate
system for learning conjugation invariant functions on groups. To be precise, the global co-ordinates
of a point g ∈G would be given by (χ1(g), . . . , χw(g)), where {χi}w
i=1 is our small alphabet of
characters. Herein, we discuss further details and geometric implications of this, which we needed to
abbreviate in the main text. We emphasize that, these global co-ordinates are with a view to learning
conjugation invariant functions on the group G. We recall here that conjugation invariant functions
are constant on the conjugacy classes, which are the orbits of the conjugation action of G on itself.
For optimality of representation, it is natural that a coordinate system for efﬁcient learning of class
functions would be constant on the conjugacy classes of the group. This is satisﬁed by our character-
induced coordinate system (χ1(·), . . . , χw(·)), which is constant on the conjugacy classes of G. Thus,
in precise terms, these global coordinates parametrize the space of conjugacy classes of the group,
which is minimally sufﬁcient for describing class functions on G. On a Lie group (such as SO(n)
or SU(n)), the conjugation action of the group is a smooth action, i.e. the map τ(g, x) = gxg−1
is a smooth map taking G × G 7→G. The decomposition of the group into conjugacy classes
corresponds to a foliation of G (viewed as a manifold, c.f. (Lawson Jr, 1974; Walschap, 2012)) into
submanifolds (called the leaves of the foliation) corresponding to the conjugacy classes, on which
any class functions is constant. Thus, from a geometric point of view, the coordinates induced by the
irreducible characters provide a global parametrization for the leaves of the foliation of G into its
conjugacy classes."
REFERENCES,0.6943620178041543,"C
LIFTING FUNCTIONS ON HOMOGENEOUS SPACES TO GROUPS"
REFERENCES,0.6973293768545994,"In this section, we elaborate on the ideas articulated in the main text, pertaining to the lifting of
functions from homogeneous spaces to groups, thereby substantiating our focus on studying functions
deﬁned on groups."
REFERENCES,0.7002967359050445,"In our considerations, we mostly focus on the scenario where the conjugation invariant function
is deﬁned on the group, and the group is envisaged to be acting on itself. In many situations of
interest in ML, the group of symmetries actually happen to act on a set of objects that are directly
not elements of the group itself. Such a set on which the group acts is sometimes referred to as a
homogeneous space of the group. However, we demonstrate that our setup is easily extended to cover
such situations."
REFERENCES,0.7032640949554896,"In the common situation where the group G acts transitively on the homogeneous space X (i.e. any
pair of elements in X can be mapped to each other by appropriate group elements, e.g. the Euclidean
rotation group acting on the sphere), it is known that the homogeneous space X can be identiﬁed
with a quotient of the group G by a certain subgroup (the stabilizer subgroup of any given point in
X). This is entailed by the celebrated Orbit-Stabilizer Theorem. In fact, this essentially identiﬁes X
as the coset space of such a stabilizing subgroup of G."
REFERENCES,0.7062314540059347,"In the context of our work, the upshot of this is that, any function f : X 7→R can be ‘lifted’ to a
function on G, which is to say that there is a function ˜f : G 7→R and a surjective quotient map
π : G 7→R such that ˜f(g) = f(π(g))∀g ∈G. Since π is surjective, the functional value of f at"
REFERENCES,0.7091988130563798,Under review as a conference paper at ICLR 2022
REFERENCES,0.712166172106825,"any point x ∈X can be obtained from ˜f in accordance with the above formula. This procedure
is completely canonical, and can be easily carried out explicitly in a general setting. The lifting"
REFERENCES,0.7151335311572701,"construction is succinctly summarized in the following commutative diagram: G X
R π ˜
f f"
REFERENCES,0.7181008902077152,"A simple yet informative example of the above scenario is accorded by the action of the permutation
group Sn on the labels [n] of a set X of n objects. If we ﬁx a speciﬁc object, then its label is stabilized
or left unchanged under this action by a Stab subgroup of Sn that permutes only the labels of the
remaining n −1 objects, and is thus isomorphic to Sn−1. The set X, by the preceding discussion, is
therefore in bijective correspondence with the coset space Sn/Stab; notice that since Stab ∼= Sn−1,
we have |Sn/Stab| = |Sn/Sn−1| = n. The cosets of the subgroup Stab form a disjoint partition
of Sn: in other words, Sn = ˙SStabi, where Stabi are the disjoint cosets of Stab inside Sn. Any
function f : X 7→R can be lifted to a function ˜f according to the above recipe as follows. Any
σ ∈Sn belongs to a unique coset Stabiσ above. On the other hand, each coset Stabi maps to a unique
element xi ∈X under the Orbit-Stabilizer paradigm. We construct ˜f by setting ˜f(σ) = f(xiσ). It is
easy to verify that ˜f indeed satisﬁes the requirements of the commutative diagram above, thereby
verifying that it is a legitimate lift of f from X to Sn, as desired."
REFERENCES,0.7210682492581603,"We conclude this section with a theoretical analysis of how the group action on a homogeneous space
X decomposes X into a disjoint union of commutator orbits."
REFERENCES,0.7240356083086054,"Lemma C.1. Let the group G act transitively on the homogeneous space X. Let f : X 7→R, with the
lift ˜f : G 7→R such that ˜f = f ◦π, where π : G 7→X is the canonical projection map. Then ˜f being
conjugation invariant under G is equivalent to f being invariant under the induced action of [G, G]
on X, where [G, G] is the commutator subgroup of G generated by {[g, h] = ghg−1h−1 : g, h ∈G}."
REFERENCES,0.7270029673590505,"Proof. Fix x0 ∈X . We deﬁne ˜f(g) = f(g · x0) for g ∈G.
˜f is conjugation invariant if
˜f(ghg−1) = ˜f(h)∀g, h ∈G. In terms of f, we have f(ghg−1 · x0) = f(h · x0)∀g, h ∈G. Writing
x = h · x0, we may write f(ghg−1h−1x) = f(x)∀g, h ∈G, that is, f([g, h] · x) = f(x) ∀g, h ∈G,
where [g, h] = ghg−1h−1 is the commutator of g and h. Thus, ˜f is conjugation invariant implies
that f is [G, G] invariant. It is easy to see that we can reverse this argument to obtain the converse
implication."
REFERENCES,0.7299703264094956,"To summarize, the full group G acts transitively on the homogeneous space X, enabling a lift of
the function f to a function ˜f on G. This function being conjugation invariant on G amounts to the
function f being invariant to the induced action of the commutator subgroup [G, G] on X. We may
view this as the homogeneous space X being partitioned into [G, G]-orbits, whereby f is constant on
each [G, G]-orbit."
REFERENCES,0.7329376854599406,"For any group G, the commutator subgroup [G, G] is the smallest normal subgroup N of G such that
G/N is abelian. In some sense, [G, G] captures all the non-abelian attributes of G."
REFERENCES,0.7359050445103857,"Commutators are well-studied objects in group theory. For example, it is known that the commutator
of the symmetric group Sn is the alternating group An. For the dihedral group D2n, which is
generated by a reﬂection x and a rotation y satisfying the relations x2 = yn = 1, xyx = y−1, the
commutator [G, G] is the cyclic subgroup generated by y2."
REFERENCES,0.7388724035608308,"D
COMPACT VS NON-COMPACT GROUPS"
REFERENCES,0.7418397626112759,"We emphasize that, in the present work, we focus on the case of compact groups; ﬁnite groups
trivially belonging to that category in particular. Compact groups are, in a sense, a natural point
of departure for investigations such as ours for an array of reasons. On one hand, compact groups
(such as rotations or permutations) provide some of the most fundamental models for learning under
non-abelian group actions. On the other hand, compact groups allow for a very concrete and well-
understood representation theory and character theory, as outlined in the main text. However, the
action of non-compact groups does arise as symmetries in many interesting applications. Of course,"
REFERENCES,0.744807121661721,Under review as a conference paper at ICLR 2022
REFERENCES,0.7477744807121661,"for locally compact abelian groups, we have an elaborate theory of commutative Fourier analysis
on groups, as discussed in the main text (also c.f. (Rudin, 1962)); a ready example being provided
by the commutative action of the group of real numbers (or that of Rd in general) in many natural
learning set ups. A natural application of locally compact non-abelian groups is accorded by the
group of Euclidean isometries (denoted E(n) or ISO(n)), generated by translations and rotations
acting on Euclidean space. In more advanced physical applications, depending on the energy scale
and relativistic effects involved, it is also of interest to investigate the action of the Galilean group
or the Poincare group (c.f. (Arnol’d, 2013; Nadjaﬁkhah & Forough, 2007; Tung, 1985)). While
the representation theory and the character theory of general classes of non-compact non-abelian
groups poses a formidable mathematical challenge, the investigation of speciﬁc groups relevant to
applications opens a natural direction for future work."
REFERENCES,0.7507418397626113,"E
GROUP REPRESENTATIONS, IRREDUCIBLE CHARACTERS AND FOURIER
ANALYSIS"
REFERENCES,0.7537091988130564,"E.1
GROUP REPRESENTATIONS, IRREDUCIBLE CHARACTERS AND PETER-WEYL THEORY"
REFERENCES,0.7566765578635015,"We provide here the very broad contours of only a few aspects of the deep theory of group repre-
sentations Simon (1996), focussing on ingredients that would be germane to our approach. We will
consider ρ to be a matrix representation of G. That is, ρ : G →Cdρ×dρ; ρ(xy) = ρ(x)ρ(y) for
any x, y ∈G; and ρ(e) = I, where e is the identity element of G and I is the identity matrix. The
character χρ of ρ is the function χ : G →C deﬁned by χ(x) = tr(ρ(x)). We call dρ the order of
ρ or χρ. We say that ρ is reducible if it decomposes into a direct sum of smaller representations as"
REFERENCES,0.7596439169139466,"ρ(x) = Q−1(ρ1(x)⊕ρ2(x))Q = Q−1

ρ1(x)
0
0
ρ2(x)"
REFERENCES,0.7626112759643917,"
Q
∀x ∈G for some invertible matrix"
REFERENCES,0.7655786350148368,"Q ∈Cdρ×dρ which is independent of x. Otherwise, we say that ρ is irreducible. If ρ is an irreducible
representation, we say that χρ is an irreducible character. Since tr(T −1AT) = tr(A), it is evident
that χρ is a class function. By the celebrated Peter-Weyl theorem (Simon, 1996), the set of irreducible
characters form an orthonornal basis for the space of square integrable class functions."
REFERENCES,0.7685459940652819,"E.2
REPRESENTATION THEORY AND NON-COMMUTATIVE FOURIER ANALYSIS."
REFERENCES,0.771513353115727,"Classical Fourier analysis, in its simplest avatar, entails that given a function f : S1 7→C, we
may decompose f as f(x) = P∞
k=−∞ˆf(k)eikx, with the Fourier coefﬁcients being deﬁned as
ˆf(k) =
1
2π
R 2π
0
f(x)e−ikxdx. Representation theory allows us to undertake Fourier analysis on
groups. If f : G 7→C (where G is a locally compact abelian group with Haar measure µ), we
may decompose f as f(x) =
R
ˆ
G ˆf(χ)χ(x−1)dˆµ(χ), with ˆf(χ) =
R"
REFERENCES,0.7744807121661721,"G f(x)χ(x)dµ(x); here where χ
ranges over the the space of irreducible characters of G (equalling in this case the so-called Pontryagin
dual ˆG). It is known that the irreducible representations of an abelian group are all one-dimensional,
so each ˆf(χ) is still a scalar."
REFERENCES,0.7774480712166172,"If G is non-abelian but is compact, then the set of irreducible representations, also denoted as R(G),
is known to be countable, and the representing matrices ρ may be taken to be unitary matrices. Given
a function f : G →C, we may decompose f as"
REFERENCES,0.7804154302670623,"f(x) =
1
µ(G) X"
REFERENCES,0.7833827893175074,"ρ∈R(G)
dρtr[ ˆf(ρ)ρ(x−1)],
with
ˆf(ρ) =
Z"
REFERENCES,0.7863501483679525,"G
f(x)ρ(x)dµ(x).
(3)"
REFERENCES,0.7893175074183977,"It may be noted in this case that each Fourier coefﬁcient ˆf(ρ) is a matrix, leading to the notion of
non-commutative Fourier analysis stemming from the fundamentally non-commutative nature of
matrix multiplication."
REFERENCES,0.7922848664688428,"E.3
PLANCHEREL’S THEOREM AND BAND-LIMITED FUNCTIONS."
REFERENCES,0.7952522255192879,"In classical Fourier analysis, Plancherel’s Theorem tells us that the Fourier transform preserves energy;
namely,
R ∞
−∞|f(x)|2dx = P∞
k=−∞| ˆf(k)|2. Since the sum on the right is ﬁnite, | ˆf(k)|2 →0 as"
REFERENCES,0.798219584569733,"k →∞. Thus, f(x) is well-approximated by Pk0
k=k0 ˆf(k)eikx for sufﬁciently large k0. This is akin"
REFERENCES,0.8011869436201781,Under review as a conference paper at ICLR 2022
REFERENCES,0.8041543026706232,"to band-limiting f, a device that is extremely useful in signal processing and many other areas of
applied mathematics. In the case of compact groups, it is known that the non-commutative Fourier
transform f 7→ˆf deﬁned above satisﬁes a non-commutative Plancherel’s theorem. Indeed,"
REFERENCES,0.8071216617210683,"1
µ(G) Z"
REFERENCES,0.8100890207715133,"G
|f(x)|2dµ(x) =
1
[µ(G)]2
X"
REFERENCES,0.8130563798219584,"ρ∈R(G)
dρ∥ˆf(ρ)∥2
Frob.
(4)"
REFERENCES,0.8160237388724035,"Since the sum on the right of (4) is ﬁnite, ∥ˆf(ρ)∥2
Frob →0 as dρ →∞. Thus, f(x) is well-
approximated by
1
µ(G)
P"
REFERENCES,0.8189910979228486,"dρ≤k0 dρtr[ ˆf(ρ)ρ(x−1)] for sufﬁciently large k0, leading to a notion of
non-commutative bandlimiting for functions deﬁned on non-abelian groups."
REFERENCES,0.8219584569732937,"F
EXPERIMENTS"
REFERENCES,0.8249258160237388,"Using the ideas in Sec. 4.3, we implement several numerical experiments to show how neural
networks with small alphabet can be used to approximate various class functions. Our experiments
are implemented using TensorFlow (Apache License 2.0), Keras (MIT License) Abadi et al. (2015);
Chollet et al. (2015) and SageMath (GPLv3) Stein et al. (2021). Tensorﬂow and Keras was used to
train our models. SageMath was used to compute the irreducible characters of S30."
REFERENCES,0.827893175074184,"F.1
LEARNING CLASS FUNCTIONS ON Sn"
REFERENCES,0.8308605341246291,"Since the conjugacy classes of Sn are canonically labelled by partitions A, class functions on
Sn can be realised as functions on P(n). Set n = 30. There are 5604 partitions of 30. We
generate 100 class functions on S30 by taking Gaussian linear combinations of 10 irreducible
characters χ(18,4,2,2,1,1,1,1), χ(18,4,2,1,1,1,1,1,1), . . . , χ(18,3,3,1,1,1,1,1,1);
(18, 4, 2, 2, 1, 1, 1, 1)
>
(18, 4, 2, 1, 1, 1, 1, 1, 1) > · · · > (18, 3, 3, 1, 1, 1, 1, 1, 1) are the 251st, 252nd, . . . , 260th elements
of P(30) in the lexicographic order A. Our training data comprises 1400 (∼25% of |P(30)|)
function evaluations (λ, f(λ)), where the partitions λ are sampled uniformly at random from
P(30). To approximate this, we train a fully connected neural network with 3 hidden layers of
width 180, 120 and 50 respectively. The input layer consists of the 50 irreducible characters
χ(30), χ(29,1), . . . , χ(22,6,1,1), χ(130); these are the irreducible characters corresponding to the ﬁrst
49 elements of P(30) in the lexicographic order, on top of the one-dimensional sign character
χ(130). The SELU non-linear activation function and Gaussian kernel initializer is applied throughout.
We minimize the squared error loss (MSE) with L2 regularization parameter α = 0.001 using
AdaMax Kingma & Ba (2017)."
REFERENCES,0.8338278931750742,"As
a
benchmark,
we
train
a
linear
regression
model
with
100
input
alphabets
{χ(30), χ(29,1), . . . , χ(20,9,1), χ(130)};
these are the irreducible characters corresponding to
the ﬁrst 99 elements of P(30) in the lexicographic order plus the sign character χ(130). Gaussian
kernel initializer is used and we minimize the squared error loss using Adam Kingma & Ba (2017)."
REFERENCES,0.8367952522255193,"Note that we apply the same hyperparameters (chosen to ensure reasonable convergence) for each of
the 100 class functions that we train. Our neural network was trained over 200 epochs using a batch
size of 100 for each class function. The linear regression model was also trained over 200 epochs
using a batch size of 100. Our models are evaluated using 10-fold cross-validation."
REFERENCES,0.8397626112759644,"In the scatter plot of Figure 1, each point corresponds to the performance of our models on a ﬁxed
class function, with the y-axis representing the mean MSE over 10 folds and the x-axis representing
the corresponding standard deviation. Taking the mean MSE over 10 folds as a representative for
each scatter point, we obtain the histogram in Figure 1. We display the average of the histogram in its
legend. Note that we normalized each of the 100 class functions f so that the mean of squares over
the 1400 instances of f(λ) is equal to 1."
REFERENCES,0.8427299703264095,"We ﬁnd that the performance of the neural network is far superior to the performance of a linear
regression model with double the size of the alphabet. The mean MSE over 100 class functions
trained for linear regression is 5.10 times higher than that for the neural network."
REFERENCES,0.8456973293768546,Under review as a conference paper at ICLR 2022
REFERENCES,0.8486646884272997,Figure 1
REFERENCES,0.8516320474777448,"F.2
LEARNING CONTINUOUS CLASS FUNCTIONS ON SO(3)"
REFERENCES,0.8545994065281899,"This experiment was described brieﬂy in Section 6. We provide the full details here. Let χj be the
irreducible character corresponding to the (2j + 1)-dimensional irreducible representation ρj of
SO(3) (see Section 5.1). Then, χj is the real-valued function χj(β) = sin((2j+1)β/2)"
REFERENCES,0.857566765578635,"sin(β/2)
for 0 ≤β ≤π
(note that class functions on SO(3) depend only on a single angle β)."
REFERENCES,0.8605341246290801,"We generate 100 class functions f on SO(3) by taking Gaussian linear combinations of 10 high
order irreducible characters χ50, χ51, . . . , χ59. Our data comprises 24000 function evaluations (g =
(α, β, γ), f(β)), where g = (α, β, γ) was drawn uniformly at random from [0, 2π] × [0, π] × [0, 2π].
We split our data into train, validation and test sets with 20000, 2000 and 2000 points respectively. A
fully connected neural network (ConjInv) with 3 hidden layers of width 100, 50 and 20 respectively
is ﬁt to the train set over 180 epochs using a batch size of 1000. The input layer consists of the 11
lowest order irreducible characters χ0, χ1, . . . , χ10 of SO(3) (see Sec. 4.3). The ReLU non-linear
activation function is used at every layer except the last. Gaussian kernel initializer is applied
throughout. We minimize the squared error loss (MSE) with L2 regularization parameter 5 × 10−4
using Adam Kingma & Ba (2017) with learning rate 10−3. The hyperparameters were tuned according
to the validation set."
REFERENCES,0.8635014836795252,"Our ﬁrst benchmark is a fully connected neural network with 6 hidden layers (DeepEuler) of
width 150, 120, 80, 60, 30 and 10 respectively. The input layer consists of the three Euler angles
g = (α, β, γ). DeepEuler is ﬁt to the train set over 130 epochs using a batch size of 1000. The
ReLU non-linear activation function is used at every layer except the last. Gaussian kernel initializer
is applied throughout. By tuning hyperparameters according to the validation set, we optimize
DeepEuler using Adam Kingma & Ba (2017) with learning rate 8×10−2 subject to L2 regularization
parameter 3 × 10−12."
REFERENCES,0.8664688427299704,"As a second benchmark, a linear regression model Regression with 33 input alphabets
χ0, χ1, . . . , χ32 is ﬁt to the train set over 100 epochs using a batch size of 500. Gaussian ker-
nel initializer is used. By tuning hyperparameters according to the validation set, we optimize
Regression using Adam Kingma & Ba (2017) with learning rate 3 × 10−3 and L2 regularization
parameter 10−15."
REFERENCES,0.8694362017804155,"The three models are evaluated on the test set. We compare their log losses in Figure 2. Positive
values in our histogram represent instances when ConjInv outperforms its benchmark. Observe that
when compared against Regression, ConjInv has superior performance 100 out of 100 times. On
the other hand, ConjInv outperforms DeepEuler 98 out of 100 times. By taking the average of the
histograms, we conclude that on average, the mean squared error loss for Regression and DeepEuler
are e4.30 = 73.7 and e2.76 = 15.8 times that of ConjInv respectively."
REFERENCES,0.8724035608308606,"F.3
LEARNING DISCONTINUOUS CLASS FUNCTIONS ON SO(3)"
REFERENCES,0.8753709198813057,"We provide the full details to the experiment described in Section 6. Let χj be the irreducible
character of SO(3) (see Sec. F.2)."
REFERENCES,0.8783382789317508,Under review as a conference paper at ICLR 2022
REFERENCES,0.8813056379821959,Figure 2
REFERENCES,0.884272997032641,Figure 3
REFERENCES,0.887240356083086,"100 discontinuous class functions f on SO(3) are generated by taking Gaussian linear combinations
of some binary valued indicator functions 10, 11, . . . , 19, where"
REFERENCES,0.8902077151335311,"1k(α, β, γ) =
1
if 0.1πk ≤β ≤0.1πk + 0.12π,
0
otherwise."
REFERENCES,0.8931750741839762,"Drawing 24000 instances of g = (α, β, γ) uniformly at random from [0, 2π] × [0, π] × [0, 2π], we
obtain 24000 datapoints of the form (g, f(β)). We split our data into train, validation and test sets
with 20000, 2000 and 2000 points respectively. We ﬁt ConjInv from Sec. F.2 to the train set over 180
epochs using a batch size of 180. By tuning the hyperparameters according to the validation set, we
minimize the mean squared error loss with L2 regularization parameter 10−15 using Adam Kingma
& Ba (2017) with learning rate 10−3."
REFERENCES,0.8961424332344213,"Just like in Sec. F.2, our ﬁrst benchmark is DeepEuler, which is ﬁt to the train set over 180 epochs
using a batch size of 2000. By tuning hyperparameters according to the validation set, we optimize
DeepEuler using Adam Kingma & Ba (2017) with learning rate 8×10−2 subject to L2 regularization
parameter 10−15."
REFERENCES,0.8991097922848664,"We also benchmark against Regression, which is ﬁt to the train set over 100 epochs using a batch
size of 500. By tuning hyperparameters according to the validation set, we optimize Regression
using Adam Kingma & Ba (2017) with learning rate 3 × 10−3 subject to L2 regularization parameter
10−15."
REFERENCES,0.9020771513353115,"The three models are evaluated on the test set. We compare their log losses in Figure 3. Positive
values in our histogram represent instances when ConjInv outperforms its benchmark. Observe that
when compared against DeepEuler and Regression, ConjInv achieves superior performance 100
out of 100 times. By taking the average of the histograms, we conclude that on average, the mean
squared error loss for Regression and DeepEuler are e2.22 = 9.2 and e2.69 = 14.7 times that of
ConjInv."
REFERENCES,0.9050445103857567,Under review as a conference paper at ICLR 2022
REFERENCES,0.9080118694362018,Figure 4
REFERENCES,0.9109792284866469,"F.4
LEARNING DISCONTINUOUS CLASS FUNCTIONS ON SU(3)"
REFERENCES,0.913946587537092,"Let χp,q be the irreducible character corresponding to the irreducible representation D(p, q)
of SU(3) (see Section 6.2).
Then, χp,q is the complex-valued function χp,q(θ, φ)
=
ei θ"
REFERENCES,0.9169139465875371,"3 (2p+q) Pp
k=0
Pq
l=0 e−i(k+l)θ( sin((k−l+q+1)φ/2)"
REFERENCES,0.9198813056379822,"sin(φ/2)
), for −2π ≤φ ≤2π and −3π ≤θ ≤3π. Since
Keras does not support complex valued data types, we use the Complex-Valued Neural Networks
library Barrachina (2021) to work with class functions on SU(3)."
REFERENCES,0.9228486646884273,"We generate 100 discontinuous class functions on SU(3) by taking Gaussian linear combinations of
25 binary valued indicator functions 1k,l for 0 ≤k, l ≤4, where"
REFERENCES,0.9258160237388724,"1k,l(θ, φ) = 
 "
REFERENCES,0.9287833827893175,"1
if −3π + 1.2kπ ≤θ ≤−3π + 1.2kπ + 1.32π and
−2π + 0.8lπ ≤φ ≤−2π + 0.8lπ + 0.88π
0
otherwise."
REFERENCES,0.9317507418397626,"Our training data comprises 8500 function evaluations (θ, φ, f(θ, φ)), where (θ, φ) was drawn
uniformly at random from [−3π, 3π] × [−2π, 2π]. To approximate this, we train a fully connected
neural network with 6 hidden layers of width 180, 150, 100, 60, 35 and 10 respectively. The input
layer consists of the 25 irreducible characters χp,q for 0 ≤p, q ≤4. The ReLU non-linear activation
function is applied throughout, except in the last layer where the activation function takes the absolute
values of complex numbers to provide a real-valued output for the purposes of training. We minimize
the squared error loss (MSE) with L2 regularization parameter α = 10−8 using AdaMax Kingma &
Ba (2017)."
REFERENCES,0.9347181008902077,"As a benchmark, we train a linear regression model with 49 input alphabets χp,q for 0 ≤p, q ≤7
and an activation function that takes the absolute values of complex numbers to provide a real-valued
output for the purposes of training. We minimize the squared error loss with L2 regularization
parameter α = 10−9 using AdaMax Kingma & Ba (2017)."
REFERENCES,0.9376854599406528,"Note that we apply the same hyperparameters (chosen to ensure reasonable convergence) for each of
the 100 class functions that we train. Our neural network was trained over 100 epochs using a batch
size of 500 for each class function. The linear regression model was trained over 300 epochs using a
batch size of 250. Our models are evaluated on 1500 unseen datapoints (θ, φ) drawn uniformly at
random from [−3π, 3π] × [−2π, 2π]."
REFERENCES,0.9406528189910979,"Recording the squared error loss (MSE) of our two models on these 100 class functions, we obtain
200 entries for the histogram in Figure 4. Our neural network performs 160 times better than linear
regression with almost double the size of the alphabet, achieving an MSE of just 2.362 as compared
to 378.1."
REFERENCES,0.9436201780415431,REFERENCES
REFERENCES,0.9465875370919882,"Mart´ın Abadi, Ashish Agarwal, Paul Barham, Eugene Brevdo, Zhifeng Chen, Craig Citro, Greg S.
Corrado, Andy Davis, Jeffrey Dean, Matthieu Devin, Sanjay Ghemawat, Ian Goodfellow, Andrew
Harp, Geoffrey Irving, Michael Isard, Yangqing Jia, Rafal Jozefowicz, Lukasz Kaiser, Manjunath"
REFERENCES,0.9495548961424333,Under review as a conference paper at ICLR 2022
REFERENCES,0.9525222551928784,"Kudlur, Josh Levenberg, Dandelion Man´e, Rajat Monga, Sherry Moore, Derek Murray, Chris Olah,
Mike Schuster, Jonathon Shlens, Benoit Steiner, Ilya Sutskever, Kunal Talwar, Paul Tucker, Vincent
Vanhoucke, Vijay Vasudevan, Fernanda Vi´egas, Oriol Vinyals, Pete Warden, Martin Wattenberg,
Martin Wicke, Yuan Yu, and Xiaoqiang Zheng. TensorFlow: Large-scale machine learning on
heterogeneous systems, 2015. URL https://www.tensorflow.org/. Software available
from tensorﬂow.org."
REFERENCES,0.9554896142433235,"Vladimir Igorevich Arnol’d. Mathematical methods of classical mechanics, volume 60. Springer
Science & Business Media, 2013."
REFERENCES,0.9584569732937686,"J Agustin Barrachina. Complex-valued neural networks (cvnn), January 2021. URL https:
//doi.org/10.5281/zenodo.4452131."
REFERENCES,0.9614243323442137,"Christopher Bowman, Maud De Visscher, and Rosa Orellana. The partition algebra and the kronecker
coefﬁcients. Transactions of the American Mathematical Society, 367(5):3647–3667, 2015."
REFERENCES,0.9643916913946587,"Franc¸ois Chollet et al. Keras. https://keras.io, 2015."
REFERENCES,0.9673590504451038,"Morton Hamermesh. Group theory and its application to physical problems. Courier Corporation,
2012."
REFERENCES,0.9703264094955489,"Gordon Douglas James. The representation theory of the symmetric groups, volume 682. Springer,
2006."
REFERENCES,0.973293768545994,"Diederik P. Kingma and Jimmy Ba. Adam: A method for stochastic optimization, 2017."
REFERENCES,0.9762611275964391,"H Blaine Lawson Jr. Foliations. Bulletin of the American Mathematical Society, 80(3):369–418,
1974."
REFERENCES,0.9792284866468842,"Mehdi Nadjaﬁkhah and Ahmad-Reza Forough. Galilean geometry of motions. arXiv preprint
arXiv:0707.3195, 2007."
REFERENCES,0.9821958456973294,"Walter Rudin. Fourier analysis on groups, volume 121967. Wiley Online Library, 1962."
REFERENCES,0.9851632047477745,"Barry Simon. Representations of ﬁnite and compact groups. Number 10. American Mathematical
Soc., 1996."
REFERENCES,0.9881305637982196,"W. A. Stein et al. Sage Mathematics Software (Version 0.6.2). The Sage Development Team, 2021.
http://www.sagemath.org."
REFERENCES,0.9910979228486647,"Vasu V Tewari. Kronecker coefﬁcients for some near-rectangular partitions. Journal of Algebra, 429:
287–317, 2015."
REFERENCES,0.9940652818991098,"Wu-Ki Tung. Group theory in physics, volume 1. World Scientiﬁc, 1985."
REFERENCES,0.9970326409495549,"Gerard Walschap. Metric structures in differential geometry, volume 224. Springer Science &
Business Media, 2012."
