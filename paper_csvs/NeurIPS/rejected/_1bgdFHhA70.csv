Section,Section Appearance Order,Paragraph
ABSTRACT,0.0,Abstract
ABSTRACT,0.001890359168241966,"Software has been developed for knowledge discovery, prediction and management
1"
ABSTRACT,0.003780718336483932,"for over 30 years. However, there are still unresolved pain points when using
2"
ABSTRACT,0.005671077504725898,"existing project development and artifact management methodologies. Historically,
3"
ABSTRACT,0.007561436672967864,"there has been a lack of applicable methodologies. Further, methodologies that
4"
ABSTRACT,0.00945179584120983,"have been applied, such as Agile, have several limitations including scientific
5"
ABSTRACT,0.011342155009451797,"unfalsifiability that reduce their applicability. Evident, a development methodology
6"
ABSTRACT,0.013232514177693762,"rooted in the philosophy of logical reasoning and EKB, a knowledge base topology,
7"
ABSTRACT,0.015122873345935728,"are proposed. Many pain points in data mining, machine learning and general
8"
ABSTRACT,0.017013232514177693,"knowledge management are alleviated conceptually. Evident can be extended
9"
ABSTRACT,0.01890359168241966,"potentially to accelerate philosophical exploration, science discovery, education as
10"
ABSTRACT,0.020793950850661626,"well as knowledge sharing & retention across the globe. EKB offers one solution
11"
ABSTRACT,0.022684310018903593,"of storing information as knowledge, a granular level above data. Related topics in
12"
ABSTRACT,0.024574669187145556,"computer history, software engineering, database, sensing hardware, philosophy,
13"
ABSTRACT,0.026465028355387523,"and project & organization & military managements are also discussed.
14"
INTRODUCTION,0.02835538752362949,"1
Introduction
15"
INTRODUCTION,0.030245746691871456,"Necessity is the mother of invention, claimed Plato [1]. Deficient in rigorous scientific scrutinization
16"
INTRODUCTION,0.03213610586011342,"as the statement is, major methodology evolutions in software development did not emerge until the
17"
INTRODUCTION,0.034026465028355386,"emergence of major computer innovations and thereafter elevated effort orchestration needs.
18"
INTRODUCTION,0.035916824196597356,"In the 1940s, digital programmable electronic computers revolutionized scientific calculation done
19"
INTRODUCTION,0.03780718336483932,"previously with mechanical and analog computing machines [2]. Assembly (1947) [3, 4] and high
20"
INTRODUCTION,0.03969754253308128,"level (1953) [5, 6] programming languages rose to harness the unprecedented and ever-increasing
21"
INTRODUCTION,0.04158790170132325,"computing power, Eventually the term software was coined (1953) [7]. Two Software Development
22"
INTRODUCTION,0.043478260869565216,"Methodologies (SDMs) were proposed: 1. a project breakdown of sequential phases, the essence of
23"
INTRODUCTION,0.045368620037807186,"Waterfall (see Fig 1a), first presented no later than 1956 [8] and 2. iterative and incremental SDM,
24"
INTRODUCTION,0.04725897920604915,"the essence of Agile (see Fib 1b), first executed no later than 1957 [9].
25"
INTRODUCTION,0.04914933837429111,"In the 1960s, operating systems (1962) emerged to orchestrate multiple computation tasks[10]. This
26"
INTRODUCTION,0.05103969754253308,"signified the shift of computer development from single-task specialized machines for military and
27"
INTRODUCTION,0.052930056710775046,"academia to machines accessible to the general public. The shift was exemplified by The Mother of
28"
INTRODUCTION,0.054820415879017016,"All Demos (1968) which demonstrated many fundamental elements of personal computing for the
29"
INTRODUCTION,0.05671077504725898,"first time [11] and showed how software had evolved in both diversity and complexity. Meanwhile,
30"
INTRODUCTION,0.05860113421550094,"the first formal detailed diagram of the Waterfall methodology appeared in literature (See Fig 1a)
31"
INTRODUCTION,0.06049149338374291,"(1970) [12] and the name of Waterfall was ultimately coined (1976) [13]. Agile variants such as
32"
INTRODUCTION,0.062381852551984876,"evolutionary project management [14] and adaptive SDM [15] appeared in the early 1970s, although
33"
INTRODUCTION,0.06427221172022685,"no clear preference between Waterfall and Agile variants was found in the literature.
34"
INTRODUCTION,0.0661625708884688,"Table 1: Major Software Usage Evolutions and Methodology Developments
Period
Technology
Software Usage
Major Methodology Development"
"S
PROGRAMING
LANGUAGE",0.06805293005671077,"1940s
Programing
Language"
"S
PROGRAMING
LANGUAGE",0.06994328922495274,"Scientific
Calculation"
"S
PROGRAMING
LANGUAGE",0.07183364839319471,"First Waterfall variant presentation (1956) [8]; first
Agile variant execution (1957)[9]."
"S
OPERATING
SYSTEM",0.07372400756143667,"1960s
Operating
System"
"S
OPERATING
SYSTEM",0.07561436672967864,"Shifting to
Applications"
"S
OPERATING
SYSTEM",0.07750472589792061,"First detailed diagram of Waterfall idea(1970)[12],
Waterfall name (1976)[13]; Agile variants: evolu-
tionary project management [14] & adaptive SDM
[15](early 1970s)."
"S
GUI &
INTERNET",0.07939508506616257,"1980s
GUI &
Internet"
"S
GUI &
INTERNET",0.08128544423440454,"PC & Internet
Applications"
"S
GUI &
INTERNET",0.0831758034026465,"Waterfall standardized in military (1985)[20]; The
Manifesto signed (2001)[24]. Agile significantly
more popular than Waterfall."
"S
GUI &
INTERNET",0.08506616257088846,"Around
1990"
"S
GUI &
INTERNET",0.08695652173913043,"Data
Storage"
"S
GUI &
INTERNET",0.0888468809073724,"Knowledge
Dis-
covery, Prediction
and Management NA 35 36"
"S
GUI &
INTERNET",0.09073724007561437,"In the 1980s, personal computers entered households[16] followed by graphic user interface (GUI)
37"
"S
GUI &
INTERNET",0.09262759924385633,"(1983) [16]. The Internet Protocol Suite (TCP/IP) was standardized (1982)[17] and commercial
38"
"S
GUI &
INTERNET",0.0945179584120983,"Internet service providers emerged (1989) [18, 19] Unprecedented user-computer interactions and
39"
"S
GUI &
INTERNET",0.09640831758034027,"user-user communications created tremendous software needs, while Waterfall was still widely
40"
"S
GUI &
INTERNET",0.09829867674858223,"deployed in software development. United States Department of Defense issued a military standard
41"
"S
GUI &
INTERNET",0.1001890359168242,"describing Waterfall as the required military software development process (1985) [20]. However,
42"
"S
GUI &
INTERNET",0.10207939508506617,"software user needs grew so fast that, the heavy Waterfall SDM failed to deliver in pace. Consequently,
43"
"S
GUI &
INTERNET",0.10396975425330812,"a number of light weight SDMs were proposed and practiced (1990s) [4, 21, 22, 23]. Eventually The
44"
"S
GUI &
INTERNET",0.10586011342155009,"Manifesto for Agile Software Development (The Manifesto) [24] was signed by 17 practitioners of
45"
"S
GUI &
INTERNET",0.10775047258979206,"light-weight SDM (2001) and became the de facto SDM.
46"
"S
GUI &
INTERNET",0.10964083175803403,"Around 1990, data storage capacities grew significantly and software usages in Data Mining (DM,
47"
"S
GUI &
INTERNET",0.11153119092627599,"defined as knowledge discovery from data) reached the tipping point. While data and software’s
48"
"S
GUI &
INTERNET",0.11342155009451796,"storage manners differ between Von Neumann and Harvard architectures, data storage capacity growth
49"
"S
GUI &
INTERNET",0.11531190926275993,"empowered software to discover knowledge supported by scientific evidence (defined as Knowledge)
50"
"S
GUI &
INTERNET",0.11720226843100189,"that people never had access to. Corporations started to analyze customers’ behavior and make
51"
"S
GUI &
INTERNET",0.11909262759924386,"business decisions based on Knowledge (1990s) [25]. The first DM methodology, Cross-Industry
52"
"S
GUI &
INTERNET",0.12098298676748583,"Standard Process for Data Mining (CRISP-DM) was conceived (1996) [26, 27]. However, CRISP-
53"
"S
GUI &
INTERNET",0.12287334593572778,"DM and its variants appear more of a theoretical framework, offer little meaningful or actionable
54"
"S
GUI &
INTERNET",0.12476370510396975,"guidance, and therefore have not gotten much traction. In addition, CRISP-DM is concerned only
55"
"S
GUI &
INTERNET",0.1266540642722117,"with DM, not Machine Learning (ML, defined as to deliver an algorithm (Algo) for Knowledge
56"
"S
GUI &
INTERNET",0.1285444234404537,"prediction) or Knowledge Management (KM) in general for science, medicine, military and so on.
57"
"S
GUI &
INTERNET",0.13043478260869565,"Due to the absence of alternative methodologies(see Table 1), Agile is still being offered up for DM,
58"
"S
GUI &
INTERNET",0.1323251417769376,"ML, and KM [28, 29] with questions being asked about its appropriateness [30, 31].
59"
"S
GUI &
INTERNET",0.1342155009451796,"This paper discusses limitations in Agile as a scientific claim and why it may not address the current
60"
"S
GUI &
INTERNET",0.13610586011342155,"pain points of DM, ML and KM, which are later summarized. Evident along with Evident Knowledge
61"
"S
GUI &
INTERNET",0.13799621928166353,"Base (EKB) is proposed as a project development and artifact management methodology. Evident’s
62"
"S
GUI &
INTERNET",0.13988657844990549,"potential in alleviating many current pain points is demonstrated conceptually. Unalleviated pain
63"
"S
GUI &
INTERNET",0.14177693761814744,"points and future work to fulfill the potential are also discussed. Beyond software development,
64"
"S
GUI &
INTERNET",0.14366729678638943,"Evident is illustrated to be applicable in many aspects of society. EKB is demonstrated as one potential
65"
"S
GUI &
INTERNET",0.14555765595463138,"infrastructure to store information as Knowledge, a granular level above data.
66"
AGILE AMBIGUITY AND UNFASIFIABILITY,0.14744801512287334,"2
Agile ambiguity and unfasifiability
67"
AGILE AMBIGUITY AND UNFASIFIABILITY,0.14933837429111532,"Most people regard Agile as iterative, evolutionary and incremental software development [9] (see
68"
AGILE AMBIGUITY AND UNFASIFIABILITY,0.15122873345935728,"Fig 1b) and many claim to be Agile practitioners. However, Agile empirical evidence is mixed and
69"
AGILE AMBIGUITY AND UNFASIFIABILITY,0.15311909262759923,"hard to find [32, 30] while no measurable scientific evidence has been found at all. Although control
70"
AGILE AMBIGUITY AND UNFASIFIABILITY,0.15500945179584122,"experiment challenges or absence of quantitative project Agility measurements may explain no
71"
AGILE AMBIGUITY AND UNFASIFIABILITY,0.15689981096408318,"measurable scientific evidence, concerns remain with the ambiguity with which Agile’s approaches
72"
AGILE AMBIGUITY AND UNFASIFIABILITY,0.15879017013232513,"and scope are defined in The Manifesto.
73"
AGILE APPROACHES ARE VAGUELY DEFINED IN THE MANIFESTO,0.16068052930056712,"2.1
Agile approaches are vaguely defined in The Manifesto
74"
AGILE APPROACHES ARE VAGUELY DEFINED IN THE MANIFESTO,0.16257088846880907,"The Manifesto includes 4 values and 12 principles [24]. The goal is crystal clear: to rapidly deliver
75"
AGILE APPROACHES ARE VAGUELY DEFINED IN THE MANIFESTO,0.16446124763705103,"quality software that meets user needs, but not so much can be found for how to get there. Most of
76"
AGILE APPROACHES ARE VAGUELY DEFINED IN THE MANIFESTO,0.166351606805293,"the Values and Principles appear to be goals but not approaches (see Appendix); some are concerned
77"
AGILE APPROACHES ARE VAGUELY DEFINED IN THE MANIFESTO,0.16824196597353497,"with approaches but vaguely defined; only four principles are actionable, which turn out to have no
78"
AGILE APPROACHES ARE VAGUELY DEFINED IN THE MANIFESTO,0.17013232514177692,"relevance in how to implement iterative, evolutionary or incremental development. Agile Alliance,
79"
AGILE APPROACHES ARE VAGUELY DEFINED IN THE MANIFESTO,0.1720226843100189,"co-founded by some original signers of The Manifesto, defines Agile as “an umbrella term for a set
80"
AGILE APPROACHES ARE VAGUELY DEFINED IN THE MANIFESTO,0.17391304347826086,"of frameworks and practices” from which Agile practitioners “figure out the right things to do given
81"
AGILE APPROACHES ARE VAGUELY DEFINED IN THE MANIFESTO,0.17580340264650285,"your particular context.” [33] Unfortunately, no actionable approaches are defined.
82"
AGILE APPROACHES ARE VAGUELY DEFINED IN THE MANIFESTO,0.1776937618147448,"Therefore although there are numerous frameworks under the Agile umbrella [34, 35], it’s impossible
83"
AGILE APPROACHES ARE VAGUELY DEFINED IN THE MANIFESTO,0.17958412098298676,"to determine if a development practice is Agile and the claim of Agile practice becomes unfalsifiable.
84"
AGILE APPROACHES ARE VAGUELY DEFINED IN THE MANIFESTO,0.18147448015122875,"Because falsifiability is the standard evaluating scientific against non-scientific claims introduced by
85"
AGILE APPROACHES ARE VAGUELY DEFINED IN THE MANIFESTO,0.1833648393194707,"Karl Popper [36], Agile is not a scientific claim. Consequently, no observable scientific evidence can
86"
AGILE APPROACHES ARE VAGUELY DEFINED IN THE MANIFESTO,0.18525519848771266,"prove or disprove Agile, because technically no one can determine if a project is Agile or not in the
87"
AGILE APPROACHES ARE VAGUELY DEFINED IN THE MANIFESTO,0.18714555765595464,"first place. If an Agile rollout “fails”, Agile proponents can always argue that the Agile rollout was
88"
AGILE APPROACHES ARE VAGUELY DEFINED IN THE MANIFESTO,0.1890359168241966,"not implemented correctly.
89"
AGILE APPROACHES ARE VAGUELY DEFINED IN THE MANIFESTO,0.19092627599243855,"Meanwhile Agile practitioners cannot determine if they practice Agile correctly either. Projects
90"
AGILE APPROACHES ARE VAGUELY DEFINED IN THE MANIFESTO,0.19281663516068054,"employing Agile frameworks such as Test Driven Development or Feature Driven Development
91"
AGILE APPROACHES ARE VAGUELY DEFINED IN THE MANIFESTO,0.1947069943289225,"may not even realize that the projects may not be adaptive to new user needs. People who are
92"
AGILE APPROACHES ARE VAGUELY DEFINED IN THE MANIFESTO,0.19659735349716445,"essentially practicing Waterfall may believe they are practicing Agile only because they implement
93"
AGILE APPROACHES ARE VAGUELY DEFINED IN THE MANIFESTO,0.19848771266540643,"each sequential Waterfall phase incrementally or simply use Scrum or Kanban.
94"
AGILE APPROACHES ARE VAGUELY DEFINED IN THE MANIFESTO,0.2003780718336484,"In defense, some proponents claim Agile as a philosophy [37, 38]. Granted Agile’s goal may fit into
95"
AGILE APPROACHES ARE VAGUELY DEFINED IN THE MANIFESTO,0.20226843100189035,"Axiology, one of Philosophy’s four domains (the rest as Metaphysics, Epistemology and Logic) [39],
96"
AGILE APPROACHES ARE VAGUELY DEFINED IN THE MANIFESTO,0.20415879017013233,"concerned with what is good, it appears to be a common understanding and offers little value when
97"
AGILE APPROACHES ARE VAGUELY DEFINED IN THE MANIFESTO,0.2060491493383743,"Agile’s approaches are vaguely defined.
98"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.20793950850661624,"2.2
No scopes are defined in The Manifesto
99"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.20982986767485823,"“The right things to do given your particular context” by Agile Alliance [33] are expected to be found
100"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.21172022684310018,"within Agile’s frameworks, otherwise Agile is not practiced right. With no scope defined, Agile
101"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.21361058601134217,"seems to cover the scope of all softwares. However, some softwares have non-incremental needs or
102"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.21550094517958412,"simply only one need, e.g. to solve one specific partial differential equation numerically. Their needs
103"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.21739130434782608,"are either met or not at all. No iteration or evolutionary Agile design cycles exist.
104"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.21928166351606806,"Agile is also not applicable for Knowledge discovery tasks such as DM. In a typical Agile development
105"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.22117202268431002,"cycle (Fig 1b), Review phase is to discover Knowledge about user needs, which can be done through
106"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.22306238185255198,"DM. Therefore Agile should not be applicable to DM, one phase of its own design cycle.
107"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.22495274102079396,"Table 2: Pain Points of DM, ML and KM."
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.22684310018903592,Pain Points for DM
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.22873345935727787,Overall
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.23062381852551986,"Struggles to deliver fast with technical debt
abc
Project Progress not easily measurable
b
Uncertainty in project timeline
b
Activities not easily trackable or reproducible
bc"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.23251417769376181,"Not scalable in terms of both collaborator number and project maintenance
ab
Few general project design patterns
abc
Anti-patterns not uncommon
abc"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.23440453686200377,"Collabor-
ation"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.23629489603024575,"No methodologies to orchestrate team of size commonly seen in software
development b"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.2381852551984877,"Few intuitive manners to divide task among team members
ab
Deficient common awareness in needs for process improvement
a
Tasks completed or ideas explored by team members cannot be easily found
and reproduced causing duplicated work. bc Data"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.24007561436672967,"Data compromised in availability, accuracy and consistency during acquisition
x
Data preprocessing process not standardized such as data labeling, object
detection (e.g. identify object pixels in images) causing unstable data depen-
dency, cascade correction and uncertainty in project progress b"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.24196597353497165,"Underutilized data may take unnecessary resource
b
Data may be presented in different data type such as integer, float or string,
causing unnecessary data dependency for Algo and experiments b"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.2438563327032136,"Knowledge
Discovery /
ML Algo
Research"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.24574669187145556,"Off-the-shelf models are available for DM automation. However, DM au-
tomation has not become a common practice. abc"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.24763705103969755,"Inefficient in-house model code implementation not uncommon
b
No appropriate version control tools. Current version control tools such as git
are designed to only keep the best version Algo/experiment available, while
DM and ML need multiple versions available concurrently for reference abc"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.2495274102079395,"No easy solution to request flexible data storage, memory and computation
capacity as needed. Hard drive, RAM, CPU and GPU are difficult to allocate
even on the cloud. x"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.2514177693761815,"The use of other Algos’ output as input results in correction cascades
b
Algo is a sequential computation process different from typical software
applications with a number of independent features. Difficult to assign one
Algo development into multiple team members x"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.2533081285444234,"Algo user may have no clear understanding about the Algo and deploys it
outside its scope. b"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.2551984877126654,"Multiple programing language smell
x
Pain Points for ML"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.2570888468809074,"Algo
Production"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.2589792060491493,"Significant efforts of research Algo migration into production
bc
Even more significant efforts if production Algo is written in a different
language than the language used in research, e.g. in embedded system x"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.2608695652173913,"For Algo analyzing sensor data such as cameras or bio-sensors, product grade
data won’t be available for Algo research until sensor hardware designs are
complete. Algo becomes the product release bottleneck, resulting in either
sub-optimal production Algo or delayed product release. x"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.2627599243856333,"Production data source is inconsistent with research data source
x
Algo production is often done by team members, most likely software engi-
neers, who did not produce the Algo, causing misuse abc"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.2646502835538752,"Algo needs to load data in real time during production but most often not in
real time during research, causing unnecessary Algo code re-factoring b"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.2665406427221172,"Prototype Algo may be accidentally run in production causing damages
x
No straightforward way to organize codes repository for research and produc-
tion team members work in the same repository abc"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.2684310018903592,"Dead code path
b"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.27032136105860116,"Feedback
Loop"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.2722117202268431,"Algo update workflow not straight forward
b
Few clear pattern designs for monitoring Algo performance in production
b
Actions based on unseen data predicted by Algo may alter observed data
x
Pain Points for KM"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.2741020793950851,"Manage-
ment Tool"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.27599243856332706,"Few tools or resource help people check if Knowledge formed is well sup-
ported by evidence, especially when evidence appears long after presumed
Knowledge has been formed. abc"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.277882797731569,"Knowledge dissemination among community has always been a challenge.
abc
Knowledges formed by different organizations are not easy to combine
abc"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.27977315689981097,"Knowledge formed within organizations is not easy to share and retain.
abc
Standardi-
zation"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.28166351606805295,"Knowledge has been recorded in sentences or articles. Few standardized ways
to represent general Knowledge. abc"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.2835538752362949,"a/b/c: Pain points that can be alleviated by Evident’s character a, b or c. x: Pain points that cannot
be alleviated by Evident."
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.28544423440453687,"3
Pain points for DM, ML and KM
108"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.28733459357277885,"Owing to the absence of applicable methodologies, pain points have been continuously reported for
109"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.2892249527410208,"DM, ML and KM [40, 41, 42, 43] (see Table 2) in the current big data era with explosive growth in
110"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.29111531190926276,"data volume, variety and velocity.
111"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.29300567107750475,"DM & ML’s Algo typically comprises a data computation flow (defined as a Model, supervised
112"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.2948960302457467,"or unsupervised), such as logistic regression, and its configuration, such as logistic regression
113"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.29678638941398866,"coefficients. DM employs off-the-shelf or in-house Models to discover Knowledge from data. ML
114"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.29867674858223064,"compares Knowledges discovered by DM by candidate models and deploys the one that performs best
115"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.3005671077504726,"with its configuration, as the production Algo, for Knowledge prediction in production. Therefore,
116"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.30245746691871456,"DM’s pain points still apply to ML. Meanwhile because DM and ML are special forms of KM, their
117"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.30434782608695654,"pain points are also applicable for KM (see Fig 2).
118"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.30623818525519847,"Generally speaking, DM has not been regarded highly collaborative and scalable activities to deliver
119"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.30812854442344045,"high throughput Knowledge. It’s rare to see hundreds of contributors in a DM project, unlike for
120"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.31001890359168244,"example some complicated open source software projects that, deliver promptly, efficiently and
121"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.31190926275992437,"continuously for years or even decades [44, 45]. It is also rare of mass Knowledge production
122"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.31379962192816635,"in a organized and standardized manner with high production yield for a unit period, commonly
123"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.31568998109640833,"seen in consumer products such as automobiles or toothpastes. DM often struggles to deliver
124"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.31758034026465026,"Knowledge rapidly with technical debts in reproducibility, measurability, trackability. DM needs
125"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.31947069943289225,"to not only handle artifacts of different modalities such as documents, codes and data, but also
126"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.32136105860113423,"address computation and data storage resource requests potentially across multiple platforms. Raw or
127"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.32325141776937616,"preprocessed data can be compromised in availability, accuracy and consistency. Data dependency
128"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.32514177693761814,"and entangled models often cause cascaded correction and uncertainty in project planning. In addition,
129"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.3270321361058601,"routine tasks such as quarterly or annual finance analysis mostly have not be automated. Tools and
130"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.32892249527410206,"project management methodologies are highly in demand to fulfill DM’s potential and deliver values.
131"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.33081285444234404,"In ML, the team members, usually software engineers or product managers, that deploy an Algo in
132"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.332703213610586,"production to predict future data may not have produced the Algo and may misuse it. The Algo codes
133"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.33459357277882795,"are often refactored sometimes in different programming languages, operating systems or even in
134"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.33648393194706994,"fixed point instead of float point. If the Algo is to be deployed on a data acquisition product such
135"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.3383742911153119,"as cameras or bio-sensors, no product grade data are available for Algo research until the sensor
136"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.34026465028355385,"hardware design is finalized to enable data collection. Algo research therefore becomes the bottleneck
137"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.34215500945179583,"for product release. Frequently sub-optimal Algo is deployed to meet the deadline or projects become
138"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.3440453686200378,"delayed. What’s more, production data may come from different sources compared to research data
139"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.34593572778827975,"potentially caused by, e.g. sensor upgrade or downgrade, resulting in the under performance of
140"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.34782608695652173,"production Algo. After Algo deployment, no straightforward way exists to monitor Algo performance
141"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.3497164461247637,"or thereafter update Algo. Future Knowledge predicated by the deployed Algo may encourage
142"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.3516068052930057,"Algo users to alter decisions, which leads to the formation of future data with unanticipated hidden
143"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.3534971644612476,"feedback loops. In addition, prototype Algo or dead codes may be accidentally run in production
144"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.3553875236294896,"potentially causing catastrophic consequences.
145"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.3572778827977316,"Although scientific methods have guided people to discover Knowledge and improve practices such
146"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.3591682419659735,"as evidence-based medicine [46] and experiment based military development [47], people still form
147"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.3610586011342155,"Knowledge that lacks in supporting evidence [48]. One possible reason is the unavailability of tools
148"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.3629489603024575,"or resources to check if the Knowledge formed is well supported by evidence, especially when there
149"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.3648393194706994,"is a significant time gap between the Knowledge formed and the appearance of supporting evidence,
150"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.3667296786389414,"e.g. for long-term investments or corporation strategies. Knowledge dissemination and retention
151"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.3686200378071834,"are also huge challenges among the community and organization [49]. Furthermore, Knowledge is
152"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.3705103969754253,"mostly recorded in the form of articles. However, because articles writing has not been and probably
153"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.3724007561436673,"will never be standardized, Knowledge has not been able to be represented in a standardized manner
154"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.3742911153119093,"for definition, reference and storage. The same Knowledge recorded in different sentences or even
155"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.3761814744801512,"languages may be interpreted differently.
156"
NO SCOPES ARE DEFINED IN THE MANIFESTO,0.3780718336483932,"4
Evident: a project development and artifact management methodology
157"
DEFINITION AND SCOPE,0.3799621928166352,"4.1
Definition and scope
158"
DEFINITION AND SCOPE,0.3818525519848771,"Evident is a methodology of project, including but not limited to software, development and artifact
159"
DEFINITION AND SCOPE,0.3837429111531191,"management for DM, ML and KM, characterized by
160"
DEFINITION AND SCOPE,0.3856332703213611,"a. project development mimicking a continuous process of logical reasoning in philosophy;
161"
DEFINITION AND SCOPE,0.387523629489603,"b. project activities or artifacts are broken into containers of Observations, Hypotheses and
162"
DEFINITION AND SCOPE,0.389413988657845,"Tests (collectively defined as Containers);
163"
DEFINITION AND SCOPE,0.391304347826087,"c. directional association constructions towards and only towards Test Containers to represent
164"
DEFINITION AND SCOPE,0.3931947069943289,"Knowledge.
165"
DEFINITION AND SCOPE,0.3950850661625709,"Observation is a collection of facts. A Hypothesis is Knowledge to be formed out of Observation. A
166"
DEFINITION AND SCOPE,0.39697542533081287,"Test is a Hypothesis evaluation process using Observation to prove or disprove the Hypothesis with
167"
DEFINITION AND SCOPE,0.3988657844990548,"or without confidence levels. Containers indicate Observations, Hypotheses and Tests can only be
168"
DEFINITION AND SCOPE,0.4007561436672968,"added or removed as a block.
169 170"
KNOWLEDGE REPRESENTATION,0.40264650283553877,"4.2
Knowledge representation
171"
KNOWLEDGE REPRESENTATION,0.4045368620037807,"Loosely speaking, a Test associated with a Hypothesis and an Observation represents induction
172"
KNOWLEDGE REPRESENTATION,0.4064272211720227,"Knowledge (see Fig 3a); a Test associated with a Hypothesis set and an Observation represents
173"
KNOWLEDGE REPRESENTATION,0.40831758034026466,"abduction Knowledge (see Fig 3b), a Hypothesis associated Test that is also associated with an
174"
KNOWLEDGE REPRESENTATION,0.4102079395085066,"induction or abduction Knowledge Test represents deduction Knowledge or prediction (see Fig 3a&b).
175"
KNOWLEDGE REPRESENTATION,0.4120982986767486,"Deduction Knowledge becomes induction Knowledge once Observation proving or disproving
176"
KNOWLEDGE REPRESENTATION,0.41398865784499056,"deduction Knowledge is associated with Test, while stay deducted Knowledge if the associated
177"
KNOWLEDGE REPRESENTATION,0.4158790170132325,"Observation overlooks (fails to either prove or disprove), the deduction Knowledge. Multiple
178"
KNOWLEDGE REPRESENTATION,0.41776937618147447,"Tests associated with the same pair of Hypothesis(es) and Observation represent multiple different
179"
KNOWLEDGE REPRESENTATION,0.41965973534971646,"Knowledges based on different evaluation metrics (e.g. profit maximization or cost minimization) or
180"
KNOWLEDGE REPRESENTATION,0.4215500945179584,"Observation usage strategies (e.g. cross-validation grouping) (see Fig 3c).
181"
KNOWLEDGE REPRESENTATION,0.42344045368620037,"DM may be regarded as Knowledge induction with data as Observation, model as Hypothesis to
182"
KNOWLEDGE REPRESENTATION,0.42533081285444235,"be evaluated and data analysis experiment as model test on data to form induction Knowledge with
183"
KNOWLEDGE REPRESENTATION,0.42722117202268434,"statistical confidence (see Fig 4a). Similarly, ML is Knowledge abduction. An example is a data
184"
KNOWLEDGE REPRESENTATION,0.42911153119092627,"analysis experiment that picks the best off-the-shelf or in-house model that best explains the data
185"
KNOWLEDGE REPRESENTATION,0.43100189035916825,"to form the Algo for production (see Fig 4b). Experiments employing different cost functions (e.g.
186"
KNOWLEDGE REPRESENTATION,0.43289224952741023,"RMSE, AUC or correlation coefficients), statistical confidence levels or data allocation strategies for
187"
KNOWLEDGE REPRESENTATION,0.43478260869565216,"training and testing may result in different Knowledges or Algos.
188"
PROJECT DEVELOPMENT,0.43667296786389415,"4.3
Project development
189"
PROJECT DEVELOPMENT,0.43856332703213613,"Evident project developments are intuitively broken down into two granular levels: Knowledges
190"
PROJECT DEVELOPMENT,0.44045368620037806,"and Containers. Mimicking logical reasoning in philosophy, each project period develops a batch
191"
PROJECT DEVELOPMENT,0.44234404536862004,"of independent Knowledges or Containers assigned to teams of various sizes to maximize unit time
192"
PROJECT DEVELOPMENT,0.444234404536862,"throughput (see Fig 5). The next batches of Knowledge or Containers can be adaptively planned
193"
PROJECT DEVELOPMENT,0.44612476370510395,"after period reviews or retrieved from backlogs. Evident is compatible with Kanban, Scrum or other
194"
PROJECT DEVELOPMENT,0.44801512287334594,"development tools or frameworks for project planning and development of a single Knowledge or
195"
PROJECT DEVELOPMENT,0.4499054820415879,"Container.Any tools or frameworks that do not compromise the project breakdown into Knowledge
196"
PROJECT DEVELOPMENT,0.45179584120982985,"and Containers are applicable.
197 198"
PROJECT DEVELOPMENT,0.45368620037807184,"4.4
Artifact management: EKB
199"
PROJECT DEVELOPMENT,0.4555765595463138,"Evident artifact management may build on a topology of a relational Knowledge base, named
200"
PROJECT DEVELOPMENT,0.45746691871455575,"EKB, composed of Evident Containers and directional associations (see Fig 6). Knowledges can
201"
PROJECT DEVELOPMENT,0.45935727788279773,"be reproduced by Containers stored in EKB. Oversimplified as a table, EKB columns represent
202"
PROJECT DEVELOPMENT,0.4612476370510397,"Observations; rows represent Hypotheses; values represent Tests or Test to be done (TBD). A Test
203"
PROJECT DEVELOPMENT,0.46313799621928164,"can only be associated with one Observation, even if the associated Observation overlooks the
204"
PROJECT DEVELOPMENT,0.46502835538752363,"Hypothesis(es) associated with the Test. Any new Observation proving, disproving or overlooking
205"
PROJECT DEVELOPMENT,0.4669187145557656,"the same Hypothesis(es) occupies a column in EKB.
206"
EKB STORES CONTAINERS AND KNOWLEDGES CONTINUOUSLY,0.46880907372400754,"4.4.1
EKB stores containers and Knowledges continuously
207"
EKB STORES CONTAINERS AND KNOWLEDGES CONTINUOUSLY,0.4706994328922495,"When new Hypotheses, Observations or deduction Knowledge Tests are developed, new rows or
208"
EKB STORES CONTAINERS AND KNOWLEDGES CONTINUOUSLY,0.4725897920604915,"columns of TBDs are inserted. A Test associated with Hypothesis(es) and a Observation can be
209"
EKB STORES CONTAINERS AND KNOWLEDGES CONTINUOUSLY,0.47448015122873344,"stored in the designated row and column to represent different Knowledges.
210"
EKB STORES CONTAINERS AND KNOWLEDGES CONTINUOUSLY,0.4763705103969754,"An induction Knowledge Test is placed in the row of its associated Hypothesis and the column of its
211"
EKB STORES CONTAINERS AND KNOWLEDGES CONTINUOUSLY,0.4782608695652174,"associated Observation (see Fig 3a&c & Fig 6). An abduction Knowledge Test is placed in the row
212"
EKB STORES CONTAINERS AND KNOWLEDGES CONTINUOUSLY,0.48015122873345933,"of the Hypothesis best explaining the Observation (see Fig 3b & Fig 6). A deduction Knowledge
213"
EKB STORES CONTAINERS AND KNOWLEDGES CONTINUOUSLY,0.4820415879017013,"is placed in the row of its associated Hypothesis and the column of the pending Observation (see
214"
EKB STORES CONTAINERS AND KNOWLEDGES CONTINUOUSLY,0.4839319470699433,"Fig 3a&b & Fig 6). Once an Observation becomes available proving or disproving the Hypothesis,
215"
EKB STORES CONTAINERS AND KNOWLEDGES CONTINUOUSLY,0.48582230623818523,"a deduction Knowledge becomes an induction Knowledge. Multiple Tests representing different
216"
EKB STORES CONTAINERS AND KNOWLEDGES CONTINUOUSLY,0.4877126654064272,"Knowledges can be placed in the same slot (see Fig 3c & Fig 6).
217"
EKB SUPPORTS RELATIONAL DATABASE OPERATIONS OF PERMUTATION AND JOIN,0.4896030245746692,"4.4.2
EKB supports relational database operations of Permutation And Join
218"
EKB SUPPORTS RELATIONAL DATABASE OPERATIONS OF PERMUTATION AND JOIN,0.4914933837429111,"EKB is similar to a relational database [50] with Observations as columns, Hypotheses as rows and
219"
EKB SUPPORTS RELATIONAL DATABASE OPERATIONS OF PERMUTATION AND JOIN,0.4933837429111531,"Tests as values, but with potential associations among values for deduction Knowledges. Relational
220"
EKB SUPPORTS RELATIONAL DATABASE OPERATIONS OF PERMUTATION AND JOIN,0.4952741020793951,"database operations independent of values associations, such as Permutation (switching rows and
221"
EKB SUPPORTS RELATIONAL DATABASE OPERATIONS OF PERMUTATION AND JOIN,0.497164461247637,"columns) and Join (merging EKBs) can be implemented without compromise in EKB; operations
222"
EKB SUPPORTS RELATIONAL DATABASE OPERATIONS OF PERMUTATION AND JOIN,0.499054820415879,"dependent on values associations such as Restriction (select rows), Projection (select columns) and
223"
EKB SUPPORTS RELATIONAL DATABASE OPERATIONS OF PERMUTATION AND JOIN,0.500945179584121,"Compositions (merge selected columns&rows from multiple EKBs) can only be implemented for
224"
EKB SUPPORTS RELATIONAL DATABASE OPERATIONS OF PERMUTATION AND JOIN,0.502835538752363,"EKBs storing only induction or abduction Knowledge and have no associations among Tests.
225"
EKB SUPPORTS RELATIONAL DATABASE OPERATIONS OF PERMUTATION AND JOIN,0.504725897920605,"EKBs are highly flexible for team collaboration and maintenance. Different team members working
226"
EKB SUPPORTS RELATIONAL DATABASE OPERATIONS OF PERMUTATION AND JOIN,0.5066162570888468,"on different Containers can share one EKB as the common work space to improve efficiency. Multiple
227"
EKB SUPPORTS RELATIONAL DATABASE OPERATIONS OF PERMUTATION AND JOIN,0.5085066162570888,"EKBs can be joined together without information loss so that Knowledges produced by different
228"
EKB SUPPORTS RELATIONAL DATABASE OPERATIONS OF PERMUTATION AND JOIN,0.5103969754253308,"teams or team members can be accumulated into one EKB. For EKBs storing only induction and
229"
EKB SUPPORTS RELATIONAL DATABASE OPERATIONS OF PERMUTATION AND JOIN,0.5122873345935728,"abduction Knowledge, all relational database operations are applicable, so that team members can
230"
EKB SUPPORTS RELATIONAL DATABASE OPERATIONS OF PERMUTATION AND JOIN,0.5141776937618148,"compose their own EKBs without keeping a potentially large team EKB on the local machines.
231"
ADVANTAGES AND PAIN POINTS ALLEVIATED,0.5160680529300568,"5
Advantages and pain points alleviated
232"
ADVANTAGES AND PAIN POINTS ALLEVIATED,0.5179584120982986,"Inspired by the philosophy of logical reasoning, Evident is intuitive to understand and follow. Project
233"
ADVANTAGES AND PAIN POINTS ALLEVIATED,0.5198487712665406,"activity and artifact containerization supports incremental as well as adaptive project planning and
234"
ADVANTAGES AND PAIN POINTS ALLEVIATED,0.5217391304347826,"artifact pattern abstraction. Disentangling Hypotheses and Observations reduces unnecessary de-
235"
ADVANTAGES AND PAIN POINTS ALLEVIATED,0.5236294896030246,"pendency, cascade correction and uncertainty in project planning. Knowledge representation in
236"
ADVANTAGES AND PAIN POINTS ALLEVIATED,0.5255198487712666,"associations among artifacts can not only track Knowledge development, but also Knowledge devel-
237"
ADVANTAGES AND PAIN POINTS ALLEVIATED,0.5274102079395085,"opment status (prove, disproved or overlooked), which improves project measurability, trackability
238"
ADVANTAGES AND PAIN POINTS ALLEVIATED,0.5293005671077504,"and reproducibility. Overall Evident may help applicable projects deliver fast and at scale with many
239"
ADVANTAGES AND PAIN POINTS ALLEVIATED,0.5311909262759924,"pain points alleviated in DM, ML and KM (see Table 2).
240"
DM,0.5330812854442344,"5.1
DM
241"
DM,0.5349716446124764,"Containerized Data and Models in Evident prevents unstable data dependency, model entanglement
242"
DM,0.5368620037807184,"and cascade correction. Dead data and codes can be easily identified and removed. Standardized
243"
DM,0.5387523629489603,"Models and Experiments encourage reuse of computationally efficient containers, support automatic
244"
DM,0.5406427221172023,"DM. Different experiments may use different optimization target function on the same Model and
245"
DM,0.5425330812854442,"Data to deliver different Knowledges for different users, e.g. Marketing vs Engineering managers.
246"
DM,0.5444234404536862,"Containerization is an alternative to the state of the art artifact version control, such as git, which
247"
DM,0.5463137996219282,"keeps only the one version of the code or data in the workspace with historic versions saved as
248"
DM,0.5482041587901701,"commits. Evident keeps all applicable versions available in the workspace for easy access. This may
249"
DM,0.5500945179584121,"appear to use more storage space. However current version control tools all save version commits as
250"
DM,0.5519848771266541,"snapshots [51], demanding comparable storage space of Evident if a Evident equivalent number of
251"
DM,0.553875236294896,"versions are stored.
252"
DM,0.555765595463138,"Evident granulates project activities into independent standardized Knowledge and Container levels,
253"
DM,0.55765595463138,"supports adaptive development, facilitates project planning among collaborators in teams of various
254"
DM,0.5595463137996219,"sizes and reduces planning overhead. Artifacts are continuously stored in EKB, making project
255"
DM,0.5614366729678639,"development measurable, trackable, reproducible and scalable. Meanwhile once Containers are
256"
DM,0.5633270321361059,"produced, Knowledge or documentation reports can be generated automatically instead of manually.
257"
DM,0.5652173913043478,"Evident accelerates DM delivery in both short-term and long-term.
258"
ML,0.5671077504725898,"5.2
ML
259"
ML,0.5689981096408318,"A deployed Algo can be evaluated easily by re-applying the original Research Experiment on the
260"
ML,0.5708884688090737,"production data. Different users involved in the deployment can understand the Algo’s scope and
261"
ML,0.5727788279773157,"origins easily by examining the research Experiment (see Fig 4b). Research Experiments can load
262"
ML,0.5746691871455577,"data in real time as Production Experiment, so that both Experiments can inherit the same design
263"
ML,0.5765595463137996,"patterns with statistical analysis and evaluation metrics. The Production Experiment can report and
264"
ML,0.5784499054820416,"examine the prediction performance at regular time intervals to detect production data pattern drift
265"
ML,0.5803402646502835,"for either model reconfiguration or model replacement. Once a model with its configuration is retired
266"
ML,0.5822306238185255,"from production, the production data is containerized and associated with the Production Experiment,
267"
ML,0.5841209829867675,"transforming the Production Experiment into Research Experiment and a deduction Knowledge for
268"
ML,0.5860113421550095,"prediction into an induction Knowledge that is also preserved in EKB.
269"
ML,0.5879017013232514,"Because both research and production can operate on the same EKB, research and production team
270"
ML,0.5897920604914934,"members can share the same workspace the way software engineers work on the same code repository,
271"
ML,0.5916824196597353,"facilitating the model migration from research to production and efficient team collaborations.
272"
KM,0.5935727788279773,"5.3
KM
273"
KM,0.5954631379962193,"Knowledge formatting into design patterns of Containers provides a meaningful progress towards
274"
KM,0.5973534971644613,"Knowledge standardization for improved definition, reference and storage compared to state of art
275"
KM,0.5992438563327032,"sentences or articles. EKB with standardized Container templates may offer potential tools for people
276"
KM,0.6011342155009451,"to examine the Hypotheses formed against evidence or Observations, facilitating evidence-based
277"
KM,0.6030245746691871,"decision making and Knowledge development. EKB can not only facilitate Knowledge dissemination,
278"
KM,0.6049149338374291,"accumulation and retention, but also label the development status of each Hypothesis as proved,
279"
KM,0.6068052930056711,"disproved or overlooked, a desirable design pattern for projects and Knowledge Management.
280"
DISCUSSIONS,0.6086956521739131,"6
Discussions
281"
SIGNIFICANCE,0.610586011342155,"6.1
Significance
282"
SIGNIFICANCE,0.6124763705103969,"Evident may advance many society domains such as software, philosophy, science, business as well
283"
SIGNIFICANCE,0.6143667296786389,"as Knowledge sharing and retention across the globe, thanks to its applicability to general KM.
284"
SIGNIFICANCE,0.6162570888468809,"EKB may make no smaller impacts than relational data base [50], the invention of which created a
285"
SIGNIFICANCE,0.6181474480151229,"data base industry, as one solution to store information as Knowledge, a granular level above data.
286"
WORK TO DO,0.6200378071833649,"6.2
Work to do
287"
WORK TO DO,0.6219281663516069,"Work needs to be done regarding Evident ergodicity over logical reasoning in philosophy. If proved,
288"
WORK TO DO,0.6238185255198487,"Evident can support all logical reasoning in philosophy. No evidence has existed to prove or disprove
289"
WORK TO DO,0.6257088846880907,"the claim. Evident ergodicity is overlooked, stated in Evident language, especially considering logical
290"
WORK TO DO,0.6275992438563327,"reasoning in philosophy may evolve.
291"
WORK TO DO,0.6294896030245747,"Control studies need to be done to show Evident can truly provide value. No tools tailored to support
292"
WORK TO DO,0.6313799621928167,"Evident project development planning and EKB are available, although some existing tools are
293"
WORK TO DO,0.6332703213610587,"applicable for use. Particularly the tools that allow unexpected alteration proof, easy access and
294"
WORK TO DO,0.6351606805293005,"visualization of Containers are in demand. More detailed discussions need to be done about how
295"
WORK TO DO,0.6370510396975425,"Evident help applicable projects with examples.
296"
PAIN POINTS NOT ALLEVIATED,0.6389413988657845,"6.3
Pain points not alleviated
297"
PAIN POINTS NOT ALLEVIATED,0.6408317580340265,"Evident offers no detailed guidance in development below Container level. For example, a Model or
298"
PAIN POINTS NOT ALLEVIATED,0.6427221172022685,"computation flow cannot be broken down further into smaller modules by Evident for incremental and
299"
PAIN POINTS NOT ALLEVIATED,0.6446124763705104,"adaptive development. Multiple languages smells and accidents running prototype Algo in production
300"
PAIN POINTS NOT ALLEVIATED,0.6465028355387523,"cannot be avoided by Evident either. In addition, Evident cannot control future observation alteration
301"
PAIN POINTS NOT ALLEVIATED,0.6483931947069943,"caused by decisions made by people based on Evident produced Knowledge.
302"
PAIN POINTS NOT ALLEVIATED,0.6502835538752363,"Evident can only manage project artifacts of data or codes but not sensors or hardwares. Pain points
303"
PAIN POINTS NOT ALLEVIATED,0.6521739130434783,"caused in data acquisition such as availability, inaccuracy and inconsistency are out of Evident’s
304"
PAIN POINTS NOT ALLEVIATED,0.6540642722117203,"scope. Evident is incapable of improving computation hardware resources allocation either.
305"
MORE WORDS ABOUT AGILE,0.6559546313799622,"6.4
More words about Agile
306"
MORE WORDS ABOUT AGILE,0.6578449905482041,"Due to Agile’s ambiguity and unfalsifiability as a scientific claim, it might be a better practice to drop
307"
MORE WORDS ABOUT AGILE,0.6597353497164461,"the term Agile and instead quote each framework currently under Agile on its own. Frameworks
308"
MORE WORDS ABOUT AGILE,0.6616257088846881,"such as iterative and evolutionary development as well as Kanban are valuable although need to be
309"
MORE WORDS ABOUT AGILE,0.6635160680529301,"employed discretionally. Practitioners should have better understood what exactly they were doing
310"
MORE WORDS ABOUT AGILE,0.665406427221172,"without being fuzzed by the buzzword Agile.
311"
CONCLUSIONS,0.667296786389414,"7
Conclusions
312"
CONCLUSIONS,0.6691871455576559,"The paper proposes Evident as a project development and artifact management methodology for DM,
313"
CONCLUSIONS,0.6710775047258979,"ML and KM as well as EKB as a Knowledge base topology. Evident and EKB have been shown
314"
CONCLUSIONS,0.6729678638941399,"of great value to alleviate many unresolved pain points. Evident has the potential to facilitate the
315"
CONCLUSIONS,0.6748582230623819,"advancement of many aspects of society due to its utility in general Knowledge management. EKB
316"
CONCLUSIONS,0.6767485822306238,"may serve as the infrastructure for storing information as Knowledge, a granular level above data.
317"
CONCLUSIONS,0.6786389413988658,"A
Appendix
318"
CONCLUSIONS,0.6805293005671077,"A.1
The following among the four Values and twelve Principles of The Manifesto [24] appear
319"
CONCLUSIONS,0.6824196597353497,"to be goals:
320"
CONCLUSIONS,0.6843100189035917,"Value 4: Responding to change over following a plan;
321"
CONCLUSIONS,0.6862003780718336,"Principle 1: Customer satisfaction by early and continuous delivery of valuable software.
322"
CONCLUSIONS,0.6880907372400756,"Principle 2: Welcome changing requirements, even in late development.
323"
CONCLUSIONS,0.6899810964083176,"Principle 3: Deliver working software frequently (weeks rather than months)
324"
CONCLUSIONS,0.6918714555765595,"Principle 7: Working software is the primary measure of progress
325"
CONCLUSIONS,0.6937618147448015,"Principle 8: Sustainable development, able to maintain a constant pace
326"
CONCLUSIONS,0.6956521739130435,"Principle 9: Continuous attention to technical excellence and good design
327"
CONCLUSIONS,0.6975425330812854,"Principle 10 : Simplicity—the art of maximizing the amount of work not done—is essential
328"
CONCLUSIONS,0.6994328922495274,"A.2
The following in The Manifesto appear to be approaches but vaguely defined:
329"
CONCLUSIONS,0.7013232514177694,"Value 1: Individuals and interactions over processes and tools
330"
CONCLUSIONS,0.7032136105860114,"Value 2: Working software over comprehensive documentation
331"
CONCLUSIONS,0.7051039697542533,"Value 3: Customer collaboration over contract negotiation
332"
CONCLUSIONS,0.7069943289224953,"Principle 5: Projects are built around motivated individuals, who should be trusted
333"
CONCLUSIONS,0.7088846880907372,"Principle 11: Best architectures, requirements, and designs emerge from self-organizing teams
334"
CONCLUSIONS,0.7107750472589792,"A.3
The following in The Manifesto appear to be actionable approaches but irrelevant of
335"
CONCLUSIONS,0.7126654064272212,"iterative, evolutionary or incremental development regarded as Agile by most people [9]:
336"
CONCLUSIONS,0.7145557655954632,"Principle 4: Close, daily cooperation between business people and developers
337"
CONCLUSIONS,0.7164461247637051,"Principle 6: Face-to-face conversation is the best form of communication (co-location)
338"
CONCLUSIONS,0.718336483931947,"Principle 12: Regularly, the team reflects on how to become more effective, and adjusts accordingly
339"
REFERENCES,0.720226843100189,"References
340"
REFERENCES,0.722117202268431,"[1] B. Jowett and L. Campbell, Plato’s Republic : the Greek text.
Oxford : At the Clarendon
341"
REFERENCES,0.724007561436673,"Press, 1894.
342"
REFERENCES,0.725897920604915,"[2] J. J. P. Eckert and J. W. Mauchly, “Electronic numerical integrator and computer,” New York,
343"
REFERENCES,0.7277882797731569,"NY, 1947.
344"
REFERENCES,0.7296786389413988,"[3] A. D. Booth and K. H. Britten, “General considerations in the design of an all purpose electronic
345"
REFERENCES,0.7315689981096408,"digital computer,” Tech. Rep., 1947.
346"
REFERENCES,0.7334593572778828,"[4] M. Campbell-Kelly, “The development of computer programming in britain (1945 to 1955),”
347"
REFERENCES,0.7353497164461248,"Annals of the History of Computing, vol. 4, no. 2, pp. 121–139, 1982.
348"
REFERENCES,0.7372400756143668,"[5] P. Bentley, Digitized: The science of computers and how it shapes our world.
New York:
349"
REFERENCES,0.7391304347826086,"Oxford University Press, 2012.
350"
REFERENCES,0.7410207939508506,"[6] D. E. Knuth and L. T. Pardo, “Early development of programming languages,” A History of
351"
REFERENCES,0.7429111531190926,"Computing in the Twentieth Century, 1980.
352"
REFERENCES,0.7448015122873346,"[7] R. R. Carhart, A Survey of the Current Status of the Electronic Reliability Problem.
Santa
353"
REFERENCES,0.7466918714555766,"Monica, CA: RAND Corporation, 1953.
354"
REFERENCES,0.7485822306238186,"[8] Symposium on advanced programming methods for digital computers : Washington, D.C., June
355"
REFERENCES,0.7504725897920604,"28, 29, 1956.
Office of Naval Research, Dept. of the Navy, 1956.
356"
REFERENCES,0.7523629489603024,"[9] C. Larman and V. R. Basili, “Iterative and incremental development: A brief history,” Computer,
357"
REFERENCES,0.7542533081285444,"vol. 36, pp. 47–56, 2003.
358"
REFERENCES,0.7561436672967864,"[10] S. H. Lavington, A History of Manchester Computers.
British Computer Society, 1998.
359"
REFERENCES,0.7580340264650284,"[11] T. Bardini, Bootstrapping: Douglas Engelbart, Coevolution, and the Origins of Personal
360"
REFERENCES,0.7599243856332704,"Computing.
Standford CA: Stanford University Press, 2000.
361"
REFERENCES,0.7618147448015122,"[12] W. W. Royce, “Managing the development of large software systems,” in Technical Papers of
362"
REFERENCES,0.7637051039697542,"Western Electronic Show and Convention, 1970.
363"
REFERENCES,0.7655954631379962,"[13] T. E. Bell and T. A. Thayer, “Software requirements: Are they really a problem?” in Proceedings
364"
REFERENCES,0.7674858223062382,"of the 2nd International Conference on Software Engineering.
Washington, DC, USA: IEEE
365"
REFERENCES,0.7693761814744802,"Computer Society Press, 1976.
366"
REFERENCES,0.7712665406427222,"[14] T. Gilb, Software Metrics.
Winthrop Publishers, 1976.
367"
REFERENCES,0.7731568998109641,"[15] E. A. Edmonds, “A process for the development of software for nontechnical users as an adaptive
368"
REFERENCES,0.775047258979206,"system,” General Systems, vol. 19, p. 215–18, 1974.
369"
REFERENCES,0.776937618147448,"[16] W. Isaacson, The Innovators: How a Group of Hackers, Geniuses, and Geeks Created the
370"
REFERENCES,0.77882797731569,"Digital Revolution.
SIMON and SCHUSTER, 2014.
371"
REFERENCES,0.780718336483932,"[17] J. L. Pelkey, “The history of computer communications,” April 2022. [Online]. Available:
372"
REFERENCES,0.782608695652174,"https://historyofcomputercommunications.info/
373"
REFERENCES,0.7844990548204159,"[18] R. Clarke, “Origins and nature of the internet in australia,” Emergence: Complexity and
374"
REFERENCES,0.7863894139886578,"Organization, vol. 4, pp. 1990–1994, 2004.
375"
REFERENCES,0.7882797731568998,"[19] R.
H.
Zakon,
“Hobbes’
internet
timeline
25,”
April
2022.
[Online].
Available:
376"
REFERENCES,0.7901701323251418,"https://www.zakon.org/robert/internet/timeline/
377"
REFERENCES,0.7920604914933838,"[20] “Military standard: Defense system software development by department of defense,” Jun 1985.
378"
REFERENCES,0.7939508506616257,"[21] J. M. Kerr and R. Hunter, Inside RAD: How to Build a Fully Functional System in 90 Days or
379"
REFERENCES,0.7958412098298677,"Less.
McGraw-Hill, 1993.
380"
REFERENCES,0.7977315689981096,"[22] R. Nagel and R. Dove, 21st Century Manufacturing Enterprise Strategy: An Industry-Led View.
381"
REFERENCES,0.7996219281663516,"Diane Pub Co, 1991.
382"
REFERENCES,0.8015122873345936,"[23] A. Presley, J. Mills, and D. Liles, “Agile aerospace manufacturing,” 1995.
383"
REFERENCES,0.8034026465028355,"[24] M. Beedle, A. van Bennekum, and A. Cockburn, “Manifesto for agile software development,”
384"
REFERENCES,0.8052930056710775,"April 2001. [Online]. Available: https://agilemanifesto.org/
385"
REFERENCES,0.8071833648393195,"[25] D. J. Power, “A brief history of decision support systems,” April 2022. [Online]. Available:
386"
REFERENCES,0.8090737240075614,"http://DSSResources.COM/history/dsshistory.html
387"
REFERENCES,0.8109640831758034,"[26] R. Wirth and J. Hipp, “Crisp-dm: Towards a standard process model for data mining,” Proceed-
388"
REFERENCES,0.8128544423440454,"ings of the 4th International Conference on the Practical Applications of Knowledge Discovery
389"
REFERENCES,0.8147448015122873,"and Data Mining, 2000.
390"
REFERENCES,0.8166351606805293,"[27] IBM, “Crisp-dm help overview,” April 2022. [Online]. Available: https://www.ibm.com/docs/
391"
REFERENCES,0.8185255198487713,"en/spss-modeler/SaaS?topic=dm-crisp-help-overview
392"
REFERENCES,0.8204158790170132,"[28] Microsoft, “Agile development of data science projects,” April 2022. [Online]. Available:
393"
REFERENCES,0.8223062381852552,"https://docs.microsoft.com/en-us/azure/architecture/data-science-process/agile-development
394"
REFERENCES,0.8241965973534972,"[29] “Agile data science by data science process alliance,” April 2022. [Online]. Available:
395"
REFERENCES,0.8260869565217391,"https://www.datascience-pm.com/agile-data-science/
396"
REFERENCES,0.8279773156899811,"[30] I.
Lee,
“6
reasons
why
i
think
agile
data
science
does
not
397"
REFERENCES,0.8298676748582231,"work,”
April
2022.
[Online].
Available:
https://towardsdatascience.com/
398"
REFERENCES,0.831758034026465,"6-reasons-why-i-think-agile-data-science-does-not-work-ee4dd680bb59
399"
REFERENCES,0.833648393194707,"[31] E. Yan, “Data science and agile (what works, and what doesn’t,” April 2022. [Online]. Available:
400"
REFERENCES,0.8355387523629489,"https://eugeneyan.com/writing/data-science-and-agile-what-works-and-what-doesnt/
401"
REFERENCES,0.8374291115311909,"[32] T. Dyba and T. Dingsøyr, “Empirical studies of agile software development: A systematic
402"
REFERENCES,0.8393194706994329,"review,” Information and Software Technology, vol. 50, no. 9, pp. 833–859, 2008.
403"
REFERENCES,0.8412098298676749,"[33] “Agile 101 by agile alliance,” April 2022. [Online]. Available: https://www.agilealliance.org/
404"
REFERENCES,0.8431001890359168,"agile101/
405"
REFERENCES,0.8449905482041588,"[34] P. Abrahamsson, O. Salo, J. Ronkainen, and J. Warsta, “Agile software development methods:
406"
REFERENCES,0.8468809073724007,"Review and analysis,” 2017.
407"
REFERENCES,0.8487712665406427,"[35] A. L. Fruhling and A. E. Tarrell, “Best practices for implementing agile methods: A guide for
408"
REFERENCES,0.8506616257088847,"department of defense software developers,” Information Systems and Quantitative Analysis
409"
REFERENCES,0.8525519848771267,"Faculty Publications, vol. 27, 2007.
410"
REFERENCES,0.8544423440453687,"[36] K. Popper, The Logic of Scientific Discovery.
London and New York: Routledge, 2002.
411"
REFERENCES,0.8563327032136105,"[37] S. Braams, “The software development landscape: A rationalization of agile software
412"
REFERENCES,0.8582230623818525,"development as a strategy in the face of organizational complexity,” April 2022. [Online].
413"
REFERENCES,0.8601134215500945,"Available: http://essay.utwente.nl/80784/
414"
REFERENCES,0.8620037807183365,"[38] S.
Forum,
“Agile
-
methodology
or
framework
or
philosophy,”
415"
REFERENCES,0.8638941398865785,"April
2022.
[Online].
Available:
https://www.scrum.org/forum/scrum-forum/6117/
416"
REFERENCES,0.8657844990548205,"agile-methodology-or-framework-or-philosophy
417"
REFERENCES,0.8676748582230623,"[39] T. Schick, Doing Philosophy: An Introduction Through Thought Experiments.
Mcgraw-Hill,
418"
REFERENCES,0.8695652173913043,"2009.
419"
REFERENCES,0.8714555765595463,"[40] D. Sculley, G. Holt, D. Golovin, E. Davydov, T. Phillips, D. Ebner, V. Chaudhary, M. Young, J.-F.
420"
REFERENCES,0.8733459357277883,"Crespo, and D. Dennison, “Hidden technical debt in machine learning systems,” in Advances in
421"
REFERENCES,0.8752362948960303,"Neural Information Processing Systems, vol. 28.
Curran Associates, Inc., 2015.
422"
REFERENCES,0.8771266540642723,"[41] H. H. Nithya Sambasivan, Shivani Kapania, “""everyone wants to do the model work, not the
423"
REFERENCES,0.8790170132325141,"data work"": Data cascades in high-stakes ai,” 2021.
424"
REFERENCES,0.8809073724007561,"[42] T. J. Sebastian Schelter, Felix Biessmann, “On challenges in machine learning model manage-
425"
REFERENCES,0.8827977315689981,"ment,” IEEE Data Eng. Bull., 2018.
426"
REFERENCES,0.8846880907372401,"[43] F. Kumeno, “Sofware engneering challenges for machine learning applications: A literature
427"
REFERENCES,0.8865784499054821,"review,” Intelligent Decision Technologies, vol. 13, no. 4, pp., vol. 13, no. 4, pp. 463–476, 2019.
428"
REFERENCES,0.888468809073724,"[44] “Python,” April 2022. [Online]. Available: https://www.python.org/
429"
REFERENCES,0.8903591682419659,"[45] “Ubuntu,” April 2022. [Online]. Available: https://ubuntu.com/
430"
REFERENCES,0.8922495274102079,"[46] D. L. Sackett, “Evidence-based medicine,” Seminars in Perinatology, vol. 21, no. 1, pp. 3–5,
431"
REFERENCES,0.8941398865784499,"1997.
432"
REFERENCES,0.8960302457466919,"[47] S. Spear and T. Hone, “Succeeding in periods of change,” Proceedings U.S. Naval Institute,
433"
REFERENCES,0.8979206049149339,"March 2022.
434"
REFERENCES,0.8998109640831758,"[48] LessWrong,
“Welcome to lesswrong!”
April 2022. [Online]. Available:
https:
435"
REFERENCES,0.9017013232514177,"//www.lesswrong.com/posts/bJ2haLkcGeLtTWaD5/welcome-to-lesswrong
436"
REFERENCES,0.9035916824196597,"[49] E. M. Rogers, Diffusion of innovations, 5th ed.
New York, NY: Free Press, 2003.
437"
REFERENCES,0.9054820415879017,"[50] E. F. Codd, “A relational model of data for large shared data banks,” Commun. ACM, vol. 13,
438"
REFERENCES,0.9073724007561437,"no. 6, p. 377–387, jun 1970.
439"
REFERENCES,0.9092627599243857,"[51] Git, “Git internals - git objects,” April 2022. [Online]. Available: https://book.git-scm.com/
440"
REFERENCES,0.9111531190926276,"book/en/v2/Git-Internals-Git-Objects
441"
REFERENCES,0.9130434782608695,"Checklist
442"
REFERENCES,0.9149338374291115,"The checklist follows the references. Please read the checklist guidelines carefully for information on
443"
REFERENCES,0.9168241965973535,"how to answer these questions. For each question, change the default [TODO] to [Yes] , [No] , or
444"
REFERENCES,0.9187145557655955,"[N/A] . You are strongly encouraged to include a justification to your answer, either by referencing
445"
REFERENCES,0.9206049149338374,"the appropriate section of your paper or providing a brief inline description. For example:
446"
REFERENCES,0.9224952741020794,"• Did you include the license to the code and datasets? [Yes] See Section ??.
447"
REFERENCES,0.9243856332703214,"• Did you include the license to the code and datasets? [No] The code and the data are
448"
REFERENCES,0.9262759924385633,"proprietary.
449"
REFERENCES,0.9281663516068053,"• Did you include the license to the code and datasets? [N/A]
450"
REFERENCES,0.9300567107750473,"Please do not modify the questions and only use the provided macros for your answers. Note that the
451"
REFERENCES,0.9319470699432892,"Checklist section does not count towards the page limit. In your paper, please delete this instructions
452"
REFERENCES,0.9338374291115312,"block and only keep the Checklist section heading above along with the questions/answers below.
453"
REFERENCES,0.9357277882797732,"1. For all authors...
454"
REFERENCES,0.9376181474480151,"(a) Do the main claims made in the abstract and introduction accurately reflect the paper’s
455"
REFERENCES,0.9395085066162571,"contributions and scope? [Yes]
456"
REFERENCES,0.941398865784499,"(b) Did you describe the limitations of your work? [Yes]
457"
REFERENCES,0.943289224952741,"(c) Did you discuss any potential negative societal impacts of your work? [Yes]
458"
REFERENCES,0.945179584120983,"(d) Have you read the ethics review guidelines and ensured that your paper conforms to
459"
REFERENCES,0.947069943289225,"them? [Yes]
460"
REFERENCES,0.9489603024574669,"2. If you are including theoretical results...
461"
REFERENCES,0.9508506616257089,"(a) Did you state the full set of assumptions of all theoretical results? [Yes]
462"
REFERENCES,0.9527410207939508,"(b) Did you include complete proofs of all theoretical results? [Yes]
463"
REFERENCES,0.9546313799621928,"3. If you ran experiments...
464"
REFERENCES,0.9565217391304348,"(a) Did you include the code, data, and instructions needed to reproduce the main experi-
465"
REFERENCES,0.9584120982986768,"mental results (either in the supplemental material or as a URL)? [N/A]
466"
REFERENCES,0.9603024574669187,"(b) Did you specify all the training details (e.g., data splits, hyperparameters, how they
467"
REFERENCES,0.9621928166351607,"were chosen)? [N/A]
468"
REFERENCES,0.9640831758034026,"(c) Did you report error bars (e.g., with respect to the random seed after running experi-
469"
REFERENCES,0.9659735349716446,"ments multiple times)? [N/A]
470"
REFERENCES,0.9678638941398866,"(d) Did you include the total amount of compute and the type of resources used (e.g., type
471"
REFERENCES,0.9697542533081286,"of GPUs, internal cluster, or cloud provider)? [N/A]
472"
REFERENCES,0.9716446124763705,"4. If you are using existing assets (e.g., code, data, models) or curating/releasing new assets...
473"
REFERENCES,0.9735349716446124,"(a) If your work uses existing assets, did you cite the creators? [N/A]
474"
REFERENCES,0.9754253308128544,"(b) Did you mention the license of the assets? [N/A]
475"
REFERENCES,0.9773156899810964,"(c) Did you include any new assets either in the supplemental material or as a URL? [N/A]
476 477"
REFERENCES,0.9792060491493384,"(d) Did you discuss whether and how consent was obtained from people whose data you’re
478"
REFERENCES,0.9810964083175804,"using/curating? [N/A]
479"
REFERENCES,0.9829867674858223,"(e) Did you discuss whether the data you are using/curating contains personally identifiable
480"
REFERENCES,0.9848771266540642,"information or offensive content? [N/A]
481"
REFERENCES,0.9867674858223062,"5. If you used crowdsourcing or conducted research with human subjects...
482"
REFERENCES,0.9886578449905482,"(a) Did you include the full text of instructions given to participants and screenshots, if
483"
REFERENCES,0.9905482041587902,"applicable? [N/A]
484"
REFERENCES,0.9924385633270322,"(b) Did you describe any potential participant risks, with links to Institutional Review
485"
REFERENCES,0.994328922495274,"Board (IRB) approvals, if applicable? [N/A]
486"
REFERENCES,0.996219281663516,"(c) Did you include the estimated hourly wage paid to participants and the total amount
487"
REFERENCES,0.998109640831758,"spent on participant compensation? [N/A]
488"
