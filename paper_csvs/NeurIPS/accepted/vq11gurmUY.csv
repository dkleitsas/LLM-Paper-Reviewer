Section,Section Appearance Order,Paragraph
UNIVERSITY COLLEGE LONDON,0.0,"1 University College London
2 Huawei Noah’s Ark Lab
3 Huawei R&D U.K.
4 Institute of Physics, Chinese Academy of Sciences
{xihan.li,jun.wang}@cs.ucl.ac.uk
{xiangchen.ai,rasul.tutunov,haitham.ammar}@huawei.com
wanglei@iphy.ac.cn"
ABSTRACT,0.004975124378109453,Abstract
ABSTRACT,0.009950248756218905,"Self-consistent Field (SCF) equation is a type of nonlinear eigenvalue problem in
which the matrix to be eigen-decomposed is a function of its own eigenvectors. It is
of great signiﬁcance in computational science for its connection to the Schrödinger
equation. Traditional ﬁxed-point iteration methods for solving such equations
suffer from non-convergence issues. In this work, we present a novel perspective
on such SCF equations as a principal component analysis (PCA) for non-stationary
time series, in which a distribution and its own top principal components are mutu-
ally updated over time, and the equilibrium state of the model corresponds to the
solution of the SCF equations. By the new perspective, online PCA techniques are
able to engage in so as to enhance the convergence of the model towards the equi-
librium state, acting as a new set of tools for converging the SCF equations. With
several numerical adaptations, we then develop a new algorithm for converging the
SCF equation, and demonstrated its high convergence capacity with experiments
on both synthesized and real electronic structure scenarios."
INTRODUCTION,0.014925373134328358,"1
Introduction"
INTRODUCTION,0.01990049751243781,"In this work, we are concerned with the convergence issue of solving the following type of nonlinear
eigenvalue problem:
F(v)v = λv
(1)"
INTRODUCTION,0.024875621890547265,"in which F(v) is a given mapping from an N-dimensional unit vector to an N × N positive semi-
deﬁnite matrix, λ is the largest eigenvalue of F(v), and v is the normalized eigenvector of F(v)
corresponding to λ. The core challenge of this problem is the involvement of self-consistency, that
is, the form of the eigenvalue equation (i.e., the matrix F(v) to be decomposed) is deﬁned by its
ﬁnal solution v, but the solution itself is not directly accessible unless the form of the equation is
given, which is a paradox. Such type of nonlinear eigenvalue problem is especially concerned in
computational science, since some variations of Equation (1) like Hartree-Fock equations [10, 11] and
Kohn-Sham equations [15, 19] are the foundation of electronic structure calculation by approximating
the Schrödinger equation, in which F(v) corresponds to the Fock operator approximating the
Hamiltonian operator of a quantum system, and the eigenvector v corresponds to the coefﬁcients of an
orbital wave function under certain basis [33, 25]. Such equations are usually called “self-consistent
ﬁeld (SCF) equations”."
INTRODUCTION,0.029850746268656716,"However, like many other types of nonlinear equations, no existing numerical algorithms can solve
SCF equations with theoretical convergence guarantee, while many works are committed to improve
the practical “successful rate” for the solution to be converged. To be more speciﬁc, the iterative"
INTRODUCTION,0.03482587064676617,"method to solve SCF equations is generally referred to as self-consistent ﬁeld (SCF) method [30, 23],
whose basic idea is to regard the SCF equation as a ﬁxed-point equation v = f(v) so as to perform
ﬁxed-point iteration. For Equation (1), we can rewrite it as v = Eig(F(v)) in which Eig(·) returns
the eigenvector of a matrix corresponding to its largest eigenvalue. Then the ﬁxed-point iteration
is performed by generating an initial solution v0 and performing vt+1 = Eig(F(vt)) iteratively
until convergence. Note that there is no theoretical guarantee that the above iteration step leads to
a converged solution1. In practice, vanilla SCF method also easily fails in real electronic structure
calculation under Hartree-Fock or Kohn-Sham equations, acting as oscillating between two or more
different states that are not solutions of the equations [4]. To mitigate the convergence issue of SCF
method, existing works mainly follow two directions: one is to generate better-quality initial solutions
v0 in a semi-empirical way [14, 35, 22], another one is to mix F(vt) with those in previous iterations
F(vt−1), F(vt−2), · · · to stabilize the iteration process [28, 21, 16, 6]."
INTRODUCTION,0.03980099502487562,"In this work, we propose a different direction to converge SCF equations. We have an insight that the
essence of SCF equation is a special type of eigen-decomposition where the matrix to be decomposed
is not determined during the decomposition. In this way, it shares a key similarity with principal
component analysis (PCA) in a non-stationary time-series environment, as PCA is also rooted on
eigen-decomposition, and the covariance matrix of the data distribution is not determined as it may
change over time. By transiting to the PCA perspective, it is possible to apply a series of online PCA
techniques that are successfully developed to handle PCA in non-stationary time-series (or streaming)
environments. They are able to adapt to new patterns in the data stream dynamically by incremental
updates of the principal component. Connecting it with SCF equations, such an incremental feature is
potentially helpful in mitigating the convergence issue, especially by preventing long-range oscillation
between successive iterations. Motivated by these insights, we propose a dynamic PCA model with an
auto-encoder structure, whose equilibrium state is the solution of Equation (1). In this model, we view
the eigenvector v in the SCF equation as a principal component for a certain data distribution P(x; Σ)
in PCA, and interpret F(v) in the SCF equation as a “reconstruction function” that convert a vector v
to the covariance matrix Σ of a certain distribution. Then we utilize online learning techniques to
lead the dynamic PCA model towards equilibrium state."
INTRODUCTION,0.04477611940298507,"For some important real-world applications of SCF equations, such as Hartree-Fock and Kohn-Shan
equations for electronic struction calculation, we also show that our PCA-based model can be adapted
to these applications, and proposed several numerical adaptations to converge these more complicated
equations. Particularly, we proposed an adaptive mechanism that allow the iteration to switch between
online mode for convergency and regular mode for accuracy, which provides unlimited chances
of trials to reach a converged trajectory, which is lacking in standard SCF methods when stuck in
oscillation."
INTRODUCTION,0.04975124378109453,"Experimental result on synthesis and real scenarios shows that our proposed approach largely reduce
the occurrence of oscillation, leading to a signiﬁcant improvement of convergence performance. In
this way, our work expands the reach of online PCA methods into handling self-consistency. In
summary, we make the following contributions:"
INTRODUCTION,0.05472636815920398,"• A novel formulation of the SCF equation as ﬁnding the equilibrium state of a dynamic PCA
model for non-stationary time series.
• A new application of online learning techniques to the proposed model so as to enhance
its convergence to the equilibrium state and avoid oscillation, improving the convergence
performance of SCF equations solving in a generic way.
• A new algorithm based on online PCA with several numerical adaptations, which is capable of
converging the SCF equation in real-world electronic structure calculation with high successful
rate.
• Extensive experiments on a synthetic problem and real datasets for electronic structure
calculation, demonstrating the high capacity of the proposed algorithm in converging the SCF
equation."
INTRODUCTION,0.05970149253731343,"1To have an insight, consider that the mapping Eig(F(·)) : RN →RN is generally not a contraction
mapping so that the Banach ﬁxed-point theorem [2] does not work here."
RELATED WORK,0.06467661691542288,"2
Related work"
RELATED WORK,0.06965174129353234,"With the prosperity of deep learning and differentiable optimization in recent years, there are
works combining machine learning with computational science and electronic structure calculation,
including deep-learning-aided wave function representation of quantum Monte Carlo methods such as
FermiNet [27], PauliNet [13] and [3] and neural representation of the exchange-correlation functional
in density functional theory [24, 18]. However, these works stay within traditional formalism of the
problem, focusing more on improving simulation accuracy towards physical reality by using neural
networks as better functional approximators, while our work’s focus is very different, stressing on
a machine learning oriented formalism of the SCF equation, which has not been explored in the
literature to the best of our knowledge."
RELATED WORK,0.07462686567164178,"To converge SCF equations, existing works mainly follow two directions. One is to generate better-
quality initial solutions v0 [14, 35, 22]. However, these methods are generally semi-empirical as they
require speciﬁc assumption of F, and leverage domain knowledge (e.g., quantum mechanism) for the
initialization. another one is to mix F(vt) with those in previous iterations F(vt−1), F(vt−2), · · ·
to stabilize the iteration process [28, 21, 16, 6]. While these methods perform well on converging
SCF equations efﬁciently, they can still be stuck in indeﬁnite oscillating between non-solution states
without the chance of escaping from it."
RELATED WORK,0.07960199004975124,"Principal component analysis (PCA) is a fundamental, well-studied tool used to for data analysis
and compression [17]. The principal components, which are “representative directions” of the data
distribution that preserve the data’s variation, can be computed by eigen-decomposition of the data
covariance matrix. However, when the data are formed as an online, non-stationary stream whose
distribution (or more speciﬁcally, the covariance matrix) may shift over time, specialized online
learning techniques are required to estimate the top-k principal components in a real-time manner,
and dynamically adapt to new patterns in the data stream. Starting from Hebb’s rule in neuroscience
[12], a series of works [26, 34, 1, 7] focus on this direction named Online k-PCA."
SOLVING SCF EQUATIONS WITH ONLINE PCA,0.0845771144278607,"3
Solving SCF Equations with Online PCA"
SOLVING SCF EQUATIONS WITH ONLINE PCA,0.08955223880597014,"To mitigate the convergence issue in the solving of the SCF equation (1), we connect it with PCA
by proposing a new PCA model for non-stationary time series, showing that the solving of the SCF
equation is equivalent to ﬁnding the equilibrium state of the proposed PCA model. In this way, online
learning techniques for PCA can be exploited to accelerate the convergence. We also propose some
numerical adaptations so as to solve real-world SCF equations in electronic structure computation."
THE CONNECTION BETWEEN SCF EQUATIONS AND PCA,0.0945273631840796,"3.1
The Connection between SCF Equations and PCA"
THE CONNECTION BETWEEN SCF EQUATIONS AND PCA,0.09950248756218906,"Figure 1: SCF equations as ﬁnding a distribution that is invariant before and after being processed by
an auto-encoder structure involving PCA. An input distribution P(x; Σ) is compressed yielding a set
of principal components v1:n. Those are then used to produce a reconstructed distribution P(x; Σ′),
where ideally we would like Σ = Σ′."
THE CONNECTION BETWEEN SCF EQUATIONS AND PCA,0.1044776119402985,"To connect the SCF equation with PCA, notice that Equation (1) can also be stated as"
THE CONNECTION BETWEEN SCF EQUATIONS AND PCA,0.10945273631840796,"v = Eig(F(v))
(2)"
THE CONNECTION BETWEEN SCF EQUATIONS AND PCA,0.11442786069651742,"or equivalently
Σ = F(Eig(Σ))
(3)"
THE CONNECTION BETWEEN SCF EQUATIONS AND PCA,0.11940298507462686,Distribution
THE CONNECTION BETWEEN SCF EQUATIONS AND PCA,0.12437810945273632,𝑃(𝑥; Σ)
THE CONNECTION BETWEEN SCF EQUATIONS AND PCA,0.12935323383084577,Principal Component 𝑣
THE CONNECTION BETWEEN SCF EQUATIONS AND PCA,0.13432835820895522,Compression (PCA)
THE CONNECTION BETWEEN SCF EQUATIONS AND PCA,0.13930348258706468,Reconstruction
THE CONNECTION BETWEEN SCF EQUATIONS AND PCA,0.14427860696517414,Σ𝑡←𝐹(𝑣𝑡−1) 𝑣𝑡−1 𝑣𝑡
THE CONNECTION BETWEEN SCF EQUATIONS AND PCA,0.14925373134328357,Reconstruction
THE CONNECTION BETWEEN SCF EQUATIONS AND PCA,0.15422885572139303,Σ𝑡+1 ←𝐹(𝑣𝑡) 𝑣𝑡+1
THE CONNECTION BETWEEN SCF EQUATIONS AND PCA,0.15920398009950248,Time step 𝑡−1
THE CONNECTION BETWEEN SCF EQUATIONS AND PCA,0.16417910447761194,Time step 𝑡
THE CONNECTION BETWEEN SCF EQUATIONS AND PCA,0.1691542288557214,"Time step 𝑡+ 1 ……
……"
THE CONNECTION BETWEEN SCF EQUATIONS AND PCA,0.17412935323383086,"𝑃𝑥; Σ𝑡−1
𝑃𝑥; Σ𝑡
𝑃𝑥; Σ𝑡+1"
THE CONNECTION BETWEEN SCF EQUATIONS AND PCA,0.1791044776119403,Compression (PCA)
THE CONNECTION BETWEEN SCF EQUATIONS AND PCA,0.18407960199004975,Compression (PCA)
THE CONNECTION BETWEEN SCF EQUATIONS AND PCA,0.1890547263681592,"Figure 2: A diagram of the dynamic PCA model, in which a distribution P(x; Σ) and its top principal
component v1:n are mutually updated over time. Importantly, we notice that we can regard the
approach as applying PCA on non-stationary distributions that evolve over time. Given that such
a formalism is novel and is an outcome of SCFs, the machine learning literature is yet to devise
effective solutions. In this work, we take the ﬁrst steps in devising such algorithms and demonstrate
successful applications in SCFs."
THE CONNECTION BETWEEN SCF EQUATIONS AND PCA,0.19402985074626866,"where Eig(·) is the eigenvector of a matrix corresponding to its largest eigenvalue, and v = Eig(Σ).
Here, if we consider the function Σ = F(v) as a “reconstruction function” that convert a vector v
to the covariance matrix Σ of a certain data distribution P(x; Σ), then the function v = Eig(Σ) is
equivalent to a “compression function” that ﬁnds the top principal component v of this distribution
P(x; Σ) with PCA, since the top principal component is exactly the eigenvector of the distribution’s
covariance matrix corresponding to the largest eigenvalue. From this perspective, the solving of
Equation (3) (and equivalently (2)) can be seen as ﬁnding a distribution P(x; Σ) parameterized by the
covariance matrix Σ that is invariant before and after being processed by the following two stages:"
THE CONNECTION BETWEEN SCF EQUATIONS AND PCA,0.19900497512437812,"• Compression (PCA): perform PCA on the distribution P(x; Σ) so as to obtain its top principal
component v, which is the representative direction of the distribution.
• Reconstruction (F(v)): process v with the given reconstruction function Σ′ = F(v) so as to
obtain the reconstructed distribution P(x; Σ′)."
THE CONNECTION BETWEEN SCF EQUATIONS AND PCA,0.20398009950248755,"which is shown in Figure 1. While its architecture seems similar to the autoencoder [20], the
encoder (PCA) and decoder (reconstruction function F(v)) here are both ﬁxed without any adjustable
parameters. Instead of training the encoder and decoder, here we aim to ﬁnd an input distribution
P(x; Σ) which remains invariant after been “encoded” and “decoded”."
A NEW PCA MODEL FOR NON-STATIONARY TIME SERIES,0.208955223880597,"3.2
A New PCA Model for Non-stationary Time Series"
A NEW PCA MODEL FOR NON-STATIONARY TIME SERIES,0.21393034825870647,"For solving of the SCF equation (2), traditionally we perform ﬁxed-point iteration by letting the
ﬁxed-point mapping f(v) = Eig(F(v)) and performing vt+1 = f(vt) iteratively until convergence.
Here, by replacing f with the reconstruction and compression stages mentioned above, we obtain an
equivalent form of the ﬁxed-point iteration, which is presented as a dynamic model that a distribution
P(x; Σ) and its top principal component v are mutually updated over time, shown in Figure 2. The
evolution process of the dynamic PCA model is as follows:"
A NEW PCA MODEL FOR NON-STATIONARY TIME SERIES,0.21890547263681592,"Given initial top principal component v0, reconstruction function F(v)
For t = 1, 2, · · · until converge (∥vt −vt−1∥< ϵ)"
A NEW PCA MODEL FOR NON-STATIONARY TIME SERIES,0.22388059701492538,"• Reconstruct the distribution P(x; Σt) by Σt = F(vt−1).
• Perform PCA on Xt ∼P(x; Σt) and obtain the top principal component vt ←PCA(Xt)."
A NEW PCA MODEL FOR NON-STATIONARY TIME SERIES,0.22885572139303484,"In this model, the top principal component is updated by performing PCA on the current distribution,
and the distribution is updated by performing reconstruction on the current top principal component.
As it is equivalent to the ﬁxed-point iteration, the equilibrium state of the new dynamic model is also
the ﬁxed point of Equation (2), which corresponds to the solution of Equation (1)."
A NEW PCA MODEL FOR NON-STATIONARY TIME SERIES,0.23383084577114427,"An important feature of the dynamic PCA model is that, it can be regarded as applying PCA on a
non-stationary distribution over time, as the distribution that is processed by PCA is subject to change"
A NEW PCA MODEL FOR NON-STATIONARY TIME SERIES,0.23880597014925373,"0
1
2
3
4
5
6
7
8
9
Time step t 15 10 5 0 5 10 15 20 25"
A NEW PCA MODEL FOR NON-STATIONARY TIME SERIES,0.24378109452736318,Angle between vt and
A NEW PCA MODEL FOR NON-STATIONARY TIME SERIES,0.24875621890547264,the solution (degrees)
A NEW PCA MODEL FOR NON-STATIONARY TIME SERIES,0.2537313432835821,"Fixed-point Iteration
Online PCA"
A NEW PCA MODEL FOR NON-STATIONARY TIME SERIES,0.25870646766169153,"Figure 3: Convergence comparison between vanilla ﬁxed-point iteration and Online PCA given
F(v) =
h
v2
2
v1v2
v1v2
v2
1"
A NEW PCA MODEL FOR NON-STATIONARY TIME SERIES,0.263681592039801,"i
, if we set the initial solution v0 as [1/2,
√"
A NEW PCA MODEL FOR NON-STATIONARY TIME SERIES,0.26865671641791045,3/2]⊤. The principal component at
A NEW PCA MODEL FOR NON-STATIONARY TIME SERIES,0.2736318407960199,"time step 0 is set to be [1/2,
√"
A NEW PCA MODEL FOR NON-STATIONARY TIME SERIES,0.27860696517412936,"3/2]⊤for both models. While the vanilla ﬁxed-point iteration oscillates
between [1/2,
√"
A NEW PCA MODEL FOR NON-STATIONARY TIME SERIES,0.2835820895522388,"3/2]⊤and [
√"
A NEW PCA MODEL FOR NON-STATIONARY TIME SERIES,0.2885572139303483,"3/2, 1/2]⊤along with the time step, the dynamic PCA model proposed
in Section 3.2 converges to the ground-truth solution [
√"
A NEW PCA MODEL FOR NON-STATIONARY TIME SERIES,0.2935323383084577,"2/2,
√"
A NEW PCA MODEL FOR NON-STATIONARY TIME SERIES,0.29850746268656714,"2/2]⊤steadily after applying online
PCA technique."
A NEW PCA MODEL FOR NON-STATIONARY TIME SERIES,0.3034825870646766,"over time in the evolving process. This new perspective enables a variety of PCA techniques for
non-stationary environments to be applied on the solving of the problem, whose details are discussed
below."
ONLINE PCA FOR CONVERGING SCF EQUATIONS,0.30845771144278605,"3.3
Online PCA for Converging SCF Equations"
ONLINE PCA FOR CONVERGING SCF EQUATIONS,0.31343283582089554,"As we have discussed in the introduction, vanilla ﬁxed-point iteration method has serious convergence
issues. acting as oscillating between two or more different points, neither of which are the solution
of Equation (2). For example, given F(v) =
h
v2
2
v1v2
v1v2
v2
1"
ONLINE PCA FOR CONVERGING SCF EQUATIONS,0.31840796019900497,"i
, if we set the initial solution v0 as"
ONLINE PCA FOR CONVERGING SCF EQUATIONS,0.32338308457711445,"[1/2,
√"
ONLINE PCA FOR CONVERGING SCF EQUATIONS,0.3283582089552239,"3/2]⊤and perform ﬁxed-point iteration vk = Eig(F(vk−1)), we will ﬁnd it oscillating
between [1/2,
√"
ONLINE PCA FOR CONVERGING SCF EQUATIONS,0.3333333333333333,"3/2]⊤and [
√"
ONLINE PCA FOR CONVERGING SCF EQUATIONS,0.3383084577114428,"3/2, 1/2]⊤along with the time step. Neither of them are close to the
analytical solution [
√"
ONLINE PCA FOR CONVERGING SCF EQUATIONS,0.34328358208955223,"2/2,
√"
ONLINE PCA FOR CONVERGING SCF EQUATIONS,0.3482587064676617,"2/2]⊤. However, the new PCA-based perspective allows us to apply
online learning techniques to mitigate this issue. In online PCA, the principal components are
usually updated in an incremental manner so as to adapt to new patterns in the data distribution.
The incremental property is especially appealing to us, since the oscillation of ﬁxed-point iteration
behaves as inﬁnite “jumps” between different states, and incremental updates can reduce such jumps
by adding soft restrictions to the difference of principal components between successive time steps.
After applying online learning techniques, the evolution process of the dynamic PCA model is as
follows:"
ONLINE PCA FOR CONVERGING SCF EQUATIONS,0.35323383084577115,"Given initial top principal component v0, reconstruction function F(v)
For t = 1, 2, · · · until converge (∥vt −vt−1∥< ϵ)"
ONLINE PCA FOR CONVERGING SCF EQUATIONS,0.3582089552238806,"• Reconstruct the distribution P(x; Σt) by Σt = F(vt−1).
• Sample xt from P(x; Σt)
• Update v by online PCA with xt"
ONLINE PCA FOR CONVERGING SCF EQUATIONS,0.36318407960199006,and an illustrative example is shown in Figure 3.
A CASE STUDY FOR THE CONVERGENCE BEHAVIOR OF ONLINE PCA,0.3681592039800995,"3.4
A Case Study for the Convergence Behavior of Online PCA"
A CASE STUDY FOR THE CONVERGENCE BEHAVIOR OF ONLINE PCA,0.373134328358209,"For the iterative methods solving Equation (1), while the convergence analysis is generally intractable
due to the arbitrariness of F(v) (usually nonlinear by involving vv⊤), here we provide a case study
for a speciﬁc form of F(v) whose analytical ground truth solutions are available. While vanilla
ﬁxed-point iteration method doesn’t work in this case, we can derive and visualize the convergence
behavior of our proposed online PCA method in an analytical way. Here we let"
A CASE STUDY FOR THE CONVERGENCE BEHAVIOR OF ONLINE PCA,0.3781094527363184,"F(v) = (Av)(Av)⊤= Avv⊤A⊤
(4)"
A CASE STUDY FOR THE CONVERGENCE BEHAVIOR OF ONLINE PCA,0.38308457711442784,in which A is an orthogonal matrix. Substitute Equation (4) into (1) and we obtain
A CASE STUDY FOR THE CONVERGENCE BEHAVIOR OF ONLINE PCA,0.3880597014925373,"(Avv⊤A⊤)v = λv
(5)"
A CASE STUDY FOR THE CONVERGENCE BEHAVIOR OF ONLINE PCA,0.39303482587064675,"The analytical solution of Equation (5) is the normalized eigenvector of A corresponding to the
eigenvalue 1, since the largest eigenvalue of matrix Avv⊤A⊤is 1 with corresponding eigenvector 𝑥 𝑦 𝑧
𝑣∗ 𝑣∗ 𝜑 𝑣
𝜑′"
A CASE STUDY FOR THE CONVERGENCE BEHAVIOR OF ONLINE PCA,0.39800995024875624,"𝑣′
𝜂∇𝑣"
A CASE STUDY FOR THE CONVERGENCE BEHAVIOR OF ONLINE PCA,0.40298507462686567,"(a) Updating v with
online PCA 𝑦 𝑧
𝑣∗ 𝑣∗ 𝜑"
A CASE STUDY FOR THE CONVERGENCE BEHAVIOR OF ONLINE PCA,0.4079601990049751,"(b) Convergence dynamics
for θ ∈( π"
A CASE STUDY FOR THE CONVERGENCE BEHAVIOR OF ONLINE PCA,0.4129353233830846,"2 , π) 0
4
2 3
4 0.4 0.6 0.8 1.0"
A CASE STUDY FOR THE CONVERGENCE BEHAVIOR OF ONLINE PCA,0.417910447761194,Convergence probability
A CASE STUDY FOR THE CONVERGENCE BEHAVIOR OF ONLINE PCA,0.4228855721393035,"(c) Convergence probability
w.r.t. θ"
A CASE STUDY FOR THE CONVERGENCE BEHAVIOR OF ONLINE PCA,0.42786069651741293,"Figure 4: Convergence analysis of our proposed online PCA method for solving Equation (5). Note
that vanilla ﬁxed-point iteration can never converge in this case."
A CASE STUDY FOR THE CONVERGENCE BEHAVIOR OF ONLINE PCA,0.43283582089552236,"Av (i.e., Eig(Avv⊤A⊤) = Av), reducing Equation (5) to a standard eigenvalue problem v = Av.
However, The vanilla ﬁxed-point iteration method cannot converge when solving Equation (5). Note
that the mapping in each iteration will be reduced to vt+1 = Avt, which seems very similar to the
power method on A for ﬁnding the eigenvector with the largest eigenvalue, but with convergence
ratio | λ2"
A CASE STUDY FOR THE CONVERGENCE BEHAVIOR OF ONLINE PCA,0.43781094527363185,"λ1 | = 1 (i.e., cannot converge) since all the absolute value of A’s eigenvalues are 1 as A is an
orthogonal matrix."
A CASE STUDY FOR THE CONVERGENCE BEHAVIOR OF ONLINE PCA,0.4427860696517413,"Now we turn to the convergence analysis of our proposed online PCA method for this case. For the
sake of visualization, we further restrict A to be three-dimensional as a rotation transformation matrix
around the z-axis with angle θ, that is A ="
A CASE STUDY FOR THE CONVERGENCE BEHAVIOR OF ONLINE PCA,0.44776119402985076,"""cos θ
−sin θ
0
sin θ
cos θ
0
0
0
1 # (6)"
A CASE STUDY FOR THE CONVERGENCE BEHAVIOR OF ONLINE PCA,0.4527363184079602,"so that the solution of Equation (5) will be v∗= [0, 0, ±1]⊤, the two unit vectors on the z-axis. Then,
we let the initial top principal component v0 to be a unit vector on the yz plane"
A CASE STUDY FOR THE CONVERGENCE BEHAVIOR OF ONLINE PCA,0.4577114427860697,"v0 = [0, cos ϕ0, sin ϕ0]⊤, ϕ0 ∈[0, π"
A CASE STUDY FOR THE CONVERGENCE BEHAVIOR OF ONLINE PCA,0.4626865671641791,"2 ]
(7)"
A CASE STUDY FOR THE CONVERGENCE BEHAVIOR OF ONLINE PCA,0.46766169154228854,where ϕ0 is the initial angle between the vector and the xy plane.
A CASE STUDY FOR THE CONVERGENCE BEHAVIOR OF ONLINE PCA,0.472636815920398,"We analytically derived the convergence behavior of the online PCA method described in Section 3.3
for solving Equation (5), whose detail is leaved in the appendix. The result is as follows: for
θ ∈(0, π"
A CASE STUDY FOR THE CONVERGENCE BEHAVIOR OF ONLINE PCA,0.47761194029850745,"2 ), the online PCA method is guaranteed to converge to the ground-truth solution on z-axis.
However, for θ ∈[ π"
A CASE STUDY FOR THE CONVERGENCE BEHAVIOR OF ONLINE PCA,0.48258706467661694,"2 , π), there is a phase transition of convergence behavior w.r.t. the initial angle
ϕ0, shown in Figure 4b. While the online PCA method stays converged for ϕ0 > arccos
p"
A CASE STUDY FOR THE CONVERGENCE BEHAVIOR OF ONLINE PCA,0.48756218905472637,"x1(θ), it
will fail to converge otherwise. Assuming the initial vector is sampled uniformly on the unit sphere,
the probability of convergence for the online PCA method w.r.t. the rotation angle θ is shown in
Figure 4c."
NUMERICAL ADAPTATIONS FOR CONVERGING REAL-WORLD SCF EQUATIONS,0.4925373134328358,"3.5
Numerical Adaptations for Converging Real-world SCF Equations"
NUMERICAL ADAPTATIONS FOR CONVERGING REAL-WORLD SCF EQUATIONS,0.4975124378109453,"Now we investigate a more complicated and applicative scenario in electronic structure calculation,
which is usually known as Hartree-Fock equations or Kohn-Sham equations. The form of such SCF
equations [33] is
F(V )V = SV Λ,
(8)
where"
NUMERICAL ADAPTATIONS FOR CONVERGING REAL-WORLD SCF EQUATIONS,0.5024875621890548,"• F(V ): an N × N real symmetric matrix to be decomposed, as a given function of V . It is
deﬁned as follows:
F(V )
def
= H + Ueff(2V V ⊤),
(9)
in which H is an N ×N real symmetric matrix and Ueff(·) is an N ×N real symmetric matrix
as a function of 2V V ⊤. Both of them are given in the equation.
• S: an N × N positive semi-deﬁnite matrix, which is a constant input in the problem."
NUMERICAL ADAPTATIONS FOR CONVERGING REAL-WORLD SCF EQUATIONS,0.5074626865671642,"• Λ: Λ = diag(λ1, · · · , λk) is a k×k diagonal matrix containing the top-k smallest eigenvalues.
• V : V = [v1, · · · , vk] is an N × k matrix containing k normalized column eigenvectors
corresponding to the top-k smallest eigenvalues."
NUMERICAL ADAPTATIONS FOR CONVERGING REAL-WORLD SCF EQUATIONS,0.5124378109452736,Our proposed model can be adapted to handle it as follows
NUMERICAL ADAPTATIONS FOR CONVERGING REAL-WORLD SCF EQUATIONS,0.5174129353233831,"1. While F(v) is not guaranteed to be positive semi-deﬁnite, note that we can always make an
“eigenvalue shift” towards F(v) by adding it with σI (σ is a moderately large number) to make
it positive semi-deﬁnite, without changing its eigenvectors (i.e., the solution of Equation (8)).
2. For S ̸= I, Equation (1) becomes F(v)v = λSv which is a generalized eigen-decomposition
problem[8]. We can then perform standard orthogonalization technique that transforms the
generalized eigenvalue problem into a standard one [33].
3. To tackle the smallest eigenvalues instead of the largest ones, we can simply add a minus sign
to F(v), so that the order of its eigenvalues will be reversed without changing its eigenvectors.
4. For k > 1, our proposed model can be trivially extended to k > 1 cases by retaining k top
principal components rather than one."
NUMERICAL ADAPTATIONS FOR CONVERGING REAL-WORLD SCF EQUATIONS,0.5223880597014925,"And we name the adapted model as “Online SCF”. Then, we introduce some practical improvements
that can further enhance the efﬁciency and convergence capability of our proposed model for solving
Equation (8):"
NUMERICAL ADAPTATIONS FOR CONVERGING REAL-WORLD SCF EQUATIONS,0.527363184079602,"Adaptive Update Interval: Instead of updating Σ in every iteration, we control the update interval of
Σ via a parameter IΣ to improve efﬁciency. Since V is only updated slightly in each iteration step with
a small learning rate η, it may not be necessary to do a fresh computation of Σ = F(V ) in each time
step, especially considering that the computation of Ueff(·) in Equation (9) can be costly. Moreover,
we change IΣ adaptively in the iteration to improve the efﬁciency by the following intuition: if
there is a signiﬁcant change between Σt and Σt−1, our dynamic PCA model is in an unstable state
and we should apply online PCA method in a more responsive way to improve the convergence by
setting a smaller IΣ. However, if the gap is small, then our dynamic PCA model is very likely to
be already close to a stable state, in which case the precision of PCA result is more dominant for
obtaining a highly precise solution (especially for electronic structure calculation requiring error
< 10−10), and a larger IΣ is more reasonable. In this way, we set IΣ to be inversely proportional to
the difference between Σt and Σt−1, as It
Σ = ⌈
1
∆(Σt,Σt−1)⌉in which ∆(Σt, Σt−1) ≥0 is a properly
scaled function evaluating the difference between successive Σ."
NUMERICAL ADAPTATIONS FOR CONVERGING REAL-WORLD SCF EQUATIONS,0.5323383084577115,"Adaptive PCA Mode Switching: Note that, the larger IΣ is, the more costly in time between two
updates of Σ, and the closer the result is to regular PCA on P(x; Σ). Thus a cut-off value Tcut-off is
set so that the PCA model will switch from online to regular when It
Σ > Tcut-off, avoiding exhausted
iteration on a single Σ. Moreover, this brings the preciseness needed for the ﬁnal stage of the iteration
when the error is small and convergence may not be a problem. Empirically, such a mode switching
will introduce temporary disturbance for a few iterations, so we also set a small “tabu tenure”2 Ttabu
prohibiting switching back to the original PCA mode in Ttabu steps. Such switching between online
and regular PCA can be triggered multiple times. A high amount of switches indicates that the
convergence of the iteration may be hard, so Tcut-off will increase by a small value Tcut-off-inc after each
switching to increase the proportion of online PCA to handle the convergence issue."
NUMERICAL ADAPTATIONS FOR CONVERGING REAL-WORLD SCF EQUATIONS,0.5373134328358209,"Additionally, we also applied the direct inversion of the iterative subspace (DIIS) method, which is
empirically effective in traditional methods for electronic structure calculation. The basic idea is to
update Σt at iteration t as a linear combination of matrices in previous T iterations Σt−T , · · · , Σt−1,
whose detail can be found in [28] and the appendix. In the experiments involving electronic structure
calculation, we apply DIIS on all tested methods."
NUMERICAL ADAPTATIONS FOR CONVERGING REAL-WORLD SCF EQUATIONS,0.5422885572139303,"Some other numerical adaptations, including the application of momentum and sample-free update,
are also leaved in the appendix. Summarizing all considerations above, we propose an algorithm for
solving Equation (8), named “Adaptive Online SCF”, shown in Algorithm 1"
NUMERICAL ADAPTATIONS FOR CONVERGING REAL-WORLD SCF EQUATIONS,0.5472636815920398,2This term is borrowed from Tabu Search [9].
NUMERICAL ADAPTATIONS FOR CONVERGING REAL-WORLD SCF EQUATIONS,0.5522388059701493,Algorithm 1 Adaptive Online SCF for solving Equation (8) in electronic structure calculation
NUMERICAL ADAPTATIONS FOR CONVERGING REAL-WORLD SCF EQUATIONS,0.5572139303482587,"Input: H, S, Ueff(·) in Equation (8) and (9), learning rate η, difference evaluation function
∆1(Σt, Σt−1) for convergence criteria and ∆2(Σt, Σt−1) for the computation of IΣ, cut-off
threshold Tcut-off and increment value Tcut-off-inc, tabu tenure Ttabu, convergence threshold ϵ
Output: V ∗, the solution of Equation (8)"
NUMERICAL ADAPTATIONS FOR CONVERGING REAL-WORLD SCF EQUATIONS,0.5621890547263682,"1: Initialize V ′
0 ∈RN×k randomly.
2: Σ0 ←H
3: Find X satisfying X⊤SX = I.
4: s0 ←Online
5: t ←0, i ←0
6: while ∆1(Σt, Σt−1) > ϵ do
7:
Vt ←XV ′
t
8:
Σt ←DIIS(Σt−S, · · · , Σt−1, F(V ))
9:
Σ′
t ←X⊤ΣtX
10:
It
Σ = ⌈1/∆2(Σt, Σt−1)⌉
11:
if It
Σ ≤Tcut-off and not (st = Regular and i < Ttabu) or (st = Online and i < Ttabu) then
12:
for t′ = 0, 1, 2, · · · , It
Σ do
13:
Use online PCA to update V ′
t towards “covariance matrix” −Σ′
t, with momentum.
14:
end for
15:
st ←Online
16:
else
17:
Use regular PCA to compute “principal component” V ′
t from “covariance matrix” −Σ′
t.
18:
st ←Regular
19:
end if
20:
i ←i + 1 if st = st−1 else 0
21:
Tcut-off ←Tcut-off if st = st−1 else Tcut-off + Tcut-off-inc
22:
t ←t + 1
23: end while
24: V ∗←XV ′"
EXPERIMENTS,0.5671641791044776,"4
Experiments"
EXPERIMENTS,0.572139303482587,"4.1
Experimental Veriﬁcation of the Case Study"
EXPERIMENTS,0.5771144278606966,"To verify the convergence analysis in Section 3.4, we conduct Monte Carlo experiments to solve
Equation (5) for rotation matrix A with different rotation angle θ. For each angle, we uniformly
sample 1,000 initial vectors v0 on the unit sphere, perform the online PCA method and traditional
ﬁxed-point iteration (vanilla SCF) starting from these vectors to solve Equation (5), and use the
proportion of converged vectors as an approximation of convergence probability. To be aligned with
the next section, we also included the DIIS method described in the appendix that is extensively used
in solving Equation (8)."
EXPERIMENTS,0.582089552238806,"The result is shown in Figure 5. While vanilla SCF (ﬁxed-point iteration) cannot converge on any
instance, the convergence probability of online PCA is aligned with the analytical result shown in
Figure 4c. DIIS achieves around 40% convergence probability regardless of the rotation angle, which
is signiﬁcantly better than vanilla SCF but still fall behind for θ < 3π/4 compared with online PCA
method. The result validates the convergence analysis in Section 3.4, showing the potentially high
convergence capacity of online PCA method."
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.5870646766169154,"4.2
Convergence Capability Evaluation on Electron Structures"
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.5920398009950248,"In this section, we perform extensive benchmarks on the QM9 dataset [31, 29], a diverse, large dataset
to evaluate the capacity of converging Equation (8), the SCF equation in the scenario of electronic
structure calculation. The QM9 dataset contains the atomic coordinates of 133,885 molecules in
total, which is huge in size, thus we sampled 1% of the dataset (1,338 molecules) in a purely random
manner for our evaluation. The effective potential matrix function Ueff(·) in Equation (9) is based
on Hartree-Fock theory and Density Functional Theory (DFT) with B3LYP exchange-correlation
functional, provided by PySCF [32]. We evaluated the methods on the two theories separately. 0
π
4"
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.5970149253731343,"π
2
3π 4 π
0 0.25 0.5 0.75 1 θ"
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.6019900497512438,Convergence Probability
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.6069651741293532,Online PCA
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.6119402985074627,Online PCA w/o sampling
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.6169154228855721,"Analytical result
shown in Figure 4c"
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.6218905472636815,SCF with DIIS
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.6268656716417911,Vanilla SCF
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.6318407960199005,(a) Convergence ratio 1.00 0.75 0.50 0.25 0.00 0.25 0.50 0.75
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.6368159203980099,"1.00 1.000.750.500.25
0.000.250.500.751.00"
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.6417910447761194,"1.00
0.75
0.50
0.25
0.00
0.25
0.50
0.75
1.00"
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.6467661691542289,"Fixed-point Iteration
Online PCA"
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.6517412935323383,"(b) An example of
convergence trajectories"
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.6567164179104478,"Figure 5: Performance evaluation of solving Equation (5) whose analytical solutions are available.
(a) While vanilla SCF (ﬁxed-point iteration) cannot converge on any instance, the convergence
probability of online PCA is aligned with the analytical result shown in Figure 4c. (b) An example of
convergence trajectories, traditional SCF (ﬁxed-point iteration) fails to converge (cycling around the
solutions) while our Online PCA method converges to the solutions (red and blue arrow) smoothly."
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.6616915422885572,"Methods
Hartree-Fock
DFT with B3LYP
#(Nonconverged
molecules)
Average
#(iterations)"
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.6666666666666666,"#(Nonconverged
molecules)
Average
#(iterations)
Regular SCF
124
(9.27%)
25.49
407
(30.42%)
21.09
Full Online SCF
13
(0.97%)
584.68
217
(16.22%)
1835.24
Adaptive Online SCF
0
(0%)
42.97
0
(0%)
60.58"
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.6716417910447762,"Table 1: Results on 1,338 randomly sampled molecules in QM9 dataset. All methods are initialized
with core Hamiltonian and accelerated by DIIS. Average #(iterations) is for converged molecules
only."
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.6766169154228856,"Standard 6-31G basis set [5] are applied for the computation of all molecules. All tested methods are
initialized with core Hamiltonian and accelerated by DIIS. Three methods are evaluated as follows:"
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.681592039800995,"• Regular SCF: The default method in PySCF with DIIS enabled, as similar to most of the
quantum chemistry software.
• Full Online SCF: Algorithm 1 without the adaptive mode switching mechanism. Online SCF
is applied throughout the whole iteration process, with a learning rate of 10−2. To avoid the
explosion of update interval It
Σ when approaching to convergence, we simply set an upper
limit of 10,000 for It
Σ.
• Adaptive Online SCF: Algorithm 1 including the adaptive mode switching mechanism.
Regular SCF is allow to kick in when the iteration process is close to convergence. Tcut-off and
Tcut-off-inc are set to be 100 and 10 respectively. Ttabu is set to be 10."
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.6865671641791045,"The result is shown in Table 1. Compared with regular SCF approach, full online SCF method
signiﬁcantly reduced the number of nonconverged molecules in both Hartree-Fock and DFT scenarios,
demonstrating its high convergence capacity in solving Equation (8). However, the gradient-like
update rule of online methods results in comparatively low precision. This not only increases the
number of required iterations signiﬁcantly, but also restricts it from achieving higher convergence
capacity under strict convergence criteria. The adaptive mode switching mechanism successfully
resolved the issue. By allowing regular SCF to kick in at a later stage, with the ﬂexibility to return
back to online mode when oscillation occurs, adaptive online SCF achieves converged solution for all
test molecules, with a moderate increase of average iteration number."
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.6915422885572139,"The behavior of adaptive online SCF is shown in Figure 6. While most of the molecules get converged
with only one mode transition in Figure 6a, there are also a few “hard cases” like Figure 6b that
require multiple mode transitions between online and regular SCF. The detailed statistics is shown in
Table 2. The capability of mode switching is essential for the convergence capacity, since it provides
unlimited chances of trials to reach a converged trajectory, which is lacking in regular SCF methods
with only a few choices of starting point to select."
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.6965174129353234,"5
10
15
20
25
30
35
40
10−10
10−9
10−8
10−7
10−6
10−5
10−4
10−3
10−2
10−1
100
101
102
103"
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.7014925373134329,"Online
SCF"
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.7064676616915423,"Regular
SCF"
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.7114427860696517,iterations Error
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.7164179104477612,(a) Converge with one mode transition.
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.7213930348258707,"5 10 15 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95100
10−10
10−9
10−8
10−7
10−6
10−5
10−4
10−3
10−2
10−1
100
101
102
103"
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.7263681592039801,"Online
SCF"
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.7313432835820896,"Regular
SCF"
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.736318407960199,"Online
SCF"
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.7412935323383084,"Regular
SCF"
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.746268656716418,"Online
SCF"
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.7512437810945274,"Regular
SCF"
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.7562189054726368,iterations Error
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.7611940298507462,(b) Converge with multiple mode transitions.
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.7661691542288557,Figure 6: Examples of converge curves for adaptive online SCF.
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.7711442786069652,"#(mode transition)
1
2
3
4
5
6
7
8
> 8
Hartree-Fock
1143
179
13
2
0
0
1
0
0
DFT with B3LYP
1025
189
60
27
18
6
6
3
4"
CONVERGENCE CAPABILITY EVALUATION ON ELECTRON STRUCTURES,0.7761194029850746,"Table 2: Mode transition statistics of adaptive online SCF on sampled QM9 dataset. While all
molecules ﬁnally converged on both Hartree-Fock and DFT scenarios and most of the them only
require one mode transition from online to regular, the distribution of mode transition for DFT is
more long-tailed (the 4 molecules with #(mode transition) > 8 have 12, 13, 15 and 32 transitions
respectively)."
CONCLUSION,0.7810945273631841,"5
Conclusion"
CONCLUSION,0.7860696517412935,"In this work, we take the ﬁrst steps in devising PCA-based algorithms for converging non-linear
equations, and demonstrate successful applications in SCFs. This work contributes to both the ﬁeld
of computational science and machine learning as follows:"
CONCLUSION,0.7910447761194029,"• For computational science, this work presents a new algorithm to converge SCF equations in
electronic structure calculation with high successful rate, especially without any heuristics
based on prior quantum mechanism knowledge to bootstrap the solving stage.
• For machine learning, this work explores a brand new area of “self-consistent” eigenvalue
problems, especially SCF equations, for online PCA methods such as Oja’s algorithm and
EigenGame, which are previously regarded as specialized methods for k-PCA. While such
methods can properly handle data stochasticity, this work shows that they are also capable
of handling self-consistency, which leads to a potential of application in a broader ﬁeld of
scientiﬁc computing."
REFERENCES,0.7960199004975125,References
REFERENCES,0.8009950248756219,"[1] Zeyuan Allen-Zhu and Yuanzhi Li. First efﬁcient convergence for streaming k-pca: A global,
gap-free, and near-optimal rate. In 2017 IEEE 58th Annual Symposium on Foundations of
Computer Science (FOCS), pages 487–492, 2017."
REFERENCES,0.8059701492537313,"[2] Stefan Banach. Sur les opérations dans les ensembles abstraits et leur application aux équations
intégrales. Fundamenta Mathematicae, 3(1):133–181, 1922."
REFERENCES,0.8109452736318408,"[3] Thomas D. Barrett, Aleksei Malyshev, and A. I. Lvovsky. Autoregressive neural-network
wavefunctions for ab initio quantum chemistry. Nature Machine Intelligence, 4(4):351–358,
April 2022. Number: 4 Publisher: Nature Publishing Group."
REFERENCES,0.8159203980099502,"[4] Eric Cancès, Mireille Defranceschi, Werner Kutzelnigg, Claude Le Bris, and Yvon Maday.
Computational quantum chemistry: A primer. In Special Volume, Computational Chemistry,
volume 10 of Handbook of Numerical Analysis, pages 3–270. Elsevier, 2003. ISSN: 1570-8659."
REFERENCES,0.8208955223880597,"[5] R. Ditchﬁeld, W. J. Hehre, and J. A. Pople. Self-consistent molecular-orbital methods. ix. an
extended gaussian-type basis for molecular-orbital studies of organic molecules. The Journal of
Chemical Physics, 54(2):724–728, 1971."
REFERENCES,0.8258706467661692,"[6] Alejandro J. Garza and Gustavo E. Scuseria. Comparison of self-consistent ﬁeld convergence
acceleration techniques. The Journal of Chemical Physics, 137(5):054110, August 2012."
REFERENCES,0.8308457711442786,"[7] Ian M. Gemp, Brian McWilliams, Claire Vernade, and Thore Graepel. Eigengame: PCA as
a nash equilibrium. In 9th International Conference on Learning Representations, ICLR 2021,
Virtual Event, Austria, May 3-7, 2021. OpenReview.net, 2021."
REFERENCES,0.835820895522388,"[8] Benyamin Ghojogh, Fakhri Karray, and Mark Crowley. Eigenvalue and Generalized Eigenvalue
Problems: Tutorial. arXiv:1903.11240 [cs, stat], March 2019. arXiv: 1903.11240."
REFERENCES,0.8407960199004975,"[9] Fred Glover and Manuel Laguna. Tabu Search, pages 2093–2229. Springer US, Boston, MA,
1998."
REFERENCES,0.845771144278607,"[10] D. R. Hartree.
The wave mechanics of an atom with a non-coulomb central ﬁeld. part
i. theory and methods. Mathematical Proceedings of the Cambridge Philosophical Society,
24(1):89–110, 1928."
REFERENCES,0.8507462686567164,"[11] Douglas Rayner Hartree and W. Hartree. Self-consistent ﬁeld, with exchange, for beryllium."
REFERENCES,0.8557213930348259,"Proceedings of the Royal Society of London. Series A - Mathematical and Physical Sciences,
150(869):9–33, 1935."
REFERENCES,0.8606965174129353,"[12] D. O. Hebb. The organization of behavior; a neuropsychological theory. The organization of
behavior; a neuropsychological theory. Wiley, Oxford, England, 1949. Pages: xix, 335."
REFERENCES,0.8656716417910447,"[13] Jan Hermann, Zeno Schätzle, and Frank Noé. Deep-neural-network solution of the electronic
Schrödinger equation. Nature Chemistry, 12(10):891–897, October 2020. Number: 10 Pub-
lisher: Nature Publishing Group."
REFERENCES,0.8706467661691543,"[14] Roald Hoffmann. An extended hückel theory. i. hydrocarbons. The Journal of Chemical Physics,
39(6):1397–1412, 1963."
REFERENCES,0.8756218905472637,"[15] P. Hohenberg and W. Kohn. Inhomogeneous electron gas. Phys. Rev., 136:B864–B871, Nov
1964."
REFERENCES,0.8805970149253731,"[16] Xiangqian Hu and Weitao Yang.
Accelerating self-consistent ﬁeld convergence with the
augmented Roothaan–Hall energy function. The Journal of Chemical Physics, 132(5):054109,
February 2010. Publisher: American Institute of Physics."
REFERENCES,0.8855721393034826,"[17] Ian T. Jolliffe and Jorge Cadima. Principal component analysis: a review and recent de-
velopments. Philosophical Transactions of the Royal Society A: Mathematical, Physical and
Engineering Sciences, 374(2065):20150202, April 2016. Publisher: Royal Society."
REFERENCES,0.8905472636815921,"[18] M. F. Kasim and S. M. Vinko. Learning the exchange-correlation functional from nature with
fully differentiable density functional theory. Phys. Rev. Lett., 127:126403, Sep 2021."
REFERENCES,0.8955223880597015,[19] W. Kohn and L. J. Sham. Self-consistent equations including exchange and correlation effects.
REFERENCES,0.900497512437811,"Phys. Rev., 140:A1133–A1138, Nov 1965."
REFERENCES,0.9054726368159204,[20] Mark A. Kramer. Nonlinear principal component analysis using autoassociative neural networks.
REFERENCES,0.9104477611940298,"AIChE Journal, 37(2):233–243, 1991."
REFERENCES,0.9154228855721394,"[21] Konstantin N. Kudin, Gustavo E. Scuseria, and Eric Cancès. A black-box self-consistent ﬁeld
convergence algorithm: One step closer. The Journal of Chemical Physics, 116(19):8255–8261,
May 2002. Publisher: American Institute of Physics."
REFERENCES,0.9203980099502488,"[22] Susi Lehtola. Assessment of Initial Guesses for Self-Consistent Field Calculations. Superposi-
tion of Atomic Potentials: Simple yet Efﬁcient. Journal of Chemical Theory and Computation,
15(3):1593–1604, March 2019. Publisher: American Chemical Society."
REFERENCES,0.9253731343283582,"[23] Susi Lehtola, Frank Blockhuys, and Christian Van Alsenoy. An overview of self-consistent ﬁeld
calculations within ﬁnite basis sets. Molecules, 25(5):1218, March 2020. arXiv: 1912.12029."
REFERENCES,0.9303482587064676,"[24] Li Li, Stephan Hoyer, Ryan Pederson, Ruoxi Sun, Ekin D. Cubuk, Patrick Riley, and Kieron
Burke. Kohn-sham equations as regularizer: Building prior knowledge into machine-learned
physics. Phys. Rev. Lett., 126:036401, Jan 2021."
REFERENCES,0.9353233830845771,"[25] Richard M. Martin. Electronic Structure: Basic Theory and Practical Methods. Cambridge
University Press, 2004."
REFERENCES,0.9402985074626866,[26] Erkki Oja. Simpliﬁed neuron model as a principal component analyzer. Journal of mathematical
REFERENCES,0.945273631840796,"biology, 15(3):267–273, 1982."
REFERENCES,0.9502487562189055,"[27] David Pfau, James S. Spencer, Alexander G. D. G. Matthews, and W. M. C. Foulkes. Ab
initio solution of the many-electron schrödinger equation with deep neural networks. Phys. Rev.
Research, 2:033429, Sep 2020."
REFERENCES,0.9552238805970149,[28] Péter Pulay. Convergence acceleration of iterative sequences. the case of scf iteration. Chemical
REFERENCES,0.9601990049751243,"Physics Letters, 73(2):393–398, 1980."
REFERENCES,0.9651741293532339,"[29] Raghunathan Ramakrishnan, Pavlo O Dral, Matthias Rupp, and O Anatole von Lilienfeld.
Quantum chemistry structures and properties of 134 kilo molecules. Scientiﬁc Data, 1, 2014."
REFERENCES,0.9701492537313433,"[30] C. C. J. Roothaan. New developments in molecular orbital theory. Rev. Mod. Phys., 23:69–89,
Apr 1951."
REFERENCES,0.9751243781094527,"[31] Lars Ruddigkeit, Ruud van Deursen, Lorenz C. Blum, and Jean-Louis Reymond. Enumeration
of 166 billion organic small molecules in the chemical universe database gdb-17. Journal of
Chemical Information and Modeling, 52(11):2864–2875, 2012. PMID: 23088335."
REFERENCES,0.9800995024875622,"[32] Qiming Sun, Timothy C. Berkelbach, Nick S. Blunt, George H. Booth, Sheng Guo, Zhendong
Li, Junzi Liu, James D. McClain, Elvira R. Sayfutyarova, Sandeep Sharma, Sebastian Wouters,
and Garnet Kin-Lic Chan. Pyscf: the python-based simulations of chemistry framework. WIREs
Computational Molecular Science, 8(1):e1340, 2018."
REFERENCES,0.9850746268656716,"[33] Attila Szabo and Neil S Ostlund.
Modern quantum chemistry: introduction to advanced
electronic structure theory. Dover Publications, Inc., 1996."
REFERENCES,0.9900497512437811,"[34] Cheng Tang. Exponentially convergent stochastic k-pca without variance reduction. In H. Wal-
lach, H. Larochelle, A. Beygelzimer, F. d'Alché-Buc, E. Fox, and R. Garnett, editors, Advances
in Neural Information Processing Systems, volume 32. Curran Associates, Inc., 2019."
REFERENCES,0.9950248756218906,"[35] JH Van Lenthe, R Zwaans, Huub JJ Van Dam, and MF Guest. Starting scf calculations by
superposition of atomic densities. Journal of computational chemistry, 27(8):926–932, 2006."
