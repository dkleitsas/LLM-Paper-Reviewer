Section,Section Appearance Order,Paragraph
ABSTRACT,0.0,ABSTRACT
ABSTRACT,0.005681818181818182,"Pre-trained contextual language models are ubiquitously employed for language
understanding tasks, but are unsuitable for resource-constrained systems. Non-
contextual word embeddings are an efﬁcient alternative in these settings. Such
methods typically use one vector to encode multiple different meanings of a word,
and incur errors due to polysemy. This paper proposes a two-stage method to distill
multiple word senses from a pre-trained language model (BERT) by using attention
over the senses of a word in a context and transferring this sense information to ﬁt
multi-sense embeddings in a skip-gram-like framework. We demonstrate an effec-
tive approach to training the sense disambiguation mechanism in our model with a
distribution over word senses extracted from the output layer embeddings of BERT.
Experiments on the contextual word similarity and sense induction tasks show that
this method is superior to or competitive with state-of-the-art multi-sense embed-
dings on multiple benchmark data sets, and experiments with an embedding-based
topic model (ETM) demonstrates the beneﬁts of using this multi-sense embedding
in a downstream application."
INTRODUCTION,0.011363636363636364,"1
INTRODUCTION"
INTRODUCTION,0.017045454545454544,"While modern deep contextual word embeddings have dramatically improved the state-of-the-art in
natural language understanding (NLU) tasks, shallow noncontextual representation of words are more
practical solution in settings constrained by compute power or latency. In single-sense embeddings
such as word2vec or GloVe, the different meanings of a word are represented by the same vector,
which leads to the meaning conﬂation problem in the presence of polysemy. Arora et al. (2018)
showed that in the presence of polysemy, word embeddings are linear combination of the different
sense embeddings. This leads to another limitation in the word embeddings due to the triangle
inequality of vectors (Neelakantan et al., 2014). For apple, the distance between the words similar to
its two meanings, i.e. peach and software, will be less than the sum of their distances to apple. To
account for these and other issues that arise due to polysemy, several multi-sense embeddings model
have been proposed to learn multiple vector representations for each word."
INTRODUCTION,0.022727272727272728,"There are two major components for a multi-sense embedding model to be used in downstream tasks:
(1) sense selection to ﬁnd the correct sense of a word in context (2) sense representation for the
different meanings of a word. Two types of tasks are used to evaluate these two distinct abilities of
a word sense embedding model: word sense induction and contextual word similarity respectively.
In word sense induction, a model has to select the correct meaning of a word given its context. For
contextual word similarity, the model must be able to embed word senses with similar meaning close
to each other in the embedding space. Prior works on multi-sense embeddings have not been shown
to be effective on these two tasks simultaneously (e.g. AdaGram (Bartunov et al., 2016) works well
on word sense induction but not on contextual word similarity). We propose a method to distill
knowledge from a contextual embedding model, BERT (Devlin et al., 2018), for learning a word
sense model that can perform both tasks effectively. Furthermore, we show the advantage of sense
embeddings over word embeddings for training topic models."
INTRODUCTION,0.028409090909090908,"Pre-trained language models like BERT, GPT (Radford et al., 2019), RoBERTa (Liu et al., 2019)
etc. have been immensely successful in multiple natural language understanding tasks, but the
computational requirements and large latencies of these models inhibits their use in low-resource
systems. Static word embeddings or sense embeddings have signiﬁcantly lower computational"
INTRODUCTION,0.03409090909090909,Under review as a conference paper at ICLR 2022
INTRODUCTION,0.03977272727272727,"requirements and lower latencies compared to these large transformer models. In this work, we
use knowledge distillation (Hinton et al., 2015) to transfer the contextual information in BERT for
improving the learning of multi-sense word embedding models. Although there are several prior
works on distilling knowledge to smaller transformer models, to the best of our knowledge there has
been no work on using knowledge distillation to improve the training of word or sense embeddings
using pre-trained language models."
INTRODUCTION,0.045454545454545456,The contributions of this paper are:
INTRODUCTION,0.05113636363636364,"(i) A two-stage method for knowledge distillation from BERT to static word sense embeddings
(ii) A sense embedding model with state-of-the-art simultaneous performance on sense selection
and sense induction.
(iii) A demonstration of the increased efﬁcacy of using these multi-sense embedding in lieu of single
sense in embeddings in a downstream task, namely embedded topic modeling (Dieng et al.,
2020)."
RELATED WORK,0.056818181818181816,"2
RELATED WORK"
RELATED WORK,0.0625,"Here we describe a number of previous models trained to represent different meanings of words using
the word2vec framework. Prior works on model distillation using BERT are also discussed."
RELATED WORK,0.06818181818181818,"Reisinger & Mooney (2010) was the ﬁrst to learn vector representations for multiple senses of a word.
They extracted feature vectors of a word in different contexts from the context words and clustered
them to generate sense clusters for a word. The cluster centroids are then used as sense embeddings
or prototypes. Huang et al. (2012) similarly clustered the context representations of a word using
spherical k-means, and learned sense embeddings by training a neural language model."
RELATED WORK,0.07386363636363637,"Neelakantan et al. (2014) extended the skip-gram model to learn the cluster centers the sense
embeddings simultaneously. At each iteration, the context embedding is assigned to the nearest
cluster center and the sense embedding for that cluster is used to predict the context word. A
non-parametric method is employed to learn an appropriate number of clusters during training."
RELATED WORK,0.07954545454545454,"Tian et al. (2014) deﬁned the probability of a context word given a center word as a mixture model
with word senses representing the mixtures. They developed an EM algorithm for learning the
embeddings by extending the skip-gram likelihood function. Li & Jurafsky (2015) used the Chinese
Restaurent Process to learn the number of senses while training the sense embeddings. They evaluated
their embeddings on a number of downstream tasks but did not ﬁnd a consistent advantage in using
multi-sense embeddings over single-sense embeddings."
RELATED WORK,0.08522727272727272,"Athiwaratkun & Wilson (2017) represented words as multi-modal Gaussian distributions where the
different modes correspond to different senses of a word. To denote the similarity between two word
distributions, they used the expected likelihood kernel replacing cosine similarity for vectors."
RELATED WORK,0.09090909090909091,"Bartunov et al. (2016) proposed a non-parameteric Bayesian extension to the skip-gram model to learn
the number of senses of words automatically. They used the Dirichlet Process for inﬁnite mixture
modeling by assuming prior probabilities over the meanings of a word. Due to the intractibility of the
likelihood function, they derived a stochastic variational inference algorithm for the model."
RELATED WORK,0.09659090909090909,"Grzegorczyk & Kurdziel (2018) learned sense disambiguation embeddings to model the probability
of different word senses in a context. They used the gumbel-softmax method to approximate the
categorical distribution of sense probabilities. To learn the number of senses of a word, they added an
entropy loss and combined it with a pruning strategy."
RELATED WORK,0.10227272727272728,"Lee & Chen (2017) proposed the ﬁrst sense embedding model using a reinforcement learning
framework. They learned only sense embeddings and an efﬁcient sense selection module for assigning
the correct sense to a word in context."
RELATED WORK,0.10795454545454546,"Hinton et al. (2015) demonstrated the effectiveness of employing a large pre-trained teacher network
to guide the training of a smaller student network and named this method model distillation. Recently,
this technique has been used to train many efﬁcient transformer models from BERT. Sun et al. (2019);
Sanh et al. (2019); Jiao et al. (2019); Sun et al. (2020) have trained smaller BERT models by distilling
knowledge from pre-trained BERT models down to fewer layers. However, there seems to be no prior
work on improving word or sense embeddings by using pre-trained language models like BERT."
RELATED WORK,0.11363636363636363,Under review as a conference paper at ICLR 2022 di …
RELATED WORK,0.11931818181818182,context word wi -Δ
RELATED WORK,0.125,context word wi +Δ vi Mean c
RELATED WORK,0.13068181818181818,Softmax (c . di k)
RELATED WORK,0.13636363636363635,p(wi = wi k|c)
RELATED WORK,0.14204545454545456,center word wi
RELATED WORK,0.14772727272727273,"gi-Δ
gi+Δ"
RELATED WORK,0.1534090909090909,Lsense
RELATED WORK,0.1590909090909091,"gi+l
Sigmoid (gi+l . vi k)"
RELATED WORK,0.16477272727272727,k senses
RELATED WORK,0.17045454545454544,Figure 1: Sense embedding model
MODEL,0.17613636363636365,"3
MODEL"
MODEL,0.18181818181818182,"We ﬁrst describe our word sense embedding model. Then the details of extracting knowledge from
the contextual embeddings in BERT are discussed."
SENSE EMBEDDING MODEL,0.1875,"3.1
SENSE EMBEDDING MODEL"
SENSE EMBEDDING MODEL,0.19318181818181818,"We have a dataset D = {w1, w2, . . . , wN}, a sequence of N words from a vocabulary V . For a word
wi in our vocabulary, we assume K senses and for the k-th sense, we learn a sense embedding, vk
i
and a disambiguation embedding, dk
i . We also have a global embedding gi for each word wi."
SENSE EMBEDDING MODEL,0.19886363636363635,"Following the word2vec framework to train the sense embeddings, we slide a window of size
2∆+ 1 (center word and ∆words to its left and right) over the dataset. In a context window
C = {wi−∆, . . . , wi, . . . , wi+∆}, we deﬁne the conditional probability of a context word given the
center word, wi as"
SENSE EMBEDDING MODEL,0.20454545454545456,"p(wi+l|wi) = K
X"
SENSE EMBEDDING MODEL,0.21022727272727273,"k=1
p(wi+l|wi = wk
i )p(wi = wk
i |wi, C)
(1)"
SENSE EMBEDDING MODEL,0.2159090909090909,"where, l ∈[−∆, ∆], l ̸= 0."
SENSE EMBEDDING MODEL,0.2215909090909091,"Here the probability of a context word, wi+l given a sense embedding, wk
i is"
SENSE EMBEDDING MODEL,0.22727272727272727,"p(wi+l|wi = wk
i ) = σ(⟨gi+l, vk
i ⟩)
(2)"
SENSE EMBEDDING MODEL,0.23295454545454544,where σ(x) = (1 + exp(−x))−1 is the logistic sigmoid function.
SENSE EMBEDDING MODEL,0.23863636363636365,"The sense disambiguation vector selects the more relevant sense based on the context. The probability
of sense, k of word, wi in context C is deﬁned similar to the dot-product attention mechanism."
SENSE EMBEDDING MODEL,0.24431818181818182,"p(wi = wk
i |wi, C) =
exp(⟨dk
i , c⟩)
PK
k=1 exp(⟨dk
i , c⟩)
(3)"
SENSE EMBEDDING MODEL,0.25,"where, c is the context embedding for context C deﬁned by the average of the global embeddings of
the context words"
SENSE EMBEDDING MODEL,0.2556818181818182,"c =
1
2∆ ∆
X"
SENSE EMBEDDING MODEL,0.26136363636363635,"l=−∆
l̸=0"
SENSE EMBEDDING MODEL,0.26704545454545453,"gi+l
(4)"
SENSE EMBEDDING MODEL,0.2727272727272727,"Iterative sense disambiguation
Instead of using the global embeddings of the context words, we
can use their sense embeddings and sense probabilities to obtain context embedding with more
contextual information. The steps are following:"
SENSE EMBEDDING MODEL,0.2784090909090909,"Step 1 Using the context embedding from Eq.
4, compute the sense probability p(wi+l =
wk
i+l|wi+l, C) for each word in the context (l ∈[−∆, ∆], l ̸= 0)"
SENSE EMBEDDING MODEL,0.2840909090909091,Under review as a conference paper at ICLR 2022
SENSE EMBEDDING MODEL,0.2897727272727273,"Step 2 Replace the global embeddings in Eq. 4 with the weighted average of the sense embeddings
for each context word"
SENSE EMBEDDING MODEL,0.29545454545454547,"c =
1
2∆ ∆
X"
SENSE EMBEDDING MODEL,0.30113636363636365,"l=−∆
l̸=0 K
X"
SENSE EMBEDDING MODEL,0.3068181818181818,"k=1
vk
i+l p(wi+l = wk
i+l|wi+l, C)
(5)"
SENSE EMBEDDING MODEL,0.3125,"Similar to the skip-gram model (Mikolov et al., 2013), we employ the negative sampling method
to reduce the computational cost of a softmax over a huge vocabulary. The loss function for the
multi-sense embedding model is as follows"
SENSE EMBEDDING MODEL,0.3181818181818182,"Lsense = −
X wi∈D ∆
X"
SENSE EMBEDDING MODEL,0.32386363636363635,"l=−∆
l̸=0"
SENSE EMBEDDING MODEL,0.32954545454545453,"{log[p(wi+l|wi)] + n
X"
SENSE EMBEDDING MODEL,0.3352272727272727,"j=1
log[1 −p(wi+l,j|wi)]}
(6)"
SENSE EMBEDDING MODEL,0.3409090909090909,"where, n is the number of negative samples and wi+l,j is the j-th negative sample for the context
word wi+l."
TRANSFER KNOWLEDGE FROM BERT,0.3465909090909091,"3.2
TRANSFER KNOWLEDGE FROM BERT"
TRANSFER KNOWLEDGE FROM BERT,0.3522727272727273,"We use the contextual embeddings from BERT to improve our sense embedding model in 2 steps.
First, we learn the sense embeddings as a linear decomposition of the BERT contextual embedding
in a context window. Second, the sense embeddings from the ﬁrst step are used for knowledge
distillation to our sense embedding model."
BERT SENSE MODEL,0.35795454545454547,"3.2.1
BERT SENSE MODEL"
BERT SENSE MODEL,0.36363636363636365,"Let, the sense embeddings of word wi trained from BERT is {u1
i , . . . , uK
i } and the contextual
embedding for word, wi is bi - embedding from the output layer of BERT. Since BERT uses
WordPiece tokenization, some words are divided into smaller tokens. So each word has multiple
‘wordpiece’ tokens and output embeddings. To get the contextual embedding bi from these token
embeddings, we take the mean of all token output embeddings for a word. Similar to Eq. 3 the
probability of sense, k of word, wi in context C is"
BERT SENSE MODEL,0.3693181818181818,"p(wi = wk
i |wi, C) =
exp(⟨dk
i , cBERT⟩)
PK
k=1 exp(⟨dk
i , cBERT⟩)
(7)"
BERT SENSE MODEL,0.375,"where, context embedding"
BERT SENSE MODEL,0.3806818181818182,"cBERT =
1
2∆ ∆
X"
BERT SENSE MODEL,0.38636363636363635,"l=−∆
bi+l"
BERT SENSE MODEL,0.39204545454545453,"We want the weighted sum of the sense embeddings to be similar to the contextual embedding from
BERT. So, the loss function is"
BERT SENSE MODEL,0.3977272727272727,"LBERT =
X wi∈D  K
X"
BERT SENSE MODEL,0.4034090909090909,"k=1
p(wi = wk
i |wi, C)uk
i −bi  2 2
(8)"
KNOWLEDGE DISTILLATION FROM BERT,0.4090909090909091,"3.2.2
KNOWLEDGE DISTILLATION FROM BERT"
KNOWLEDGE DISTILLATION FROM BERT,0.4147727272727273,"Here we combine our multi-sense embedding model and the sense embeddings from BERT to transfer
the contextual information. To be precise, we want to improve the sense disambiguation module (3)
of the multi-sense embedding model using BERT. The key idea of knowledge distillation is that the
output from a complex network contains more ﬁne grained information than a class label. So we
want the student network to produce similar probabilities as the teacher network. Hinton et al. (2015)
suggested using a “softer"" version of the output from the teacher network using a temperature T over
the output logits zi:"
KNOWLEDGE DISTILLATION FROM BERT,0.42045454545454547,"pT (x) =
exp(zi/T)
P"
KNOWLEDGE DISTILLATION FROM BERT,0.42613636363636365,i exp(zi/T)
KNOWLEDGE DISTILLATION FROM BERT,0.4318181818181818,Under review as a conference paper at ICLR 2022
KNOWLEDGE DISTILLATION FROM BERT,0.4375,"where, x is the input."
KNOWLEDGE DISTILLATION FROM BERT,0.4431818181818182,"The loss for the knowledge transfer is the combination of the original loss (Eq. 6) and the cross-
entropy loss between the sense disambiguation probability from the sense embedding (Eq. 3) model
and the BERT model (Eq. 7).
L = Lsense + αLtransfer
(9) where"
KNOWLEDGE DISTILLATION FROM BERT,0.44886363636363635,"Ltransfer = −T 2
K
X"
KNOWLEDGE DISTILLATION FROM BERT,0.45454545454545453,"k=1
pT
sense(wi = wk
i |wi, C) log(pT
BERT(wi = wk
i |wi, C))
(10)"
KNOWLEDGE DISTILLATION FROM BERT,0.4602272727272727,"is the cross-entropy loss between the distilled sense distribution and the BERT sense distribution.
We multiply this loss by T 2 because the magnitudes of the gradients in the distillation loss scale by
1/T 2."
EXPERIMENTS,0.4659090909090909,"4
EXPERIMENTS"
EXPERIMENTS,0.4715909090909091,We conduct both qualitative and quantitative experiments on our trained sense embedding model.
DATASET AND TRANING,0.4772727272727273,"4.1
DATASET AND TRANING"
DATASET AND TRANING,0.48295454545454547,"We trained our models on the April 2010 snapshot of Wikipedia (Shaoul & Westbury, 2010) for fair
comparison with the prior multi-sense embedding models. This corpus has over 2 million documents
and about 990 million words. We also used the same vocabulary set as Neelakantan et al. (2014)."
DATASET AND TRANING,0.48863636363636365,"We selected the hyperparameters of our models by training them on a small part of the corpus and
using the loss metric on a validation set. For training, we set the context window size to ∆= 5. We
use 10 negative samples for each positive (word, context) pair. We do not apply subsampling like
word2vec since the BERT model was pre-trained on sentences without subsampling. We learn 3
sense embeddings for each word with a dimension of 300 for comparison with prior work. We use
the Adam (Kingma & Ba, 2014) optimizer with a learning rate of 0.001."
DATASET AND TRANING,0.4943181818181818,"The base model of BERT is used as the pre-trained language model. The PyTorch transformers (Wolf
et al., 2019) library is used for inference through the BERT-base model. With a batch size of 2048, it
takes 10 hours to train the sense embedding model on the wikipedia corpus for one epoch in a Tesla
V100 GPU. The sense embedding models with and without knowledge distillation are trained for 2
epochs over the full Wikipedia dataset. The weight for the knowledge distillation loss (Eq. 9) α = 1
is selected from {0.1, 0.5, 1.0}. Temperature parameter T is set to 4 by tuning over the range [2,6]."
NEAREST NEIGHBOURS,0.5,"4.2
NEAREST NEIGHBOURS"
NEAREST NEIGHBOURS,0.5056818181818182,"The nearest neighbours of words in context are shown in Table 1. Given the context words, the
context embedding is computed using Eq. 5 and sense probability distribution is computed with Eq.
3. The most probable sense is selected and then the cosine distance is computed with the global
embeddings of all words in the vocabulary. Table 1 also shows the values of the sense probability for
the word in context. The sense probabilities are close to 1 in most of the cases. This indicates that the
model learned a narrow distribution over the senses and it selects a single sense most of the time."
WORD SENSE INDUCTION,0.5113636363636364,"4.3
WORD SENSE INDUCTION"
WORD SENSE INDUCTION,0.5170454545454546,"This task evaluates the model’s ability to select the appropriate sense given a context. To assign
a sense to a word in context, we take the words in its context window and compute the context
embedding using Eq. 5. Then the sense probability from Eq. 3 gives the most probable sense for that
context."
WORD SENSE INDUCTION,0.5227272727272727,"We follow Bartunov et al. (2016) for the evaluation dataset and metrics. Three WSI datasets are used
in our experiments. The SemEval-2007 dataset is from SemEval-2007 Task 2 competition (Agirre &
Soroa, 2007). It contains 27232 contexts for 100 words collected from Wall Street Journal (WSJ)
corpus. The SemEval-2010 dataset is from the SemEval-2010 Task 14 competition (Manandhar &"
WORD SENSE INDUCTION,0.5284090909090909,Under review as a conference paper at ICLR 2022
WORD SENSE INDUCTION,0.5340909090909091,"Context
Sense:
Prob."
WORD SENSE INDUCTION,0.5397727272727273,Nearest Neighbours
WORD SENSE INDUCTION,0.5454545454545454,"macintosh is a family of computers from apple
1 : 0.99
apple, amstrad, macintosh, commodore, dos
apple software includes mac os x
2 : 0.963
microsoft, ipod, announced, software, mac
apple is good for health
3 : 0.999
apple, candy, strawberry, cherry, blueberry
the power plant is closing
3 : 1.0
mill, plant, cogeneration, factory, mw
the science of plant life
2 : 1.0
species, plant, plants, lichens, insects
the seed of a plant
1 : 0.99
thistle, plant, gorse, salvia, leaves
the cell membranes of an organism
3 : 1.0
depolarization, contractile, hematopoietic,
follicular, apoptosis
almost everyone has a cell phone now
2 : 0.99
phone, cell, phones, mobile, each
prison cell is not a pleasant place
1 : 0.99
prison, room, bomb, arrives, jail"
WORD SENSE INDUCTION,0.5511363636363636,"Table 1: Top 5 nearest neighbours of words in context based on cosine similarity. We also report the
index of the selected sense and its probability in that context."
WORD SENSE INDUCTION,0.5568181818181818,"Klapaftis, 2009) which contains 8915 contexts for 100 words. Finally, the SemEval-2013 dataset
comes from the SemEval-2013 Task 13 (Jurgens & Klapaftis, 2013) with 4664 contexts for 50 words."
WORD SENSE INDUCTION,0.5625,"For evaluation, we cluster the different contexts of a word according to the model’s predicted sense.
To evaluate the clustering of a set of points, we take pairs of points in the dataset and check if they
are in the same cluster according to the ground truth. For the SemEval competitions, two traditional
metrics were used: F-score and V-measure. But there are intrinsic biases in these methods. F-score
will be higher for a cluster with fewer centers while V-measure will be higher for clusters with a
large number of centers. So Bartunov et al. (2016) used ARI (Adjusted Rand Index) as the clustering
evaluation method since it does not suffer from these problems."
WORD SENSE INDUCTION,0.5681818181818182,"We report the ARI scores for MSSG (Neelakantan et al., 2014), MPSG (Tian et al., 2014) and
AdaGram (Bartunov et al., 2016) from Bartunov et al. (2016). Scores for disambiguated skip-gram
are collected from Grzegorczyk & Kurdziel (2018). We used the trained embeddings published by
MUSE Lee & Chen (2017) with Boltzmann method for this task. Single-sense models like skip-gram
cannot be used in this task since the task is to assign different senses to different contexts of a word.
Contextual models like BERT give an embedding for a word given its context, but this embedding is
not associated with a speciﬁc discrete meaning of the word. Therefore BERT models are not suitable
for comparison on this task."
WORD SENSE INDUCTION,0.5738636363636364,"MUSE shows strong performance in word similarity tasks (section 4.4) but fails to induce meaningful
senses given a context. The Disambiguated Skip-gram model was the best model on SemEval-2007
and SemEval-2010 datasets. Our sense embedding model performs better than MSSG and MPSG
models but there is a large gap with the state-of-the-art. We can see a signiﬁcant improvement in ARI
score (1.25x −2.25x) on the 3 datasets with knowledge distillation from BERT."
WORD SENSE INDUCTION,0.5795454545454546,"Model
SE-2007
SE-2010
SE-2013
MSSG
0.048
0.085
0.033
MPSG
0.044
0.077
0.033
AdaGram
0.069
0.097
0.061
MUSE
0.0009
0.01
0.006
Disamb. SG
0.077
0.117
0.045
SenseEmbed
0.053
0.076
0.054
BERTSense
0.179
0.179
0.155
BERTKDEmbed
0.145
0.144
0.133"
WORD SENSE INDUCTION,0.5852272727272727,"Table 2: ARI (Adjusted Rand Index) scores for word sense induction tasks. All models have
dimension of 300. The Adagram and Disambiguated skip-gram models learn variable number of
senses while all other models learn ﬁxed number of senses per word. All baseline results except
MUSE were collected from Grzegorczyk & Kurdziel (2018). SenseEmbed - Sense embedding model
without distillation, BERTSense - Sense embedding model (Sec. 3.2.1), BERTKDEmbed - Sense
embedding with distillation"
CONTEXTUAL WORD SIMILARITY,0.5909090909090909,"4.4
CONTEXTUAL WORD SIMILARITY"
CONTEXTUAL WORD SIMILARITY,0.5965909090909091,"Here, the task is to predict the similarity of the meaning of 2 words given the context they were used.
We use the Stanford Contextual Word Similarity (SCWS) dataset (Huang et al., 2012). This dataset"
CONTEXTUAL WORD SIMILARITY,0.6022727272727273,Under review as a conference paper at ICLR 2022
CONTEXTUAL WORD SIMILARITY,0.6079545454545454,"contains 2003 word pairs with their contexts, selected from Wikipedia. Spearman’s rank correlation
ρ is used to measure the degree of agreement between the human similarity scores and the model’s
similarity scores."
CONTEXTUAL WORD SIMILARITY,0.6136363636363636,"We use the following methods for predicting similarity of two words in context for a sense embedding
model following Reisinger & Mooney (2010): AvgSimC and MaxSimC. The AvgSimC measure
weighs the cosine similarity of all combinations of sense embeddings of 2 words with the probability
of those 2 senses given their respective contexts."
CONTEXTUAL WORD SIMILARITY,0.6193181818181818,"AvgSimC(w1, w2) =
1
K2 K
X i=1 K
X"
CONTEXTUAL WORD SIMILARITY,0.625,"j=1
p(w1 = wi
1|w1, C)p(w2 = wj
2|w2, C) cos(vi
1, vj
2)
(11)"
CONTEXTUAL WORD SIMILARITY,0.6306818181818182,"Here, the cosine similarity between sense i word 1 and sense j of word 2 is multiplied by the
probability of these 2 senses given their contexts."
CONTEXTUAL WORD SIMILARITY,0.6363636363636364,"The MaxSimC method selects the best sense for each context based on their probabilities and measures
their cosine similarity.
MaxSimC(w1, w2) = cos(vi
1, vj
2)
(12)
where"
CONTEXTUAL WORD SIMILARITY,0.6420454545454546,"i = arg
K
max
k=1 p(w1 = wk
1|w1, C)
and
j = arg
K
max
k=1 p(w2 = wk
2|w2, C)
(13)"
CONTEXTUAL WORD SIMILARITY,0.6477272727272727,"For comparison with baselines on this task, we use the single-sense skip-gram model (Mikolov et al.,
2013) with 300 and 900 dimensions since our word sense model has 3 embeddings per word with
300 dimensions each. We use the contextual models (BERT, DistilBERT) by selecting the token
embedding from the output layer for the word in a context window of 10 words to the left and right."
CONTEXTUAL WORD SIMILARITY,0.6534090909090909,"We report the score for the best performing model from each method in Table 3. For MUSE, the best
model (Boltzmann method) is used. 1. Our sense embedding model (SenseEmbed) is competitive in
AvgSimC measure whereas the knowledge distillation method signiﬁcantly improves the MaxSimC
score. We can infer from this result that the improvement in sense induction mechanism helped
learn better embeddings for each word sense. The best performing multi-sense embedding model’s
performance is very close to the 900 dimensional skip-gram embeddings (69.3 vs 68.4). The best
performing multi-sense model considering the average over the 2 measures is MUSE with an average
of 68.2. But it does not do well on the word sense induction task. Both contextual embedding models
(BERT and DistilBERT (Sanh et al., 2019)) obtained lower scores than our sense embedding model."
CONTEXTUAL WORD SIMILARITY,0.6590909090909091,"Model
AvgSimC
MaxSimC
Skip-Gram (300D)
65.2
65.2
Skip-Gram (900D)
68.4
68.4
MSSG
69.3
57.26
MPSG
65.4
63.6
AdaGram
61.2
53.8
MUSE
68.8
67.6
BERT-base
64.26
64.26
DistilBERT-base
66.51
66.51
SenseEmbed
67.6
54.7
BERTSense
62.6
64
BERTKDEmbed
68.6
67.2"
CONTEXTUAL WORD SIMILARITY,0.6647727272727273,"Table 3: Spearman rank correlation score (ρ × 100) on the SCWS dataset. Skip-gram is the only
single-sense embedding model. All other embedding models are 300 dimensional. Skip-gram results
are reported in Bartunov et al. (2016), MUSE score is obtained using their published model weights
and for other models the results are from the respective papers."
EFFECTIVENESS OF KNOWLEDGE DISTILLATION,0.6704545454545454,"4.5
EFFECTIVENESS OF KNOWLEDGE DISTILLATION"
EFFECTIVENESS OF KNOWLEDGE DISTILLATION,0.6761363636363636,"We can use the intermediate sense embeddings {u1
i , . . . , uK
i } from the BERT Sense model (Sec.
3.2.1) on word sense induction and contextual word similarity tasks. Since the BERT sense embed-
dings are trained using the output embeddings from BERT, we can use them as context embedding
for sense induction."
EFFECTIVENESS OF KNOWLEDGE DISTILLATION,0.6818181818181818,"1https://github.com/MiuLab/MUSE, we used trained embeddings published here"
EFFECTIVENESS OF KNOWLEDGE DISTILLATION,0.6875,Under review as a conference paper at ICLR 2022
EFFECTIVENESS OF KNOWLEDGE DISTILLATION,0.6931818181818182,"In the knowledge distillation method, we train our sense embedding model to mimick the sense
distribution from the BERT Sense model. Since the WSI task evaluates the predicted sense of the
model, this is the ideal task to quantify the quality of knowledge transfer from BERT to the sense
embedding model. The BERT Sense model is compared with the sense embedding model trained with
knowledge distillation in Table 4. As the BERT Sense model is trained with MSE (Mean Squared
Error) loss, it’s sense embeddings have the same dimensionality as BERT (768). From Table 4, we
see that the 300 dimensional sense embedding model can obtain 75% to 88% ARI scores without
using the 12 layer transformer model with 768 dimensional embeddings."
EFFECTIVENESS OF KNOWLEDGE DISTILLATION,0.6988636363636364,"Model
SE-2007
SE-2010
SE-2013
BERTSense
0.195
0.163
0.155
BERTKDEmbed
0.145
0.144
0.133"
EFFECTIVENESS OF KNOWLEDGE DISTILLATION,0.7045454545454546,"Table 4: Word sense induction using the BERT Sense model (768D) and knowledge distilled sense
embedding model (300D). ARI (Adjusted Rand Index) scores are reported."
EFFECTIVENESS OF KNOWLEDGE DISTILLATION,0.7102272727272727,"Model
AvgSimC
MaxSimC
BERTSense
62.6
64
BERTKDEmbed
68.6
67.2"
EFFECTIVENESS OF KNOWLEDGE DISTILLATION,0.7159090909090909,"Table 5: Comparison of BERT sense model with sense embedding trained with knowledge distillation.
Spearman rank correlation (ρ × 100) scores are reported on the SCWS dataset.
We also compare the BERT sense model with the sense embedding model on the contextual word
similarity task in Table 5. The lower correlation score from BERT Sense model indicates that these
embeddings are not better at sense representation although they learn to disambiguate senses. The
loss function in Eq. 8 helps the BERT Sense model to extract contextual sense information in BERT
output embeddings, but it is not optimal for training sense embeddings. The sense embedding model
combined with the knowledge gained from the BERT sense model learns to do both i) sense selection
and ii) sense representation effectively."
EMBEDDED TOPIC MODEL,0.7215909090909091,"4.6
EMBEDDED TOPIC MODEL"
EMBEDDED TOPIC MODEL,0.7272727272727273,"As sense embeddings help discern the meaning of a word in context, prior work has shown the beneﬁts
of using them to perform topic modeling in the embedding space (Dieng et al., 2020). We explore the
further beneﬁts of using embeddings which model the fact that one token can have multiple meanings.
Given a word embedding matrix ρ where the column ρv is the embedding of word v, Embedded
Topic Model (ETM) follows the generative process:"
EMBEDDED TOPIC MODEL,0.7329545454545454,"1. Draw topic proportions θd ∼LN(0, I)
2. For each word n in the document:"
EMBEDDED TOPIC MODEL,0.7386363636363636,"(a) Draw topic assignment zdn ∼Cat(θd)
(b) Draw the word wdn ∼softmax(ρT αzdn)"
EMBEDDED TOPIC MODEL,0.7443181818181818,"Here, αk is the topic embedding for topic k. These topic embeddings are used to obtain per-topic
distribution over the vocabulary of words."
EMBEDDED TOPIC MODEL,0.75,"We experimentally compare the performance of ETM models trained2 using skip-gram word em-
beddings, our sense embeddings and MSSG (Neelakantan et al., 2014) embeddings. Three senses
were trained for each word in both of the multi-sense models. A 15K document training set, 4.9K
test set, and 100 document validation set are sampled from the Wikipedia data set and used for the
experiments. During training using our sense embeddings and the MSSG multi-sense embeddings,
the sentences are represented using a ""bag-of-sense"" representation where each word is replaced
with its most probable sense , selected using a context window of 10 words; with the skip-gram
embeddings, bag-of-words representations are used."
EMBEDDED TOPIC MODEL,0.7556818181818182,"For evaluation, we measured the document completion perplexity, topic coherence, and topic diversity
for different vocabulary sizes. Document perplexity measures how well the topic model can be used"
EMBEDDED TOPIC MODEL,0.7613636363636364,"2Using code published by the authors of the original ETM model; see https://github.com/
adjidieng/ETM."
EMBEDDED TOPIC MODEL,0.7670454545454546,Under review as a conference paper at ICLR 2022
EMBEDDED TOPIC MODEL,0.7727272727272727,"to predict the second half of a document, given its ﬁrst half. Topic coherence measures the probability
of the top words in each topic to occur in the same documents, while topic diversity is a measure of
the uniqueness of the most common words in each topic. Higher topic coherence and topic diversity
indicate that a model performs better at extracting distinct topics; the product of the two measures is
used as a measure of topic quality:"
EMBEDDED TOPIC MODEL,0.7784090909090909,topic quality = topic coherence × topic diversity
EMBEDDED TOPIC MODEL,0.7840909090909091,"We follow (Dieng et al., 2020) in reporting the ratio of perplexity and topic quality as a measure of
the performance of the topic model: a lower ratio is better."
EMBEDDED TOPIC MODEL,0.7897727272727273,"We set the minimum document frequency to [5, 10, 30, 100] to change the vocabulary size. ETM is
initialized with pre-trained sense embeddings and then ﬁne tuned along with the topic embeddings.
We followed the hyperparameters reported in Dieng et al. (2020) to train all models. Since we use a
bag-of-sense model, ETM provides a probability distribution over the senses. We sum the probability
for the different senses of a word to obtain the probability for a word. In Figure 2, we show the ratio
of the document completion perplexity (normalized by vocabulary size) and the topic quality."
EMBEDDED TOPIC MODEL,0.7954545454545454,"10000
20000
30000
40000
50000
60000
70000
80000
Vocabulary size 1 2 3 4 5"
EMBEDDED TOPIC MODEL,0.8011363636363636,Quality-Normalized Perplexity
EMBEDDED TOPIC MODEL,0.8068181818181818,"ETM
ETM (sense)
ETM (mssg)
LDA"
EMBEDDED TOPIC MODEL,0.8125,"Figure 2: Comparison of word embeddings and sense embeddings for topic modeling with different
vocabulary sizes. Here, ETM (sense) - ETM with BERTKDEmbed, ETM (mssg) - ETM with MSSG."
EMBEDDED TOPIC MODEL,0.8181818181818182,"We see that both MSSG and BERTKDEmbed ETM models obtain lower perplexity-quality ratio
for higher vocabulary sizes compared to the single-sense (skip-gram) ETM model. This conﬁrms
that multi-sense embedding models produce Embedded Topic Models with higher performance.
BERTKDEmbed ETM also outperforms the other multi-sense ETM model."
CONCLUSION,0.8238636363636364,"5
CONCLUSION"
CONCLUSION,0.8295454545454546,"We present a multi-sense word embedding model for representing the different meanings of a word
using knowledge distillation from a pre-trained language model (BERT). Unlike prior work on
model distillation from contextual language models, we focus on extracting non-contextual word
senses; this is accomplished in an unsupervised manner using an intermediate attention-based sense
disambiguation model. We demonstrate start-of-the-art results on three word sense induction data sets
using fast and efﬁcient sense embedding models. This is the ﬁrst multi-sense word embedding model
with strong performance on both the word sense induction and contextual word similarity tasks. As a
downstream application, we show that the sense embedding model increases the performance of the
recent embedding-based topic model (Dieng et al., 2020). In future, we will explore the beneﬁts of
using pre-trained multi-sense embeddings as features for other downstream tasks, and tackle the task
of tuning the number of word meanings for each individual word."
CONCLUSION,0.8352272727272727,Under review as a conference paper at ICLR 2022
REFERENCES,0.8409090909090909,REFERENCES
REFERENCES,0.8465909090909091,"Eneko Agirre and Aitor Soroa. SemEval-2007 task 02: Evaluating word sense induction and discrim-
ination systems. In Proceedings of the Fourth International Workshop on Semantic Evaluations
(SemEval-2007), pp. 7–12, Prague, Czech Republic, June 2007. Association for Computational
Linguistics. URL https://www.aclweb.org/anthology/S07-1002."
REFERENCES,0.8522727272727273,"Sanjeev Arora, Yuanzhi Li, Yingyu Liang, Tengyu Ma, and Andrej Risteski. Linear algebraic
structure of word senses, with applications to polysemy. Transactions of the Association for
Computational Linguistics, 6:483–495, 2018. doi: 10.1162/tacl_a_00034. URL https://www.
aclweb.org/anthology/Q18-1034."
REFERENCES,0.8579545454545454,"Ben Athiwaratkun and Andrew Wilson. Multimodal word distributions. In Proceedings of the 55th
Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers), pp.
1645–1656, 2017."
REFERENCES,0.8636363636363636,"Sergey Bartunov, Dmitry Kondrashkin, Anton Osokin, and Dmitry Vetrov. Breaking sticks and
ambiguities with adaptive skip-gram. In artiﬁcial intelligence and statistics, pp. 130–138, 2016."
REFERENCES,0.8693181818181818,"Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. Bert: Pre-training of deep
bidirectional transformers for language understanding. arXiv preprint arXiv:1810.04805, 2018."
REFERENCES,0.875,"Adji B Dieng, Francisco JR Ruiz, and David M Blei. Topic modeling in embedding spaces. Transac-
tions of the Association for Computational Linguistics, 8:439–453, 2020."
REFERENCES,0.8806818181818182,"Karol Grzegorczyk and Marcin Kurdziel. Disambiguated skip-gram model. In Proceedings of
the 2018 Conference on Empirical Methods in Natural Language Processing, pp. 1445–1454,
Brussels, Belgium, October-November 2018. Association for Computational Linguistics. doi:
10.18653/v1/D18-1174. URL https://www.aclweb.org/anthology/D18-1174."
REFERENCES,0.8863636363636364,"Geoffrey Hinton, Oriol Vinyals, and Jeffrey Dean. Distilling the knowledge in a neural network.
In NIPS Deep Learning and Representation Learning Workshop, 2015. URL http://arxiv.
org/abs/1503.02531."
REFERENCES,0.8920454545454546,"Eric H Huang, Richard Socher, Christopher D Manning, and Andrew Y Ng. Improving word
representations via global context and multiple word prototypes. In Proceedings of the 50th Annual
Meeting of the Association for Computational Linguistics: Long Papers-Volume 1, pp. 873–882.
Association for Computational Linguistics, 2012."
REFERENCES,0.8977272727272727,"Xiaoqi Jiao, Yichun Yin, Lifeng Shang, Xin Jiang, Xiao Chen, Linlin Li, Fang Wang, and Qun Liu.
Tinybert: Distilling bert for natural language understanding. arXiv preprint arXiv:1909.10351,
2019."
REFERENCES,0.9034090909090909,"David Jurgens and Ioannis Klapaftis. SemEval-2013 task 13: Word sense induction for graded and
non-graded senses. In Second Joint Conference on Lexical and Computational Semantics (*SEM),
Volume 2: Proceedings of the Seventh International Workshop on Semantic Evaluation (SemEval
2013), pp. 290–299, Atlanta, Georgia, USA, June 2013. Association for Computational Linguistics.
URL https://www.aclweb.org/anthology/S13-2049."
REFERENCES,0.9090909090909091,"Diederik P Kingma and Jimmy Ba. Adam: A method for stochastic optimization. arXiv preprint
arXiv:1412.6980, 2014."
REFERENCES,0.9147727272727273,"Guang-He Lee and Yun-Nung Chen. Muse: Modularizing unsupervised sense embeddings. In
Proceedings of the 2017 Conference on Empirical Methods in Natural Language Processing, pp.
327–337, 2017."
REFERENCES,0.9204545454545454,"Jiwei Li and Dan Jurafsky. Do multi-sense embeddings improve natural language understanding? In
Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing, pp.
1722–1732, 2015."
REFERENCES,0.9261363636363636,"Yinhan Liu, Myle Ott, Naman Goyal, Jingfei Du, Mandar Joshi, Danqi Chen, Omer Levy, Mike
Lewis, Luke Zettlemoyer, and Veselin Stoyanov. Roberta: A robustly optimized bert pretraining
approach. arXiv preprint arXiv:1907.11692, 2019."
REFERENCES,0.9318181818181818,Under review as a conference paper at ICLR 2022
REFERENCES,0.9375,"Suresh Manandhar and Ioannis Klapaftis. SemEval-2010 task 14: Evaluation setting for word
sense induction & disambiguation systems. In Proceedings of the Workshop on Semantic Evalua-
tions: Recent Achievements and Future Directions (SEW-2009), pp. 117–122, Boulder, Colorado,
June 2009. Association for Computational Linguistics. URL https://www.aclweb.org/
anthology/W09-2419."
REFERENCES,0.9431818181818182,"Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg S Corrado, and Jeff Dean. Distributed representations
of words and phrases and their compositionality. In Advances in neural information processing
systems, pp. 3111–3119, 2013."
REFERENCES,0.9488636363636364,"Arvind Neelakantan, Jeevan Shankar, Alexandre Passos, and Andrew McCallum. Efﬁcient non-
parametric estimation of multiple embeddings per word in vector space. In Proceedings of the 2014
Conference on Empirical Methods in Natural Language Processing (EMNLP), pp. 1059–1069,
2014."
REFERENCES,0.9545454545454546,"Alec Radford, Jeff Wu, Rewon Child, David Luan, Dario Amodei, and Ilya Sutskever. Language
models are unsupervised multitask learners. 2019."
REFERENCES,0.9602272727272727,"Joseph Reisinger and Raymond J Mooney. Multi-prototype vector-space models of word meaning.
In Human Language Technologies: The 2010 Annual Conference of the North American Chapter
of the Association for Computational Linguistics, pp. 109–117. Association for Computational
Linguistics, 2010."
REFERENCES,0.9659090909090909,"Victor Sanh, Lysandre Debut, Julien Chaumond, and Thomas Wolf. Distilbert, a distilled version of
bert: smaller, faster, cheaper and lighter. arXiv preprint arXiv:1910.01108, 2019."
REFERENCES,0.9715909090909091,Cyrus Shaoul and Chris Westbury. The westbury lab wikipedia corpus. 2010.
REFERENCES,0.9772727272727273,"Siqi Sun, Yu Cheng, Zhe Gan, and Jingjing Liu. Patient knowledge distillation for bert model
compression. arXiv preprint arXiv:1908.09355, 2019."
REFERENCES,0.9829545454545454,"Zhiqing Sun, Hongkun Yu, Xiaodan Song, Renjie Liu, Yiming Yang, and Denny Zhou. Mobilebert: a
compact task-agnostic bert for resource-limited devices. arXiv preprint arXiv:2004.02984, 2020."
REFERENCES,0.9886363636363636,"Fei Tian, Hanjun Dai, Jiang Bian, Bin Gao, Rui Zhang, Enhong Chen, and Tie-Yan Liu. A probabilistic
model for learning multi-prototype word embeddings. In Proceedings of COLING 2014, the 25th
International Conference on Computational Linguistics: Technical Papers, pp. 151–160, 2014."
REFERENCES,0.9943181818181818,"Thomas Wolf, L Debut, V Sanh, J Chaumond, C Delangue, A Moi, P Cistac, T Rault, R Louf,
M Funtowicz, et al. Huggingface’s transformers: State-of-the-art natural language processing.
ArXiv, abs/1910.03771, 2019."
