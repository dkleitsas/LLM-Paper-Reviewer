Section,Section Appearance Order,Paragraph
ABSTRACT,0.0,ABSTRACT
ABSTRACT,0.001658374792703151,"Multi-head, key-value attention is the backbone of the widely successful Trans-
former model and its variants. This attention mechanism uses multiple parallel
key-value attention blocks (called heads), each performing two fundamental com-
putations: (1) search – selection of a relevant entity from a set via query-key
interactions, and (2) retrieval – extraction of relevant features from the selected
entity via a value matrix. Importantly, standard attention heads learn a rigid map-
ping between search and retrieval. In this work, we ﬁrst highlight how this static
nature of the pairing can potentially: (a) lead to learning of redundant parameters
in certain tasks, and (b) hinder generalization. To alleviate this problem, we pro-
pose a novel attention mechanism, called Compositional Attention, that replaces
the standard head structure. The proposed mechanism disentangles search and
retrieval and composes them in a dynamic, ﬂexible and context-dependent manner
through an additional soft competition stage between the query-key combination
and value pairing. Through a series of numerical experiments, we show that it
outperforms standard multi-head attention on a variety of tasks, including some
out-of-distribution settings. Through our qualitative analysis, we demonstrate that
Compositional Attention leads to dynamic specialization based on the type of
retrieval needed. Our proposed mechanism generalizes multi-head attention, allows
independent scaling of search and retrieval, and can easily be implemented in lieu
of standard attention heads in any network architecture.1"
INTRODUCTION,0.003316749585406302,"1
INTRODUCTION"
INTRODUCTION,0.004975124378109453,"Attention mechanisms have become integral parts of machine learning models across a variety of
domains. The modern notion of soft-attention was ﬁrst introduced in Bahdanau et al. (2015) for
machine translation to allow recurrent networks to perform well over long sequences. Since then,
attention has taken center stage in several models that forego recurrent networks altogether (i.e.
Transformers (Vaswani et al., 2017)), and has been leveraged in a wide variety of applications, like
natural language (Bahdanau et al., 2015; Vaswani et al., 2017; Devlin et al., 2018), computer vision
(Dosovitskiy et al., 2020) and physical reasoning (Ding et al., 2020; Locatello et al., 2020)."
INTRODUCTION,0.006633499170812604,"At the core of this success is a simple idea: enable task-driven ﬂexible connections between elements
of a sequence to extract and merge information. This process is implemented by attention (or
alignment) functions which, in their simplest form, take a reference or query entity and “pick”
(i.e. attend to) the most relevant input entities in a set of other entities. Modern attention systems
reﬁne this key principle in two meaningful ways. First, they utilize key-value attention, where the
attention function takes “queries” from the reference entity, matches them to “keys” attached to input
entities, and returns “values” representing a transformation of the selected entities. Second, they
allow multiple attention mechanisms to run in parallel, often called attention heads, allowing the
model to attend to multiple entities jointly, leading to increased expressivity. Despite these advances,
Transformer-like architectures still struggle on certain tasks (Fan et al., 2020; Nogueira et al., 2021),
including context-sensitive associations and out-of-distribution (OoD) generalization (Lake & Baroni,
2018b; Liska et al., 2018). They are still far from human-level performance on physical reasoning
and object-centric tasks (Webb et al., 2020). In an object-oriented world where entities have several
attributes, current multi-head attention mechanisms learn rigid search-retrieval associations which
lead to various limitations, as illustrated in Figure 1 and Section 2.3."
INTRODUCTION,0.008291873963515755,"†Correspondence authors sarthmit@gmail.com and g.lajoie@umontreal.ca
1Open-sourced implementation is available at https://github.com/sarthmit/Compositional-Attention"
INTRODUCTION,0.009950248756218905,Published as a conference paper at ICLR 2022
INTRODUCTION,0.011608623548922056,Search according
INTRODUCTION,0.013266998341625208,to color
INTRODUCTION,0.014925373134328358,Search 1
INTRODUCTION,0.01658374792703151,Retrieve location
INTRODUCTION,0.01824212271973466,What is the shape of the red object?
INTRODUCTION,0.01990049751243781,"Color: Red
Shape: Cube
Location: Top"
INTRODUCTION,0.02155887230514096,"Color: Green
Shape: Cone
Location: Middle"
INTRODUCTION,0.02321724709784411,"Color: Purple
Shape: Cylinder
Location: Bottom"
INTRODUCTION,0.024875621890547265,"What is the location of the cone object?
What is the location of the purple object?"
INTRODUCTION,0.026533996683250415,"Data 
Setting"
INTRODUCTION,0.028192371475953566,Multi-Head
INTRODUCTION,0.029850746268656716,Attention
INTRODUCTION,0.03150912106135987,"Query - Key 1
Value 1
Search according"
INTRODUCTION,0.03316749585406302,to color
INTRODUCTION,0.03482587064676617,No flexibility
INTRODUCTION,0.03648424543946932,"Retrieve
shape - Cube"
INTRODUCTION,0.03814262023217247,"Retrieve
 location - Middle
Search according"
INTRODUCTION,0.03980099502487562,to shape
INTRODUCTION,0.04145936981757877,Value 2
INTRODUCTION,0.04311774461028192,"Value 2
Search according"
INTRODUCTION,0.04477611940298507,to color
INTRODUCTION,0.04643449419568822,"Retrieve
 location - Bottom"
INTRODUCTION,0.04809286898839138,Compositional
INTRODUCTION,0.04975124378109453,Attention
INTRODUCTION,0.05140961857379768,Exists in
INTRODUCTION,0.05306799336650083,Head 1
INTRODUCTION,0.05472636815920398,Exists in
INTRODUCTION,0.05638474295190713,Head 2
INTRODUCTION,0.05804311774461028,Mapping doesn't exist
INTRODUCTION,0.05970149253731343,Need a new head - Redundant
INTRODUCTION,0.06135986733001658,Parameters!
INTRODUCTION,0.06301824212271974,Value 1
INTRODUCTION,0.06467661691542288,Value 2
INTRODUCTION,0.06633499170812604,"Retrieve 
shape - Cube"
INTRODUCTION,0.06799336650082918,Flexiblity
INTRODUCTION,0.06965174129353234,Value 1
INTRODUCTION,0.07131011608623548,"Value 2
Search according"
INTRODUCTION,0.07296849087893864,"to shape
Retrieve 
location - Middle"
INTRODUCTION,0.07462686567164178,Retrieve shape
INTRODUCTION,0.07628524046434494,Value 1
INTRODUCTION,0.0779436152570481,"Value 2
Search according"
INTRODUCTION,0.07960199004975124,to color
INTRODUCTION,0.0812603648424544,"Retrieve shape 
Don't need new"
INTRODUCTION,0.08291873963515754,parameters!
INTRODUCTION,0.0845771144278607,"Exists in
Search 1"
INTRODUCTION,0.08623548922056384,Exists in
INTRODUCTION,0.087893864013267,Value 1
INTRODUCTION,0.08955223880597014,Mapping exists
INTRODUCTION,0.0912106135986733,"Retrieve 
location - Bottom"
INTRODUCTION,0.09286898839137644,Query - Key 2
INTRODUCTION,0.0945273631840796,Query - Key 1
INTRODUCTION,0.09618573797678276,Query - Key 1
INTRODUCTION,0.0978441127694859,"Query - Key 2
Query - Key 1"
INTRODUCTION,0.09950248756218906,"(a)
(b)
(c)"
INTRODUCTION,0.1011608623548922,"Head 1
Head 2
Head 3"
INTRODUCTION,0.10281923714759536,"Search 1
Retrieval 1
Search 2
Retrieval 2
Retrieval 2"
INTRODUCTION,0.1044776119402985,"Figure 1: Motivation behind Compositional Attention. In a visual question answering setting, we
see that the “rigid” mapping between search (query-key) and retrieval (value) in multi-head attention
leads to redundant parameters being learned (middle row; (c)). In contrast, when the search and
retrieval mechanisms are disentangled and have a pairing set dynamically, these can be composed
efﬁciently without learning of redundant parameters (bottom row; (c)). For details, refer to Section 2.3"
INTRODUCTION,0.10613598673300166,"Addressing these shortcomings, there are several recent attention-enabled systems developed to allow
better decomposition and re-composition of knowledge (Goyal et al., 2019; 2021a;b), some of which
we discuss in Appendix A. However, most of these efforts hinge on purpose-built architectural
components that remain niche and often are difﬁcult to implement at scale. To complement these
efforts and build on the proven efﬁcacy of Transformers, our goal is to develop minimal modiﬁcations
to key-value attention to enable ﬂexible decomposition of computations found in attention heads, and
eliminate some parameter redundancy. Crucially, we aim for a mechanism that is easily implemented
and plug-and-play for existing Transformers (and all the models based on them)."
INTRODUCTION,0.1077943615257048,"We propose Compositional Attention, where the search and retrieval operations can be ﬂexibly com-
posed: the key-query search mechanism is no longer bound to a ﬁxed value retrieval matrix, instead it
is dynamically selected from a shared pool of value matrices accessible by several compositional
attention heads. This results in increased ﬂexibility and improved performance."
INTRODUCTION,0.10945273631840796,"Contributions Summary. (a) We formally describe the shortcomings of rigid search-and-retrieval
coupling in standard multi-head attention and empirically analyze them through experiments on an
illustrative synthetic task (Section 2.3 and 4.1). (b) We present Compositional Attention to disentangle
search and retrieval, and validate its advantages with a number of experiments (Section 3 and 4 ). (c)
Through a series of analyses, we demonstrate how our proposed attention mechanism decomposes
relational task structure as expected, and facilitates OoD generalization (Section 4). (d) We discuss the
computational complexity of our proposed method, which can be scaled in either of the components
(search and/or retrieval) independently, and is an easy drop-in replacement for multi-head attention in
standard Transformer-like architectures (Section 5)."
LIMITATIONS OF MULTI-HEAD ATTENTION,0.1111111111111111,"2
LIMITATIONS OF MULTI-HEAD ATTENTION"
LIMITATIONS OF MULTI-HEAD ATTENTION,0.11276948590381426,"In this section, we ﬁrst introduce the standard notation for multi-head attention (Vaswani et al., 2017)
in terms of search and retrieval mechanisms. We then highlight how the rigidity of the search-retrieval
leads to limitations and redundancies in the parametrization of neural networks."
MULTI-HEAD ATTENTION BASICS,0.11442786069651742,"2.1
MULTI-HEAD ATTENTION BASICS"
MULTI-HEAD ATTENTION BASICS,0.11608623548922056,"Key-Value Attention: Given a set of queries and key-value pairs, key-value attention computes
a scaled cosine similarity metric between each query and the set of keys. This similarity score
determines the contribution of each value in the output for the corresponding query."
MULTI-HEAD ATTENTION BASICS,0.11774461028192372,"More formally, given a set of input elements arranged in a matrix X ∈RN×d, we ﬁrst obtain
queries Q, keys K and values V using linear transformations on X with learnable projection matrices"
MULTI-HEAD ATTENTION BASICS,0.11940298507462686,Published as a conference paper at ICLR 2022 Input Input
MULTI-HEAD ATTENTION BASICS,0.12106135986733002,"Figure 2: Computation graph for Compositional Attention. We show computations for one search
and two retrievals. Multiple searches operate in parallel with different search but shared retrieval
parameters. The outputs are then fed to a linear network to give the ﬁnal output as in Equation 14"
MULTI-HEAD ATTENTION BASICS,0.12271973466003316,"Wq ∈Rd×dk, Wk ∈Rd×dk and Wv ∈Rd×dv respectively. This is given by"
MULTI-HEAD ATTENTION BASICS,0.12437810945273632,"Q = X Wq
K = X Wk
V = X Wv.
(1)"
MULTI-HEAD ATTENTION BASICS,0.12603648424543948,"For each query, a similarity score is computed with each key using a scaled cosine similarity (called
scaled dot-product) to give the attention weights which are used to soft-combine the values as"
MULTI-HEAD ATTENTION BASICS,0.12769485903814262,"Attention(Q, K, V ) = Softmax
QKT"
MULTI-HEAD ATTENTION BASICS,0.12935323383084577,"√dk
, axis = ‘keys’

V
(2)"
MULTI-HEAD ATTENTION BASICS,0.1310116086235489,"where
1
√dk is the scaling factor."
MULTI-HEAD ATTENTION BASICS,0.13266998341625208,"Multi-Head Attention: A multi-head attention mechanism combines multiple (say, h) independent
key-value attention mechanisms in parallel to provide the model the ability to jointly attend to
different positions and hence increase representational capacity. The outputs resulting from these
multiple heads are concatenated together and then linearly projected back to the input dimension
using a learnable matrix W o ∈Rhdv×d:"
MULTI-HEAD ATTENTION BASICS,0.13432835820895522,"Multi-Head = Concat

head1, head2 . . . headh

W o
(3)"
MULTI-HEAD ATTENTION BASICS,0.13598673300165837,"where headi = Attention(Qi, Ki, Vi)."
SEARCH AND RETRIEVAL COMPONENTS,0.13764510779436154,"2.2
SEARCH AND RETRIEVAL COMPONENTS"
SEARCH AND RETRIEVAL COMPONENTS,0.13930348258706468,"Here, we take the multi-head attention deﬁned in Section 2.1 and decompose it into its two funda-
mental components - Search and Retrieval."
SEARCH AND RETRIEVAL COMPONENTS,0.14096185737976782,"Search: A search is parameterized by the query and key matrices, that is, Wq and Wk respectively.
These parameters deﬁne a notion of compatibility metric between pairs of element xj and xk ∈X:"
SEARCH AND RETRIEVAL COMPONENTS,0.14262023217247097,"Search

Q, K

= Softmax
QKT"
SEARCH AND RETRIEVAL COMPONENTS,0.14427860696517414,"√dk
, axis = ‘keys’

(4)"
SEARCH AND RETRIEVAL COMPONENTS,0.14593698175787728,"where Q = X Wq and K = X Wk. The above computation gives the compatibility between an
element xj with other elements xk’s under the compatibility metric deﬁned by the Search parameters."
SEARCH AND RETRIEVAL COMPONENTS,0.14759535655058043,"Retrieval: A retrieval is parameterized by a value matrix Wv describing the kind of features in the
input elements in X that are relevant and need to be accessed for the downstream task:"
SEARCH AND RETRIEVAL COMPONENTS,0.14925373134328357,"Retrieval

Search
 
Q, K

, V

= Search

Q, K

V
(5)"
SEARCH AND RETRIEVAL COMPONENTS,0.15091210613598674,"where V = X Wv. Note that each Retrieval deﬁnes the kind of attributes to access from input x′
ks
and can take any Search result as its input."
SEARCH AND RETRIEVAL COMPONENTS,0.15257048092868988,"Multi-head Attention as a rigid pairing of Searches and Retrievals: Given the above deﬁnitions,
one can see how standard multi-head attention amounts to a rigid pairing of Searches and Retrievals,
such that an end-to-end function of ﬁxed attribute pairs are learned at optimization. Indeed, h heads
are composed of h different searche-retrieval pairs – the ith retrieval is performed only on the ith
search. Multi-head attention thus amounts to a special case of Equation 4 and 5"
SEARCH AND RETRIEVAL COMPONENTS,0.15422885572139303,"headi = Retrieval

Search
 
Qi, Ki

, Vi

(Note: Same subscript i)
(6)"
SEARCH AND RETRIEVAL COMPONENTS,0.1558872305140962,Published as a conference paper at ICLR 2022 -0.2 -0.8 0.1 0.2
SEARCH AND RETRIEVAL COMPONENTS,0.15754560530679934,"0
1
0
1 0.5 -0.1 -0.9 -0.3"
SEARCH AND RETRIEVAL COMPONENTS,0.15920398009950248,"0
1
1
0 0.0 0.3 0.7 0.6"
SEARCH AND RETRIEVAL COMPONENTS,0.16086235489220563,"1
0
0
1 -1.0 0.4 -0.8 0.9"
SEARCH AND RETRIEVAL COMPONENTS,0.1625207296849088,"0
1
0
1"
SEARCH AND RETRIEVAL COMPONENTS,0.16417910447761194,Search 1 Feature
SEARCH AND RETRIEVAL COMPONENTS,0.16583747927031509,Search 2 Feature
SEARCH AND RETRIEVAL COMPONENTS,0.16749585406301823,Retrieval 1 Feature
SEARCH AND RETRIEVAL COMPONENTS,0.1691542288557214,Retrieval 2 Feature
SEARCH AND RETRIEVAL COMPONENTS,0.17081260364842454,"Search 1
Search 2"
SEARCH AND RETRIEVAL COMPONENTS,0.1724709784411277,Legend
SEARCH AND RETRIEVAL COMPONENTS,0.17412935323383086,Hyper-parameters
SEARCH AND RETRIEVAL COMPONENTS,0.175787728026534,"Retrieve
according to"
SEARCH AND RETRIEVAL COMPONENTS,0.17744610281923714,"Output
Retrieve
according"
SEARCH AND RETRIEVAL COMPONENTS,0.1791044776119403,"to      
In Distribution
Out of Distribution
0.0 0.2 0.4 0.6 0.8 1.0 1.2 Loss"
SEARCH AND RETRIEVAL COMPONENTS,0.18076285240464346,Task: 2 Search 4 Retrieval
SEARCH AND RETRIEVAL COMPONENTS,0.1824212271973466,"In Distribution
Out of Distribution"
SEARCH AND RETRIEVAL COMPONENTS,0.18407960199004975,Task: 4 Search 8 Retrieval
SEARCH AND RETRIEVAL COMPONENTS,0.1857379767827529,"In Distribution
Out of Distribution"
SEARCH AND RETRIEVAL COMPONENTS,0.18739635157545606,Task: 4 Search 16 Retrieval
SEARCH AND RETRIEVAL COMPONENTS,0.1890547263681592,"Model
Multi-Head
Compositional"
SEARCH AND RETRIEVAL COMPONENTS,0.19071310116086235,"Figure 3: Left: Contextual Retrieval Task Illustration. Dynamic search and retrieval based on
search, retrieval and retrieval context features. Each element has a corresponding output but we
show it only for xi for brevity. Right: Performance on Contextual Retrieval Task. Here, we
compare our proposed model against standard Multi-Head attention model (lower is better) on various
setups of the task. Our proposed model outperforms the baseline in both in-distribution as well as
out-of-distribution settings."
SEARCH AND RETRIEVAL COMPONENTS,0.19237147595356552,"Viewing multi-head attention through these ﬁxed search-retrieval pairings foreshadows a possible
generalization of searches and retrievals which we propose below. Before doing so, however, we ﬁrst
highlight speciﬁc shortcomings of standard multi-head attention."
SHORTCOMINGS OF RIGID ASSOCIATIONS,0.19402985074626866,"2.3
SHORTCOMINGS OF RIGID ASSOCIATIONS"
SHORTCOMINGS OF RIGID ASSOCIATIONS,0.1956882255389718,"As described in Section 2.2, multi-head attention considers a ﬁxed pairing between searches and
retrievals. While it has been widely successful across a variety of domains, we hypothesize that
this rigid mapping is not always ideal and can sometimes lead to reduced capacity and learning of
redundant parameters, missing an opportunity for better systematic generalization. We note that the
search associated with each head deﬁnes a feature (deﬁned by query-key matrices Wq and Wk) based
on which compatibility between objects is evaluated. Further, each head’s retrieval allows the model
to access a particular feature (deﬁned by value matrix Wv) from the searched objects. Following this,
we showcase two types of redundancies that can arise in multi-head attention: (a) Search Redundancy
which leads to learning of redundant query-key matrices and (b) Retrieval Redundancy which leads
to learning of redundant value matrices."
SHORTCOMINGS OF RIGID ASSOCIATIONS,0.19734660033167495,"We highlight these two redundancies jointly using a simple example illustrated in Figure 1, where
three objects with attributes: shape, color and location, are the subject of different questions. In (a)
the model has to learn to search according to color and correspondingly retrieve shape information
while in (b) it has to search according to shape and retrieve location. On this task, standard multi-head
attention (middle row) should learn two heads, one each for (a) and (b). To answer the question in
(c), the model has to search according to color and retrieve location. While searching according to
color exists in (a) learned by Head 1 and retrieving location exists in (b) learned by Head 2, there is
no way to combine them. Thus, another head is needed to obtain the search of Head 1 and retrieval of
Head 2. This leads to parameter redundancy and a missed opportunity to factorize knowledge more
efﬁciently, since these pieces of learned knowledge individually exist in Head 1 and Head 2 already."
SHORTCOMINGS OF RIGID ASSOCIATIONS,0.19900497512437812,"The scenario in Figure 1 may look highly idealized because multi-head attention might not limit
searches/retrievals on single features and is capable of doing more nuanced soft-combinations. While
this may be the case for this simple example, what it highlights is the danger of rigid learned
associations that limits re-composition of learned pieces of knowledge, leads to redundant parameters
and potentially limits OoD generalization, irrespective of what the model learns. We discuss this in
more detail in Appendix B.1, and empirically explore these principles in a purpose built diagnosis
task we call Contextual Retrieval Task, in Section 4.1. Finally, we reiterate that multi-head attention
with h heads can only represent up to h unique (Search – Retrieval) pairings. In what follows, we
propose to alleviate this fundamental limitation by allowing for S × R such pairings, with S the
number of search types and R the number of retrieval types."
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.20066334991708126,"3
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL"
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.2023217247097844,"We propose a novel attention mechanism that relaxes static search-retrieval pairing in favour of a more
ﬂexible and dynamic mapping. To do this, we let go of the concept of “head” altogether and instead
propose independent and recombinable Searches and Retrievals, as deﬁned in Section 2.2. The central
innovation lies in the way these two components are combined: with query-key attention on retrievals."
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.20398009950248755,Published as a conference paper at ICLR 2022
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.20563847429519072,Retrieval 1
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.20729684908789386,Retrieval 2
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.208955223880597,Retrieval 3
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.21061359867330018,Retrieval 4
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.21227197346600332,Search 1
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.21393034825870647,Search 2
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.2155887230514096,"0.26
0.28
0.24
0.22"
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.21724709784411278,"0.26
0.27
0.23
0.23"
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.21890547263681592,All Data
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.22056384742951907,Retrieval 1
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.2222222222222222,Retrieval 2
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.22388059701492538,Retrieval 3
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.22553897180762852,Retrieval 4
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.22719734660033167,"0.2
0.21
0.31
0.28"
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.22885572139303484,"0.29
0.29
0.21
0.21"
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.23051409618573798,OoD Train Data
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.23217247097844113,Retrieval 1
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.23383084577114427,Retrieval 2
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.23548922056384744,Retrieval 3
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.23714759535655058,Retrieval 4
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.23880597014925373,"0.46
0.49
0.023
0.022"
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.24046434494195687,"0.21
0.22
0.29
0.28"
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.24212271973466004,OoD Test Data 0.0 0.1 0.2 0.3 0.4 0.5
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.24378109452736318,"Figure 4: Efﬁcient Composition in Contextual Retrieval Task. We plot the average search-retrieval
activation statistics across data with Left: All possible value combinations, Middle: Subset of value
combinations used for training, and Right: Remaining subset of value combinations used for OoD
testing. The activation statistics switch distinctly between OoD training and testing and stay around
the average when all possible subsets are shown, thus highlighting good specialization."
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.24543946932006633,"Similar to heads, we start by deﬁning S parallel search mechanisms. That is, we have S different
query-key parameterizations Wqi and Wki respectively. The output of each search is as deﬁned in
Equation 4. In essence, for each search i, we get
Qi = X Wqi
and
Ki = X Wki
(7)"
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.2470978441127695,"Searchi = Softmax
QiKT
i
√dk
, axis = ‘keys’

(8)"
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.24875621890547264,"Next, we deﬁne R different retrieval mechanisms, which correspond to the R different Wvj matrices.
These matrices are used to obtain different attributes from the input. Formally, this is summarized as
Vj = X Wvj
(9)
where Vj highlights accessing of different attributes. Then, corresponding to each search, all possible
retrievals are done. This is similar to Equation 5 and is deﬁned as
Retrievalij = Searchi Vj
(10)
for all i, j. This step gives us all the hypothetical retrievals for each search and out of this, one
retrieval per search needs to be instantiated. This instantiation is done through a secondary attention
mechanism computed using retrieval queries Qi and retrieval keys Kij, that are obtained as"
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.2504145936981758,"Qi = X W qi
Kij = Retrievalij W k
(11)"
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.25207296849087896,"where the parameter W qi ∈Rd×dr is a different matrix for each search indexed by i and, together
with W k, is tasked with driving the pairing between search and retrieval. We broadcast the matrix Qi
from RN×dr to RN×1×dr and deﬁne Ki ∈RN×R×dr by"
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.2537313432835821,"Ki = Concat
"
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.25538971807628524,"Ki1, Ki2, . . . , KiR

.
(12)"
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.2570480928689884,"Thus, through these retrieval queries and keys, the required instantiation per search is done as"
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.25870646766169153,CAtti = Softmax 
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.2603648424543947,"QiKi
T
√dr
, axis = ‘retrieval’ !"
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.2620232172470978,"|
{z
}
Value Scores"
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.263681592039801,"Retrievalij
(13)"
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.26533996683250416,"where the transpose is over the last two axes. Hence, for each search i, the softmax gives attention
weights over all possible retrievals and the winning retrieval is instantiated through this soft attention
mechanism. Finally, similar to multi-head attention, the outputs of these parallel searches are
combined by concatenating them and passing them through a linear network:"
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.2669983416252073,"CompositionalAttention = Concat

CAtt1, CAtt2, . . . , CAttS

W o
(14)"
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.26865671641791045,"where W o ∈RSdv×d. Note that in this mechanism, the choice of retrieval for each search is not ﬁxed,
and instead is dynamically modulated by Qi and Ki respectively. We refer the readers to Figure 2 for
a visual depiction of the computation graph."
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.2703150912106136,"Compositional Attention allows the model to have (a) Different number of searches and retrievals, i.e.
S and R respectively, (b) Dynamic selection of shared retrievals for each search and (c) Representation
capacity of S × R (Search – Retrieval) pairings. Thus, we highlight that Compositional Attention
disentangles search and retrieval and solves the redundancies of multi-head attention (Section 2.3)."
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.27197346600331673,Published as a conference paper at ICLR 2022
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.2736318407960199,"Algorithm
Searches
Retrievals
Unary Accuracy
Binary Accuracy
Ternary Accuracy"
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.2752902155887231,"Transformer
4
4
98.6±0.2
84.4±5.3
64.9±3.3
8
8
98.5±0.2
84.5±6.0
65.4±4.7"
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.2769485903814262,"Compositional Transformer
4"
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.27860696517412936,"1
98.7±0.2
86.8±2.8
66.4±1.3
2
98.8±0.1
88.2±3.2
66.9±1.8
3
98.9±0.2
89.8±1.1
67.1±1.5
4
98.6±0.3
84.9±4.5
64.8±4.1"
COMPOSITIONAL ATTENTION - DISENTANGLING SEARCH AND RETRIEVAL,0.2802653399668325,"Table 1: Performance on Sort of CLEVR. We highlight that our proposed model outperforms the
baseline across the different question types even with lower number of searches and/or retrievals."
EXPERIMENTS,0.28192371475953565,"4
EXPERIMENTS"
EXPERIMENTS,0.2835820895522388,"For all our experiments, we consider the standard Transformer model (Vaswani et al., 2017) with
parameter sharing across layers (Dehghani et al., 2018) as our baseline. For visual tasks, we consider
Vision Transformer introduced by Dosovitskiy et al. (2020) as our baseline. Our proposed model,
Compositional Transformer, uses the Compositional Attention mechanism as a drop-in replacement
for the multi-head attention block while keeping the rest of the architecture same. We also perform
ablations on number of retrievals, model sizes and complexities as discussed in Appendix B.7"
EXPERIMENTS,0.28524046434494194,"Through our experiments, we show that (a) ﬂexible composition of search and retrieval leads to better
in distribution and out of distribution performance, and (b) our proposed model can achieve similar
or better performance, often with fewer retrievals."
CONTEXTUAL RETRIEVAL TASK,0.28689883913764513,"4.1
CONTEXTUAL RETRIEVAL TASK"
CONTEXTUAL RETRIEVAL TASK,0.2885572139303483,"As a start, we consider a purpose built task to better understand how learned attribute mappings may
be recombined by attention mechanisms. Our goal in introducing this experiment is to explicitly
control search and retrieval attributes that allows for (1) systematic testing for OoD generalization,
and (2) direct comparisons between expected/ground-truth and learned activation patterns. Thus,
we propose a supervised set-based regression task where objects with several features need to
be selectively associated with one another (e.g. ﬁnd the closest blue object), and distinct feature
values must be returned based on inherent contexts (e.g. report shape if position is middle and size
otherwise). Our task seeks a minimal setting where such associations can be present, and involves
a collection of N objects {xi}N
1=1, each with scalar-valued features, as illustrated in Figure 3 (left).
Corresponding to each object xi, the output is a scalar yi = S
X"
CONTEXTUAL RETRIEVAL TASK,0.2902155887230514,"s=1
αsvi
s,
(15)"
CONTEXTUAL RETRIEVAL TASK,0.29187396351575456,"where αs are randomly selected ﬁxed weights, and vi
s are the results of S comparative searches
pairing object xi with other objects in the set. To describe these comparative searches, we ﬁrst
outline the composition of each object. Here,"
CONTEXTUAL RETRIEVAL TASK,0.2935323383084577,"xi = {(zi
1, . . . , zi
S), (˜zi
1, . . . , ˜zi
R), (ri
1, . . . , ri
S)},
(16)"
CONTEXTUAL RETRIEVAL TASK,0.29519071310116085,"where zi ∈RS and ˜zi ∈RR contain S “search” features and R “retrieval” features respectively,
and one-hot vectors ri
s ∈{0, 1}R contain the retrieval preference of object xi for search s."
CONTEXTUAL RETRIEVAL TASK,0.296849087893864,"Search Step: Each object xi searches for S objects in parallel that are closest to it based on the search
feature. This operation is given by"
CONTEXTUAL RETRIEVAL TASK,0.29850746268656714,"ji
s = arg min
j̸=i"
CONTEXTUAL RETRIEVAL TASK,0.30016583747927034,"zi
s −zj
s

(17)"
CONTEXTUAL RETRIEVAL TASK,0.3018242122719735,"where s denotes the sth search feature, and hence there are S parallel independent searches with ji
s
denoting the winner of search s for object xi."
CONTEXTUAL RETRIEVAL TASK,0.3034825870646766,"Retrieval Step: Corresponding to each winner ji
s, the retrieval context ri
s dictates which retrieval
feature to access from the ji
s object. This is given by"
CONTEXTUAL RETRIEVAL TASK,0.30514096185737977,"vi
s = ˜zji
s
ris
(18)"
CONTEXTUAL RETRIEVAL TASK,0.3067993366500829,Published as a conference paper at ICLR 2022
CONTEXTUAL RETRIEVAL TASK,0.30845771144278605,"Algorithm
Searches
Retrievals
CIFAR10
FashionMNIST
SVHN
Equilateral Triangle"
CONTEXTUAL RETRIEVAL TASK,0.3101160862354892,"Transformer
4
4
77.2±0.3
89.4±0.0
85.0±0.1
96.8±0.1"
CONTEXTUAL RETRIEVAL TASK,0.3117744610281924,"Compositional Transformer
4"
CONTEXTUAL RETRIEVAL TASK,0.31343283582089554,"1
77.5±0.5
89.9±0.0
85.0±0.3
97.0±0.0
2
77.9±0.2
89.9±0.4
86.0±0.7
97.2±0.3
3
78.0±0.1
89.9±0.4
85.2±0.3
97.1±0.4
4
77.6±0.2
90.0±0.0
86.0±0.5
96.9±0.6"
CONTEXTUAL RETRIEVAL TASK,0.3150912106135987,"Table 2: Performance on Multi-Task Image Classiﬁcation. We highlight that our proposed model
outperforms the baseline across different number of retrievals."
CONTEXTUAL RETRIEVAL TASK,0.3167495854063018,"Training is done by minimizing the L1 loss on {yi}N
i=1 targets (see Appendix C.1 for details). While
seemingly synthetic, this task considers multiple objects with various attributes and tests the model’s
ability to ﬂexibly compose searches and retrievals. This is tightly associated with real world scenarios
but in a controlled low dimensional setting. We provide a visualization of the task in Figure 3 (left)."
CONTEXTUAL RETRIEVAL TASK,0.31840796019900497,"OoD Setup: Since all searches share the different values to be retrieved, we construct an out-of-
distribution version of the dataset by showing only certain ground truth search-retrieval combinations
in training and others during testing. More speciﬁcally, for a task with S searches and R retrievals
there are RS possible unique value combinations which deﬁne the retrieval preference. For the OoD
setup, we use a fraction of them in the training set and the rest in the test set. We stress that only
models that factorize search and retrieval efﬁciently and compose them ﬂexibly can do well on the
unseen search-retrieval combinations."
CONTEXTUAL RETRIEVAL TASK,0.3200663349917081,"Quantitative Results: We experiment on a range of searches S and retrievals R. Since this task
only requires one set of parallel searches, we use one-layered attention models for experiments.
We observe that compositional attention consistently outperforms multi-head attention across a
wide range of task hyperparameters in both in-distribution as well as OoD settings (Figure 3 –
right). Further, our proposed method outperforms the baseline across various model complexities."
CONTEXTUAL RETRIEVAL TASK,0.32172470978441126,Retrieval 1
CONTEXTUAL RETRIEVAL TASK,0.32338308457711445,Retrieval 2
CONTEXTUAL RETRIEVAL TASK,0.3250414593698176,Retrieval 3
CONTEXTUAL RETRIEVAL TASK,0.32669983416252074,Retrieval 4
CONTEXTUAL RETRIEVAL TASK,0.3283582089552239,Value 1
CONTEXTUAL RETRIEVAL TASK,0.33001658374792703,Value 2
CONTEXTUAL RETRIEVAL TASK,0.33167495854063017,Value 3
CONTEXTUAL RETRIEVAL TASK,0.3333333333333333,Value 4
CONTEXTUAL RETRIEVAL TASK,0.33499170812603646,Ground Truth Value
CONTEXTUAL RETRIEVAL TASK,0.33665008291873966,"0.07
0.93
0.00
0.00"
CONTEXTUAL RETRIEVAL TASK,0.3383084577114428,"0.61
0.38
0.00
0.00"
CONTEXTUAL RETRIEVAL TASK,0.33996683250414594,"0.00
0.00
0.00
1.00"
CONTEXTUAL RETRIEVAL TASK,0.3416252072968491,"0.00
0.00
1.00
0.00"
CONTEXTUAL RETRIEVAL TASK,0.34328358208955223,Task: 1 Search 4 Retrieval 0.0 0.2 0.4 0.6 0.8
CONTEXTUAL RETRIEVAL TASK,0.3449419568822554,"Figure 5: Retrieval Specialization on
Contextual Retrieval Task. The pro-
posed model learns to specialize its own
retrieval (X-axis) based on ground truth
values (Y-axis)."
CONTEXTUAL RETRIEVAL TASK,0.3466003316749585,"Analysis: We visualize the value scores from Equation 13,
aggregated over all searches and entities and contrast them
with ground-truth retrievals that the task provides. Fig-
ure 5 shows that the model specializes on what features
to retrieve. We also analyse the search-retrieval pairings
by taking a model trained on a subset of all possible value
combinations and plotting its activation statistics across (1)
all possible value combinations, (2) value combinations
seen during training, and (3) value combinations seen dur-
ing OoD testing in Figure 4. As expected, we see that
activation statistics average out in (1), as each search fea-
tures are called on in a uniform i.i.d. manner. In contrast,
we see increasing specialization of activation pattern for
(2) and (3), respectively, consistent with selective recombi-
nation made possible by compositional attention. The key
ﬁnding from this analysis is that compositional attention
is dynamically specializing over value retrievals, allowing
for better generalization on unseen value combinations in
the OoD setup."
CONTEXTUAL RETRIEVAL TASK,0.3482587064676617,"Appendix C.1 contains further details about the task, hyperparameters and further ablations on model
complexities and specialization visualizations across different task settings."
RELATIONAL REASONING IN SORT-OF-CLEVR,0.34991708126036486,"4.2
RELATIONAL REASONING IN SORT-OF-CLEVR"
RELATIONAL REASONING IN SORT-OF-CLEVR,0.351575456053068,"Sort-of-CLEVR (Santoro et al., 2017) is a Visual Question-Answering (VQA) task that tests the
model’s understanding of the scene by posing questions based on the properties of the objects and
their relations with each other. The task consists of three types of questions: (a) Unary, which are
based on properties of single objects, (b) Binary, which are based on the relationship between two
objects, and (c) Ternary, which are based on relationship between three objects."
RELATIONAL REASONING IN SORT-OF-CLEVR,0.35323383084577115,Published as a conference paper at ICLR 2022
RELATIONAL REASONING IN SORT-OF-CLEVR,0.3548922056384743,"m0
m50
m85
m95
m98
0 20 40 60 80 100"
RELATIONAL REASONING IN SORT-OF-CLEVR,0.35655058043117743,Accuracy
RELATIONAL REASONING IN SORT-OF-CLEVR,0.3582089552238806,Task: Same/Different
RELATIONAL REASONING IN SORT-OF-CLEVR,0.3598673300165838,"m0
m50
m85
m95"
RELATIONAL REASONING IN SORT-OF-CLEVR,0.3615257048092869,Task: RMTS
RELATIONAL REASONING IN SORT-OF-CLEVR,0.36318407960199006,"m0
m50
m85
m95"
RELATIONAL REASONING IN SORT-OF-CLEVR,0.3648424543946932,Task: Distribution of 3
RELATIONAL REASONING IN SORT-OF-CLEVR,0.36650082918739635,"m0
m50
m85
m95"
RELATIONAL REASONING IN SORT-OF-CLEVR,0.3681592039800995,Task: Identity Rules
RELATIONAL REASONING IN SORT-OF-CLEVR,0.36981757877280264,"Model
Multi-Head
Compositional"
RELATIONAL REASONING IN SORT-OF-CLEVR,0.3714759535655058,"Figure 6: Performance on ESBN Tasks. Our proposed model outperforms the baseline across
different tasks especially in the extreme OoD setting."
RELATIONAL REASONING IN SORT-OF-CLEVR,0.373134328358209,"Quantitative Results: We use 4-layered transformer models with parameter sharing for our ex-
periments. Table 1 highlights that Compositional Transformer outperforms standard transformers
across different question types (unary, binary and ternary), even with fewer searches and/or retrievals
than the number of heads in the standard transformer. This is attributed to the fact that our model
is exploiting the inherent compositional nature of this task by reusing the parameters for dynamic
retrieval of context dependent attributes."
RELATIONAL REASONING IN SORT-OF-CLEVR,0.3747927031509121,"We refer the readers to Appendix C.2 for details regarding this task, model hyperparameters and
performance ablations on a variety of model settings."
EQUILATERAL TRIANGLE DETECTION,0.37645107794361526,"4.3
EQUILATERAL TRIANGLE DETECTION"
EQUILATERAL TRIANGLE DETECTION,0.3781094527363184,"Algorithm
Searches
Retrievals
Test Accuracy"
EQUILATERAL TRIANGLE DETECTION,0.37976782752902155,"Transformer
4
4
93.8±0.1"
EQUILATERAL TRIANGLE DETECTION,0.3814262023217247,"Compositional Transformer
4
1
95.6±1.2
2
96.7±0.4
4
97.0±0.3"
EQUILATERAL TRIANGLE DETECTION,0.38308457711442784,"Table 3: Performance on Equilateral Triangle
Detection. Our proposed method outperforms the
baseline over different number of retrievals."
EQUILATERAL TRIANGLE DETECTION,0.38474295190713104,"This is a binary classiﬁcation task introduced
by Ahmad & Omohundro (2009), where the aim
is to decide if the set of three point clusters in
the image forms an equilateral triangle. For a
triangle to be equilateral, the midpoints of these
clusters should be equidistant from each other."
EQUILATERAL TRIANGLE DETECTION,0.3864013266998342,"Quantitative Results. Table 3 highlights that
compositional attention outperforms multi-head
attention across different number of retrievals."
EQUILATERAL TRIANGLE DETECTION,0.3880597014925373,We refer the readers to Appendix C.3 for more details.
MULTI-TASK IMAGE CLASSIFICATION,0.38971807628524047,"4.4
MULTI-TASK IMAGE CLASSIFICATION"
MULTI-TASK IMAGE CLASSIFICATION,0.3913764510779436,"We pose the problem of image classiﬁcation across four different datasets – CIFAR10, FashionMNIST,
SVHN and Equilateral Triangle Detection as a multi-task learning setup. To perform well on this,
models need to ﬁgure out which information is shared across datasets and which is private to a dataset."
MULTI-TASK IMAGE CLASSIFICATION,0.39303482587064675,"Quantitative Results: We train a 2-layered universal transformer with four learnable embeddings,
one for each task. Our proposed model replaces the multi-head attention with compositional attention
in the baseline. Table 2 shows that the proposed model outperforms the baseline."
MULTI-TASK IMAGE CLASSIFICATION,0.3946932006633499,Appendix C.4 contains further details about the task and the models.
LOGICAL REASONING IN ESBN TASKS,0.3963515754560531,"4.5
LOGICAL REASONING IN ESBN TASKS"
LOGICAL REASONING IN ESBN TASKS,0.39800995024875624,"Webb et al. (2020) introduces a suite of four tasks to test the model’s ability to perform logical
reasoning in an OoD setting. Within each task, the input is a sequence of objects and the output
is based on the relationships between these objects. For example, in the “Same/Different” task the
model receives two objects and has to predict whether the objects are same or different. Each task has
OoD criteria – eg. m95 refers to training with 5 out of 100 objects and testing with the remaining 95."
LOGICAL REASONING IN ESBN TASKS,0.3996683250414594,"Quantitative Results: We use a single layered transformer model as was done in the original
benchmark (Webb et al., 2020). Figure 6 highlights that Compositional Attention outperforms Multi-
Head Attention across all the tasks, especially at higher hold-out (m) values. This shows that the
proposed model is able to better handle distribution shifts than the baseline model across all tasks."
LOGICAL REASONING IN ESBN TASKS,0.4013266998341625,We refer the reader to Appendix C.5 for details regarding the tasks as well as the models.
LOGICAL REASONING IN ESBN TASKS,0.40298507462686567,Published as a conference paper at ICLR 2022
LOGICAL REASONING IN ESBN TASKS,0.4046434494195688,"Cutoff Length
Algorithm
Searches
Retrievals
22
24
25
26
27
28
29
30"
LOGICAL REASONING IN ESBN TASKS,0.40630182421227196,"Transformer
8
8
0.01±0.01
0.06±0.02
0.12±0.04
0.11±0.06
0.22±0.08
0.02±0.04
0.03±0.06
0.05±0.08"
LOGICAL REASONING IN ESBN TASKS,0.4079601990049751,"Compositional Transformer
8"
LOGICAL REASONING IN ESBN TASKS,0.4096185737976783,"1
0.01±0.01
0.03±0.02
0.24±0.07
0.34±0.08
0.38±0.18
0.10±0.11
0.13±0.10
0.08±0.06
2
0.01±0.02
0.04±0.04
0.24±0.16
0.27±0.13
0.49±0.09
0.09±0.09
0.09±0.08
0.16±0.12
4
0.00±0.00
0.05±0.02
0.06±0.03
0.30±0.14
0.26±0.13
0.04±0.04
0.11±0.09
0.08±0.11
8
0.02±0.02
0.05±0.02
0.14±0.05
0.18±0.10
0.30±0.08
0.04±0.05
0.06±0.11
0.08±0.08"
LOGICAL REASONING IN ESBN TASKS,0.41127694859038144,"Table 4: Performance on SCAN. We highlight that our proposed model outperforms the baseline
across the different question types even with lower number of searches and/or retrievals."
SCAN DATASET,0.4129353233830846,"4.6
SCAN DATASET"
SCAN DATASET,0.41459369817578773,"SCAN (Lake & Baroni, 2018a) is a synthetic sequence to sequence task aimed at translating natural
language instructions into a sequence of actions for a robot to follow. We follow the length extrapola-
tion generalization split (Newman et al., 2020; Csord´as et al., 2021) where training is done on lengths
of 22 output actions and tested on larger output sequence lengths."
SCAN DATASET,0.41625207296849087,"Quantitative Results: We train a 3-layered universal transformer as the baseline and compare it
with our proposed plug-in attention replacement. Table 4 showcases that compositional attention
outperforms the standard multi-head attention across multiple cutoff lengths."
SCAN DATASET,0.417910447761194,We refer the readers to Appendix C.6 for further details regarding the task and models.
LANGUAGE MODELLING,0.41956882255389716,"4.7
LANGUAGE MODELLING"
LANGUAGE MODELLING,0.42122719734660036,"2
4
6
8
10
12
14
16
Epoch 40 50 60 70 80"
LANGUAGE MODELLING,0.4228855721393035,Perplexity 40.38 39.61
LANGUAGE MODELLING,0.42454394693200664,"Model
Transformer
Compositional"
LANGUAGE MODELLING,0.4262023217247098,"Figure 7: Performance on Language
Modeling (WikiText103). We illustrate
that our proposed mechanism outper-
forms the standard multi-head attention."
LANGUAGE MODELLING,0.42786069651741293,"We perform experiments on the WikiText-103 data cor-
pus (Merity et al., 2016) for the language modeling task.
Here, the task is to predict probabilities for next or masked
words, evaluated through perplexity."
LANGUAGE MODELLING,0.4295190713101161,"Quantitative Results: We use 6-layered transformer mod-
els with parameter. We plot the validation perplexity
against epochs in Figure 7 which highlights that our pro-
posed attention mechanism not only outperforms the base-
line but also converges faster. Further, we see that our pro-
posed model obtains test perplexity 38.8±0.0 as opposed
to baseline’s perplexity 39.6±0.3."
LANGUAGE MODELLING,0.4311774461028192,We refer the reader to Appendix C.7 for further details.
DISCUSSION AND CONCLUSION,0.43283582089552236,"5
DISCUSSION AND CONCLUSION"
DISCUSSION AND CONCLUSION,0.43449419568822556,"Summary. In this work, we revisit Multi-Head Attention, a popular attention mechanism, and
highlight its shortcomings due to the rigid association between search and retrieval mechanisms.
We argue that this rigid coupling hinders re-usability of parameters and reduces the expressivity of
the model. To mitigate this, we propose a novel mechanism which uses a value retrieval mechanism
to ﬂexibly compose searches and retrievals. Experiments on various tasks show that our proposed
method outperforms standard multi-head transformers, while often using only a fraction of retrievals."
DISCUSSION AND CONCLUSION,0.4361525704809287,"Complexity. While our proposed mechanism requires additional parameters for the computation
of value scores, we highlight that this increase is often minuscule compared to the total number of
parameters. Crucially, we note that this light increase in parameters per search mechanism is easily
offset by reducing the number of retrievals needed. For all our experiments, our proposed models
offer similar capacity as the baselines unless stated otherwise. This highlights that the improved
performance is due to ﬂexible composition of search and retrieval and not number of parameters. We
discuss computational complexity in detail in Appendix B.5."
DISCUSSION AND CONCLUSION,0.43781094527363185,"Limitations and Conclusion. Motivated by the need for efﬁcient factorization of knowledge and
dynamic reusability of learned pieces of computations, we propose Compositional Attention, a ﬁrst
step towards ﬂexible composition of search and retrieval. We also highlight some of the limitations
of the proposed methodology in Appendix B.8 and hope that our work would promote research into
more ﬂexible models capable of better systematic generalization."
DISCUSSION AND CONCLUSION,0.439469320066335,Published as a conference paper at ICLR 2022
DISCUSSION AND CONCLUSION,0.44112769485903813,ACKNOWLEDGEMENTS
DISCUSSION AND CONCLUSION,0.4427860696517413,"The authors would like to thank Felipe Codevilla, Nicolas Gontier, Disha Shrivastava, Damjan
Kalajdzievski, Olexa Bilaniuk, Ioannis Mitliagkas and Gauthier Gidel for their time and effort on
helping improve this work. SM would like to acknowledge the support of UNIQUE and IVADO
towards his research. IR, YB and GL acknowledge the support from Canada CIFAR AI Chair Program,
as well as Samsung Electronics Co., Ldt. IR acknowledges support from the Canada Excellence
Research Chairs Program. GL acknowledges NSERC Discovery Grant [RGPIN-2018-04821]."
ETHICS STATEMENT,0.4444444444444444,ETHICS STATEMENT
ETHICS STATEMENT,0.4461028192371476,"The authors do not foresee negative societal or ethical impacts beyond those expected from general
improvements in ML. Furthermore, the authors note that with added ﬂexibility comes the increased
possibility of learning negative implicit biases in real-world applications. Much like other cutting edge
ML methods, careful considerations of potential negative impacts on society should be considered
before deploying models for applied uses."
REPRODUCIBILITY STATEMENT,0.44776119402985076,REPRODUCIBILITY STATEMENT
REPRODUCIBILITY STATEMENT,0.4494195688225539,"The authors provide the code used to run all the required experiments and will open source their code
with ample documentation to allow for ease of reproducibility. Further, the authors provide the exact
formulation of the proposed model in Section 3 and provide the hyperparameters as well as different
existing codebases used for all the experiments in Appendix C."
REPRODUCIBILITY STATEMENT,0.45107794361525705,Published as a conference paper at ICLR 2022
REFERENCES,0.4527363184079602,REFERENCES
REFERENCES,0.45439469320066334,S. Ahmad and S. Omohundro. Equilateral triangles: A challenge for connectionist vision. 2009.
REFERENCES,0.4560530679933665,"Bernard J Baars. In the theatre of consciousness. global workspace theory, a rigorous scientiﬁc theory
of consciousness. Journal of Consciousness Studies, 4(4):292–309, 1997."
REFERENCES,0.4577114427860697,"Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Bengio. Neural machine translation by jointly
learning to align and translate. CoRR, abs/1409.0473, 2015."
REFERENCES,0.4593698175787728,"Shaojie Bai, J Zico Kolter, and Vladlen Koltun.
Deep equilibrium models.
arXiv preprint
arXiv:1909.01377, 2019."
REFERENCES,0.46102819237147596,"Yoshua Bengio. The consciousness prior. arXiv preprint arXiv:1709.08568, 2017."
REFERENCES,0.4626865671641791,"Yoshua Bengio, Tristan Deleu, Nasim Rahaman, Rosemary Ke, S´ebastien Lachapelle, Olexa Bilaniuk,
Anirudh Goyal, and Christopher Pal. A meta-transfer objective for learning to disentangle causal
mechanisms. arXiv preprint arXiv:1901.10912, 2019."
REFERENCES,0.46434494195688225,"Xinyun Chen, Chen Liang, Adams Wei Yu, Dawn Song, and Denny Zhou. Compositional generaliza-
tion via neural-symbolic stack machines. arXiv preprint arXiv:2008.06662, 2020."
REFERENCES,0.4660033167495854,"Rewon Child, Scott Gray, Alec Radford, and Ilya Sutskever. Generating long sequences with sparse
transformers. arXiv preprint arXiv:1904.10509, 2019."
REFERENCES,0.46766169154228854,"Krzysztof Choromanski, Valerii Likhosherstov, David Dohan, Xingyou Song, Andreea Gane, Tamas
Sarlos, Peter Hawkins, Jared Davis, Afroz Mohiuddin, Lukasz Kaiser, et al. Rethinking attention
with performers. arXiv preprint arXiv:2009.14794, 2020."
REFERENCES,0.4693200663349917,"R´obert Csord´as, Kazuki Irie, and J¨urgen Schmidhuber. The devil is in the detail: Simple tricks
improve systematic generalization of transformers. arXiv preprint arXiv:2108.12284, 2021."
REFERENCES,0.4709784411276949,"S. Dehaene, H. Lau, and S. Kouider. What is consciousness, and could machines have it? Science,
358(6362):486–492, 2017."
REFERENCES,0.472636815920398,"Mostafa Dehghani, Stephan Gouws, Oriol Vinyals, Jakob Uszkoreit, and Lukasz Kaiser. Universal
transformers. CoRR, abs/1807.03819, 2018. URL http://arxiv.org/abs/1807.03819."
REFERENCES,0.47429519071310117,"Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. Bert: Pre-training of deep
bidirectional transformers for language understanding. arXiv preprint arXiv:1810.04805, 2018."
REFERENCES,0.4759535655058043,"David Ding, Felix Hill, Adam Santoro, and Matt Botvinick. Object-based attention for spatio-
temporal reasoning: Outperforming neuro-symbolic models with ﬂexible distributed architectures.
arXiv preprint arXiv:2012.08508, 2020."
REFERENCES,0.47761194029850745,"Alexey Dosovitskiy, Lucas Beyer, Alexander Kolesnikov, Dirk Weissenborn, Xiaohua Zhai, Thomas
Unterthiner, Mostafa Dehghani, Matthias Minderer, Georg Heigold, Sylvain Gelly, et al. An
image is worth 16x16 words: Transformers for image recognition at scale.
arXiv preprint
arXiv:2010.11929, 2020."
REFERENCES,0.4792703150912106,"Angela Fan, Thibaut Lavril, Edouard Grave, Armand Joulin, and Sainbayar Sukhbaatar. Addressing
some limitations of transformers with feedback memory. arXiv preprint arXiv:2002.09402, 2020."
REFERENCES,0.48092868988391374,"Anirudh Goyal and Yoshua Bengio. Inductive biases for deep learning of higher-level cognition.
arXiv preprint arXiv:2011.15091, 2020."
REFERENCES,0.48258706467661694,"Anirudh Goyal, Alex Lamb, Jordan Hoffmann, Shagun Sodhani, Sergey Levine, Yoshua Bengio, and
Bernhard Sch¨olkopf. Recurrent independent mechanisms. arXiv preprint arXiv:1909.10893, 2019."
REFERENCES,0.4842454394693201,"Anirudh Goyal, Alex Lamb, Phanideep Gampa, Philippe Beaudoin, Sergey Levine, Charles Blundell,
Yoshua Bengio, and Michael Mozer. Object ﬁles and schemata: Factorizing declarative and
procedural knowledge in dynamical systems. arXiv preprint arXiv:2006.16225, 2020."
REFERENCES,0.4859038142620232,"Anirudh Goyal, Aniket Didolkar, Nan Rosemary Ke, Charles Blundell, Philippe Beaudoin, Nico-
las Heess, Michael Mozer, and Yoshua Bengio. Neural production systems. arXiv preprint
arXiv:2103.01937, 2021a."
REFERENCES,0.48756218905472637,Published as a conference paper at ICLR 2022
REFERENCES,0.4892205638474295,"Anirudh Goyal, Aniket Didolkar, Alex Lamb, Kartikeya Badola, Nan Rosemary Ke, Nasim Rahaman,
Jonathan Binas, Charles Blundell, Michael Mozer, and Yoshua Bengio. Coordination among neural
modules through a shared global workspace. arXiv preprint arXiv:2103.01197, 2021b."
REFERENCES,0.49087893864013266,"Alex Graves, Greg Wayne, and Ivo Danihelka.
Neural turing machines.
arXiv preprint
arXiv:1410.5401, 2014."
REFERENCES,0.4925373134328358,"Drew A Hudson and Christopher D Manning. Compositional attention networks for machine
reasoning. arXiv preprint arXiv:1803.03067, 2018."
REFERENCES,0.494195688225539,"Dieuwke Hupkes, Verna Dankers, Mathijs Mul, and Elia Bruni. Compositionality decomposed: how
do neural networks generalise? Journal of Artiﬁcial Intelligence Research, 67:757–795, 2020."
REFERENCES,0.49585406301824214,"Nan Rosemary Ke, Aniket Rajiv Didolkar, Sarthak Mittal, Anirudh Goyal, Guillaume Lajoie, Stefan
Bauer, Danilo Jimenez Rezende, Michael Curtis Mozer, Yoshua Bengio, and Christopher Pal.
Systematic evaluation of causal discovery in visual model based reinforcement learning, 2021.
URL https://openreview.net/forum?id=gp5Uzbl-9C-."
REFERENCES,0.4975124378109453,"Giancarlo Kerg, Bhargav Kanuparthi, Anirudh Goyal ALIAS PARTH GOYAL, Kyle Goyette, Yoshua
Bengio, and Guillaume Lajoie. Untangling tradeoffs between recurrence and self-attention in
artiﬁcial neural networks. Advances in Neural Information Processing Systems, 33, 2020."
REFERENCES,0.49917081260364843,"Daniel Keysers, Nathanael Sch¨arli, Nathan Scales, Hylke Buisman, Daniel Furrer, Sergii Kashubin,
Nikola Momchev, Danila Sinopalnikov, Lukasz Staﬁniak, Tibor Tihon, et al. Measuring composi-
tional generalization: A comprehensive method on realistic data. arXiv preprint arXiv:1912.09713,
2019."
REFERENCES,0.5008291873963516,"Nikita Kitaev, Łukasz Kaiser, and Anselm Levskaya. Reformer: The efﬁcient transformer. arXiv
preprint arXiv:2001.04451, 2020."
REFERENCES,0.5024875621890548,"Brenden Lake and Marco Baroni. Generalization without systematicity: On the compositional skills
of sequence-to-sequence recurrent networks. In International conference on machine learning, pp.
2873–2882. PMLR, 2018a."
REFERENCES,0.5041459369817579,"Brenden Lake and Marco Baroni. Generalization without systematicity: On the compositional skills of
sequence-to-sequence recurrent networks. In Jennifer Dy and Andreas Krause (eds.), Proceedings
of the 35th International Conference on Machine Learning, volume 80 of Proceedings of Machine
Learning Research, pp. 2873–2882. PMLR, 10–15 Jul 2018b. URL http://proceedings.
mlr.press/v80/lake18a.html."
REFERENCES,0.5058043117744611,"Alex Lamb, Di He, Anirudh Goyal, Guolin Ke, Chien-Feng Liao, Mirco Ravanelli, and Yoshua
Bengio. Transformers with competitive ensembles of independent mechanisms. arXiv preprint
arXiv:2103.00336, 2021."
REFERENCES,0.5074626865671642,"Yuanpeng Li, Liang Zhao, Jianyu Wang, and Joel Hestness. Compositional generalization for
primitive substitutions. arXiv preprint arXiv:1910.02612, 2019."
REFERENCES,0.5091210613598673,"Adam Liska, Germ´an Kruszewski, and Marco Baroni. Memorize or generalize? searching for a
compositional RNN in a haystack. CoRR, abs/1802.06467, 2018. URL http://arxiv.org/
abs/1802.06467."
REFERENCES,0.5107794361525705,"Francesco Locatello, Dirk Weissenborn, Thomas Unterthiner, Aravindh Mahendran, Georg Heigold,
Jakob Uszkoreit, Alexey Dosovitskiy, and Thomas Kipf. Object-centric learning with slot attention.
arXiv preprint arXiv:2006.15055, 2020."
REFERENCES,0.5124378109452736,"Minh-Thang Luong, Hieu Pham, and Christopher D Manning. Effective approaches to attention-based
neural machine translation. arXiv preprint arXiv:1508.04025, 2015."
REFERENCES,0.5140961857379768,"Kanika Madan, Rosemary Nan Ke, Anirudh Goyal, Bernhard Bernhard Sch¨olkopf, and Yoshua Ben-
gio. Fast and slow learning of recurrent independent mechanisms. arXiv preprint arXiv:2105.08710,
2021."
REFERENCES,0.5157545605306799,"Stephen Merity, Caiming Xiong, James Bradbury, and Richard Socher. Pointer sentinel mixture
models. arXiv preprint arXiv:1609.07843, 2016."
REFERENCES,0.5174129353233831,Published as a conference paper at ICLR 2022
REFERENCES,0.5190713101160862,"Paul Michel, Omer Levy, and Graham Neubig. Are sixteen heads really better than one? arXiv
preprint arXiv:1905.10650, 2019."
REFERENCES,0.5207296849087893,"Sarthak Mittal, Alex Lamb, Anirudh Goyal, Vikram Voleti, Murray Shanahan, Guillaume Lajoie,
Michael Mozer, and Yoshua Bengio. Learning to combine top-down and bottom-up signals in
recurrent neural networks with attention over modules. In International Conference on Machine
Learning, pp. 6972–6986. PMLR, 2020."
REFERENCES,0.5223880597014925,"Benjamin Newman, John Hewitt, Percy Liang, and Christopher D Manning. The eos decision and
length extrapolation. arXiv preprint arXiv:2010.07174, 2020."
REFERENCES,0.5240464344941956,"Rodrigo Nogueira, Zhiying Jiang, and Jimmy Lin. Investigating the limitations of transformers with
simple arithmetic tasks. arXiv preprint arXiv:2102.13019, 2021."
REFERENCES,0.5257048092868989,"Myle Ott, Sergey Edunov, Alexei Baevski, Angela Fan, Sam Gross, Nathan Ng, David Grangier,
and Michael Auli. fairseq: A fast, extensible toolkit for sequence modeling. In Proceedings of
NAACL-HLT 2019: Demonstrations, 2019."
REFERENCES,0.527363184079602,"Adam Santoro, David Raposo, David GT Barrett, Mateusz Malinowski, Razvan Pascanu, Peter
Battaglia, and Timothy Lillicrap. A simple neural network module for relational reasoning. arXiv
preprint arXiv:1706.01427, 2017."
REFERENCES,0.5290215588723052,"Muru Selvakumar, Suriyadeepan Ramamoorthy, Vaidheeswaran Archana, and Malaikannan Sankara-
subbu. Compositional attention networks for interpretability in natural language question answering.
arXiv preprint arXiv:1810.12698, 2018."
REFERENCES,0.5306799336650083,"Yi Tay, Mostafa Dehghani, Dara Bahri, and Donald Metzler. Efﬁcient transformers: A survey. arXiv
preprint arXiv:2009.06732, 2020."
REFERENCES,0.5323383084577115,"Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N. Gomez,
Lukasz Kaiser, and Illia Polosukhin. Attention is all you need. CoRR, abs/1706.03762, 2017. URL
http://arxiv.org/abs/1706.03762."
REFERENCES,0.5339966832504146,"Elena Voita, David Talbot, Fedor Moiseev, Rico Sennrich, and Ivan Titov. Analyzing multi-head
self-attention: Specialized heads do the heavy lifting, the rest can be pruned. arXiv preprint
arXiv:1905.09418, 2019."
REFERENCES,0.5356550580431177,"Sinong Wang, Belinda Z Li, Madian Khabsa, Han Fang, and Hao Ma. Linformer: Self-attention with
linear complexity. arXiv preprint arXiv:2006.04768, 2020."
REFERENCES,0.5373134328358209,"Taylor W Webb, Ishan Sinha, and Jonathan D Cohen. Emergent symbols through binding in external
memory. arXiv preprint arXiv:2012.14601, 2020."
REFERENCES,0.538971807628524,"Kelvin Xu, Jimmy Ba, Ryan Kiros, Kyunghyun Cho, Aaron Courville, Ruslan Salakhudinov, Rich
Zemel, and Yoshua Bengio. Show, attend and tell: Neural image caption generation with visual
attention. In International conference on machine learning, pp. 2048–2057. PMLR, 2015."
REFERENCES,0.5406301824212272,Published as a conference paper at ICLR 2022
REFERENCES,0.5422885572139303,APPENDIX
REFERENCES,0.5439469320066335,"A
RELATED WORK"
REFERENCES,0.5456053067993366,"The advent of transformer-like models have led to advancements on various ﬂavours of attention
based models. This revolution ﬁrst started with augmenting Recurrent Neural Networks (RNNs) with
a form of semi-parametric memory structure through attention (Bahdanau et al., 2015) and it soon led
to people questioning the need for recurrence. This line of questioning resulted in a famous class of
models that get rid of recurrence in favour of just parallel self-attention computations that are quite
efﬁcient to do on modern hardware (Vaswani et al., 2017). We brieﬂy discuss the various advances
along these lines and distinguish how our proposed attention algorithm is different from them."
REFERENCES,0.5472636815920398,"A.1
ATTENTION"
REFERENCES,0.548922056384743,"Attention has been a major component of human cognition which allows humans to selectively
process relevant information from the plethora of sensory stimulus we receive. The idea of selecting
relevant features from a sea of information allows us to make predictions in both a robust as well as
compute efﬁcient way. Inspired from neural cognition, there have been a lot of efforts in trying to
introduce a notion of attention to relevant states of the input for reliable downstream prediction (Xu
et al., 2015; Luong et al., 2015; Kerg et al., 2020)."
REFERENCES,0.5505804311774462,"A major problem in Recurrent Neural Networks based systems is the problem of vanishing and
exploding gradients that happens due to improper credit assignment in the model. This is because
RNNs model all the information seen up to a certain time through a parametric ﬁxed sized vector
which undergoes repeated computations over all time steps. This makes the system brittle to changes
in sequence lengths or in presence of long sequence of distracting information. A way to solve this
problem was to move away from parametric representations of the entire past and instead rely on
dynamic semi-parametric “memory” to allow these models to look back whenever needed (Graves
et al., 2014; Bahdanau et al., 2015). These works aimed at augmenting recurrence with self-attention
and demonstrated that when combined with these cognition-inspired inductive biases, ML systems
were able to extrapolate much better to larger sequence lengths."
REFERENCES,0.5522388059701493,"Following this, there has been a lot of recent work that then aimed to remove recurrence between time-
steps and rely solely on querying information through self-attention. Recent advances on multiple
domains (Vaswani et al., 2017; Dosovitskiy et al., 2020; Ding et al., 2020; Locatello et al., 2020)
showcased that removing recurrence from the picture and relying solely on parallel computations not
only leads to signiﬁcant improvements in performance and generalization but is also easier and faster
to train on current hardware. Since the advent of these transformer based models built fundamentally
on multi-head attention, the role of attention has become increasingly important across various
domains like vision, language and reinforcement learning. It has also led to a lot of research on
various architectural choices in fully attention-based systems, some of which we discuss in Appendix
A.2."
REFERENCES,0.5538971807628524,"It is, however, important to note that there has been some research that highlight the need for
recurrence jointly with self-attention for solving certain logical reasoning tasks efﬁciently (Hudson &
Manning, 2018; Selvakumar et al., 2018; Webb et al., 2020)."
REFERENCES,0.5555555555555556,"A.2
TRANSFORMER VARIANTS"
REFERENCES,0.5572139303482587,"The ubiquity of self-attention models in the current ML community has led to tremendous research
aimed at incorporating different inductive biases in the attention mechanism used; namely in the
multi-head attention. Most of these variants aim to alter multi-head attention in a way that would
remove the quadratic time complexity computational bottleneck that is present in standard multi-head
attention. However, there are certain works that aim more on the fundamental inductive biases that
the attention encodes as opposed to computational beneﬁts. We discuss some of these variants here."
REFERENCES,0.5588723051409619,"Reducing Computational Complexity. Given a set of n vectors, the standard multi-head attention
aims to create an n × n attention matrix that takes quadratic complexity to compute. This bottleneck
prevents usage of self-attention when n is large. In light of this, a lot of recent research aims to reduce
this quadratic complexity to n log n or linear complexity. This is often achieved by either introducing
some restrictions in the n × n attention matrix through locality sensitive hashing (Kitaev et al., 2020),"
REFERENCES,0.560530679933665,Published as a conference paper at ICLR 2022
REFERENCES,0.5621890547263682,"sparsity (Child et al., 2019), low rank approximation (Wang et al., 2020) or through random features
for approximation of softmax (Choromanski et al., 2020). We refer the readers to Tay et al. (2020)
for a more detailed analysis of different transformer variants."
REFERENCES,0.5638474295190713,"Additional Inductive Biases. While a lot of the above transformer variations are designed to prevent
the quadratic bottleneck, most of them also add certain additional inductive biases in the model.
For example, the addition of sparsity not only reduces the computational complexity but also adds
the additional inductive bias of sparse information routing between different elements. There are
certain additional variants (Lamb et al., 2021; Goyal et al., 2021b) that add other inductive biases, eg.
factorized state space and global workspace bottleneck respectively in the transformer model."
REFERENCES,0.5655058043117744,"A.3
MODULARITY, COMPOSITIONALITY, REUSABILITY AND BOTTLENECK"
REFERENCES,0.5671641791044776,"There have been recent efforts along the lines of modularized computations in an effort to improve
the model’s capacity to perform systematic generalization. In particular, humans are able to com-
partmentalize information and act on it in a disentangled, context-driven and robust fashion. These
cognitive fundamentals have led to a preliminary movement of Machine Learning systems into this
space. We discuss some of the essential ingredients below."
REFERENCES,0.5688225538971807,"Modularity. Modularity refers to factorization of knowledge into smaller components that can inde-
pendently exist and act on sensory information. It can be considered as disentangled representations
that allow for interventions on these different components or factorized mechanisms where each
mechanism has a speciﬁc purpose and can act on a part or whole of the sensory information. The
fundamental aim of modularity is to prevent unrestricted information ﬂow across a whole monolitihic
system and instead to learn in an often end-to-end fashion factorized representations and mechanisms
that act on these representations. Recent works (Goyal et al., 2019; 2020; 2021a; Mittal et al., 2020;
Madan et al., 2021; Lamb et al., 2021; Ke et al., 2021) along the lines of factorizing knowledge
demonstrate that it often leads to increased robustness and better OoD performance."
REFERENCES,0.5704809286898839,"Compositionality and Reusability. Humans are able to perform complex tasks even in novel and
unknown situations. This capacity often stems from the fact that our complex actions are in reality
compositions of simpler primitives and our understanding of these primitives is so good that we are
able to dynamically combine these primitives into novel complex actions. Recent research has started
looking into tasks and systems that test and allow for compositional generalization (Lake & Baroni,
2018a; Li et al., 2019; Keysers et al., 2019; Chen et al., 2020; Hupkes et al., 2020; Goyal & Bengio,
2020), which is generalization to novel combinations of the underlying primitives/mechanisms.
The primary reason why a number of modular systems are constructed in recurrent domains is
because we want the factorized mechanisms to be reusable in a number of scenarios. Reusability of
knowledge (Dehghani et al., 2018; Bai et al., 2019) allows for learning of disentangled mechanisms
in a modular system which then has the potential to lead to efﬁcient compositions of the learned
disentangled mechanisms. Recent success of systems that use computations that can be reused
multiple times demonstrates that reusability is actually an important fundamental for obtaining
compositionality."
REFERENCES,0.572139303482587,"Bottleneck. Conscious attention in humans is a key ingredient to create a bottleneck of information
processing, according to the Global Workspace Theory (Baars, 1997; Dehaene et al., 2017). The
key use of this bottleneck is to restrict information ﬂow across the whole network, human brain or
otherwise, which allows for robustness to insigniﬁcant pieces of sensory information. The usefulness
of this bottleneck has been hypothesized to be linked to the sparsity and simplicity of the dependencies
manipulated with System 2 cognition (Bengio, 2017; Goyal & Bengio, 2020). Recent works along
these lines (Goyal et al., 2021b) illustrate that modular systems with the addition of a bottleneck
efﬁciently factorize computations and then compose them in a dynamic and context dependent fashion
often lead to improved performance, faster adaptation and systematic generalization (Bengio et al.,
2019; Ke et al., 2021)."
REFERENCES,0.5737976782752903,"B
PROPOSED MODEL"
REFERENCES,0.5754560530679934,"In this section, we provide additional details about the general motivation, architecture setup and our
argument for using parameter sharing across layers. We further provide details about computational
complexity of the proposed model and some ablations that we consider."
REFERENCES,0.5771144278606966,Published as a conference paper at ICLR 2022
HEADS,0.5787728026533997,2 heads
HEADS,0.5804311774461028,8 heads
SEARCH,0.582089552238806,"2 search
4 retrieval"
HEADS,0.5837479270315091,2 heads
HEADS,0.5854063018242123,8 heads
SEARCH,0.5870646766169154,"2 search
4 retrieval 0.0 0.2 0.4 0.6 0.8 1.0 Loss"
SEARCH,0.5887230514096186,"Low Capacity
High Capacity"
SEARCH,0.5903814262023217,Task: 2 Search 4 Retrieval
HEADS,0.5920398009950248,4 heads
HEADS,0.593698175787728,32 heads
SEARCH,0.5953565505804311,"4 search
8 retrieval"
HEADS,0.5970149253731343,4 heads
HEADS,0.5986733001658375,32 heads
SEARCH,0.6003316749585407,"4 search
8 retrieval"
SEARCH,0.6019900497512438,"Low Capacity
High Capacity"
SEARCH,0.603648424543947,Task: 4 Search 8 Retrieval
HEADS,0.6053067993366501,4 heads
HEADS,0.6069651741293532,64 heads
SEARCH,0.6086235489220564,"4 search
16 retrieval"
HEADS,0.6102819237147595,4 heads
HEADS,0.6119402985074627,64 heads
SEARCH,0.6135986733001658,"4 search
16 retrieval"
SEARCH,0.615257048092869,"Low Capacity
High Capacity"
SEARCH,0.6169154228855721,Task: 4 Search 16 Retrieval
SEARCH,0.6185737976782753,"Model
Multi-Head
Compositional"
SEARCH,0.6202321724709784,"Figure 8: Performance on Contextual Retrieval Task. We compare our proposed model against
standard Multi-Head attention (lower loss is better) on various setups of the task. Our proposed model
outperforms the baseline across various model capacities (low and high) and number of heads."
SEARCH,0.6218905472636815,"B.1
MOTIVATION"
SEARCH,0.6235489220563848,"While the setting in Figure 1 may look idealistic in the sense that it is very likely that transformer
heads do not learn this interpretable single feature functions for search and retrieval, we argue that
this rigidity still exists between search and retrieval in a standard multi-head attention framework. To
see this, we note that the search component Searchh, is parameterized by the query and key matrices
Wqh and Wkh respectively and the retrieval component Retrievalh is parameterized by the value
matrices Wvh. Both these components lead to computations that are dynamic based on the input but
the pairing between search and retrieval is ﬁxed, that is, Retrievalh takes Searchh as its argument
(notice the same h subscript), also highlighted in Equation 5. Thus, whenever there is a need to share
retrieval parameterizations across multiple searches, a standard multi-head attention would lead to
learning of redundancies because there is no notion of sharing of retrievals between searches."
SEARCH,0.6252072968490879,"Contrasting this with the proposed approach, Compositional Attention, we see that now there is a
notion of sharing of retrievals for different searches. That is, two different searches can still opt for
the same retrieval parameterization, which alleviates the rigidity and redundancy that is explained
above. Note that this discussion does not depend on the model’s capacity to selectively pick features
as is illustrated in Figure 1. This shows that irrespective of what these searches and retrievals learn,
the discussed drawbacks of multi-head attention still exist if an optimal solution requires sharing of
retrievals across searches. We highlight the motivation through the idealistic example of multiple
features solely for ease of explanation and appealing to the fundamental cognitively inspired inductive
bias that we try to incorporate."
SEARCH,0.6268656716417911,"We emphasize that multi-head attention and the proposed compositional attention are not two separate
classes of methods. In fact, our proposed mechanism is a strict superset of multi-head attention and
thus presents a more general framework that subsumes the family of multi-head attention. One can
see this from Equation 13 where, given enough capacity to represent any h × h matrix, we recover
multi-head attention by setting the number of searches and retrievals as h and having the “Value
Scores” matrix as an h × h identity matrix (or any h × h permutation matrix in general), with h being
the number of heads. Thus our mechanism not only solves the redundancies highlighted in this text
but also provides a more general class of attention mechanism."
SEARCH,0.6285240464344942,"B.2
DIFFERENCES FROM EXISTING WORK"
SEARCH,0.6301824212271974,"We propose Compositional Attention, a novel attention mechanism aimed at a disentangled computa-
tion of search and retrieval. Unlike in multi-head attention, this allows for a ﬂexible and dynamic
composition of searches and retrievals."
SEARCH,0.6318407960199005,"This is different from MAC and its variants (Hudson & Manning, 2018; Selvakumar et al., 2018)
because the proposed algorithm is a completely parallel system without recurrence. Further, we see
that in MAC, disentanglement is driven by privileged information; i.e. through the difference between
what a question and image is. This privileged information may not be present across a variety of
tasks (eg. language modelling, classiﬁcation, etc.). Our proposed model, however, does not require
privileged information and is therefore easily applicable to a lot of different domains. Further, MAC"
SEARCH,0.6334991708126037,Published as a conference paper at ICLR 2022
HEADS,0.6351575456053068,2 heads
HEADS,0.6368159203980099,8 heads
SEARCH,0.6384742951907131,"2 search
4 retrieval"
HEADS,0.6401326699834162,2 heads
HEADS,0.6417910447761194,8 heads
SEARCH,0.6434494195688225,"2 search
4 retrieval 0.0 0.2 0.4 0.6 0.8 1.0 1.2 Loss"
SEARCH,0.6451077943615257,"Low Capacity
High Capacity"
SEARCH,0.6467661691542289,Task: 2 Search 4 Retrieval (OoD)
HEADS,0.648424543946932,4 heads
HEADS,0.6500829187396352,32 heads
SEARCH,0.6517412935323383,"4 search
8 retrieval"
HEADS,0.6533996683250415,4 heads
HEADS,0.6550580431177446,32 heads
SEARCH,0.6567164179104478,"4 search
8 retrieval"
SEARCH,0.6583747927031509,"Low Capacity
High Capacity"
SEARCH,0.6600331674958541,Task: 4 Search 8 Retrieval (OoD)
HEADS,0.6616915422885572,4 heads
HEADS,0.6633499170812603,64 heads
SEARCH,0.6650082918739635,"4 search
16 retrieval"
HEADS,0.6666666666666666,4 heads
HEADS,0.6683250414593698,64 heads
SEARCH,0.6699834162520729,"4 search
16 retrieval"
SEARCH,0.6716417910447762,"Low Capacity
High Capacity"
SEARCH,0.6733001658374793,Task: 4 Search 16 Retrieval (OoD)
SEARCH,0.6749585406301825,"Model
Multi-Head
Compositional"
SEARCH,0.6766169154228856,"Figure 9: Performance on OoD Contextual Retrieval Task. We showcase that our proposed
mechanism outperforms standard Multi-Head attention (lower is better) on out of distribution (OoD)
variant of the various setups across various model capacities (low and high) and number of heads."
SEARCH,0.6782752902155887,"does not have multiple parallel searches and retrievals and thus, our proposed model aims to solve a
considerably different problem."
SEARCH,0.6799336650082919,"While one may be tempted to think of head pruning (Michel et al., 2019; Voita et al., 2019) as a
way of removing redundancies in standard multi-head attention, we stress that the core goal and
motivation of our work is considerably different. Pruning of a head essentially means we eliminate a
rigid search-retrieval pairing from the learned system as its utility for solving the task is negligible.
However, in this work, the redundancy we want to solve is when a sub-part of a head is redundant but
not the whole head. That is, when either the search or retrieval part of the head is redundant, but not
both. Figure 1 highlights when only a sub-part of the head is redundant and not the whole head, and
how compositional attention resolves the problem."
SEARCH,0.681592039800995,"Further, Compositional Attention is different from the various transformer variants Appendix A.2
because it does not aim to solve the quadratic computational bottleneck but instead adds an inductive
bias that has not been explored yet. We also note that the proposed model is amenable to the various
computation tricks discovered for multi-head attention."
SEARCH,0.6832504145936982,"B.3
ARCHITECTURE DETAILS"
SEARCH,0.6849087893864013,"The standard transformer model (Vaswani et al., 2017) has a number of layers, where each layer is
composed of two components, the multi-head attention (Section 2.1) which is followed by a MLP
(Multi-layer perceptron) with a single hidden layer. There are residual connections at the end of the
multi-head attention step as well as the MLP."
SEARCH,0.6865671641791045,"In this work, we follow Dehghani et al. (2018) and consider the models that have weight sharing
across layers. For ease of experiments, we do not consider adaptive stopping criteria. We consider
this choice because we want reusable pieces of computations, and Universal Transformers is one step
towards that goal."
SEARCH,0.6882255389718076,"Our view of transformer models is that different heads perform parallel information retrieval with
not only different kinds of searches but also different kinds of retrievals. Information from these
parallel retrievals is then jointly processed through a linear layer, followed by another MLP. There
are residual connections after the linear layer and the MLP."
SEARCH,0.6898839137645107,"For our proposed Compositional variants, we basically replace Multi-Head Attention in the models
with Compositional Attention while keeping all the other details the same."
SEARCH,0.6915422885572139,"B.4
MULTIPLE LAYERS AND WEIGHT SHARING"
SEARCH,0.693200663349917,"A number of works demonstrate that Transformers with weight sharing are competitive with the
standard transformer models (Dehghani et al., 2018; Bai et al., 2019). We also believe that reusing
computations provides more pressure on the system to learn meaningful and multi-purpose parameters
(eg. it is easier to learn a redundant head if it is used only once vs if it is repeatedly used). One
might be tempted to think that increasing the number of layers or removing weight sharing might
compensate for the ﬂexibility provided by our proposed system. However, we argue otherwise."
SEARCH,0.6948590381426202,Published as a conference paper at ICLR 2022
SEARCH,0.6965174129353234,"Figure 10: Convergence on Contextual Retrieval Task. We see that the proposed mechanism
converges faster and works well even in low data regime (low iterations)."
SEARCH,0.6981757877280266,"Lets assume we have a Transformer model without parameter sharing which has l layers and h heads.
Then, the number of unique search-retrieval pairings that can be computed by the model is lh (h if
parameter sharing). Contrasting this with compositional attention, we see that the number of unique
search-retrieval pairings are actually lsr (sr if parameter sharing) where s is the number of searches
and r the number of retrievals. So, if we use a similar number of layers, compositional attention still
allows for more combinatorial possibilities to be learnt. Viewed another way, at scale, the proposed
mechanism has the potential to reduce the number of layers needed for tasks calling for ﬂexible
search and retrievals."
SEARCH,0.6998341625207297,"Another important point is that even if we have more layers (with or without parameter sharing),
multi-head attention can still only learn a rigid combination between search and retrieval. So, if the
task requires dynamic choice from all possible pairings between search and retrieval, the model will
have to learn each pairing in separate head combinations, whether it be in the same or future layers.
This is because adding more layers does not change the way searches and retrievals are combined,
which is what we focus on here."
SEARCH,0.7014925373134329,"B.5
COMPUTATIONAL COMPLEXITY"
SEARCH,0.703150912106136,"Number of Parameters. We keep the parameter counts within ~5% of each other for the compared
models and the same parameter count at 140M parameters for the language modelling experiment.
We also stress that our proposed models with fewer retrievals are even more tightly matched and
often lower in parameters than the baseline and still outperform them on a number of tasks."
SEARCH,0.7048092868988391,"Training Time. While Compositional Attention increases the complexity of the model, we note that
the training time of proposed models are generally within ~10% of the baseline and hence the added
complexity does not impede the model much."
SEARCH,0.7064676616915423,"FLOPs. We estimate the FLOPs of the proposed model for Equilateral Triangle Detection task using
an off the shelf library 2 and see that they are ~10% of each other and the baseline. In particular, we
also see that for fewer retrievals, the FLOPs are either the same or lower than the baseline."
SEARCH,0.7081260364842454,"Parallel Computations. Transformers allow for efﬁcient implementation using GPUs due to parallel
computations for each word in the sentence (or each object in the scene). Further, they allow for
parallel computation of each head for each word. Correspondingly, in our proposed model, we still
do parallel computations for each word in the sentence, and compute the output of different searches
in parallel. The only additional complexity is another soft-attention for choice of retrieval for each
search. This is also done in parallel for each search and hence we retain all the major efﬁciencies that
Multi-Head attention enjoys on GPUs."
SEARCH,0.7097844112769486,"Amenable to Different Variations. We note that a lot of the current advances in standard multi-head
attention, eg. sparse attention matrix, can be incorporated in the proposed model too. We can also
have sparsity on the retrieval end where we can restrict certain searches to pick from a smaller set of
retrievals. We believe that these analysis are important future works but out of scope of this paper."
SEARCH,0.7114427860696517,"Complexity vs Combinatorial Advantages. While we sometimes have more complexity than multi-
head attention, this small increase in complexity is often offset by the combinatorial advantage that"
SEARCH,0.7131011608623549,2https://github.com/Lyken17/pytorch-OpCounter
SEARCH,0.714759535655058,Published as a conference paper at ICLR 2022
SEARCH,0.7164179104477612,Retrieval 1
SEARCH,0.7180762852404643,Retrieval 2
SEARCH,0.7197346600331676,Value 1
SEARCH,0.7213930348258707,Value 2
SEARCH,0.7230514096185738,Ground Truth Value
SEARCH,0.724709784411277,"1
0.002"
SEARCH,0.7263681592039801,"0.00054
1 0.2 0.4 0.6 0.8"
SEARCH,0.7280265339966833,Retrieval 1
SEARCH,0.7296849087893864,Retrieval 2
SEARCH,0.7313432835820896,Retrieval 3
SEARCH,0.7330016583747927,Retrieval 4
SEARCH,0.7346600331674958,Value 1
SEARCH,0.736318407960199,Value 2
SEARCH,0.7379767827529021,Value 3
SEARCH,0.7396351575456053,Value 4
SEARCH,0.7412935323383084,Ground Truth Value
SEARCH,0.7429519071310116,"0.068
0.93
1.9e-08
0.00076"
SEARCH,0.7446102819237148,"0.61
0.38
0.0013
1.1e-11"
SEARCH,0.746268656716418,"2.4e-05
0.00033
3e-05
1"
SEARCH,0.7479270315091211,"4.2e-05
8.5e-05
1
2.7e-06 0.0 0.2 0.4 0.6 0.8"
SEARCH,0.7495854063018242,Retrieval 1
SEARCH,0.7512437810945274,Retrieval 2
SEARCH,0.7529021558872305,Retrieval 3
SEARCH,0.7545605306799337,Retrieval 4
SEARCH,0.7562189054726368,Value 1
SEARCH,0.75787728026534,Value 2
SEARCH,0.7595356550580431,Value 3
SEARCH,0.7611940298507462,Value 4
SEARCH,0.7628524046434494,Ground Truth Value
SEARCH,0.7645107794361525,"0.36
0.13
0.38
0.13"
SEARCH,0.7661691542288557,"0.12
0.62
0.13
0.13"
SEARCH,0.7678275290215588,"0.12
0.13
0.13
0.63"
SEARCH,0.7694859038142621,"0.36
0.13
0.39
0.12 0.2 0.3 0.4 0.5 0.6"
SEARCH,0.7711442786069652,"Figure 11: Specialization plots for the Contextual Retrieval Task. We plot the attention scores for
ground truth retrieval vs learned retrieval for different task setups – left: 1 search 2 retrieval, middle:
1 search 4 retrieval, and right: 2 search 4 retrieval.
we gain. In particular, for h search and retrievals, multi-head attention can only compute h possible
search-retrieval pairings while the proposed model can compute h2 possible pairings."
SEARCH,0.7728026533996684,"Controls. In all our experiments, we control for the number of layers, searches and parameters
between the baseline and the proposed model."
SEARCH,0.7744610281923715,"B.6
DETAILS ABOUT SCALING"
SEARCH,0.7761194029850746,"Suppose our systems have h heads for multihead attention and s searches, r retrievals for composi-
tional attention. Lets assume the input to the system has N tokens. Then, we can see that the number
of parameters in multi-head attention is proportional to 3h while in compositional attention, it is
proportional to (2s + r)."
SEARCH,0.7777777777777778,"Further, focusing on the highest computational cost of the attention procedure (which are associated
with the coefﬁcients of N 2 and ignoring the coefﬁcients of terms linear in N ), we see that the
coefﬁcient of quadratic complexity is proportional to 2h in multi-head attention and s(1 + r) in
compositional attention."
SEARCH,0.7794361525704809,"This shows that depending on r, there can be fewer parameters in the proposed model but the time
complexity is strictly higher. This is because we allow for combinatorial more search-retrieval
pairings and this cannot be obtained free of cost (no free lunch theorems)."
SEARCH,0.7810945273631841,"Importantly, if a task that requires h searches (s = h) and h retrievals (r = h) and a dynamic choice
of any search-retrieval pair out of all possibilities (which are h2), then multi-head attention would
require h2 heads which leads to (3h2) parameters and (2h2) computational cost to fully do this task
well while the proposed model would only require 3h parameters and (h2 + h) computational cost,
which would be signiﬁcantly smaller and also more computationally efﬁcient when compared to
multi-head attention. We use this exact motivation as best as we could in the Contextual Retrieval
Task to showcase the fundamental differences and the parameter efﬁciency."
SEARCH,0.7827529021558872,"B.7
ABLATIONS"
SEARCH,0.7844112769485904,"Retrievals. For a number of tasks, we keep the number of searches the same as the number of
heads in the baseline and then ablate over the number of retrievals. Overall, we notice that most
of the models outperform baselines with fewer number of retrievals highlighting the combinatorial
advantage of compositional attention. Please refer Table 1, 4, 2, 6, etc. We further ablate on the
model capacity and heads while keeping the searches and retrievals ﬁxed for the proposed model.
In Table 7, we demonstrate that the head redundancies indeed hurt the performance of the model
however the ﬂexible models like compositional attention perform better."
SEARCH,0.7860696517412935,"Compositional-MLP. As an additional ablation of the retrieval selection mechanism, we aim to
replace the dot product attention in Equation 13 for the computation of Value Scores with a Multi-
Layer Perceptron (MLP) that takes the retrieval query and key as input and outputs the retrieval
attention score. Our MLP is only a linear network but we still generally notice decent performance,
as highlighted in Table 8 and 9."
SEARCH,0.7877280265339967,"B.8
LIMITATIONS AND FUTURE WORK"
SEARCH,0.7893864013266998,"Compositional attention, while more ﬂexible than standard multi-head attention, is still conditional
on the mechanism’s ability to efﬁciently perform value retrieval. In particular, we do not explicitly"
SEARCH,0.7910447761194029,Published as a conference paper at ICLR 2022
SEARCH,0.7927031509121062,"impose a bottleneck on the different value matrices to pressure the system into learning diverse
retrievals, which when combined with joint learning of the retrieval selection mechanism can lead to
sub-optimal solutions from gradient-based learning. This is highlighted in Figure 12. Potential future
work aims at solving this issue."
SEARCH,0.7943615257048093,"Another interesting direction for future development would be to dynamically restrict the set of
retrievals accessibly by a search to a sparse number in between 1 (standard Transformer) and all
(our compositional attention). This would allow to ﬁne tune the tradeoff between complexity and
expressivity for the task at hand."
SEARCH,0.7960199004975125,"C
EXPERIMENTS"
SEARCH,0.7976782752902156,"In this section, we provide further details about the tasks outlined in Section 4. We also provide
task-speciﬁc architecture details below."
SEARCH,0.7993366500829188,"C.1
CONTEXTUAL RETRIEVAL TASK"
SEARCH,0.8009950248756219,"We deﬁne the main details for the task in Section 4.1 and provide the additional required details and
motivation below."
SEARCH,0.802653399668325,"Train Set
Test Set
(0, 0), (0, 1), (0, 2), (0, 3)
(2, 1)
(1, 0), (1, 1), (1, 2), (1, 3)
(2, 3)
(2, 0), (2, 2)
(3, 1)
(3, 0), (3, 2)
(3, 3)"
SEARCH,0.8043117744610282,"Table 5: Contextual Retrieval Task
OoD Setup. For 2-Search-4-Retrieve
variant there are 42 unique value com-
binations that deﬁne tasks. For the OoD
setup, we pick fraction of tasks for train-
ing set and the rest for the test set."
SEARCH,0.8059701492537313,"Motivation. Our aim was with this experiment was to de-
sign an experiment that consists of multiple objects, each
of which have a number of scalar features. Correspond-
ing to each object, we have a set of ground truth searches
deﬁned by the search features and a set of ground truth re-
trievals deﬁned by retrieval features. The choice for which
retrieval to pick is decided by the retrieval preference of
the object. This is very similar to real world scenarios
where objects have a number of features, and search and
retrieval can be done about any feature depending on the
context. Here, we make our task easier by deﬁning a ﬁxed
search for all objects (i.e. no search preference), providing
the retrieval preference as a one-hot signal and considering
only independent scalar features."
SEARCH,0.8076285240464345,"Dataset. We consider a number of search-retrieval combination settings for this task. We draw
αs ∼U(−1, 1) and the features z, ˜z ∼N(0, 1) and consider the setups of 2 search 4 retrievals, 4
search 8 retrievals and 4 search 16 retrievals."
SEARCH,0.8092868988391376,"OoD Setup. For the OoD setup, we show a certain subset of all possible value combinations for
training, and the rest for zero shot testing. We illustrate an example of train and test retrieval
combinations in Figure 5 for the 2 search 4 retrieval variant."
SEARCH,0.8109452736318408,Retrieval 1
SEARCH,0.8126036484245439,Retrieval 2
SEARCH,0.814262023217247,Retrieval 3
SEARCH,0.8159203980099502,Retrieval 4
SEARCH,0.8175787728026535,Value 1
SEARCH,0.8192371475953566,Value 2
SEARCH,0.8208955223880597,Value 3
SEARCH,0.8225538971807629,Value 4
SEARCH,0.824212271973466,Ground Truth Value
SEARCH,0.8258706467661692,"0.01
0.01
0.50
0.48"
SEARCH,0.8275290215588723,"0.00
0.00
0.52
0.48"
SEARCH,0.8291873963515755,"0.58
0.42
0.00
0.00"
SEARCH,0.8308457711442786,"0.00
0.00
0.50
0.50"
SEARCH,0.8325041459369817,Task: 1 Search 4 Retrieval 0.0 0.1 0.2 0.3 0.4 0.5
SEARCH,0.8341625207296849,"Figure 12: Contextual Retrieval Task.
Failure case of proposed mechanism in
specializing retrievals in 1 search – 4
retrieval setup."
SEARCH,0.835820895522388,"Implementation Details. For each variant of the task, we
ablate on a number of heads and transformer hidden di-
mensions. We opt to exclude the residual network because
it isn’t needed for the task, purely from the data generat-
ing perspective. For the search, we explicitly mask out
the diagonal since the ground truth search is deﬁned as
arg minj̸=i and along with all the values, we also feed
in an extra value from each hidden dimension because it
contains information about the retrieval preferences."
SEARCH,0.8374792703150912,"Quantitative Results. We highlight the results of our
ablations in Table 6 which highlights that not only Com-
positional Attention outperforms the standard Multihead
Attention but also does so across a number of hyperparam-
eter choices. In particular, we often see that the proposed
attention mechanism outperforms the baseline even with
lower number of parameters. Further, since we gener-
ate data on the ﬂy, low training iterations correspond to low data regime on this task. Figure 10"
SEARCH,0.8391376451077943,Published as a conference paper at ICLR 2022
SEARCH,0.8407960199004975,"Ground Truth
Algorithm
Dimension
# Params
Number of Heads
Number of Searches
Number of Retrievals
Loss (in-distribution)
Loss Ood"
SEARCH,0.8424543946932007,"2 Search
4 Retrieval"
SEARCH,0.8441127694859039,Multi-head
SEARCH,0.845771144278607,"64
30k
2
-
-
0.28
1.00
28k
4
-
-
0.31
0.96
27k
8
-
-
0.39
0.96"
SEARCH,0.8474295190713101,"128
117k
2
-
-
0.08
0.95
109k
4
-
-
0.09
0.89
105k
8
-
-
0.14
0.95"
SEARCH,0.8490878938640133,"Compositional
64
30k
-
2
4
0.10
0.28
128
119k
-
2
4
0.08
0.37"
SEARCH,0.8507462686567164,"4 Search
8 Retrieval"
SEARCH,0.8524046434494196,Multi-head
SEARCH,0.8540630182421227,"128
113k
4
-
-
0.81
1.05
109k
8
-
-
0.80
0.93
106k
32
-
-
0.84
1.04"
SEARCH,0.8557213930348259,"256
439k
4
-
-
0.54
0.89
422k
8
-
-
0.57
0.83
410k
32
-
-
0.61
0.86"
SEARCH,0.857379767827529,"512
1.7M
4
-
-
0.45
0.70
1.6M
8
-
-
0.24
0.67
1.6M
32
-
-
0.25
0.75"
SEARCH,0.8590381426202321,"Compositional
128
118k
-
4
8
0.48
0.47
256
458k
-
4
8
0.31
0.18
512
1.8M
-
4
8
0.17
0.18"
SEARCH,0.8606965174129353,"4 Search
16 Retrieval"
SEARCH,0.8623548922056384,Multi-head
SEARCH,0.8640132669983416,"128
118k
4
-
-
0.91
1.00
112k
16
-
-
0.95
1.00
110k
64
-
-
0.99
1.01"
SEARCH,0.8656716417910447,"256
449k
4
-
-
0.77
0.91
424k
16
-
-
0.84
0.96
418k
64
-
-
0.92
0.98"
SEARCH,0.867330016583748,"512
1.7M
4
-
-
0.59
0.81
1.6M
16
-
-
0.67
0.83
1.6M
64
-
-
0.77
0.90"
SEARCH,0.8689883913764511,"Compositional
128
116k
-
4
16
0.67
0.88
256
442k
-
4
16
0.39
0.21
512
1.7M
-
4
16
0.20
0.24"
SEARCH,0.8706467661691543,"Table 6: Performance on the Contextual Retrieval task. Performance for different number of
searches and retrievals in ground truth data. Ablations are done on the number of heads and
dimensionality of the transformer dimension."
SEARCH,0.8723051409618574,"demonstrates that Compositional Attention not only converges faster but also does better in low-data
regime."
SEARCH,0.8739635157545605,"Qualitative Results. We visualize the activation pattern of our proposed model for the different
task setups in Figure 11 which shows that the model often specializes its retrievals according to the
ground-truth (up to a permutation). We further see in Figure 12 that sometimes the specialization
does not occur which is what we discuss in Section 5."
SEARCH,0.8756218905472637,"C.2
SORT-OF-CLEVR"
SEARCH,0.8772802653399668,"Dataset. Sort-of-CLEVR consist of 10k images, where each image is accompanied with 10 Non-
relational and 10 Relational questions. Non-relational questions tests the model ability to focus on the
properties of a “single” object like shape, horizontal location and vertical location. A few examples
for non-relational questions are (i)what is the shape of green object? (ii) what is the horizontal
location of the red object? (iii) what is the vertical location of yellow object? etc. On the other hand,
the relational questions tests the model’s ability to reason about the attributes of one or more objects.
A few examples for relational questions are (i) What is the shape of the object that is farthest from the
green object?, (ii) What is the shape of the object that is closest to the red object?”. A sample of the
dataset is shown in Figure 13 Each input image is of size 75 × 75 and it contains 6 square or circular
objects. Each object is colored using one of these 6 different colors (red, blue, green, orange, yellow,
gray) to make them visibly distinct. The accompanied questions (relational and non-relational) are
encoded in vector of size 11 where the ﬁrst six entries encode the color information, the next two
encode the question type and the last three encode the question sub-type all in one-hot way."
SEARCH,0.87893864013267,"Implementation Details. We use a 4-layered transformer with shared parameters and ablate with
transformer dimensions 32, 256 and 512 and ffn dimension as 64, 512, 1024 respectively. We consider
baseline with 4 and 8 heads and for the proposed model, we use 4 searches and ablate on 1 - 4
retrievals. We use 32 dimensions for the retrieval query and key dimensions. We train the model"
SEARCH,0.8805970149253731,Published as a conference paper at ICLR 2022
SEARCH,0.8822553897180763,"Figure 13: Sort-of-CLEVR. Samples from the dataset. Non-relational refers to unary type questions
and Relational refers to binary and ternary type questions. Source: Santoro et al. (2017)"
SEARCH,0.8839137645107794,"Algorithm
Dimensions
Heads
Unary Accuracy
Binary Accuracy
Ternary Accuracy"
SEARCH,0.8855721393034826,"Transformer
32
2
66.2±8.8
72.8±0.8
54.5±53.6
Compositional Transformer
-
74.1±13.2
73.7±2.0
53.6±0.8"
SEARCH,0.8872305140961857,"Transformer
256
4
98.6±0.2
84.4±5.3
64.9±3.3
8
98.5±0.2
84.5±6.0
65.4±4.7
Compositional Transformer
-
98.8±0.1
88.2±3.2
66.9±1.8"
SEARCH,0.8888888888888888,"Transformer
512
4
98.5±0.6
84.2±4.7
61.5±4.8
8
98.5±0.4
81.5±5.0
62.2±4.6
Compositional Transformer
-
98.9±0.3
84.5±5.0
62.1±4.3"
SEARCH,0.8905472636815921,"Table 7: Dimensions and Heads Ablation on Sort of CLEVR. We perform ablations with increased
number of dimensions and heads. For proposed model, we use 2 searches – 2 retrievals for 32
dimensional model and 4 searches – 2 retrievals for other dimensions."
SEARCH,0.8922056384742952,"with 0.0001 learning rate for 100 epochs. For all our experiments, we report the mean and standard
deviation over 5 seeds."
SEARCH,0.8938640132669984,"Figure 14: Sort-of-CLEVR Re-
trieval Activation.
Activation
statistics against the different types
of questions in the dataset."
SEARCH,0.8955223880597015,"Quantitative Results. Apart from the results presented in the
main paper, we also ablate on different capacities and different
number of heads in standard transformer. We highlight in Table
7 that our proposed attention mechanism works well across
differently sized models consistently and outperforms baselines
with more number of heads. We further illustrate in Table 8
that Compositional Attention also outperforms the standard
models with fewer searches and performs well even when the
retrieval dot-product attention is replaced by the MLP based
attention as outlined in the ablations Appendix B.7."
SEARCH,0.8971807628524047,"Qualitative Results. Here we perform analysis on the learned
models on the Sort-of-CLEVR dataset. We average the value
scores in Equation 13 over the entire test set and plot value
activation statistics of retrievals vs. the type of questions from
the task database in Figure 14. We note that there are distinct
differences in the activation pattern between unary, binary and
ternary type questions."
SEARCH,0.8988391376451078,"C.3
EQUILATERAL TRIANGLE DETECTION"
SEARCH,0.900497512437811,"This is a binary classiﬁcation task introduced by Ahmad & Omohundro (2009), where the aim is to
decide if the set of three point clusters in the image forms an equilateral triangle. The dataset consists
of 64 × 64 images with three randomly placed point clusters. For a triangle to be equilateral, the
midpoints of these clusters should be equidistant from each other."
SEARCH,0.9021558872305141,Published as a conference paper at ICLR 2022
SEARCH,0.9038142620232172,"Algorithm
Searches
Retrievals
Unary Accuracy
Binary Accuracy
Ternary Accuracy"
SEARCH,0.9054726368159204,"Transformer
4
4
98.6±0.2
84.4±5.3
64.9±3.3
8
8
98.5±0.2
84.5±6.0
65.4±4.7"
SEARCH,0.9071310116086235,"Compositional Transformer
4"
SEARCH,0.9087893864013267,"1
98.7±0.2
86.8±2.8
66.4±1.3
2
98.8±0.1
88.2±3.2
66.9±1.8
3
98.9±0.2
89.8±1.1
67.1±1.5
4
98.6±0.3
84.9±4.5
64.8±4.1"
SEARCH,0.9104477611940298,"Compositional Transformer - MLP
4"
SEARCH,0.912106135986733,"1
98.7±0.2
85.8±4.7
63.8±4.0
2
98.8±0.3
84.7±5.8
65.3±3.7
3
98.8±0.15
84.6±5.56
66.0±2.6
4
98.8±0.1
87.8±2.2
66.2±0.7"
SEARCH,0.9137645107794361,"Table 8: Compositional Transformer - MLP Ablation on Sort of CLEVR. We highlight that
our proposed model outperforms the baseline across the different question types even with lower
number of searches and/or retrievals even with the MLP ablation where the retrieval attention score is
computed by an MLP instead of dot-product acttention."
SEARCH,0.9154228855721394,"Algorithm
Searches
Retrievals
Test Accuracy"
SEARCH,0.9170812603648425,"Transformer
4
4
93.8±0.1"
SEARCH,0.9187396351575456,"Compositional Transformer
4
1
95.6±1.2
2
96.7±0.4
4
97.0±0.3"
SEARCH,0.9203980099502488,"Compositional Transformer - MLP
4
1
96.8±0.5
2
96.1±0.6
4
95.5±1.2"
SEARCH,0.9220563847429519,"Table 9: Performance on Equilateral Triangle
Detection. We perform ablations over the number
of retrievals and type of attention mechanism used
retrieval. Our proposed method outperforms the
baseline over multiple different setups."
SEARCH,0.9237147595356551,"Implementation Details. We follow the same
setup as Dosovitskiy et al. (2020) and treat this
as a classiﬁcation task.
Each image is split
into 4×4 patches which is encoded through an
MLP and incorporated with position encodings.
These are then fed to a 4-layered transformer
(with parameter sharing) along with the CLS
token which acts as the classiﬁcation head."
SEARCH,0.9253731343283582,"We set the hidden dimension of the transformer
as 256 and the ffn dimension as 512. We use
4 heads for the baseline and for the proposed
model we use 4 searches and ablate over 1, 2
and 4 retrievals. The retrieval queries and keys
are 32 dimensional (used in Equation 13). All the models are trained with a learning rate of 0.0001
for 200 epochs with cosine annealing, similar to Goyal et al. (2021b). For all our experiments, we
report the mean and standard deviation over 3 seeds."
SEARCH,0.9270315091210614,"Figure 15: Search-Retrieval Pair-
ing in Equilateral Triangle Detec-
tion. We visualize the activation
statistics of learned retrievals (X
axis) against learned searches show-
ing that Compositional Attention
can also learn tight pairing between
search and retrieval."
SEARCH,0.9286898839137645,"Qualitative Results. We illustrate in Figure 15 that Compo-
sitional Attention not only disentangles search and retrieval
but can also allow for tighter pairing between them if need be,
depending on the gradient signal. Thus, we see that it leads to
increased capacity because the pairing matrix (between search
and retrieval) is dynamic, context dependent and can be more
than just an identity matrix."
SEARCH,0.9303482587064676,"Quantitative Results. We see in Table 9 that the proposed
compositional attention outperforms the multi-head attention
baseline not only across different number of retrievals but also
on the MLP (Appendix B.7) ablation where the retrieval selec-
tion score is obtained through a simple linear network instead
of the dot-product attention mechanism. This shows that even
different ways of having this ﬂexible composition of search and
retrieval (apart from dot-product based) can lead to improved
performance."
SEARCH,0.9320066334991708,"C.4
MULTI-TASK IMAGE CLASSIFICATION"
SEARCH,0.9336650082918739,"Dataset. This task is composed of four datasets – CIFAR10, FahsionMNIST, SVHN and Equilateral
Triangle Detection. Given an image from one of these datasets, the model is tasked to make the
respective classiﬁcation prediction. We use random crop and horizontal ﬂips as data augmentation"
SEARCH,0.9353233830845771,Published as a conference paper at ICLR 2022
SEARCH,0.9369817578772802,"Figure 16: Logical Reasoning in ESBN Tasks. Illustration of the four tasks in the suite. (a)
Same/Different. Predict whether the two objects are identical or not; they are not in this case, (b)
RMTS. Match the relation in the context image to the two choices; here option 2 is the right answer
since similar to context objects, it also has two identical objects, (c) Distribution of 3. Find the
missing object with permutations rule; option 2 is the right answer since the square is in the context
objects and missing from the second row, and (d) Identity Rules. Find the missing object with ABA
rule; option 1 is the correct answer since it follows the same rule of identical objects on the edges.
Source: Webb et al. (2020)"
SEARCH,0.9386401326699834,"techniques. This task tests the model’s ability to learn multi-purpose representations that can be used
for performing well on multiple tasks that potentially share meaningful information."
SEARCH,0.9402985074626866,"Implementation Details. We train a 2-layered universal transformer with 4 heads. We set the hidden
dimension of the transformer as 256 and the ffn dimension as 512. For our proposed model, we keep
all the settings as the same, use 4 searches, and ablate over the number of retrievals. The image is
cropped into 4 × 4 patches and then fed into an encoder and augmented with positional information.
For prediction on each dataset, there is a learnable embedding that gets fed into the transformer along
with the cropped patches. The retrieval queries and keys are 16 dimensional and we use a learning
rate of 0.0001. For our experiments, we report the mean and standard deviation over 3 seeds."
SEARCH,0.9419568822553898,"Quantitative Results. We showcase in Table 2 that the proposed model outperforms the standard
multi-head attention across different number of retrievals."
SEARCH,0.9436152570480929,"C.5
LOGICAL REASONING IN ESBN TASKS"
SEARCH,0.945273631840796,"Dataset. This is a suite of four tasks – Same/Different, RMTS, Distribution of 3, and Identity
Rules (Webb et al., 2020). For each task, the model gets a sequence of objects as input with certain
relationship between them. This relationship depends upon the task and based on it, the model is
tasked to make a prediction. Further, the dataset consists of an OoD setup where the phrase m90, for
example, means that training is done on 10 unique objects and testing is done on the remaining 90
objects."
SEARCH,0.9469320066334992,"Same/Different. The model gets two objects as input and is tasked with predicting whether the two
objects are identical or not."
SEARCH,0.9485903814262023,"RMTS. Similar to Same/Different, we get three pair of objects. The ﬁrst pair is the context where the
ﬁrst two objects can be either same or different. The second and third pair are the options and the
model is tasked with choosing the pair which follows the same relationship as the ﬁrst pair. That is, if
the ﬁrst pair has identical objects, then the model should pick the pair with identical objects from
pair-2 and pair-3."
SEARCH,0.9502487562189055,"Distribution of 3. We ﬁrst get three objects as input and then get a permutation of those objects as
next inputs with the last object hidden. The model is tasked with predicting which object should ﬁll
the last location from a candidate set of four objects that are shown next. In short, the model must
choose an object from multiple choices which would make sure that the ﬁrst three objects and the
next three objects are permutations of each other."
SEARCH,0.9519071310116086,"Identity Rules. The input is given in the form of ABA where A and B are some unique objects. Similar
to Distribution of 3, the model then gets two more objects CD and has to choose object C from a
candidate set of four choices. That is, the model is tasked to learn the rule of identical peripheral
objects in ﬁlling up of the ﬁnal spot."
SEARCH,0.9535655058043118,Published as a conference paper at ICLR 2022
SEARCH,0.9552238805970149,"m0
m50
m85
m95
m98
0 20 40 60 80 100"
SEARCH,0.956882255389718,Accuracy
SEARCH,0.9585406301824212,Task: Same/Different
SEARCH,0.9601990049751243,"m0
m50
m85
m95"
SEARCH,0.9618573797678275,Task: RMTS
SEARCH,0.9635157545605307,"m0
m50
m85
m95
0 20 40 60 80 100"
SEARCH,0.9651741293532339,Accuracy
SEARCH,0.966832504145937,Task: Distribution of 3
SEARCH,0.9684908789386402,"m0
m50
m85
m95"
SEARCH,0.9701492537313433,Task: Identity Rules
SEARCH,0.9718076285240465,"Model
Multi-Head
Compositional-1
Compositional-2
Compositional-4
Compositional-6
Compositional-8"
SEARCH,0.9734660033167496,"Figure 17: Logical Reasoning in ESBN Tasks. We see that compositional attention outperforms
multi-head attention baseline over different number of retrievals, especially on Same/Different and
RMTS. Compositional-r refers to the proposed model with r retrievals."
SEARCH,0.9751243781094527,We refer the readers to Figure 16 for a visual demonstration of the four tasks.
SEARCH,0.9767827529021559,"Implementation Details. We follow the setup of Webb et al. (2020) 3 and train a single layered
transformer model as baseline and replace multi-head attention with compositional attention in our
proposed model. We compare the 8 head baseline model with 8 searches in the proposed model
ablated over different retrievals. We use a learning rate of 0.0001 and follow the initialization as well
as normalization schemes of the original codebase. We report the mean performance with standard
deviation over 10 seeds for each model."
SEARCH,0.978441127694859,"Quantitative Results. We notice substantial improvements of the proposed model over the baseline
on the Same/Different and RMTS task as illustrated in Figure 17, especially in the OoD setting. We
see marginal improvements on the Distribution of 3 and Identity Rules too."
SEARCH,0.9800995024875622,"C.6
SCAN TASK"
SEARCH,0.9817578772802653,"Dataset. The SCAN task (Lake & Baroni, 2018a) is aimed at systematically testing OoD performance
of various models. The task requires models to translate natural language inputs, eg. “jump opposite
left and walk thrice”, into a sequence of actions for a robotic agent to follow, eg. “LTURN LTURN
JUMP WALK WALK WALK”. In particular, we use the length extrapolation version of this task
where models are trained on shorter action sequences and are then evaluated on longer action
sequences. Thus, this task tests the capabilities of systematic generalization through compositions of
primitive actions. In particular, we follow the task split paradigm as set in Newman et al. (2020);
Csord´as et al. (2021) which aim to solve certain problems of the original split."
SEARCH,0.9834162520729685,"Implementation Details. We follow the implementation of Csord´as et al. (2021)4 and train a 3-
layered Universal Transformer model with 8 heads. We set the model dimensions as 128, the ffn"
SEARCH,0.9850746268656716,"3https://github.com/taylorwwebb/emergent symbols
4https://github.com/robertcsordas/transformer generalization"
SEARCH,0.9867330016583747,Published as a conference paper at ICLR 2022
SEARCH,0.988391376451078,"dimensions as 256 and the retrieval query and key dimensions as 32. All the models are trained with
the learning rate of 0.001."
SEARCH,0.9900497512437811,"Quantitative Results. The results for the task are showcased in Table 4 which illustrates that the
proposed model outperforms the baseline over multiple cutoff lengths, showing that the proposed
model is able to better generalize to compositional tasks."
SEARCH,0.9917081260364843,"C.7
LANGUAGE MODELLING"
SEARCH,0.9933665008291874,"We perform experiments on the WikiText-103 data corpus (Merity et al., 2016) for the language
modeling task. The corpus consists of 28,475 articles in its training split and 60 in the validation and
test split respectively and the task is to predict probabilities for next words, evaluated by perplexity."
SEARCH,0.9950248756218906,"Quantitative Results: We use 6-layered transformer models with parameter sharing and perform
our experiments on the fairseq codebase (Ott et al., 2019). We plot the validation perplexity against
epochs in Figure 7 which highlights that our proposed attention mechanism not only outperforms the
baseline but also converges faster. Further, we see that our proposed model obtains test perplexity
38.8±0.0 as opposed to baseline’s perplexity 39.6±0.3."
SEARCH,0.9966832504145937,"Implementation Details. We use the Ott et al. (2019)5 repository for both pre-processing of the
data as well as training. We use a transformer based model with 512 hidden dimensions and 2048
ffn dimensions. Our baseline has 8 heads, and our proposed model has 8 searches and 8 retrievals,
and trained with 32 dimensional retrieval queries and keys. We perform a hyperparameter sweep
on learning rates – 0.0005, 0.001, 0.002, 0.004 and 0.007. For both the baseline and the proposed
method, we choose the model with best validation perplexity (baseline - 0.002 and proposed - 0.004)
and then run additional seeds on the chosen learning rate."
SEARCH,0.9983416252072969,5https://github.com/pytorch/fairseq
