Section,Section Appearance Order,Paragraph
ABSTRACT,0.0,ABSTRACT
ABSTRACT,0.0016260162601626016,"The goal of the paper is to design active learning strategies which lead to domain
adaptation under an assumption of Lipschitz functions. Building on previous work
by Mansour et al. (2009) we adapt the concept of discrepancy distance between
source and target distributions to restrict the maximization over the hypothesis
class to a localized class of functions which are performing accurate labeling
on the source domain. We derive generalization error bounds for such active
learning strategies in terms of Rademacher average and localized discrepancy
for general loss functions which satisfy a regularity condition. A practical K-
medoids algorithm that can address the case of large data set is inferred from the
theoretical bounds. Our numerical experiments show that the proposed algorithm is
competitive against other state-of-the-art active learning techniques in the context of
domain adaptation, in particular on large data sets of around one hundred thousand
images."
INTRODUCTION,0.0032520325203252032,"1
INTRODUCTION"
INTRODUCTION,0.004878048780487805,"Machine learning models trained on a labeled data set from a source domain may fail to generalize on
new target domains of interest (Saenko et al., 2010). This issue, which can be caused by domain shift,
can be handled when no target labels are available through unsupervised domain adaptation methods
(Ganin et al., 2016). Using a small sample of labeled target data can, besides, greatly improve the
model performances (Motiian et al., 2017). Acquiring such new labels is often expensive (Settles,
2010) and one seeks to query as few labels as possible. This explains why strategies of optimal
labels acquisition, referred as active learning (Cohn et al., 1994) seem very promising for domain
adaptation (Su et al., 2020)."
INTRODUCTION,0.0065040650406504065,"Active learning is a challenging task and a broad literature exists. On the one hand, some active
learning methods introduce heuristic approaches which provide the benefit of using practical algorithm
based on simple criteria. For instance, the spatial coverage of the target domain (Hu et al., 2010;
Bod´o et al., 2011) or the minimization of target uncertainties (RayChaudhuri & Hamey, 1995; Gal
et al., 2017) are considered, as well as combination of these heuristics (Wei et al., 2015; Kaushal et al.,
2019). However finding the proper heuristics is not straightforward and previous methods do not
link their query strategy with the target risk (Viering et al., 2019). On the other hand, active learning
methods based on distribution matching aim at minimizing a distribution distance between the labeled
set and the unlabeled one (Balcan et al., 2009; Wang & Ye, 2015; Viering et al., 2019). These
methods provide theoretical guarantees on the target risk through generalization bounds. However
the computation of the distances is either not scalable to large-scale data sets (Balcan et al., 2009;
Wang & Ye, 2015; Viering et al., 2019) or based on adversarial training (Su et al., 2020; Shui et al.,
2020) which involves complex hyper-parameter calibration (Kurach et al., 2019)."
INTRODUCTION,0.008130081300813009,"In this work, we propose to address the issue of active learning for general loss functions under domain
shift through a distribution matching approach based on discrepancy minimization (Mansour et al.,
2009). In Section 2, we derive theoretical results by adopting a localized discrepancy distance (Zhang
et al., 2020) between the labeled and unlabeled empirical distributions. This localized discrepancy is
defined as the plain discrepancy considered on a hypothesis space restricted to hypotheses close to
the labeling function on the labeled data set. This distance has the benefit to focus only on relevant"
INTRODUCTION,0.00975609756097561,∗Correspondence at antoine.de-mathelin-de-papigny@michelin.com
INTRODUCTION,0.011382113821138212,Published as a conference paper at ICLR 2022
INTRODUCTION,0.013008130081300813,"candidates for approximating the labeling function and thus provides tighter bound of the target
risk under some given assumptions (Zhang et al., 2020). Based on this distance, we provide a
generalization bound of the target risk involving pairwise distances between sample points (Theorem
1). Inspired by this generalization error bound, we propose in Section 3 an accelerated K-medoids
query algorithm which scales to large data set. In Section 4, we present the related works and
analytically show that our proposed approach displays tighter theoretical control of the target risk
than the one provided by recent active learning methods. We finally present in Section 5 the benefit
of the proposed approach on several empirical regression and classification active learning problems
in the context of domain adaptation."
DISCREPANCY BASED ACTIVE LEARNING,0.014634146341463415,"2
DISCREPANCY BASED ACTIVE LEARNING"
DISCREPANCY BASED ACTIVE LEARNING,0.016260162601626018,"Setup and theory develop in this section mainly focus on regression tasks. Section 4.3 presents how
the algorithm derived from the theoretical results can be extended to classification tasks."
SETUP AND DEFINITIONS,0.01788617886178862,"2.1
SETUP AND DEFINITIONS"
SETUP AND DEFINITIONS,0.01951219512195122,"Given two subsets X ⊂Rp and Y ⊂Rq and d : X ×X →R+ a distance on X, we denote the source
data set S = {x1, ..., xm} ∈X m and the target data set T = {x′
1, ..., x′
n} ∈X n. We consider the
domain shift setting where the respective data sets S and T are drawn according to two different
distributions Q and P on X. We consider a loss function L : Y × Y →R+ and a hypothesis space
H of k-Lipschitz functions from X to Y. We denote by LD(h, h′) = Ex∼D[L(h(x), h′(x))] the
average loss (or risk) over any distribution D on X between two hypotheses h, h′ ∈H. We also
define the expected Rademacher complexity of H for the distribution P as:"
SETUP AND DEFINITIONS,0.02113821138211382,"Rn(H) =
E
{x′
i}i∼P """
SETUP AND DEFINITIONS,0.022764227642276424,"E
{σi}i∼U """
SETUP AND DEFINITIONS,0.024390243902439025,"sup
h∈H"
N,0.026016260162601626,"1
n n
X"
N,0.027642276422764227,"i=1
σih(x′
i) ## ,"
N,0.02926829268292683,"with σi drawn according to U the uniform distribution on {−1, 1}."
N,0.030894308943089432,"We consider a labeling function for each distribution: fQ : X →Y and fP : X →Y. For adaptation
to be possible, the two labeling functions are supposed to be close (Mansour et al., 2009). We finally
consider the single-shot batch active learning framework (Viering et al., 2019) where all queried data
are picked in one single batch of fixed budget of K > 0 queries. In this framework, an active learning
algorithm takes as inputs the source data set S along with its corresponding recorded labels as well as
the target data set T . The algorithm then returns a batch of K queried target data denoted TK ⊂T .
The corresponding labels for TK are then recorded through an oracle and used along with the source
labeled data to fit an hypothesis h ∈H. We denote by LK = S ∪TK the labeled data set. The goal
is to select the K target data to label in order to minimize the target risk of h : LP (h, fP )."
LOCALIZED DISCREPANCY,0.032520325203252036,"2.2
LOCALIZED DISCREPANCY"
LOCALIZED DISCREPANCY,0.03414634146341464,"To formulate the problem of active learning under domain shift as a distribution matching problem,
one needs to consider a measure of divergence between distributions. Recent interest focuses on
the discrepancy (Mansour et al., 2009) which proves to be useful for domain adaptation (Cortes &
Mohri, 2014; Zhang et al., 2019) and is recently used on the active learning setting (Viering et al.,
2019). However this metric, defined as a maximal difference between domain losses over the whole
hypothesis space, is relatively conservative as it includes hypotheses that the learner might not ever
consider as candidates for the labeling function (Cortes et al., 2019c; Zhang et al., 2020). Based on
this consideration, we introduce a localized discrepancy (Zhang et al., 2020) to restrict the measure of
divergence between domains on a set of relevant candidate hypotheses for approximating the labeling
function:
Definition 1. Localized Discrepancy. Let K > 0 be the number of queries and ϵ ≥0. Let TK be a
queried batch of size K, the empirical distributions of LK = S ∪TK and T are respectively denoted
bQK and bP. Let H be a hypothesis space and L a loss function. The localized discrepancy is defined
as:
discHK
ϵ ( bQK, bP) =
max
h,h′∈HK
ϵ
|L b
QK(h, h′) −L b
P (h, h′)| ,
(1)"
LOCALIZED DISCREPANCY,0.03577235772357724,"with HK
ϵ = {h ∈H; L(h(x), fQ(x)) ≤ϵ ∀x ∈LK}"
LOCALIZED DISCREPANCY,0.03739837398373984,Published as a conference paper at ICLR 2022
LOCALIZED DISCREPANCY,0.03902439024390244,"The localized space HK
ϵ includes hypotheses ”consistent” with fQ on the labeled data, i.e. hypotheses
fitting the labeled data with an error below ϵ. The parameter ϵ drives the size of HK
ϵ . Obviously, ϵ
needs to be high enough to ensure that HK
ϵ is not an empty subset. Under appropriate assumptions
on ϵ, a preliminary result is an empirical target risk bound for the localized discrepancy:"
LOCALIZED DISCREPANCY,0.04065040650406504,"Proposition 1. Let K > 0 be the number of queries and H a hypothesis space. Let bP and bQK be the
empirical distributions of the respective sets T and LK = S ∪TK of respective size n and m + K.
We assume that L is a symmetric, µ-Lipschitz and bounded loss function verifying the triangular
inequality. We denote by M the bound of L. Let ηH be the ideal maximal error on S ∪T :"
LOCALIZED DISCREPANCY,0.04227642276422764,"ηH
∆= min
h∈H max
x∈S∪T [L(h(x), fQ(x)) + L(h(x), fP (x))]
(2)"
LOCALIZED DISCREPANCY,0.04390243902439024,"Then, for any ϵ ≥ηH, any hypothesis h ∈HK
ϵ and any δ > 0, the following generalization bound
holds with at least probability 1-δ:"
LOCALIZED DISCREPANCY,0.04552845528455285,"LP (h, fP ) ≤L b
QK(h, fQ) + discHK
ϵ ( bQK, bP) + ηH + 2µRn(H) + M   s"
LOCALIZED DISCREPANCY,0.04715447154471545,log( 1
LOCALIZED DISCREPANCY,0.04878048780487805,"δ )
2n "
LOCALIZED DISCREPANCY,0.05040650406504065,".
(3)"
LOCALIZED DISCREPANCY,0.05203252032520325,"This bound share a similar form than the one derived in Cortes et al. (2019c) for the discrepancy. The
ideal maximal error ηH characterizes the difficulty of the adaptation problem as well as the ability to
learn the labeling functions with the considered hypothesis set H. If fP and fQ significantly differ
on S ∪T , ηH will be high and the proposed bound will lack of informativeness. We then follow
the common domain adaptation assumption that the difference between the two functions is small
(Mansour et al., 2009; Zhang et al., 2020)."
LOCALIZED DISCREPANCY,0.05365853658536585,"2.3
MAIN RESULTS: GENERALIZATION BOUNDS FOR ACTIVE LEARNING"
LOCALIZED DISCREPANCY,0.055284552845528454,"Considering the previous bound (Proposition 1) it appears that a natural way of choosing the K
queries in an active learning perspective is to pick the target data minimizing the localized discrepancy.
Unfortunately this is a difficult problem for an arbitrary functional space H, since it leads to compute
a maximum over the set space HK
ϵ . Our main idea is then to further bound the localized discrepancy
with a computable criterion:
Theorem 1. Let K > 0 be the number of queries, H a hypothesis space of k-Lipschitz functions and
ϵ ≥ηH. Let LK = S ∪TK be the labeled set and T the target set drawn according to P. We assume
that L is a symmetric, µ-Lipschitz and bounded loss function verifying the triangular inequality. We
define M such that L(y, y′) ≤M for any y, y′ ∈Y. For any hypothesis h ∈HK
ϵ and any δ > 0, the
following generalization bound holds with at least probability 1-δ:"
LOCALIZED DISCREPANCY,0.056910569105691054,"LP (h, fP ) ≤L b
QK(h, fQ) + 2kµ n X"
LOCALIZED DISCREPANCY,0.05853658536585366,"x′∈T
d(x′, LK) + 2ϵ + ηH + 2µRn(H) + s"
LOCALIZED DISCREPANCY,0.06016260162601626,M 2 log( 1
LOCALIZED DISCREPANCY,0.061788617886178863,"δ )
2n
(4)"
LOCALIZED DISCREPANCY,0.06341463414634146,"With d(x′, LK) = minx∈LK d(x′, x) and d(x′, x) the distance from x to x′."
LOCALIZED DISCREPANCY,0.06504065040650407,"Visual insights to understand Theorem 1 are presented in Figure 1 : the main idea is to approximate
the maximal hypotheses h, h′ ∈HK
ϵ returning the localized discrepancy by the k-Lipschitz envelope
of the labeling function fQ, consistent with fQ on the labeled points, i.e. at most ϵ close to fQ on
these points. Indeed, for any target point x′ ∈T , the gap between h, h′ on x′ : L(h′(x′), h(x′)) is
upper bounded by twice the distance from x′ to its closest labeled point times the Lipschitz constants
of L, h and h′ plus the error on the labeled point : L(h′(x′), h(x′)) ≤2kµ d(x′, LK) + 2ϵ."
LOCALIZED DISCREPANCY,0.06666666666666667,"The generalization bound of Theorem 1 highlights the trade-off that exists between the Lipschitz
constant k of the hypothesis space H and the parameters ηH and ϵ. To reduce the term 2ϵ + ηH
in order to obtain tighter controls over the target risk, one needs to consider a more complex set
of hypothesis and thus to increase the Lipschitz constant k. Then, to benefit from the theoretical
guarantees of this bound, a careful choice of hypothesis set have to be made (cf Section 4.3)."
LOCALIZED DISCREPANCY,0.06829268292682927,The important benefit of the derived bound is to bring out the bounding criterion P
LOCALIZED DISCREPANCY,0.06991869918699187,"x′∈T d(x′, LK)
which is independent of the hypothesis complexity (characterized by k) and the loss function, it only
involves pairwise distances between sample points. As this criterion is computable and depends on
the queried batch TK, we can then propose an active learning strategy."
LOCALIZED DISCREPANCY,0.07154471544715447,Published as a conference paper at ICLR 2022
LOCALIZED DISCREPANCY,0.07317073170731707,"Figure 1: Visual insights of Theorem 1 : Any potential candidate for fP in HK
ϵ
returns values
between h and h′ : two hypotheses ϵ close to fQ on the labeled points and with slopes of factor
k everywhere. Thus, an approximation of the localized discrepancy is given by the mean of gaps
between h and h′ (mean length of orange arrows) which can be approximated by the distance to the
labeled set in X times k. The best target point to label is chosen in order to minimize this sum."
DISCREPANCY-BASED ALGORITHM,0.07479674796747968,"3
DISCREPANCY-BASED ALGORITHM"
DISCREPANCY-BASED ALGORITHM,0.07642276422764227,Theorem 1 directly implies that selecting the K queries minimizing P
DISCREPANCY-BASED ALGORITHM,0.07804878048780488,"x′∈T d(x′, LK) leads to
minimize an upper bound of the target risk. We can thus propose an algorithm dedicated to active
learning which provides theoretical guarantees on the target risk."
DISCREPANCY-BASED ALGORITHM,0.07967479674796749,Seeking the K queries minimizing P
DISCREPANCY-BASED ALGORITHM,0.08130081300813008,"x′∈T d(x′, LK) corresponds to solve a K-medoids problem
(Kaufmann & Rousseeuw, 1987). Notice however that it does not consist of a K-medoids performed
directly on the target domain as the source data are already labeled and considered as medoids. The
presented algorithm only differs in the initialization process, where the distance between each target
and its nearest source neighbour needs to be computed."
DISCREPANCY-BASED ALGORITHM,0.08292682926829269,"Several algorithms exist to solve or approximate the K-medoids (Kaufman & Rousseeuw, 2009), (Ng
& Han, 2002), (Park & Jun, 2009). Here we use the greedy version of the algorithm. It can be shown
that the gain of the greedy algorithm (the amount of decrease of the criterion by selecting K points)
is at least a (1 −1/e)-approximation of the optimal gain (cf Appendix)."
DISCREPANCY-BASED ALGORITHM,0.08455284552845528,"It is well known that K-medoids algorithms suffer from computational burdens or memory issues on
large and moderately large data sets (∼100K data) (Newling & Fleuret, 2017). Indeed they require
to compute huge pairwise distance matrix between the source and target samples as well as between
targets. Precisely, the greedy K-medoids algorithm presents a complexity of O(p(nm + n2) + Kn2)
and a memory usage of O(nm + n2) with m, n, K the respective size of S, T and TK. p is the
dimension of X."
DISCREPANCY-BASED ALGORITHM,0.08617886178861789,"To handle this issue, we propose an adaptation of the K-medoids greedy algorithm with better
scalability (Algorithm 1). This algorithm performs the following steps:"
DISCREPANCY-BASED ALGORITHM,0.08780487804878048,"1) Computation of the distance to the closest source for each target points via a KD-trees random
forest algorithm (Silpa-Anan & Hartley, 2008) of complexity O(T(m + pn) log(m)2) with T the
number of trees."
DISCREPANCY-BASED ALGORITHM,0.08943089430894309,"2) Medoids initialization using the greedy algorithm on a random target batch of B samples with
complexity O((K + p)B2)."
DISCREPANCY-BASED ALGORITHM,0.0910569105691057,"3) An iterative algorithm on the model of (Park & Jun, 2009), combining assignment of each target
point to its closest medoid (O(Kpn)) and medoid update inside each cluster."
DISCREPANCY-BASED ALGORITHM,0.09268292682926829,"4) The medoid update for each cluster is done through an original Branch-and-Bound algorithm
(Land & Doig, 2010) which estimates the criterion by iteration over mini-batch, target points for
which criterion is bigger than a statistical threshold are left aside. Thus, the number of pairwise"
DISCREPANCY-BASED ALGORITHM,0.0943089430894309,Published as a conference paper at ICLR 2022
DISCREPANCY-BASED ALGORITHM,0.0959349593495935,"distances to compute is reduced at each iteration until the maximal iteration number is reached or all
target points are left aside. Under some assumptions, we can show that the complexity of the update
for all cluster is O(n3/2K−1/2) (the proof is given in the supplementary material)."
DISCREPANCY-BASED ALGORITHM,0.0975609756097561,"The overall complexity is then O(T(m + pn) log(m)2 + (K + p)B2 + Kpn + pn3/2K−1/2) which
provides reasonable computational time for moderately large data set (n, m ∼105 and p ∼103).
Empirical comparison of computational time is also provided in the supplementary material."
DISCREPANCY-BASED ALGORITHM,0.0991869918699187,Algorithm 1 Accelerated K-medoids
DISCREPANCY-BASED ALGORITHM,0.1008130081300813,"1: {d(x′, S)}x′∈T ←KDT-Forest-Nearest-Neighbour(S, T )
# Compute distances to source
2: TK = {x∗
i }i=1..K ←Kmedois-Greedy(T , B, K, {d(x′, S)}x′∈T )
# Initialize medoids
3: Ci ←{x′ ∈T | d(x′, x∗
i ) = min
j=1..Kd(x′, x∗
j) ∧d(x′, S)}
# Assign targets to closest cluster"
DISCREPANCY-BASED ALGORITHM,0.1024390243902439,"4: while any medoid x∗
i can be updated do
5:
for i from 1 to K do
6:
x∗
i = argmin
x′∈Ci P"
DISCREPANCY-BASED ALGORITHM,0.1040650406504065,"x′′∈Ci
d(x′, x′′) ←Branch-and-Bound(Ci)
# Update medoid"
DISCREPANCY-BASED ALGORITHM,0.10569105691056911,"7:
end for
8:
For all x′ ∈T , compute d(x′, x∗
i ) for all updated medoids and reassign x′ to the closest Ci
9: end while"
RELATED WORK AND DISCUSSION,0.1073170731707317,"4
RELATED WORK AND DISCUSSION"
RELATED WORK,0.10894308943089431,"4.1
RELATED WORK"
RELATED WORK,0.11056910569105691,"Active learning as distribution matching. Active learning methods based on distribution matching
aim at reducing the gap between the distributions of the labeled sample and the unlabeled one with
a minimal query budget. Several metrics are used to measure the gap between distributions as
the Transductive Rademacher Complexity (Gu & Han, 2012), the MMD (Wang & Ye, 2015; Kim
et al., 2016; Viering et al., 2019) the Disagreement Coefficient (Hanneke, 2007; Balcan et al., 2009;
Beygelzimer et al., 2009; Cortes et al., 2019a;b; 2020), the H-divergence (Sinha et al., 2019; Gissin
& Shalev-Shwartz, 2019; Su et al., 2020) or the Wasserstein distance (Shui et al., 2020). To the
best of our knowledge, only one paper deals with the discrepancy for active learning (Viering et al.,
2019). The authors consider the discrepancy on the space of RKHS hypotheses with PSD kernels
and provide an explicit way of computing the discrepancy using eigen-value analysis. However, the
corresponding algorithm encounters computational burden and could hardly be applied on large sets."
RELATED WORK,0.11219512195121951,"K-medoids for active learning. Many active learning methods use a K-medoids algorithm as an
heuristic measure of representativeness (Lin et al., 2009; Gomes & Krause, 2010; Wei et al., 2013;
Iyer & Bilmes, 2013; Zheng et al., 2014). The K-medoids is in general computed on a smaller set of
selected targets with the higher uncertainties (Wei et al., 2015; Kaushal et al., 2019). In this present
work, we provide theoretical insights for this algorithm by highlighting the link with discrepancy
minimization."
RELATED WORK,0.11382113821138211,"Active learning for domain adaptation. Our work is related to the recent advances on active learning
for domain adaptation as we also consider the domain shift hypothesis (Rai et al., 2010; Saha et al.,
2011; Deng et al., 2018; Su et al., 2020). These works use in general the output of a domain classifier
to measure the informativeness of target samples. In our work, we consider instead the distance to
the source sample to capture informative target data."
RELATED WORK,0.11544715447154472,"Lipschitz consistent functions for active learning. In the context of function optimization, some
methods consider the set of Lipschitz or locally Lipschitz functions consistent with the observations
(Valko et al., 2013; Grill et al., 2015; Malherbe & Vayatis, 2017). We use similar functions to
approximate the maximal hypotheses returning the localized discrepancy. Notice that the goal of the
previous papers differ from ours as they aim at finding the maximum of the labeling function."
COMPARISON WITH EXISTING GENERALIZATION BOUNDS FOR ACTIVE LEARNING,0.11707317073170732,"4.2
COMPARISON WITH EXISTING GENERALIZATION BOUNDS FOR ACTIVE LEARNING"
COMPARISON WITH EXISTING GENERALIZATION BOUNDS FOR ACTIVE LEARNING,0.11869918699186992,"Some previous works on active learning also propose theoretical bound on the target risk. In
this section, we will compare them with our derived bound of equation (4) in order to relate our"
COMPARISON WITH EXISTING GENERALIZATION BOUNDS FOR ACTIVE LEARNING,0.12032520325203253,Published as a conference paper at ICLR 2022
COMPARISON WITH EXISTING GENERALIZATION BOUNDS FOR ACTIVE LEARNING,0.12195121951219512,"contribution with existing works. As their framework is the pure active learning setting which
differs from the setting consider here, we make the comparisons under the simplifying assumptions:
f = fP = fQ, f ∈H and ϵ = 0. In this case, our bound is written:"
COMPARISON WITH EXISTING GENERALIZATION BOUNDS FOR ACTIVE LEARNING,0.12357723577235773,"LP (h, f) ≤(2kµ/n)
X"
COMPARISON WITH EXISTING GENERALIZATION BOUNDS FOR ACTIVE LEARNING,0.12520325203252033,"x′∈T
d(x′, LK) + 2µRn(H) +
p"
COMPARISON WITH EXISTING GENERALIZATION BOUNDS FOR ACTIVE LEARNING,0.12682926829268293,"M 2 log(1/δ)/2n
(5)"
COMPARISON WITH EXISTING GENERALIZATION BOUNDS FOR ACTIVE LEARNING,0.12845528455284552,"The paper by Sener & Savarese (2018) proposes the K-centers algorithm for active learning based on
an easily computable criterion offering theoretical guarantees. For a regression loss L and under the
previous assumptions, it controls the target risk as follows:"
COMPARISON WITH EXISTING GENERALIZATION BOUNDS FOR ACTIVE LEARNING,0.13008130081300814,"LP (h, f) ≤2kµ max
x′∈T d(x′, LK) + 2µRn(H) + O
p"
COMPARISON WITH EXISTING GENERALIZATION BOUNDS FOR ACTIVE LEARNING,0.13170731707317074,"M 2 log(1/δ)/2n

(6)"
COMPARISON WITH EXISTING GENERALIZATION BOUNDS FOR ACTIVE LEARNING,0.13333333333333333,"We directly observe that this bound is looser than the one of equation (5). Indeed, in our case the
target risk is controlled with the mean of distances between unlabeled points and the labeled set
whereas K-centers considers the maximum of these distances. Notice however that both algorithms
use greedy selection approximation. Thus, in some cases, the queries from K-centers may lead to a
smaller bound than the ones from K-medoids."
COMPARISON WITH EXISTING GENERALIZATION BOUNDS FOR ACTIVE LEARNING,0.13495934959349593,"A generalization bound for active learning involving the Wasserstein distance W1 has also been
proposed (Shui et al., 2020). An adaptation of this bound for the proposed scenario with the
aforementioned assumptions could be written as follows:"
COMPARISON WITH EXISTING GENERALIZATION BOUNDS FOR ACTIVE LEARNING,0.13658536585365855,"LP (h, f) ≤2kµW1( bQK, bP) + 2µRn(H) + O
p"
COMPARISON WITH EXISTING GENERALIZATION BOUNDS FOR ACTIVE LEARNING,0.13821138211382114,"M 2 log(1/δ)/2n
"
COMPARISON WITH EXISTING GENERALIZATION BOUNDS FOR ACTIVE LEARNING,0.13983739837398373,"Where W1( bQK, bP) = arg minγ∈Γ
P"
COMPARISON WITH EXISTING GENERALIZATION BOUNDS FOR ACTIVE LEARNING,0.14146341463414633,"x∼b
QK
P"
COMPARISON WITH EXISTING GENERALIZATION BOUNDS FOR ACTIVE LEARNING,0.14308943089430895,"x′∼b
P γxx′d(x, x′) with Γ = {γ ∈Rn×(m+K) ; γ1 =
1
n1 ; γT 1 =
1
m+K 1}."
COMPARISON WITH EXISTING GENERALIZATION BOUNDS FOR ACTIVE LEARNING,0.14471544715447154,"Thus, in observing that d(x, x′) ≥d(x′, LK) for any x′ ∈T and x ∈LK we can show that our
presented bound of equation (5) is tighter than the one above."
DISCUSSION ABOUT THE ASSUMPTIONS AND LIMITATIONS,0.14634146341463414,"4.3
DISCUSSION ABOUT THE ASSUMPTIONS AND LIMITATIONS"
DISCUSSION ABOUT THE ASSUMPTIONS AND LIMITATIONS,0.14796747967479676,"One crucial point of the present work is the setting of the ϵ parameter of the hypothesis set HK
ϵ .
In practice, the parameter ϵ is determined by the hypothesis set and the training algorithm that the
learner considers. For instance, if the learner uses over-parameterized hypotheses overfitted on the
labeled data set, the parameter ϵ will be small because for any h, h(x) ≃fQ(x) on LK. This could
leads to ϵ < ηH and the bound would not be valid anymore. This highlights the trade-off between
fitting the source data and generalizing to the target domain. As, in practice, the parameter ηH is hard
to estimate, choosing larger ϵ (by regularizing the hypotheses) is safer, but will lead to larger bounds."
DISCUSSION ABOUT THE ASSUMPTIONS AND LIMITATIONS,0.14959349593495935,"To deal with this difficulty, we use, in our experiments, a set of neural networks H regularized through
weight clipping. The value of the clipping parameter is directly linked to the Lipschitz constant of H.
By selecting an adequate clipping parameter and network architecture, we ensure that H is complex
enough to learn the task on the source domain but sufficiently regularized to avoid over-fitting (and
thus avoid ϵ < ηH). For this purpose, we select the architecture and the clipping parameter through
validation on the source labeled data."
DISCUSSION ABOUT THE ASSUMPTIONS AND LIMITATIONS,0.15121951219512195,"Regularity assumptions on the loss function L are essentially verified by norms as the Lp which are
common losses for regression problems. However, they are are not verified by most classification
losses. In fact, classification loss as the cross-entropy is bounded between 0 and 1 and can not increase
linearly with the distance to the closest labeled point. In this context, considering target points far
away from sources as informative points is not efficient. In fact, the most interesting points are the
ones in the margin between classes (Balcan et al., 2007). Thus, in order to focus the K-medoids
selection in the margin, and thus extent the proposed algorithm to classification task, we propose
an improved version of our algorithm, the Weighted K-medoids (K-medoids+W). This algorithm
performs the K-medoids algorithm with a weighted criterion. To compute the weights, we consider
the Best-vs-Second-Best (BVSB) criterion (Joshi et al., 2009) which is the difference between the
probabilities of the best class and the second best class, given by a hypothesis pre-trained on the
source data set. The Weighted K-medoids optimization can be written as follows:"
DISCUSSION ABOUT THE ASSUMPTIONS AND LIMITATIONS,0.15284552845528454,"min
TK X"
DISCUSSION ABOUT THE ASSUMPTIONS AND LIMITATIONS,0.15447154471544716,"x′∈T
bvsb(x′)
min
x∈S∪TK d(x, x′)
(7)"
DISCUSSION ABOUT THE ASSUMPTIONS AND LIMITATIONS,0.15609756097560976,Published as a conference paper at ICLR 2022
EXPERIMENTS,0.15772357723577235,"5
EXPERIMENTS"
EXPERIMENTS,0.15934959349593497,"We choose to compare the performances of our algorithm to classical active learning methods on
regression and classification problems in a domain shift context. We consider the single-batch active
learning setting (Viering et al., 2019) where all queries are taken at the same time in one batch. We
compare the results obtained on the target domain for different query and training methods. The
experiments have been run on a (2.7GHz, 16G RAM) computer. The source code is provided on
GitHub 1. We use the open source code of the corresponding authors for BADGE (Ash et al., 2019)
and the implementations from ADAPT2 (de Mathelin et al., 2021) for the domain adaptation methods."
COMPETITORS,0.16097560975609757,"5.1
COMPETITORS"
COMPETITORS,0.16260162601626016,"We compare the proposed approach with the following query methods : Random Sampling; K-
means (Hu et al., 2010); K-centers (Sener & Savarese, 2018); Diversity (Jain & Grauman, 2016);
QBC (RayChaudhuri & Hamey, 1995); BVSB (Joshi et al., 2009); AADA (Su et al., 2020) : an
hybrid active learning method for domain adaptation using a combination of entropy measure from
a classifier and the outputs of a domain discriminator; BADGE (Ash et al., 2019): an hybrid deep
active learning method optimizing for both uncertainty and diversity. CLUE (Prabhu et al., 2020) an
active domain adaptation strategy that select instances that are both uncertain and diverse."
COMPETITORS,0.16422764227642275,"We select four different training methods Uniform Weighting; Balanced Weighting : Assign
balanced total weight between source and target instances; TrAdaBoost (Pardoe & Stone, 2010) :
Transfer learning regression method based on a reverse boosting principle; Adversarial training :
unsupervised features transformation on the model of DANN (Ganin et al., 2016)."
COMPETITORS,0.16585365853658537,"To make a fair comparison between the different query strategies, we use for all experiments, the
same set of training hypotheses H. We define H as the set of neural networks composed of two fully
connected hidden layers of 100 neurons, with ReLU activations and projection constraints on the
layer norms (< 1.). We use the Adam optimizer (Kingma & Ba, 2015). The network architecture
is defined to be complex enough that the network provides a good approximation of the labeling
function on the source domain in all experiments. Besides, for each experiment, fine-tuning of
the optimization hyper-parameters (epochs, batch sizes...) is performed using only source labeled
data. We assume that the architecture and the resulting hyper-parameters will still be appropriate
after adding the queried target data to the training set (see Section 4.3). Finally, for distance-based
algorithm, we consider the L1 distance computed in the penultimate layer of a network pre-trained
on sources. We use an ensemble of 10 models in QBC and the greedy version of K-centers."
SUPERCONDUCTIVITY DATA SET,0.16747967479674797,"5.2
SUPERCONDUCTIVITY DATA SET"
SUPERCONDUCTIVITY DATA SET,0.16910569105691056,"As there is very few public data sets for domain adaptation with regression tasks (Teshima et al.,
2020), we choose an UCI data set with a reasonable amount of instances and split it in different
domains using the setup of (Pardoe & Stone, 2010). We choose Superconductivity (Hamidieh, 2018;
Dua & Graff, 2017) which is composed of features extracted from superconductors chemical formula.
The task consists in predicting their critical temperature."
SUPERCONDUCTIVITY DATA SET,0.17073170731707318,"Experimental setup: The data set is divided in four domains following (Pardoe & Stone, 2010) : low
(l), middle-low (ml), middle-high (mh) and high (h) of around 4000 instances and 166 features. We
use a learning rate of 0.001, a number of epochs of 100, a batch size of 128 and the mean squared
error as loss function. We conduct an experiment for the 12 pairs of domains. We vary K from 5 to
300 and repeated each experiment 8 times with different random seeds. We report the mean absolute
error (MAE) on the target unlabeled data for all experiments when K = 20 in Table 1. We present
the MAE evolution for the adaptation from mh to h in Figure 2."
SUPERCONDUCTIVITY DATA SET,0.17235772357723578,"Results: We observe on Figure 2 that, for any K > 0, the K-medoids algorithm presents the lowest
MAE on the target data for the three different training methods. In particular we observe a significant
performance gain of K-medoids when using TrAdaBoost which provides the lowest MAE for the
majority of fixed budget K compared to other training methods. These observations are confirmed on
Table 1 where we observe that K-medoids presents the lowest MAE in 11 experiments over 12. We"
SUPERCONDUCTIVITY DATA SET,0.17398373983739837,"1https://github.com/antoinedemathelin/dbal
2https://github.com/adapt-python/adapt"
SUPERCONDUCTIVITY DATA SET,0.17560975609756097,Published as a conference paper at ICLR 2022
SUPERCONDUCTIVITY DATA SET,0.1772357723577236,"Table 1: MAE on the critical temperature for the Superconductivity experiments with Balanced
Weighting and K = 20. Standard deviation are given in the supplementary material."
SUPERCONDUCTIVITY DATA SET,0.17886178861788618,"Experiment
l→ml
l→mh
l→h
ml→l
ml→mh
ml→h
mh→l
mh→ml mh→h
h→l
h→ml
h→mh"
SUPERCONDUCTIVITY DATA SET,0.18048780487804877,"Random
15.33
15.80
17.45
16.53
11.39
14.70
17.65
12.83
10.36
18.75
14.86
10.54
Kmeans
14.43
13.60
13.98
15.79
10.19
12.73
17.18
12.67
10.02
22.10
14.69
9.76
QBC
20.00
19.03
20.08
15.89
12.24
15.31
20.78
12.87
10.19
31.88
18.86
10.65
Kcenters
19.21
15.73
16.85
15.75
11.62
13.44
22.17
12.74
10.24
36.50
19.60
10.39
Diversity
19.46
18.21
18.68
16.01
11.94
15.36
23.92
14.31
10.70
37.97
20.89
10.78
Kmedoids
12.70
13.57
14.11
14.49
10.02
12.52
15.36
12.37
9.79
16.62
14.14
9.32"
SUPERCONDUCTIVITY DATA SET,0.1821138211382114,"also observe here that methods based on spatial consideration as K-medoids, K-means and K-centers
select more informative target points than the uncertainty based method QBC. This comes from the
fact that, in batch mode, QBC is selecting close target points with similar uncertainty level. Finally,
K-medoids outperforms K-means because it takes into account the distance to source points and then
queries less redundant information."
SUPERCONDUCTIVITY DATA SET,0.183739837398374,"Figure 2: Results for the Superconductivity data set (mh →h experiment). Evolution of the MAE in
function of the budget K for three different training methods and six query methods."
OFFICE DATA SET,0.18536585365853658,"5.3
OFFICE DATA SET"
OFFICE DATA SET,0.18699186991869918,"The office data set (Saenko et al., 2010) consists in pictures of office items coming from different
domains: amazon or webcam. The task is a multi-classification problem with 31 classes (chairs,
printers, ...). The goal is to use data from the amazon domain where labels are easily available to learn
a good model on the webcam domain where a few labels are chosen using active learning methods."
OFFICE DATA SET,0.1886178861788618,"Experimental setup: We consider the adaptation from ”amazon” with 2817 labeled images to
”webcam” with 795 unlabeled images. We use, as input features, the outputs of the ResNet-50
network (He et al., 2016) pretrained on ImageNet. We vary K from 5 to 300, repeating each
experiment 8 times. The learning rate is 0.001, the number of epochs 60 and the batch size 128."
OFFICE DATA SET,0.1902439024390244,"Results: Figure 3.A presents the results obtained. We observe that the K-medoids+W algorithm
provides the best performances for almost any K and in particular for small values of K. We
then present the visualization of the two first components of the PCA transform on Figure 4. We
observe that the K-medoids+W algorithm queries points at the center of the target distribution
but at a reasonable distance from the sources. The Random and K-means algorithms select a
representative subset of the target distribution but without taking into account the sources and
therefore query redundant information. K-centers selects data far from the source domain but which
are less representative of the the target distribution."
DIGITS DATA SET,0.191869918699187,"5.4
DIGITS DATA SET"
DIGITS DATA SET,0.19349593495934958,"We consider the experiment proposed in (Ganin et al., 2016) where a synthetic digits data set: SYNTH
is used to learn a classification task for a data set of real digits pictures: SVHN (Street-View House
Number) (Netzer et al., 2011). Both data sets are composed of around 65k images of size 28 × 28."
DIGITS DATA SET,0.1951219512195122,Published as a conference paper at ICLR 2022
DIGITS DATA SET,0.1967479674796748,Figure 3: Office and digits results. Evolution of the accuracy in function of the budget K.
DIGITS DATA SET,0.1983739837398374,"Figure 4: Visualization of the two PCA first components of the Office data set input space. Queries
are reported with black points for each query method with K = 20."
DIGITS DATA SET,0.2,"Experimental setup: To handle the large number of data, we use the accelerated K-medoids algorithm
(Algorithm 1) with T = 50 trees and a initial batch size of B = 5000. We use the KD-trees random
forest nearest neighbour algorithm in Diversity and K-centers to approximate the distance of each
target data to the source data set. We consider two kinds of input features: the ones obtained with
the convulational part of a Lenet (LeCun et al., 1998) trained with the source labeled data and the
ones coming from the same network but trained with adversarial training following the model of
DANN (Ganin et al., 2016). In both cases, the network is pre-trained on 30 epochs with a batch size
of 128 and a learning rate of 0.001, for the adversarial training the trade-off parameter λ is set to 0.1
following the setup of (Su et al., 2020). After the query process, a Balance Weighting training is
performed with the source and target labeled data using the same optimization hyper-parameters than
before. Experiments are conducted 8 times for K between 10 and 500."
DIGITS DATA SET,0.2016260162601626,"Results: Figure 3.B and 3.C correspond to the evolution of accuracy with respect to K for the
experiments conducted with the features obtained respectively without and with adversarial training.
We observe that, for any K > 0, K-medoids+W provides improved results over other query strategies
in both cases. This highlights the ability of the method to select informative target points in a variety
of scenarios."
CONCLUSION AND FUTURE WORK,0.2032520325203252,"6
CONCLUSION AND FUTURE WORK"
CONCLUSION AND FUTURE WORK,0.2048780487804878,"This work introduces a novel active learning approach based on a localized discrepancy between the
labeled and unlabeled distributions. We provide both theoretical guarantees of this approach and
an active learning algorithm scaling to large data sets. Several experiments show very competitive
results of the proposed approach. Future work will focus on considering a more appropriate distance
on the input space, giving more importance to relevant features with respect to the task."
CONCLUSION AND FUTURE WORK,0.20650406504065041,Published as a conference paper at ICLR 2022
REPRODUCIBILITY STATEMENT,0.208130081300813,REPRODUCIBILITY STATEMENT
REPRODUCIBILITY STATEMENT,0.2097560975609756,"To help the reproducibility of the results presented in this work, the source code of the experiments is
available at https://github.com/antoinedemathelin/dbal."
REPRODUCIBILITY STATEMENT,0.21138211382113822,"Furthermore, the presented methods and the majority of the competitors have been implemented with
”pythonic” objects which implement a fit and predict methods. Thus, the code can easily be used on
other data sets than the ones considered in this work."
REPRODUCIBILITY STATEMENT,0.21300813008130082,"Finally, notebooks are provided in the repository to enable a rapid access to the methods and the
possibility to try for different hyper-parameters."
REPRODUCIBILITY STATEMENT,0.2146341463414634,ACKNOWLEDGMENTS
REPRODUCIBILITY STATEMENT,0.216260162601626,"Part of this research was funded by the Manufacture Franc¸aise des Pneumatiques Michelin and the
Industrial Data Analytics and Machine Learning chair of Centre Borelli from ENS Paris Saclay."
REFERENCES,0.21788617886178863,REFERENCES
REFERENCES,0.21951219512195122,"Jordan T Ash, Chicheng Zhang, Akshay Krishnamurthy, John Langford, and Alekh Agarwal. Deep
batch active learning by diverse, uncertain gradient lower bounds. In International Conference on
Learning Representations, 2019."
REFERENCES,0.22113821138211381,"Maria-Florina Balcan, Andrei Broder, and Tong Zhang. Margin based active learning. In International
Conference on Computational Learning Theory, pp. 35–50. Springer, 2007."
REFERENCES,0.22276422764227644,"Maria-Florina Balcan, Alina Beygelzimer, and John Langford. Agnostic active learning. Journal of
Computer and System Sciences, 75(1):78–89, 2009."
REFERENCES,0.22439024390243903,"Alina Beygelzimer, Sanjoy Dasgupta, and John Langford. Importance Weighted Active Learning, pp.
49–56. Association for Computing Machinery, 2009."
REFERENCES,0.22601626016260162,"Zal´an Bod´o, Zsolt Minier, and Lehel Csat´o. Active learning with clustering. In Active Learning
and Experimental Design Workshop in Conjunction with AISTATS 2010, pp. 127–139. JMLR
Workshop and Conference Proceedings, 2011."
REFERENCES,0.22764227642276422,"David Cohn, Les Atlas, and Richard Ladner. Improving generalization with active learning. Machine
learning, 15(2):201–221, 1994."
REFERENCES,0.22926829268292684,"Corinna Cortes and Mehryar Mohri. Domain adaptation and sample bias correction theory and
algorithm for regression. Theoretical Computer Science, 519, 2014."
REFERENCES,0.23089430894308943,"Corinna Cortes, Giulia DeSalvo, Claudio Gentile, Mehryar Mohri, and Ningshan Zhang. Region-
based active learning. In The 22nd International Conference on Artificial Intelligence and Statistics,
pp. 2801–2809, 2019a."
REFERENCES,0.23252032520325203,"Corinna Cortes, Giulia DeSalvo, Mehryar Mohri, Ningshan Zhang, and Claudio Gentile. Active
learning with disagreement graphs. In International Conference on Machine Learning, pp. 1379–
1387, 2019b."
REFERENCES,0.23414634146341465,"Corinna Cortes, Mehryar Mohri, and Andr´es Mu˜noz Medina. Adaptation based on generalized
discrepancy. J. Mach. Learn. Res., 20(1):1–30, January 2019c. ISSN 1532-4435."
REFERENCES,0.23577235772357724,"Corinna Cortes, Giulia Desalvo, Claudio Gentile, Mehryar Mohri, and Ningshan Zhang. Adaptive
region-based active learning. In Hal Daum´e III and Aarti Singh (eds.), Proceedings of the 37th
International Conference on Machine Learning, volume 119 of Proceedings of Machine Learning
Research, pp. 2144–2153. PMLR, 13–18 Jul 2020."
REFERENCES,0.23739837398373984,"Antoine de Mathelin, Franc¸ois Deheeger, Guillaume Richard, Mathilde Mougeot, and Nicolas Vayatis.
Adapt: Awesome domain adaptation python toolbox. arXiv preprint arXiv:2107.03049, 2021."
REFERENCES,0.23902439024390243,"Cheng Deng, Xianglong Liu, Chao Li, and Dacheng Tao. Active multi-kernel domain adaptation for
hyperspectral image classification. Pattern Recognition, 77:306–315, 2018."
REFERENCES,0.24065040650406505,Published as a conference paper at ICLR 2022
REFERENCES,0.24227642276422764,"Dheeru Dua and Casey Graff. UCI machine learning repository, 2017. URL http://archive.
ics.uci.edu/ml."
REFERENCES,0.24390243902439024,"Yarin Gal, Riashat Islam, and Zoubin Ghahramani. Deep Bayesian active learning with image data.
In Doina Precup and Yee Whye Teh (eds.), Proceedings of the 34th International Conference on
Machine Learning, volume 70 of Proceedings of Machine Learning Research, pp. 1183–1192,
International Convention Centre, Sydney, Australia, 06–11 Aug 2017. PMLR."
REFERENCES,0.24552845528455283,"Yaroslav Ganin, Evgeniya Ustinova, Hana Ajakan, Pascal Germain, Hugo Larochelle, Franc¸ois
Laviolette, Mario Marchand, and Victor Lempitsky. Domain-adversarial training of neural networks.
J. Mach. Learn. Res., 17(1):2096–2030, January 2016. ISSN 1532-4435."
REFERENCES,0.24715447154471545,"Daniel Gissin and Shai Shalev-Shwartz.
Discriminative active learning.
arXiv preprint
arXiv:1907.06347, 2019."
REFERENCES,0.24878048780487805,"Ryan Gomes and Andreas Krause. Budgeted nonparametric learning from data streams. In Pro-
ceedings of the 27th International Conference on International Conference on Machine Learning,
ICML’10, pp. 391–398, Madison, WI, USA, 2010. Omnipress."
REFERENCES,0.25040650406504067,"Jean-Bastien Grill, Michal Valko, and R´emi Munos. Black-box optimization of noisy functions with
unknown smoothness. In Neural Information Processing Systems, 2015."
REFERENCES,0.25203252032520324,"Q. Gu and J. Han. Towards active learning on graphs: An error bound minimization approach. In
2012 IEEE 12th International Conference on Data Mining, pp. 882–887, 2012."
REFERENCES,0.25365853658536586,"Kam Hamidieh. A data-driven statistical model for predicting the critical temperature of a supercon-
ductor. Computational Materials Science, 154:346–354, 2018. URL https://archive.ics.
uci.edu/ml/datasets/Superconductivty+Data#."
REFERENCES,0.2552845528455285,"Steve Hanneke. A bound on the label complexity of agnostic active learning. In Proceedings of the
24th international conference on Machine learning, pp. 353–360, 2007."
REFERENCES,0.25691056910569104,"Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. Deep residual learning for image
recognition. In Proceedings of the IEEE conference on computer vision and pattern recognition,
pp. 770–778, 2016."
REFERENCES,0.25853658536585367,"Wassily Hoeffding. Probability inequalities for sums of bounded random variables. In The Collected
Works of Wassily Hoeffding, pp. 409–426. Springer, 1994."
REFERENCES,0.2601626016260163,"Rong Hu, Brian Mac Namee, and Sarah Jane Delany. Off to a good start: Using clustering to select
the initial training set in active learning. In FLAIRS Conference, 2010."
REFERENCES,0.26178861788617885,"Rishabh K Iyer and Jeff A Bilmes. Submodular optimization with submodular cover and submodular
knapsack constraints. In Advances in Neural Information Processing Systems, pp. 2436–2444,
2013."
REFERENCES,0.2634146341463415,"S. D. Jain and K. Grauman. Active image segmentation propagation. In 2016 IEEE Conference on
Computer Vision and Pattern Recognition (CVPR), pp. 2864–2873, 2016."
REFERENCES,0.26504065040650404,"A. J. Joshi, F. Porikli, and N. Papanikolopoulos. Multi-class active learning for image classification.
In 2009 IEEE Conference on Computer Vision and Pattern Recognition, pp. 2372–2379, 2009."
REFERENCES,0.26666666666666666,"Leonard Kaufman and Peter J Rousseeuw. Finding groups in data: an introduction to cluster analysis,
volume 344. John Wiley & Sons, 2009."
REFERENCES,0.2682926829268293,"Leonard Kaufmann and Peter Rousseeuw. Clustering by means of medoids. Data Analysis based on
the L1-Norm and Related Methods, pp. 405–416, 01 1987."
REFERENCES,0.26991869918699185,"V. Kaushal, R. Iyer, S. Kothawade, R. Mahadev, K. Doctor, and G. Ramakrishnan. Learning from
less data: A unified data subset selection and active learning framework for computer vision. In
2019 IEEE Winter Conference on Applications of Computer Vision (WACV), pp. 1289–1299, 2019."
REFERENCES,0.27154471544715447,"Been Kim, Rajiv Khanna, and Oluwasanmi O Koyejo. Examples are not enough, learn to criticize!
criticism for interpretability. Advances in neural information processing systems, 29, 2016."
REFERENCES,0.2731707317073171,Published as a conference paper at ICLR 2022
REFERENCES,0.27479674796747966,"Diederik P. Kingma and Jimmy Ba. Adam: A method for stochastic optimization. In Yoshua Bengio
and Yann LeCun (eds.), 3rd International Conference on Learning Representations, ICLR 2015,
San Diego, CA, USA, May 7-9, 2015, Conference Track Proceedings, 2015."
REFERENCES,0.2764227642276423,"Karol Kurach, Mario Luˇci´c, Xiaohua Zhai, Marcin Michalski, and Sylvain Gelly. A large-scale study
on regularization and normalization in gans. In International Conference on Machine Learning,
pp. 3581–3590. PMLR, 2019."
REFERENCES,0.2780487804878049,"Ailsa H Land and Alison G Doig. An automatic method for solving discrete programming problems.
In 50 Years of Integer Programming 1958-2008, pp. 105–132. Springer, 2010."
REFERENCES,0.27967479674796747,"Yann LeCun, L´eon Bottou, Yoshua Bengio, and Patrick Haffner. Gradient-based learning applied to
document recognition. Proceedings of the IEEE, 86(11):2278–2324, 1998."
REFERENCES,0.2813008130081301,"Hui Lin, Jeff Bilmes, and Shasha Xie. Graph-based submodular selection for extractive summarization.
In 2009 IEEE Workshop on Automatic Speech Recognition & Understanding, pp. 381–386. IEEE,
2009."
REFERENCES,0.28292682926829266,"C´edric Malherbe and Nicolas Vayatis. Global optimization of lipschitz functions. In International
Conference on Machine Learning, pp. 2314–2323. PMLR, 2017."
REFERENCES,0.2845528455284553,"Yishay Mansour, Mehryar Mohri, and Afshin Rostamizadeh. Domain adaptation: Learning bounds
and algorithms. In COLT, 2009."
REFERENCES,0.2861788617886179,"Andreas Maurer and Massimiliano Pontil. Empirical bernstein bounds and sample variance penaliza-
tion. arXiv preprint arXiv:0907.3740, 2009."
REFERENCES,0.28780487804878047,"Mehryar Mohri, Afshin Rostamizadeh, and Ameet Talwalkar. Foundations of machine learning. MIT
press, 2018."
REFERENCES,0.2894308943089431,"Saeid Motiian, Marco Piccirilli, Donald A Adjeroh, and Gianfranco Doretto. Unified deep supervised
domain adaptation and generalization. In Proceedings of the IEEE International Conference on
Computer Vision, pp. 5715–5725, 2017."
REFERENCES,0.2910569105691057,"George L Nemhauser, Laurence A Wolsey, and Marshall L Fisher. An analysis of approximations for
maximizing submodular set functions—i. Mathematical programming, 14(1):265–294, 1978."
REFERENCES,0.2926829268292683,"Yuval Netzer, Tao Wang, Adam Coates, Alessandro Bissacco, Bo Wu, and Andrew Y. Ng. Reading
digits in natural images with unsupervised feature learning. In NIPS Workshop on Deep Learning
and Unsupervised Feature Learning 2011, 2011."
REFERENCES,0.2943089430894309,"James Newling and Franc¸ois Fleuret. A sub-quadratic exact medoid algorithm. In Artificial Intelli-
gence and Statistics, pp. 185–193. PMLR, 2017."
REFERENCES,0.2959349593495935,"Raymond T. Ng and Jiawei Han. Clarans: A method for clustering objects for spatial data mining.
IEEE transactions on knowledge and data engineering, 14(5):1003–1016, 2002."
REFERENCES,0.2975609756097561,"David Pardoe and Peter Stone. Boosting for regression transfer. In Proceedings of the 27th Interna-
tional Conference on Machine Learning (ICML), June 2010."
REFERENCES,0.2991869918699187,"Hae-Sang Park and Chi-Hyuck Jun. A simple and fast algorithm for k-medoids clustering. Expert
systems with applications, 36(2):3336–3341, 2009."
REFERENCES,0.3008130081300813,"F. Pedregosa, G. Varoquaux, A. Gramfort, V. Michel, B. Thirion, O. Grisel, M. Blondel, P. Pretten-
hofer, R. Weiss, V. Dubourg, J. Vanderplas, A. Passos, D. Cournapeau, M. Brucher, M. Perrot, and
E. Duchesnay. Scikit-learn: Machine learning in Python. Journal of Machine Learning Research,
12:2825–2830, 2011."
REFERENCES,0.3024390243902439,"Viraj Prabhu, Arjun Chandrasekaran, Kate Saenko, and Judy Hoffman. Active domain adaptation via
clustering uncertainty-weighted embeddings. arXiv preprint arXiv:2010.08666, 2020."
REFERENCES,0.3040650406504065,"Piyush Rai, Avishek Saha, Hal Daum´e III, and Suresh Venkatasubramanian. Domain adaptation
meets active learning. In Proceedings of the NAACL HLT 2010 Workshop on Active Learning for
Natural Language Processing, pp. 27–32, 2010."
REFERENCES,0.3056910569105691,Published as a conference paper at ICLR 2022
REFERENCES,0.3073170731707317,"T. RayChaudhuri and L. G. C. Hamey. Minimisation of data collection by active learning. In
Proceedings of ICNN’95 - International Conference on Neural Networks, volume 3, pp. 1338–1341
vol.3, 1995."
REFERENCES,0.3089430894308943,"Kate Saenko, Brian Kulis, Mario Fritz, and Trevor Darrell. Adapting visual category models to
new domains. In Proceedings of the 11th European Conference on Computer Vision: Part IV,
ECCV’10, pp. 213–226, Berlin, Heidelberg, 2010. Springer-Verlag."
REFERENCES,0.3105691056910569,"Avishek Saha, Piyush Rai, Hal Daum´e, Suresh Venkatasubramanian, and Scott L DuVall. Active
supervised domain adaptation. In Joint European Conference on Machine Learning and Knowledge
Discovery in Databases, pp. 97–112. Springer, 2011."
REFERENCES,0.3121951219512195,"Ozan Sener and Silvio Savarese. Active learning for convolutional neural networks: A core-set
approach. In International Conference on Learning Representations, 2018."
REFERENCES,0.31382113821138213,"Burr Settles. Active learning literature survey. University of Wisconsin, Madison, 52, 07 2010."
REFERENCES,0.3154471544715447,"Changjian Shui, Fan Zhou, Christian Gagn´e, and Boyu Wang. Deep active learning: Unified and
principled method for query and training. In International Conference on Artificial Intelligence
and Statistics, pp. 1308–1318. PMLR, 2020."
REFERENCES,0.3170731707317073,"Chanop Silpa-Anan and Richard Hartley. Optimised kd-trees for fast image descriptor matching. In
2008 IEEE Conference on Computer Vision and Pattern Recognition, pp. 1–8. IEEE, 2008."
REFERENCES,0.31869918699186994,"Samarth Sinha, Sayna Ebrahimi, and Trevor Darrell. Variational adversarial active learning. In
Proceedings of the IEEE International Conference on Computer Vision, pp. 5972–5981, 2019."
REFERENCES,0.3203252032520325,"J. Su, Y. Tsai, K. Sohn, B. Liu, S. Maji, and M. Chandraker. Active adversarial domain adaptation.
In 2020 IEEE Winter Conference on Applications of Computer Vision (WACV), pp. 728–737, 2020."
REFERENCES,0.32195121951219513,"Takeshi Teshima, Issei Sato, and Masashi Sugiyama. Few-shot domain adaptation by causal mecha-
nism transfer. In International Conference on Machine Learning, pp. 9458–9469. PMLR, 2020."
REFERENCES,0.3235772357723577,"Michal Valko, Alexandra Carpentier, and R´emi Munos. Stochastic simultaneous optimistic optimiza-
tion. In International Conference on Machine Learning, pp. 19–27. PMLR, 2013."
REFERENCES,0.3252032520325203,"Tom Viering, Jesse Krijthe, and Marco Loog. Nuclear discrepancy for single-shot batch active
learning. Machine Learning, 06 2019."
REFERENCES,0.32682926829268294,"Zheng Wang and Jieping Ye. Querying discriminative and representative samples for batch mode
active learning. ACM Trans. Knowl. Discov. Data, 9(3), February 2015."
REFERENCES,0.3284552845528455,"Kai Wei, Yuzong Liu, Katrin Kirchhoff, and Jeff Bilmes. Using document summarization techniques
for speech data subset selection. In Proceedings of the 2013 Conference of the North American
Chapter of the Association for Computational Linguistics: Human Language Technologies, pp.
721–726, Atlanta, Georgia, June 2013. Association for Computational Linguistics."
REFERENCES,0.3300813008130081,"Kai Wei, Rishabh Iyer, and Jeff Bilmes. Submodularity in data subset selection and active learning.
In Francis Bach and David Blei (eds.), International Conference on Machine Learning, volume 37
of Proceedings of Machine Learning Research, pp. 1954–1963, Lille, France, 07–09 Jul 2015.
PMLR."
REFERENCES,0.33170731707317075,"Yuchen Zhang, Tianle Liu, Mingsheng Long, and Michael Jordan. Bridging theory and algorithm
for domain adaptation. In Kamalika Chaudhuri and Ruslan Salakhutdinov (eds.), Proceedings of
the 36th International Conference on Machine Learning, volume 97 of Proceedings of Machine
Learning Research, pp. 7404–7413, Long Beach, California, USA, 09–15 Jun 2019. PMLR."
REFERENCES,0.3333333333333333,"Yuchen Zhang, Mingsheng Long, Jianmin Wang, and Michael I Jordan. On localized discrepancy for
domain adaptation. arXiv preprint arXiv:2008.06242, 2020."
REFERENCES,0.33495934959349594,"Jingjing Zheng, Zhuolin Jiang, Rama Chellappa, and Jonathon P Phillips. Submodular attribute
selection for action recognition in video. In Z. Ghahramani, M. Welling, C. Cortes, N. D. Lawrence,
and K. Q. Weinberger (eds.), Advances in Neural Information Processing Systems 27, pp. 1341–
1349. Curran Associates, Inc., 2014."
REFERENCES,0.33658536585365856,Published as a conference paper at ICLR 2022
REFERENCES,0.3382113821138211,Appendix
REFERENCES,0.33983739837398375,We recall here the notations and definitions used in the following:
REFERENCES,0.34146341463414637,• X ⊂Rp and Y ⊂R are the respective input and output subsets.
REFERENCES,0.34308943089430893,• d : X × X →R+ is a distance on X.
REFERENCES,0.34471544715447155,• P and Q are two distributions on X.
REFERENCES,0.3463414634146341,"• T = {x′
1, ..., x′
n} ∈X n is the unlabeled target data set and S = {x1, ..., xm} ∈X m the
labeled source data set drawn respectively from P and Q."
REFERENCES,0.34796747967479674,• L : Y × Y →R+ is a loss function.
REFERENCES,0.34959349593495936,• H is a hypothesis set of k-Lipschitz functions from X to Y.
REFERENCES,0.35121951219512193,"• Ex∼D[L(h(x), h′(x))] is the average loss (or risk) over any distribution D on X between
two hypotheses h, h′ ∈H."
REFERENCES,0.35284552845528455,"• Rn(H) =
E
{x′
i}i∼P"
REFERENCES,0.3544715447154472,"
E
{σi}i∼U"
REFERENCES,0.35609756097560974,"
sup
h∈H"
N,0.35772357723577236,"1
n nP"
N,0.359349593495935,"i=1
σih(x′
i)

, is the expected Rademacher complex-"
N,0.36097560975609755,"ity of H, with U the uniform distribution on {−1, 1}."
N,0.36260162601626017,• fQ : X →Y is the source labeling function.
N,0.3642276422764228,• fP : X →Y is the target labeling function.
N,0.36585365853658536,• K > 0 is the number of queries
N,0.367479674796748,• TK ⊂T with |TK| = K is a queried batch or subset.
N,0.36910569105691055,• LK = S ∪TK is the labeled data set.
N,0.37073170731707317,"• bQ, bQK and bP are the respective empirical distributions on X of S, S ∪TK and T ."
N,0.3723577235772358,"• HK
ϵ = {h ∈H; L(h(x), fQ(x)) ≤ϵ ∀x ∈LK} is the localized hypothesis space ."
N,0.37398373983739835,"• discHK
ϵ ( bQK, bP) = maxh,h′∈HK
ϵ |L b
QK(h, h′) −L b
P (h, h′)| is the localized discrepancy"
N,0.375609756097561,between bQK and bP.
N,0.3772357723577236,"A
PROOF OF PROPOSITION 1"
N,0.37886178861788616,"Proposition 1. Let K > 0 be the number of queries and H a hypothesis space. Let bP and bQK be the
empirical distributions of the respective sets T and LK = S ∪TK of respective size n and m + K.
We assume that L is a symmetric, µ-Lipschitz and bounded loss function verifying the triangular
inequality. We denote by M the bound of L. Let ηH be the ideal maximal error on S ∪T :"
N,0.3804878048780488,"ηH
∆= min
h∈H max
x∈S∪T [L(h(x), fQ(x)) + L(h(x), fP (x))]
(8)"
N,0.3821138211382114,"Then, for any ϵ ≥ηH, any hypothesis h ∈HK
ϵ and any δ > 0, the following generalization bound
holds with at least probability 1-δ:"
N,0.383739837398374,"LP (h, fP ) ≤L b
QK(h, fQ) + discHK
ϵ ( bQK, bP) + ηH + 2µRn(H) + M   s"
N,0.3853658536585366,log( 1
N,0.38699186991869916,"δ )
2n "
N,0.3886178861788618,".
(9)"
N,0.3902439024390244,"Proof. Let’s consider h ∈H. According to (Mohri et al., 2018) we have for any δ > 0, with
probability at least 1 −δ:"
N,0.39186991869918697,"LP (h, fP ) ≤L b
P (h, fP ) + 2µRn(H) + M s"
N,0.3934959349593496,log( 1
N,0.3951219512195122,"δ )
2n
.
(10)"
N,0.3967479674796748,"Besides, we have for any h, h0 ∈HK
ϵ :"
N,0.3983739837398374,Published as a conference paper at ICLR 2022
N,0.4,"L b
P (h, fP ) = L b
QK(h, fQ) + L b
P (h, fP ) −L b
QK(h, fQ)"
N,0.4016260162601626,"≤L b
QK(h, fQ) + L b
P (h, h0) + L b
P (h0, fP ) −L b
QK(h, h0) + L b
QK(h0, fQ)"
N,0.4032520325203252,"≤L b
QK(h, fQ) +
max
h,h′∈HK
ϵ
|L b
P (h, h′) −L b
QK(h, h′)| + L b
P (h0, fP ) + L b
QK(h0, fQ) (11)"
N,0.40487804878048783,"As the inequality is true for any h0 ∈HK
ϵ , we have in particular:"
N,0.4065040650406504,"L b
P (h, fP ) ≤L b
QK(h, fQ) +
max
h,h′∈HK
ϵ
|L b
P (h, h′) −L b
QK(h, h′)| + min
h0∈HK
ϵ"
N,0.408130081300813,"
L b
P (h0, fP ) + L b
QK(h0, fQ)
 (12)"
N,0.4097560975609756,"We notice that, for any h0 ∈HK
ϵ :"
N,0.4113821138211382,"L b
P (h0, fP ) + L b
QK(h0, fQ) ≤max
x∈S∪T [L(h0(x), fQ(x)) + L(h0(x), fP (x))]
(13)"
N,0.41300813008130083,"From which we deduce that,"
N,0.4146341463414634,"min
h0∈HK
ϵ"
N,0.416260162601626,"
L b
P (h0, f) + L b
QK(h0, f)

≤ηHK
ϵ
(14)"
N,0.41788617886178864,"Let’s now consider h∗∈H, such that:"
N,0.4195121951219512,"h∗= arg min
h∈H
max
x∈S∪T [L(h(x), fQ(x)) + L(h(x), fP (x))]
(15)"
N,0.4211382113821138,"By assumption we have ηH ≤ϵ, and thus:"
N,0.42276422764227645,"max
x∈S∪T [L(h∗(x), fQ(x)) + L(h∗(x), fP (x))] ≤ϵ
(16)"
N,0.424390243902439,This implies that for any x ∈S ∪T :
N,0.42601626016260163,"L(h∗(x), fQ(x)) ≤ϵ
(17)"
N,0.4276422764227642,"In particular, L(h∗(x), fQ(x)) ≤ϵ for any x ∈LK, which implies that h∗is in HK
ϵ . We then
deduce that:"
N,0.4292682926829268,"ηH = ηHK
ϵ
(18)"
N,0.43089430894308944,"Thus we conclude that for any h ∈HK
ϵ and any δ > 0, we have with probability at least 1 −δ:"
N,0.432520325203252,"LP (h, fP ) ≤L b
QK(h, fQ) + discHK
ϵ ( bQK, bP) + ηH + 2µRn(H) + M   s"
N,0.43414634146341463,log( 1
N,0.43577235772357725,"δ )
2n "
N,0.4373983739837398,".
(19)"
N,0.43902439024390244,Published as a conference paper at ICLR 2022
N,0.44065040650406506,"B
PROOF OF THEOREM 1"
N,0.44227642276422763,"Theorem 1. Let K > 0 be the number of queries, H a hypothesis space of k-Lipschitz functions
and ϵ ≥ηH. Let LK = S ∪TK be the labeled set and T the target set drawn according to P.
We assume that L is a symmetric, µ-Lipschitz and bounded loss function verifying the triangular
inequality. We denote by M the bound of L. For any hypothesis h ∈HK
ϵ
and any δ > 0, the
following generalization bound holds with at least probability 1-δ:"
N,0.44390243902439025,"LP (h, f) ≤L b
QK(h, fQ) + 2kµ n X"
N,0.44552845528455287,"x′∈T
d(x′, LK) + 2ϵ + ηH + 2µRn(H) + s"
N,0.44715447154471544,M 2 log( 1
N,0.44878048780487806,"δ )
2n
(20)"
N,0.4504065040650406,"With d(x′, LK) = minx∈LK d(x′, x)"
N,0.45203252032520325,Proof. Let ϵ ≥ηH and 0 ≤K ≤n.
N,0.45365853658536587,"For all h, h′ ∈HK
ϵ , for all x′ ∈T and for all x ∈LK we have:"
N,0.45528455284552843,"L(h(x′), h′(x′)) ≤L(h(x′), h(x)) + L(h(x), h′(x)) + L(h′(x), h′(x′))"
N,0.45691056910569106,"≤L(h(x′), h(x)) + L(h′(x), h′(x′)) + L(h(x), fQ(x)) + L(fQ(x), h′(x))"
N,0.4585365853658537,≤µ (|h(x) −h(x′)| + |h′(x) −h′(x′)|) + 2ϵ
N,0.46016260162601624,"≤2kµ d(x′, x) + 2ϵ
(21)"
N,0.46178861788617886,"The two first inequalities come from the triangular inequality, the others from the lipschitzness of
h, h′ and definition of HK
ϵ ."
N,0.4634146341463415,"As the above inequality is true for any x ∈LK, we have in particular for any x′ ∈T :"
N,0.46504065040650405,"L(h(x′), h′(x′)) ≤2kµ min
x∈LK d(x, x′) + 2ϵ"
N,0.4666666666666667,"= 2kµ d(x′, LK) + 2ϵ
(22)"
N,0.4682926829268293,Leading to:
N,0.46991869918699186,"L b
P (h(x′), h′(x′)) ≤2kµ n X"
N,0.4715447154471545,"x′∈T
d(x′, LK) + 2ϵ
(23)"
N,0.47317073170731705,"We then deduce the following, for all h, h′ ∈HK
ϵ :"
N,0.47479674796747967,"discHK
ϵ ( bQK, bP) =
max
h,h′∈HK
ϵ
|L b
P (h, h′) −L b
QK(h, h′)|"
N,0.4764227642276423,"≤max

max
h,h′∈HK
ϵ
L b
P (h, h′),
max
h,h′∈HK
ϵ
L b
QK(h, h′)
 ≤max ""
2kµ n X"
N,0.47804878048780486,"x′∈T
d(x′, LK) + 2ϵ, 2ϵ # ≤2kµ n X"
N,0.4796747967479675,"x′∈T
d(x′, LK) + 2ϵ (24)"
N,0.4813008130081301,"Finally, according to Proposition 1, we have for all h, h′ ∈HK
ϵ :"
N,0.48292682926829267,"LP (h, f) ≤L b
QK(h, fQ) + 2kµ n X"
N,0.4845528455284553,"x′∈T
d(x′, LK) + 2ϵ + ηH + 2µRn(H) + s"
N,0.4861788617886179,M 2 log( 1
N,0.4878048780487805,"δ )
2n
(25)"
N,0.4894308943089431,Published as a conference paper at ICLR 2022
N,0.49105691056910566,"C
APPROXIMATION ERROR BETWEEN PROPOSITION 1 AND THEOREM 1"
N,0.4926829268292683,"We present in this section the approximation error of the relaxation between the bounds of Proposition
1 and Theorem 1."
N,0.4943089430894309,"We will show that, with the assumption of Theorem 1 and in the case L = L1, we have, for any
labeled set LK:"
K,0.4959349593495935,2k n X
K,0.4975609756097561,"x′∈T
d(x′, LK) ≤
k
k −kf
discHK
ϵ ( bQK, bP)
(26)"
K,0.4991869918699187,With kf the Lipschitz constant of the source labeling function fQ. We assume that k > kf.
K,0.5008130081300813,"For this purpose we will look for two hypotheses h, h′ ∈HK
ϵ verifying:"
K,0.5024390243902439,"L b
P (h, h′) ≥2(k −kf) n X"
K,0.5040650406504065,"x′∈T
d(x′, LK)
(27)"
K,0.5056910569105691,"Let’s define k′ = k −kf, and h, h′ : X →Y such that, for any x ∈X:"
K,0.5073170731707317,"h(x) = fQ(x) + k′ min
˜x∈LK d(x, ˜x) = fQ(x) + k′d(x, LK)"
K,0.5089430894308943,"h′(x) = fQ(x) −k′ min
˜x∈LK d(x, ˜x) = fQ(x) −k′d(x, LK)
(28)"
K,0.510569105691057,"We will now prove that h, h′ are in HK
ϵ :"
K,0.5121951219512195,"Let’s consider x1, x2 ∈X, we define:"
K,0.5138211382113821,"˜x1 = arg min
˜x∈LK
d(˜x, x1)"
K,0.5154471544715448,"˜x2 = arg min
˜x∈LK
d(˜x, x2)
(29)"
K,0.5170731707317073,"Assuming without restriction that d(x1, ˜x1) > d(x2, ˜x2), we have:"
K,0.5186991869918699,"|h(x1) −h(x2)| ≤k′ |d(x1, LK) −d(x2, LK)| + kf d(x1, x2)"
K,0.5203252032520326,"≤k′ (d(x1, ˜x1) −d(x2, ˜x2)) + kf d(x1, x2)"
K,0.5219512195121951,"≤k′ (d(x1, ˜x2) −d(x2, ˜x2)) + kf d(x1, x2)"
K,0.5235772357723577,"≤k′ d(x1, x2) + kf d(x1, x2)
≤k d(x1, x2) (30)"
K,0.5252032520325203,"Using the triangular inequality and the fact that d(x1, ˜x1) ≤d(x1, ˜x2) by definition of ˜x1."
K,0.526829268292683,Using a similar development we can prove the k-Lipschitzness of h′.
K,0.5284552845528455,"Let’s now consider x ∈LK, we have"
K,0.5300813008130081,"L(h(x), fQ(x)) = L(fQ(x) + k′d(x, LK), fQ(x))
= L(fQ(x), fQ(x))
= 0
(31)"
K,0.5317073170731708,"In the same way L(h′(x), fQ(x)) = 0 and we have h, h′ ∈HK
ϵ ."
K,0.5333333333333333,Published as a conference paper at ICLR 2022
K,0.5349593495934959,"Furthermore, we have:"
K,0.5365853658536586,"L b
P (h, h′) = 1 n X"
K,0.5382113821138211,"x′∈T
L(h(x′), h′(x′)) = 1 n X"
K,0.5398373983739837,"x′∈T
|h(x′) −h′(x′)|"
K,0.5414634146341464,= 2(k −kf) n X
K,0.5430894308943089,"x′∈T
d(x′, LK) (32) Thus,"
K,0.5447154471544715,"discHK
ϵ ( bQK, bP) ≥|L b
P (h, h′) −0| = 2(k −kf) n X"
K,0.5463414634146342,"x′∈T
d(x′, LK)
(33)"
K,0.5479674796747968,From which we conclude.
K,0.5495934959349593,"D
COMPARISON WITH OTHER ACTIVE LEARNING BOUNDS (CF SECTION 4.2)"
K,0.551219512195122,In this section we assume that f = fP = fQ and f ∈H with H a set of k-Lipschitz functions.
K,0.5528455284552846,"D.1
K-CENTER BOUNDS"
K,0.5544715447154471,"Sener and Savarese (Sener & Savarese, 2018) propose the following generalization bounds for ϵ = 0
and h ∈HK
ϵ :"
K,0.5560975609756098,"L b
P (h, f) ≤δ(λl + MCλµ) + M   s"
K,0.5577235772357724,log( 1
K,0.5593495934959349,"δ )
2n "
K,0.5609756097560976,"
(34)"
K,0.5626016260162602,which leads to:
K,0.5642276422764227,"LP (h, f) ≤δ(λl + MCλµ) + 2µRn(H) + 2M   s"
K,0.5658536585365853,log( 1
K,0.567479674796748,"δ )
2n "
K,0.5691056910569106,"
(35)"
K,0.5707317073170731,"With δ = maxx′∈T d(x′, LK), C the class number and λµ the Lipschitz constant of a class-specific
regression function. λl is the Lipschitz constant of the loss function l verifying l : (x, h) →
l(x, f(x), h) = L(h(x), f(x))."
K,0.5723577235772358,"If we consider a regression problem, we can drop the term corresponding to the class-specific function
and we have:"
K,0.5739837398373984,"LP (h, f) ≤δλl + 2µRn(H) + O   s"
K,0.5756097560975609,M 2 log( 1
K,0.5772357723577236,"δ )
2n "
K,0.5788617886178862,"
(36)"
K,0.5804878048780487,"Let’s now consider h ∈H and x, x′ ∈X, we have for k-Lipschitz f :"
K,0.5821138211382114,Published as a conference paper at ICLR 2022
K,0.583739837398374,"|l(x, f(x), h) −l(x′, f(x′), h)| = |L(h(x), f(x)) −L(h(x′), f(x′))|"
K,0.5853658536585366,"≤|L(h(x), f(x)) −L(h(x′), f(x))| + |L(h(x′), f(x)) −L(h(x′), f(x′))|"
K,0.5869918699186992,"≤L(h(x), h(x′)) + L(f(x), f(x′))"
K,0.5886178861788618,≤µ|h(x) −h(x′)| + µ|f(x) −f(x′)|
K,0.5902439024390244,"≤2µk|x −x′|
(37)"
K,0.591869918699187,"The two first inequalities are obtained with triangular inequalities, then we use Lipschitz assumptions
on h, f and L."
K,0.5934959349593496,"Thus, we have λl = 2µk from which we deduce:"
K,0.5951219512195122,"LP (h, f) ≤2kµ max
x′∈T d(x′, LK) + 2µRn(H) + O   s"
K,0.5967479674796748,M 2 log( 1
K,0.5983739837398374,"δ )
2n "
K,0.6,"
(38)"
K,0.6016260162601627,"D.2
WASSERSTEIN BOUNDS"
K,0.6032520325203252,"To adapt the bound from (Shui et al., 2020) Corollary 1 to our setting, we identify the distributions
bD and bQ from Shui et al. (2020) with respectively the distributions bP and bQK. We then have the
following generalization bound:"
K,0.6048780487804878,"LP (h, f) ≤L b
QK(h, f) + 2µkW1( bQK, bP) + 2µRn(H) + O   s"
K,0.6065040650406504,M 2 log( 1
K,0.608130081300813,"δ )
2n "
K,0.6097560975609756,"
(39)"
K,0.6113821138211382,"Notice that the term corresponding to the labeling function ”decay property” in the bound of Shui
et al. (2020) is null when considering a Lipschitz labeling function (f ∈H)."
K,0.6130081300813008,"Thus for ϵ = 0 and for any h ∈HK
ϵ , we have:"
K,0.6146341463414634,"LP (h, f) ≤2kµW1( bQK, bP) + 2µRn(H) + O   s"
K,0.616260162601626,M 2 log( 1
K,0.6178861788617886,"δ )
2n  "
K,0.6195121951219512,"= 2kµ
X x′∈T X"
K,0.6211382113821138,"x∈LK
γ∗
x′x d(x′, x) + 2µRn(H) + O   s"
K,0.6227642276422765,M 2 log( 1
K,0.624390243902439,"δ )
2n   (40)"
K,0.6260162601626016,"With γ∗= arg minγ∈Γ
P"
K,0.6276422764227643,"x′∈T
P"
K,0.6292682926829268,"x∈LK γx′xd(x′, x) and Γ = {γ ∈Rn×(m+K) ; γ1 = 1"
K,0.6308943089430894,"n1 ; γT 1 =
1
m+K 1}."
K,0.6325203252032521,"Thus, in observing that:
X x′∈T X"
K,0.6341463414634146,"x∈LK
γx′xd(x′, x) ≥
X x′∈T X"
K,0.6357723577235772,"x∈LK
γx′x min
x∈LK d(x′, x) ≥
X"
K,0.6373983739837399,"x′∈T
d(x′, LK)
X"
K,0.6390243902439025,"x∈LK
γx′x ≥1 n X"
K,0.640650406504065,"x′∈T
d(x′, LK)"
K,0.6422764227642277,"We deduce that our presented bound of Theorem 1 is also tighter than the one proposed in (Shui et al.,
2020) in the case of ϵ = 0 and k-Lipschitz f and h."
K,0.6439024390243903,Published as a conference paper at ICLR 2022
K,0.6455284552845528,"E
ALGORITHMS (CF SECTION 3)"
K,0.6471544715447154,"E.1
K-MEDOIDS"
K,0.6487804878048781,Algorithm 2 K-Medoids Greedy
K,0.6504065040650406,"1: Input: T , B, K, S, {d(x′, S)}x′∈T )
2: Output: TK = {xj}j≤K ⊂T"
K,0.6520325203252032,"3: T ←{x′
s1, ..., x′
sB} with {x′
s1, ..., x′
sB} picked randomly in T without replacement.
4: Initialize query subset: T0 = {}
5: For all x′ ∈T , d x′ = d(x′, S) = minx∈S d(x′, x)
6: For all x, x′ ∈T compute d xx′ = d(x, x′)"
K,0.6536585365853659,"7: for i from 1 to K do
8:
xi ←arg minx∈T
P"
K,0.6552845528455284,"x′∈T min

d xx′, d x′"
K,0.656910569105691,"9:
Si ←Si−1 ∪{xi}
10:
For all x′ ∈T , update d x′ = min(d x′, d xix′))
11: end for"
K,0.6585365853658537,Algorithm 3 Branch & Bound Medoid (B & B)
K,0.6601626016260163,"1: Input: Cluster C ∈Rnc×p, previous medoid criterion C∗, batch size B
2: Output: New medoid x∗"
K,0.6617886178861788,"3: Initialize candidates ˜C = C
4: Initialize computed distance set Dx = {} for all x ∈˜C.
5: Initialize criterion Cx = 0 and standard deviation σx = 0 for all x ∈˜C.
6: Initialize threshold t = C∗"
K,0.6634146341463415,"7: for i from 1 to nc/B do
8:
Ci = {xj ∈C ; (B −1)i ≤j ≤Bi}
9:
for x ∈˜C do
10:
Dx ←Dx ∪{d(x, x′) ; x′ ∈Ci}
11:
Cx ←
1
Bi
P
d∈Dx d"
K,0.6650406504065041,"12:
σx ←
q"
"BI
P",0.6666666666666666,"1
Bi
P"
"BI
P",0.6682926829268293,d∈Dx(d −Cx)2
"BI
P",0.6699186991869919,"13:
end for
14:
x∗←arg minx∈˜
C Cx
15:
t ←min(t, Cx∗+ 2σx∗
√ Bi )"
"BI
P",0.6715447154471544,"16:
˜C ←
n
x ∈˜C ; Cx −2σx
√"
"BI
P",0.6731707317073171,"Bi < t
o"
"BI
P",0.6747967479674797,"17: end for
18: x∗←arg minx∈˜
C Cx"
"BI
P",0.6764227642276422,"E.2
APPROXIMATION BOUND FOR THE GREEDY ALGORITHM"
"BI
P",0.6780487804878049,"This section is dedicated to the proof of the bound for the greedy K-medoids algorithm which is
expressed as follows:"
"BI
P",0.6796747967479675,"The gain of selecting K new medoids with the greedy algorithm is an (1 −1/e)-approximation of the
optimal gain."
"BI
P",0.6813008130081301,"Let TK be a batch of K target points selected with the greedy algorithm. The gain is the difference
between the initial objective and the final objective after selecting TK:"
"BI
P",0.6829268292682927,"gain(TK) =
X"
"BI
P",0.6845528455284553,"x′∈T
d(x′, S) −
X"
"BI
P",0.6861788617886179,"x′∈T
d(x′, S ∪TK)
(41)"
"BI
P",0.6878048780487804,"With d(x′, S) = minx∈S d(x′, x)"
"BI
P",0.6894308943089431,Published as a conference paper at ICLR 2022
"BI
P",0.6910569105691057,We will prove now that the gain is monotone submodular.
"BI
P",0.6926829268292682,"Let A ⊂B ⊂T and x ∈T \ B,"
"BI
P",0.6943089430894309,"We denote T A = {x′ ∈T ; d(x′, x) < d(x′, A)} and T B = {x′ ∈T ; d(x′, x) < d(x′, B)}."
"BI
P",0.6959349593495935,"As A ⊂B, we have d(x′, A) ≥d(x′, B) for any x′ ∈T . Thus,"
"BI
P",0.697560975609756,"T B ⊂T A
(42)"
"BI
P",0.6991869918699187,"Besides, for any x′ ∈T ,"
"BI
P",0.7008130081300813,"d(x′, A) −d(x′, x) ≥d(x′, B) −d(x′, x)
(43)"
"BI
P",0.7024390243902439,"We deduce then that,"
"BI
P",0.7040650406504065,"gain(A ∪{x}) −gain(A) =
X"
"BI
P",0.7056910569105691,"x′∈T A
d(x′, A) −d(x′, x) ≥
X"
"BI
P",0.7073170731707317,"x′∈T B
d(x′, A) −d(x′, x) ≥
X"
"BI
P",0.7089430894308943,"x′∈T B
d(x′, B) −d(x′, x)"
"BI
P",0.7105691056910569,= gain(B ∪{x}) −gain(B) (44)
"BI
P",0.7121951219512195,"Then, the gain is submodular."
"BI
P",0.7138211382113822,"Besides, as A ⊂B it appears clearly that,"
"BI
P",0.7154471544715447,"gain(A) ⊂gain(B)
(45)"
"BI
P",0.7170731707317073,and the gain is monotone.
"BI
P",0.71869918699187,"Finally, by noticing that the gain is always positive and according to (Nemhauser et al., 1978), we
conclude that the gain of selecting K new medoids with the greedy algorithm is an (1 −1/e)-
approximation of the optimal gain."
"BI
P",0.7203252032520325,"E.3
COMPLEXITY COMPUTATION"
"BI
P",0.7219512195121951,"In the following, a distance computation is considered to be done in O(p)."
"BI
P",0.7235772357723578,"1. KD-Trees Random Forest: Each of the T trees is built by splitting one sample, at each root,
at the median of a random feature until the leaf-sizes are ∼log(m). The median computation
for each root with mr data is in O(mr log(mr)). Thus the overall complexity to build one
tree is O(PM
i=0 2−im log(2−im)2i) = O(m log(m) PM
i=0 1) with M ∼log(m/ log(m))
which becomes O(m log(m)2). Then, each target is assigned to a leaf by performing
O(log(m)) computations, inside the assigned leaf all distance computations are done
in O(p log(m)). Thus an approximate nearest neighbour is given for all targets with a
complexity O(T(m + pn) log(m)2).
2. Medoids Initialization: Using the greedy algorithm, O(pB2) distance computations are
first done, then, for all targets, a sum over the target data is computed at each of the K steps.
Thus the complexity is O((K + p)B2).
3. Assignation to the Closest Medoid: The distance between all target and the medoids is
computed in O(Kpn).
4. Branch & Bound Medoid Computation"
"BI
P",0.7252032520325203,"B & B algorithm (Algorithm 3) takes as input one cluster C of nc unlabeled data from T .
It also takes a batch size B and the previous cluster medoid criterion C∗which is used as"
"BI
P",0.7268292682926829,Published as a conference paper at ICLR 2022
"BI
P",0.7284552845528456,"an initial threshold. The use of the initialization C∗may accelerate the algorithm, in the
following we do not take into account this initialization, i.e we consider that C∗= +∞.
Besides, to use notations consistent with the common notations in statistics, we will denote
the batch size B by n (B ≡n). Notice that it is redundant with the size of the unlabeled
data set T . An explicit mention will be made, if n does not refer to the batch size.
Definitions and notations: Let’s consider one cluster C ⊂T with nc data. We consider
the uniform norm as underlying distance d, defined for all xi, xj ∈C as d(xi, xj) ="
"BI
P",0.7300813008130081,"max

|x(1)
i
−x(1)
j |, ..., |x(p)
i
−x(p)
j |

with xi = (x(1)
i , ..., x(p)
i
) ∈Rp."
"BI
P",0.7317073170731707,"Computing the complexity of the B & B algorithm for any distribution of the xi would
be too difficult. We make here the simplifying assumption that the xi in C are uniformly
distributed on the hyper-cube C of edge size 2 and centered on x∗= (0, ..., 0) ∈Rp"
"BI
P",0.7333333333333333,"We define for any i ∈[|1, nc|] and any j ∈[|1, nc|], the variables Zi
j = d(xi, xj). We
also define Z∗
j = d(x∗, xj) for any j ∈[|1, nc|]. We suppose that for any i ∈[|1, nc|],
Zi
1, ..., Zi
nc are iid and that for any j ∈[|1, nc|] the Zi
j are independents. We define, for any
i ∈[|1, nc|], the mean µi = E[Zi
0] =
1
2p
R"
"BI
P",0.734959349593496,"x∈C d(xi, x) and the variance σ2
i = Var[Zi
0] =
1
2p
R"
"BI
P",0.7365853658536585,"x∈C(d(xi, x)−µi)2. We consider a first batch of distance computations of size n < nC.
We define for any i ∈[|1, nc|] the empirical mean bµi =
1
n
Pn
j=1 Zi
j and the empirical
variance bσ2
i =
1
n−1
Pn
j=1(Zi
j −bµi)2. We denote by µ∗and σ∗2 the mean and variance of"
"BI
P",0.7382113821138211,"Z∗
0 and bµ∗and bσ∗2 their respective empirical estimator.
We first observe that µi and σi are finite for any i ∈[|1, nc|] as the xi are uniformly
distributed on the hyper-cube centered in x∗∈C. We also notice that Zi
j ∈[0, 2] for any
i, j ∈[|1, nc|]."
"BI
P",0.7398373983739838,"Preliminary results: We make the assumption that p >> 1. We aim at giving bounds
for any µi and σi. We admit the intuitive results that for any xi = (x(1)
i , ..., x(p)
i
) ∈C
and for any j ∈[|1, nc|], µi ≥µj→0
i
and σi ≥σj→0
i
with µj→0
i
and σj→0
i
the mean and
variance of the variable d(xj→0
i
, .) with xj→0
i
= (x(1)
i , ..., x(j−1)
i
, 0, x(j+1)
i
, ..., x(p)
i
). We
consider indeed that the more xi is close to the center of the hyper-cube smaller is µi and σi.
Considering this fact, we have, for any i ∈[|1, nc|]:"
"BI
P",0.7414634146341463,"µ∗≤µi
(46)
σ∗≤σi
(47)"
"BI
P",0.7430894308943089,"Besides, for any 0 ≤r ≤1 the sample density in the elementary surface between the balls
centered on x∗and of respective radius r + dr and r is prp−1dr. Thus, we can notice that
Z∗
0 follows a beta distribution of parameters α = p and β = 1, from which we deduce that:"
"BI
P",0.7447154471544716,"µ∗=
p
p + 1
(48)"
"BI
P",0.7463414634146341,"σ∗2 =
p
(p + 1)2(p + 2)
(49)"
"BI
P",0.7479674796747967,"We further notice that for any 0 ≤a ≤1 and for any i ∈[|1, nc|] such that d(x∗, xi) = a
we have µi ≥µa with µa the criterion of the sample xa = (a, 0, ..., 0) ∈Rp.
To compute µa =
1
2p
R"
"BI
P",0.7495934959349594,"x∈C d(xa, x), we split the integral on three parts: d(xa, x) ≤1 −a,
1 −a ≤d(xa, x) ≤1 and 1 ≤d(xa, x) ≤1 + a:"
"BI
P",0.751219512195122,"µa =
Z 1−a"
"BI
P",0.7528455284552845,"r=0
prp−1dr + 1 2 Z 1 r=1−a"
"BI
P",0.7544715447154472," 
prp−1 + (p −1)(1 −a)rp−2
dr + 1 2 Z 1+a"
RDR,0.7560975609756098,"1
rdr"
RDR,0.7577235772357723,"=
p
p + 1(1 −a)p+1 + 1 2"
RDR,0.759349593495935,"
p
p + 1 + (1 −a)p −1"
RDR,0.7609756097560976,"p
−(1 −a)p+1

p
p + 1 + p −1 p"
RDR,0.7626016260162601,"
+ a 2"
RDR,0.7642276422764228,"
1 + a 2  ≃1 −a 2 + a 2"
RDR,0.7658536585365854,"
1 + a 2 "
RDR,0.767479674796748,≃1 + a2
RDR,0.7691056910569106,"4
(50)"
RDR,0.7707317073170732,Published as a conference paper at ICLR 2022
RDR,0.7723577235772358,"Using the simplifying approximation
p
p+1 ≃p−1"
RDR,0.7739837398373983,"p
≃1 for p >> 1. Thus for any 0 ≤a ≤1
and for any i ∈[|1, nc|] such that d(x∗, xi) = a we have:"
RDR,0.775609756097561,µi ≥1 + a2
RDR,0.7772357723577236,"4
(51)"
RDR,0.7788617886178861,"An upper bound of the σ2
i is given by the variance σ2
c of the variable d(xc, .) with xc =
(1, ..., 1) which corresponds to one corner of the hyper-cube C:"
RDR,0.7804878048780488,"σ2
c = 1"
P,0.7821138211382114,2p Z 2
P,0.7837398373983739,"0
prp+1dr −
 1"
P,0.7853658536585366,2p Z 2
PRPDR,0.7869918699186992,"0
prpdr
2"
PRPDR,0.7886178861788617,"= 4
p
p + 2 + 4

p
p + 1 2"
PRPDR,0.7902439024390244,"= 4
p
(p + 1)2(p + 2)"
PRPDR,0.791869918699187,= 4σ∗2 (52)
PRPDR,0.7934959349593496,"From which we deduce that for any i ∈[|1, nc|]:"
PRPDR,0.7951219512195122,"σ∗≤σi ≤2σ∗
(53)"
PRPDR,0.7967479674796748,"To simplify the calculations, we make the approximation bσi ≃σi for any i ∈[|1, nc|], which
is relevant for sufficiently large n as E[Zi
0
4] < +∞.
Probability of rejecting all optimal medoid candidates: Let ϵ > 0 be an approximation
factor of µ∗. The goal of the Branch & Bound algorithm is to identify one sample xi ∈C
such that µi ≤µ∗(1 + ϵ) with less distance computations as possible. The process consists
in removing all candidates xi such that bµi −2bσi
√n > bµi∗+ 2bσi∗
√n with bµi∗the current minimal
empirical mean.
We aim now at computing the probability of rejecting all optimal medoid candidates xi
verifying µi ≤µ∗(1 + ϵ) during the B & B process. For this, we define Bϵ(µ∗) = {i ∈
[|1, nc|] ; µi ≤µ∗(1 + ϵ)} the index set of optimal medoid candidates and Bc
ϵ(µ∗) = {i ∈
[|1, nc|] ; µi > µ∗(1 + ϵ)} the index set of sub-optimal medoid candidates. We assume that
B & B returns an optimal candidate if at least one sample of Bϵ(µ∗) is kept after the first
batch computation. We define the two following probabilities:"
PRPDR,0.7983739837398374,"P1 = P

∃i ∈Bc
ϵ(µ∗) ; bµi + 4σ∗"
PRPDR,0.8,"√n ≤µ∗(1 + ϵ/4)

(54)"
PRPDR,0.8016260162601626,"P2 = P ({∃i ∈Bϵ(µ∗) ; bµi ≤µ∗(1 + ϵ/4)})
(55)"
PRPDR,0.8032520325203252,"We can observe that the probability of rejecting all optimal medoid candidates is upper
bounded by: (1 −P2) + P2P1 considering the approximation bσi ≃σi and the fact that
σi ≥σ∗for any i ∈[|1, nc|].
We now define, for i ∈Bc
ϵ(µ∗):"
PRPDR,0.8048780487804879,"Pi = P

bµi + 4σ∗"
PRPDR,0.8065040650406504,"√n ≤µ∗(1 + ϵ/4)

(56)"
PRPDR,0.808130081300813,Leading to:
PRPDR,0.8097560975609757,"Pi = P

bµi + 4σ∗"
PRPDR,0.8113821138211382,√n −ϵµ∗
PRPDR,0.8130081300813008,"4
≤µ∗

(57)"
PRPDR,0.8146341463414634,"On the other hand, according to the Bennett’s inequality from (Maurer & Pontil, 2009;
Hoeffding, 1994) we have, for any i ∈Bc
ϵ(µ∗) and for any δ > 0: P "
PRPDR,0.816260162601626,bµi/2 + r
PRPDR,0.8178861788617886,"σ2
i log(1/δ)"
N,0.8195121951219512,"2n
+ log(1/δ)"
N,0.8211382113821138,"3n
≤µi/2 !"
N,0.8227642276422764,"≤δ
(58)"
N,0.824390243902439,Published as a conference paper at ICLR 2022
N,0.8260162601626017,"Notice that we apply the inequality to the Zi
j/2. Then, considering the fact that σi ≤2σ∗"
N,0.8276422764227642,and that µi > µ∗(1 + ϵ) we have: P  bµi + √
N,0.8292682926829268,"2σ∗
√n p"
N,0.8308943089430895,log(1/δ) + 2 log(1/δ)
N,0.832520325203252,"3n
≤µ∗(1 + ϵ) !"
N,0.8341463414634146,"≤δ
(59)"
N,0.8357723577235773,Leading to: P  bµi + √
N,0.8373983739837398,"2σ∗
√n p"
N,0.8390243902439024,log(1/δ) −ϵµ∗+ 2 log(1/δ)
N,0.8406504065040651,"3n
≤µ∗
!"
N,0.8422764227642277,"≤δ
(60)"
N,0.8439024390243902,"Let’s consider δ > 0 such that the following equality holds:
√"
N,0.8455284552845529,"2σ∗
√n p"
N,0.8471544715447155,log(1/δ) −ϵµ∗+ 2 log(1/δ)
N,0.848780487804878,"3n
= 4σ∗"
N,0.8504065040650407,√n −ϵµ∗
N,0.8520325203252033,"4
(61) Thus:"
N,0.8536585365853658,"u2 + Au = B
(62) With: u =
p"
N,0.8552845528455284,"log(1/δ)
(63) A = 3 2 √"
N,0.8569105691056911,"2nσ∗
(64)"
N,0.8585365853658536,B = 3n 2 4σ∗
N,0.8601626016260162,√n + 3ϵµ∗ 4
N,0.8617886178861789,"
(65) (66)"
N,0.8634146341463415,We then set:
N,0.865040650406504,δ = exp 
N,0.8666666666666667,"−
∆−A 2 2! (67) ∆=
p"
N,0.8682926829268293,"A2 + 4B
(68)"
N,0.8699186991869918,"We have for the δ defines above and for any i ∈Bc
ϵ(µ∗):"
N,0.8715447154471545,"Pi ≤δ
(69)"
N,0.8731707317073171,"Thus, the probability P1 can be upper bounded as follows:"
N,0.8747967479674796,"P1 ≤1 −(1 −δ)nc
(70)"
N,0.8764227642276423,"Considering the fact that |Bc
ϵ(µ∗)| < nc. 1 −(1 −δ)nc is the probability of getting at least
one success for the binomial law of parameters (nc, δ).
We are now looking for an upper bound of P2. We observe that, at least the index i such that
xi = x∗is in Bϵ(µ∗). Besides, as x∗is the center of the hyper-cube, Z∗
j is in [0, 1] for any
j ∈[|1, nc|]. We can then apply the Bennett’s inequality to the Z∗
j , and for any γ > 0 we
have: P "
N,0.8780487804878049,bµ∗≤µ∗+ r
N,0.8796747967479674,2σ∗2 log(1/δ)
N,0.8813008130081301,"n
+ log(1/δ)"
N,0.8829268292682927,3n !
N,0.8845528455284553,"≥1 −γ
(71)"
N,0.8861788617886179,We set:
N,0.8878048780487805,γ = exp  − √
N,0.8894308943089431,C2 + 4D −C 2 !2
N,0.8910569105691057,"
(72)"
N,0.8926829268292683,"C = 3
√"
N,0.8943089430894309,"2nσ∗
(73)"
N,0.8959349593495934,D = 3nϵµ∗
N,0.8975609756097561,"4
(74)"
N,0.8991869918699187,Published as a conference paper at ICLR 2022
N,0.9008130081300812,We then have:
N,0.9024390243902439,"P2 ≥P

bµ∗≤µ∗(1 + ϵ"
N,0.9040650406504065,"4)

≥1 −γ
(75)"
N,0.9056910569105691,Leading to:
N,0.9073170731707317,"1 −P2 ≤γ
(76)"
N,0.9089430894308943,"Finally the probability of rejecting all optimal candidates is upper bounded by 1 −(1 −
δ)nc + γ. To give an order of magnitude of this probability, we consider the scenario
where nc = 105, p = 100, n = √nc and ϵ = 0.05. Then we have: δ ≃3.6 10−8 and
γ ≃7.7 10−5, which leads to a probability of rejection around 3.6 10−3. Thus, in this case,
there is at least a probability 0.995 that B & B returns a medoid candidate with a criterion
less than 1.05 the optimal."
N,0.9105691056910569,"Complexity computation: We are now looking for the number of distance computations
performed by B & B. For this, we need to compute the number of xi kept at each batch. An
upper bound of this number is given by the number of xi verifying bµi ≤µ∗(1 + ϵ/4) + 8σ∗"
N,0.9121951219512195,"√n .
We further assume that the previous upper bound can be approximated by the number of xi
verifying µi ≤µ∗(1 + ϵ/4) + 8σ∗"
N,0.9138211382113821,"√n
We have shown in the preliminary results that for any i ∈[|1, nc|], µi ≥1 + a2"
WITH,0.9154471544715447,"4 with
a = d(xi, x∗). Thus an upper bound of the number of candidates xi kept after the first batch
is given by the number of xi in the ball of radius a with a verifying: a = 2 s"
WITH,0.9170731707317074,ϵ/4 + 8σ∗
WITH,0.9186991869918699,"√n
(77)"
WITH,0.9203252032520325,"Using the approximation µ∗=
p
p+1 ≃1. Besides, as σ∗= O (1/p) we can suppose that
for sufficiently large p and large n, 8σ∗ √n ≤3"
WITH,0.9219512195121952,"4ϵ (For instance with nc, n, p and ϵ considered"
WITH,0.9235772357723577,"previously, we have 8σ∗"
WITH,0.9252032520325203,√n ≃0.005 and 3
WITH,0.926829268292683,4ϵ ≃0.03). Thus:
WITH,0.9284552845528455,"a ≤2√ϵ
(78)"
WITH,0.9300813008130081,"Finally the number of candidates kept after the first batch is in O
 
nc ϵp/2
which is very
small (for the values of nc, p and ϵ considered previously, we have nc ϵp/2 ≃10−60). If we
consider a batch size of O
 √nc

, the number of distance computations after the first batch
is negligible behind O
 
nc√nc

.
We then conclude that the complexity of a medoid computation in one cluster is in
O
 
p nc√nc

as each of the K cluster has approximately nc ≃n/K samples (with n
the sample size of T ), the overall complexity of B & B is in O
 
p n3/2K−1/2
."
WITH,0.9317073170731708,"F
EMPIRICAL COMPLEXITIES"
WITH,0.9333333333333333,"This section presents the empirical time computation recorded for K-medoids Greedy, Accelerated
K-medoids, K-centers and K-centers + KD-Trees which corresponds to the K-centers algorithm
with initialization of the nearest source neighbour distances computed through the KD-Trees Random
Forest algorithm. The experiments are conducted on the Digits data set."
WITH,0.9349593495934959,"The experiments are run on a (2.7GHz, 16G RAM) computer using Python 3.8. The scikit-learn
(Pedregosa et al., 2011) implementation of the pairwise euclidean distance is used. No parallel
computing is performed."
WITH,0.9365853658536586,"The parameters are set to K = 100, T = 50 for the KD-Trees Random Forest algorithm and an
initial batch size B = 5000 for the Accelerated K-medoids algorithm. The euclidean distance is used
as base distance d. The results are reported on Figure 5. The evolution of computational time is a
function of the size of the source and target samples (m and n)."
WITH,0.9382113821138212,"We first observe on Figure 5 that the K-medoids Greedy algorithm encounters computational burden
for samples larger than 10k instances. For n = m = 60k, the K-centers algorithm encounters"
WITH,0.9398373983739837,Published as a conference paper at ICLR 2022
WITH,0.9414634146341463,Figure 5: Visualization of empirical computational times in function of the sample sizes.
WITH,0.943089430894309,"a similar issue due to the computation of the distance matrix between the source and target data
sets. Using the KD-Trees Random Forest algorithm decreases in this case the computational time
by a factor of 5. We also notice that the accelerated K-medoids algorithm has similar complexity
performance to K-medoids for n, m ≤5000 which is the maximum size of the initial batch. Then,
the computation time of the algorithm increases slightly from n, m = 5k to n, m = 60k while
remaining at an acceptable level. For n, m = 60k the complexities of the accelerated K-medoids
and the K-centers + KD-Trees are almost similar but with a level of performance in favor of the
accelerated K-medoids (see Section 5.4)."
WITH,0.9447154471544715,"We also present the evolution of the objective function of the different algorithm in function of the
number of queries K for n = m = 60k (cf Figure 6)."
WITH,0.9463414634146341,"Figure 6: Visualization of empirical objectives in function of the number of queries for a sample size
of 60k."
WITH,0.9479674796747968,"We observe that the objective of the K-center algorithm is higher than the one of the K-medoids
algorithms. We also observe that K-medoids Greedy provide slightly smaller objectives than K-
medoids Accelerated."
WITH,0.9495934959349593,Published as a conference paper at ICLR 2022
WITH,0.9512195121951219,"G
EXPERIMENTS"
WITH,0.9528455284552846,"G.1
SUPERCONDUCTIVITY"
WITH,0.9544715447154472,"Setup The UCI data set ”Superconductivity” (Hamidieh, 2018; Dua & Graff, 2017) is composed
of features extracted from the chemical formula of several superconductors along with their critical
temperature. There is two kind of features: some features correspond to the chemical element
number’s in the superconductor chemical formula, others are statistical features derived from the
chemical formula as the mean and variance of the atomic mass."
WITH,0.9560975609756097,"We use the setup of (Pardoe & Stone, 2010) to divide the data set in separate domains. We select
an input feature with a moderate correlation factor with the output (∼0.3). We then sort the set
according to this feature and split it in four parts: low (l), middle-low (ml), middle-high (mh), high
(h). Each part defining a domain with around 4000 instances and 166 features. The considered feature
is then withdrawn from the data set."
WITH,0.9577235772357724,"A standard scaling preprocessing is performed using the source data on the input statistical features
and the output feature. A max scaling is performed on features corresponding to the chemical element
number’s. A visualization of the first components of the PCA as well as the output distribution is
provided in Figure 7)."
WITH,0.959349593495935,"Figure 7: Visualization of the domain shift of the superconductivity data set. The visualization of the
two first components of the PCA on the input features is given on the left. The output distribution is
given on the right. One domain is represented by one color."
WITH,0.9609756097560975,"Standard deviation Table 2 presents the standard deviation of the MAEs obtained on the 8 repetitions
of the 12 experiments with the Balanced Weighting training and K = 20. We observe that K-medoids
provides the smallest standard deviations in the majority of the experiments. K-medoids is indeed
a deterministic algorithm and thus selects a determined batch of target points. Besides, K-medoids
selects the target batch to label in a distribution matching perspective, i.e. it produces a training set
with a distribution close to the one of the testing set (cf Section 2). This can explain why the training
is more stable with the training set provided by K-medoids."
WITH,0.9626016260162602,"Table 2: Standard deviations of the MAE on the unlabeled data for the superconductivity experiments.
The deviations are computed using the results of 8 repetitions of each experiment."
WITH,0.9642276422764228,"Experiment
l→ml
l→mh
l→h
ml→l
ml→mh
ml→h
mh→l
mh→ml mh→h
h→l
h→ml
h→mh"
WITH,0.9658536585365853,"Random
1.007
2.599
1.597
1.232
1.679
1.291
1.863
0.787
0.266
1.900
1.228
0.595
Kmeans
1.05
0.93
0.78
1.93
0.54
0.64
1.0
1.36
0.58
6.51
1.51
0.59
QBC
1.469
2.370
1.882
0.571
0.564
0.707
2.151
0.767
0.394
7.240
3.250
0.620
Kcenters
0.807
1.761
1.926
0.626
0.343
0.794
2.188
0.885
0.503
5.403
2.838
0.920
Diversity
1.34
1.2
3.28
0.52
0.8
1.86
2.46
0.79
0.42
5.49
1.44
0.32
Kmedoids
0.59
0.76
1.21
0.54
0.55
0.74
0.64
0.33
0.26
1.19
0.8
0.15"
WITH,0.967479674796748,Published as a conference paper at ICLR 2022
WITH,0.9691056910569106,"Table 3: MAE on the critical temperature for the Superconductivity experiments with Balanced
Weighting and K = 20."
WITH,0.9707317073170731,"Experiment
l→ml
l→mh
l→h
ml→l
ml→mh
ml→h
mh→l
mh→ml mh→h
h→l
h→ml
h→mh"
WITH,0.9723577235772358,"Random
15.33
15.80
17.45
16.53
11.39
14.70
17.65
12.83
10.36
18.75
14.86
10.54
Kmeans
14.43
13.60
13.98
15.79
10.19
12.73
17.18
12.67
10.02
22.10
14.69
9.76
QBC
20.00
19.03
20.08
15.89
12.24
15.31
20.78
12.87
10.19
31.88
18.86
10.65
Kcenters
19.21
15.73
16.85
15.75
11.62
13.44
22.17
12.74
10.24
36.50
19.60
10.39
Diversity
19.46
18.21
18.68
16.01
11.94
15.36
23.92
14.31
10.70
37.97
20.89
10.78
Kmedoids
12.70
13.57
14.11
14.49
10.02
12.52
15.36
12.37
9.79
16.62
14.14
9.32"
WITH,0.9739837398373984,"(high to low) analysis An interesting fact to notice in the results of the superconductivity experiments
(for which a recap is given in Table 3) is the asymmetry of results between the low-to-high experiment
and the high-to-low experiment. Indeed, the results on the latter experiment are worse than the ones
of the former, except for the Random and K-medoids algorithms."
WITH,0.975609756097561,"It first appears, in Figure 8, that this difference in performance for the low-to-high experiment
compared to the high-to-low experiment comes from the difference in the output distributions of
the low and high domains. Indeed, the output distribution of the high domain is made of one mode
concentrated in the low temperature while the output distribution of low is made of two modes, one
in the low and the other in the high temperature. Thus, the model trained with the low domain data
will generalize better to the high domain since the model has seen the full range of temperature.
In the inverse problem (high-to-low), the model has only seen low temperatures and thus poorly
predict a part of the low domain. Then, for this difficult experiment (high-to-low), the difference
in performance between the different query algorithms lies mainly in the number of data with high
temperature in the low domain that are queried (see Figure 9). It appears that K-medoids and Random
query more of this type of data, as they are highly concentrated and relatively far from the sources
(see Figure 10, 11)."
WITH,0.9772357723577236,"Figure 8: Visualization of the domain shift of the superconductivity data set for the high-to-low
experiment. The visualization of the two first components of the PCA on the input features is given
on the left. The output distribution is given on the right. One domain is represented by one color."
WITH,0.9788617886178862,Published as a conference paper at ICLR 2022
WITH,0.9804878048780488,Figure 9: Visualization of the queries in the output space for the high-to-low experiment with K = 20.
WITH,0.9821138211382113,Figure 10: Visualization of the queries in the input space for the high-to-low experiment with K = 20.
WITH,0.983739837398374,Published as a conference paper at ICLR 2022
WITH,0.9853658536585366,"Figure 11: Visualization of the the input space for the high-to-low experiment. The heatmap gives
the output labels for the ”low” domain."
WITH,0.9869918699186991,"G.2
OFFICE"
WITH,0.9886178861788618,Figure 12: Office data set: examples of images from amazon domain
WITH,0.9902439024390244,Published as a conference paper at ICLR 2022
WITH,0.991869918699187,Figure 13: Office data set: examples of images from webcam domain
WITH,0.9934959349593496,Published as a conference paper at ICLR 2022
WITH,0.9951219512195122,"G.3
DIGITS"
WITH,0.9967479674796748,Figure 14: Digits data set: examples of SYNTH images
WITH,0.9983739837398374,Figure 15: Digits data set: examples of SVHN images
