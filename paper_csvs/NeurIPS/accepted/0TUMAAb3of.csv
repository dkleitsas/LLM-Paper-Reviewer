Section,Section Appearance Order,Paragraph
ABSTRACT,0.0,Abstract
ABSTRACT,0.000585480093676815,"In this study, we consider multi-class multi-server asymmetric queueing systems
consisting of N queues on one side and K servers on the other side, where jobs ran-
domly arrive in queues at each time. The service rate of each job-server assignment
is unknown and modeled by a feature-based Multi-nomial Logit (MNL) function.
At each time, a scheduler assigns jobs to servers, and each server stochastically
serves at most one job based on its preferences over the assigned jobs. The primary
goal of the algorithm is to stabilize the queues in the system while learning the
service rates of servers. To achieve this goal, we propose algorithms based on
UCB and Thompson Sampling, which achieve system stability with an average
queue length bound of O(min{N, K}/ϵ) for a large time horizon T, where ϵ is
a traffic slackness of the system. Furthermore, the algorithms achieve sublinear
regret bounds of e
O(min{
√"
ABSTRACT,0.00117096018735363,"TQmax, T 3/4}), where Qmax represents the maximum
queue length over agents and times. Lastly, we provide experimental results to
demonstrate the performance of our algorithms."
INTRODUCTION,0.001756440281030445,"1
Introduction"
INTRODUCTION,0.00234192037470726,"Multi-class multi-server queueing systems, which have been extensively studied by [20, 19, 37, 8, 4],
are motivated by real-world applications such as ride-hailing platforms, where riders are assigned to
drivers. Other examples are online job markets, where applicants are recommended for employment,
and online labor service markets, where tasks are recommended to freelance workers. In these
systems, there are two sides: queues (agents) on one side and servers (arms) on the other. At each
time step, jobs stochastically arrive in multiple queues and are then assigned to multiple servers by a
matchmaking or scheduler algorithm to stabilize the systems. Importantly, the previous work assumes
that the service rates for each server are known for scheduling jobs."
INTRODUCTION,0.002927400468384075,"However, real-world observations reveal that the service rate may not be known beforehand. Therefore,
learning the service rates associated with the stochastic behavior of servers is essential for real-world
applications. Furthermore, the behavior of servers may depend on their (relative) preferences
over assigned jobs. For example, in ride-hailing platforms where there are riders and drivers, the
preferences of drivers over riders (not necessarily based on personal information but rather a rider’s
pick-up location, destination, etc.) may not be known in advance to riders or even the systems,
necessitating the learning of drivers’ preferences through preference feedback over assigned riders."
INTRODUCTION,0.00351288056206089,"Learning service rates in an online manner, based on partial feedback from each scheduling, is
highly associated with multi-armed bandit problems [33]. These problems are fundamental sequential
learning tasks where, for queueing systems, a job is assigned to a server and receives feedback on
whether the job is served or not. The utilization of bandit strategies for queueing systems has been
recently studied by Choudhury et al. [12], Stahlbuhk et al. [48], Gaitonde and Tardos [17]; Freund
et al. [15], Hsu et al. [22], Krishnasamy et al. [30, 31, 32], Sentenac et al. [46], Yang et al. [52], Huang
et al. [23], which primary focus is naturally on establishing stability of the systems while learning
service rates."
INTRODUCTION,0.004098360655737705,Utility Job
INTRODUCTION,0.00468384074941452,Server/Arm
INTRODUCTION,0.005269320843091335,Queue/Agent
INTRODUCTION,0.00585480093676815,"(a) Jobs randomly arrive in queues
(agents) and there are unknown
different values of utility between
queues and servers (arms) closely
related to preferences."
INTRODUCTION,0.006440281030444965,Assigned
INTRODUCTION,0.00702576112412178,"(b) Each queue is assigned to a
server based on a scheduler."
INTRODUCTION,0.007611241217798595,Accepted/Served job
INTRODUCTION,0.00819672131147541,"Accepted
Rejected"
INTRODUCTION,0.008782201405152224,"Rejected/
Remaining job"
INTRODUCTION,0.00936768149882904,"(c) Each server accepts at most
one of the assigned jobs based
on its preference. A job of each
accepted queue is served while
jobs of rejected queues remain."
INTRODUCTION,0.009953161592505855,Figure 1: Illustration of queueing process with 4 queues/agents (N = 4) and 3 servers/arms (K = 3)
INTRODUCTION,0.01053864168618267,"However, there are still gaps between the previous models and the real-world applications. In all
previous work, the inherent service rates for each job-server assignment are determined regardless of
other jobs assigned to the same server (or it is not allowed to assign multiple jobs to the same server).
This differs from real-world scenarios where service rate may depend on (relative) preference over
multiple assigned jobs, as seen in online labor markets or ride-hailing platforms. Additionally, in
Freund et al. [15], Krishnasamy et al. [31, 32], which is closely related work to our study regarding
multi-class multi-server queueing systems with asymmetric service rates, it was allowed to assign
a job in an empty queue to a server to obtain feedback (null request), which may not be realistic.
Furthermore, all of the previous work considers a simple model without a generalizable structure or
utilizing features for service rates."
INTRODUCTION,0.011124121779859485,"Another line of related work is matching bandits, in which there are two sides (agents and arms), and
the behavior of arms is based on their preferences [36, 45, 35, 9, 54, 29]. However, their focus is on
static settings, whereas our work considers dynamic job arrivals in queues. Additionally, it is worth
mentioning online matching problems [27, 39, 40, 18, 16, 28], where the sole focus is on optimizing
matching rather than learning underlying models from bandit feedback. In contrast, our study
concentrates on bandit problems related to learning latent utilities by managing the tradeoff between
exploration and exploitation while establishing the stability of the queueing systems. Importantly,
neither previous work on matching bandits nor online matching problems addresses the stability of
queueing systems, which is our primary focus."
INTRODUCTION,0.0117096018735363,"In this work, we propose a novel and practical framework for queueing matching bandits under
preference feedback. In the following, we describe our setting accompanied by an illustration in
Figure 1. (a) Multiple queues (agents) and servers (arms) are involved, with jobs arriving randomly
in queues. Additionally, there are unknown utility values between queues and servers regarding
preferences. (b) Nonempty queue are then assigned to servers based on a scheduling policy. (c)
Subsequently, each server stochastically accepts at most one of the assigned queues based on its
unknown preference and serves one unit of job of the accepted queue. The rejected jobs remain in the
queues. The processes of (a), (b), and (c) are repeated over time."
INTRODUCTION,0.012295081967213115,Summary of Our Contributions
INTRODUCTION,0.01288056206088993,"• We propose a novel and practical framework for queueing matching bandits, where N
agents and K arms are involved, and jobs randomly arrive in agents’ queues each round.
Subsequently, a scheduler assigns agents to arms, and the service rates for the assigned
agents depend on the arms’ unknown preferences over them. These service rates are modeled
using a feature-based multinomial logit function. To the best of our knowledge, our paper is
the first to investigate either a feature-based service function or preference feedback using a
multinomial logit function for service rates."
INTRODUCTION,0.013466042154566744,"• We propose algorithms based on Upper Confidence Bound (UCB) and Thompson Sampling
(TS), which achieve stability with average queue length bounds of O( min{N,K}"
INTRODUCTION,0.01405152224824356,"ϵ
) for a large
time horizon T, under a traffic slackness of ϵ."
INTRODUCTION,0.014637002341920375,"• Furthermore, the algorithms achieve sublinear regret bounds of e
O(min{
√"
INTRODUCTION,0.01522248243559719,"TQmax, T 3/4}),
where Qmax represents the maximum queue length over agents and times. It is worth
mentioning that regret analysis has not been studied in the closely related queueing bandit
literature such as Sentenac et al. [46], Freund et al. [15], Yang et al. [52]."
INTRODUCTION,0.015807962529274005,"• Finally, we present experimental results demonstrating the stability and regret performance
of our algorithms with comparison to previously suggested methods."
RELATED WORK,0.01639344262295082,"2
Related Work"
RELATED WORK,0.016978922716627636,"Bandits for Queues.
Learning the unknown service rates for queueing systems in an online manner
under bandit feedback has recently gained widespread attention [12, 47, 31, 48, 22, 32, 46, 52, 23].
While Stahlbuhk et al. [47], Krishnasamy et al. [30], Choudhury et al. [12] focused on a single queue
with multiple servers, aiming to efficiently assign the queue to the optimal server while learning the
service rates, subsequent study of Krishnasamy et al. [32] expanded this scope to encompass multiple
queues and multiple servers. However, this extension relied on a strong structural assumption that
each agent possesses a unique and distinctly optimal server without sharing the same optimal server.
Consequently, the algorithms employed in such scenarios do not necessarily consider the dynamic
queue lengths when scheduling jobs; instead, they concentrate solely on learning service rates to
achieve optimal matching. As the closest work to our study, another line of work of Sentenac et al.
[46], Freund et al. [15], Yang et al. [52] has focused more on dynamic queue lengths for multi-queue
and multi-server scenarios without assuming the unique and distinct optimal servers for each agent.
In this context, all of the previous work aimed to achieve queue length stability."
RELATED WORK,0.01756440281030445,"However, to the best of our knowledge, none of the previous works has focused on a structured model
with features for service rates. Furthermore, previous studies either did not allow the assignment
of different types of jobs to a server simultaneously [32, 52], or, if they did, as in Sentenac et al.
[46], Freund et al. [15], the inherent values of service rates for each job-server assignment remained
constant regardless of the entire assignments. Additionally, the server’s behavior given multiple
assigned jobs was either simple or deterministic, based on the uniform-randomly selected job among
the assigned jobs [46], or the job with the highest bid generated from the algorithm [15], respectively.
However, these approaches may not reflect real-world scenarios, where the service rates depend on
the relative preferences among the assigned jobs. Lastly, in [15, 32], it was allowed to assign a job to
a server from an empty queue for obtaining feedback, which may not be realistic."
RELATED WORK,0.018149882903981264,"In our study, we adopt a structured model incorporating features for unknown asymmetric service
rates. We enable the assignment of multiple agents to the same server, where the server stochastically
selects at most one of the assigned agents based on its undisclosed (relative) preference. Also, the
assignment of an agent is available only when the queue of the agent is not empty. This scenario
mirrors common situations in real-world applications such as ride-hailing platforms and online labor
markets where available multiple riders or tasks can be assigned to a driver or a worker, respectively,
and the driver or worker behaves stochastically depending on its unknown preference."
RELATED WORK,0.01873536299765808,"It is noteworthy that we focus not only on the stability of the systems regarding queue lengths but
also on regret against an oracle, while the closely related works by [46, 15, 52], which considered
multi-class multi-server queueing systems, only addressed stability analysis. Regret analysis has only
been studied under some limited scenarios, such as a single-server [23], a single-queue [48], or the
strong assumption that each agent has a unique and well-separated optimal server [32]."
RELATED WORK,0.019320843091334895,"Matching Bandits.
Next, we investigate two-sided matching bandits, a topic initially explored
by Liu et al. [36] and subsequently studied by Sankararaman et al. [45], Liu et al. [35], Basu et al.
[9], Zhang et al. [54], Kong and Li [29]. The primary goal is to minimize regret by attaining an
optimal stable matching by learning agents’ side preferences through stochastic reward feedback
under static settings and deterministic behavior of arms with known preferences. Our study aligns with
the model, wherein agents select arms based on preferences. However, our study sets itself apart from
prior work on matching bandits in several key aspects. Firstly, we consider dynamic environments
with job arrivals for agents. Secondly, we propose that arm behavior is stochastic, with unknown
preferences, necessitating the learning of arms’ preferences. Lastly, our main target is to stabilize the
queue lengths in the systems rather than find stable matching for stable marriage problems."
RELATED WORK,0.01990632318501171,"MNL Bandits.
Lastly, we examine MNL bandits which were initially proposed by Agrawal et al.
[6] and followed by Agrawal et al. [7], Chen et al. [11], Oh and Iyengar [43, 44]. In MNL bandits,"
RELATED WORK,0.020491803278688523,"the goal is to select assortments of arms to maximize reward, which is based on preferences over the
arms in the selected assortment. In our study, we adopt the MNL model for arms’ choice preferences
in dynamic systems, which, to the best of our knowledge, is the first consideration of bandits for
queueing systems."
PROBLEM STATEMENT,0.02107728337236534,"3
Problem Statement"
PROBLEM STATEMENT,0.021662763466042154,"There are N agents (queues) and K arms (servers). At each time, a job for each agent n ∈[N] arrives
randomly following a Bernoulli distribution with an unknown arrival rate λn ∈[0, 1] 1. Then at each
time t ∈[T] where T is the time horizon, each agent n ∈[N] is assigned to an arm kπ
n,t ∈[K] by
a policy π. For notational simplicity, we use kn,t for kπ
n,t when there is no confusion. Let Qn(t)
be the length of the queue for jobs of agent n ∈[N] at the beginning of time slot t in the system.
We consider that at most L agents can be assigned to each arm k ∈[K] at each time and N ≤KL
to ensure that all agents can be assigned to arms. Then, we define the set of agents (assortment)
assigned to arm k by policy π at time t as Sk,t = {n ∈[N] : kn,t = k, Qn(t) ̸= 0}, considering
only available agents with nonempty queues."
PROBLEM STATEMENT,0.02224824355971897,"Now we explain the structure of our model. Each agent n has known d-dimensional feature informa-
tion of xn ∈Rd, and each arm k has latent (unknown) parameter θk ∈Rd for preference utilities
over agents. We adopt the Multi-nomial Logit (MNL) function commonly studied for preference
feedback [43, 44, 6, 7, 11]. Then given assortment Sk,t, arm k serves a job of agent n ∈Sk,t with a
service probability (service rate) determined by the MNL model as"
PROBLEM STATEMENT,0.022833723653395786,"µ(n|Sk,t, θk) =
exp(x⊤
n θk)
1 + P"
PROBLEM STATEMENT,0.0234192037470726,"m∈Sk,t exp(x⊤
mθk)."
PROBLEM STATEMENT,0.024004683840749413,"We note that µ(n|Sk,t, θk) represents the preference of arm k to agent n over the assigned agents Sk,t.
The service rate of each n depends on the assigned agents rather than static by reflecting real-world
scenarios, which is different from the conventional queueing problems. Following the MNL function,
the arm is allowed not to serve any agents (or allowed to serve null agent n0) with the probability
of µ(n0|Sk,t, θk) =
1
1+P"
PROBLEM STATEMENT,0.02459016393442623,"m∈Sk,t exp(x⊤
mθk). Under the MNL model for the service rate, at each time,"
PROBLEM STATEMENT,0.025175644028103045,"each arm accepts at most one agent and serves that agent’s job. The queue lengths for the accepted
agents are each reduced by one, while the queue lengths for the refused agents remain the same."
PROBLEM STATEMENT,0.02576112412177986,"Objective Function.
Here we provide the goal of this problem. For describing the stochastic
process in the systems, at each time t, let An(t) ∈{0, 1} be a random variable with mean λn, which
denotes whether a new job arrives in the queue of agent n ∈[N] (here, 1 denotes arrival). Also,
given that n is assigned to arm kn,t, let Dn(t|Skn,t,t) ∈{0, 1} be a random variable with mean
µ(n|Skn,t,t, θkn,t), which represents whether the assigned agent n, given Skn,t,t, is accepted by arm
kn,t (here 1 denotes acceptance). Then the queue length of the agent n evolves as Qn(t + 1) =
(Qn(t) + An(t) −Dn(t|Skn,t,t))+ where x+ denotes max{x, 0} for x ∈R."
PROBLEM STATEMENT,0.026346604215456676,"As in the previous work of queueing bandits for multiple types of agents and servers [46, 15, 52, 23],
which are closely related work to ours, our primary focus is on stabilizing the dynamic systems
regarding queue lengths. For analyzing the stability of the systems, we define the average queue
lengths over horizon time T as"
PROBLEM STATEMENT,0.026932084309133488,Q(T) = 1 T X
PROBLEM STATEMENT,0.027517564402810304,t∈[T ] X
PROBLEM STATEMENT,0.02810304449648712,"n∈[N]
E [Qn(t)] ."
PROBLEM STATEMENT,0.028688524590163935,"Then the goal of this problem is to design an online matching algorithm to assign the agents to arms
for stabilizing the systems by bounding Q(T). We define the system stability as follows."
PROBLEM STATEMENT,0.02927400468384075,Definition 1. The systems are denoted to be stable when limT →∞Q(T) < ∞.
PROBLEM STATEMENT,0.029859484777517563,"1Our study can be easily extended to the multi-unit case where random variable An(t) lies in [0, M] for
some M > 0 with mean λn ∈[0, M]."
PROBLEM STATEMENT,0.03044496487119438,"The same stability definition was considered in Neely [41, 42], Freund et al. [15], Yang et al.
[52], Huang et al. [23]. It is noteworthy that according to [42, 41, 15], the system satisfying this
stability condition of Definition 1 is denoted to be strongly stable.2"
PROBLEM STATEMENT,0.031030444964871194,"For the analyses, we first present the regularity conditions."
PROBLEM STATEMENT,0.03161592505854801,Assumption 1. ∥xn∥2 ≤1 for all n ∈[N] and ∥θk∥2 ≤1 for all k ∈[K].
PROBLEM STATEMENT,0.032201405152224825,"Assumption 2. There exists κ > 0 such that infθ∈Rd:∥θ∥2≤1 µ(n|S, θ)µ(n0|S, θ) ≥κ for any n ∈S
and S ⊂[N]."
PROBLEM STATEMENT,0.03278688524590164,"These regularity conditions are commonly taken into account in the logistic and MNL bandit literature
[13, 3, 43, 44]. We note that, in the worst-case, 1/κ = O(L2)."
PROBLEM STATEMENT,0.03337236533957846,"We
define
the
set
of
feasible
disjoint
assortments
given
any
N
⊆
[N]
as
M(N) = {(S1, ..., SK) : Sk ⊆N, |Sk| ≤L ∀k ∈[K], Sk ∩Sl = ∅∀k ̸= l, S"
PROBLEM STATEMENT,0.03395784543325527,"k∈[K] Sk = N}.
Then, we consider the condition of traffic slackness for stability as follows."
PROBLEM STATEMENT,0.03454332552693208,"Assumption 3. For some traffic slackness 0 < ϵ < 1, there exists {Sk}k∈[K] ∈M([N]) such that
λn + ϵ ≤µ(n|Sk, θk) for all n ∈Sk and k ∈[K]."
PROBLEM STATEMENT,0.0351288056206089,"We note that similar slackness assumptions have been commonly considered in queueing bandits
[15, 52, 23]. As ϵ decreases, achieving stability in our setting becomes more challenging. A discussion
for a refined version of ϵ can be found in Appendix A.2."
PROBLEM STATEMENT,0.03571428571428571,"4
Preliminary Study: An Oracle Algorithm of MaxWeight"
PROBLEM STATEMENT,0.03629976580796253,"For queueing systems, MaxWeight [50] has been proven to have optimal throughput keeping the
queues in networks stable under the known service rates [51, 38, 37, 49]. Here, we analyze the
oracle policy using MaxWeight under known θk’s. We define the set of agents having non-empty
queues at time t as Nt = {n ∈[N]] : Qn(t) ̸= 0}. Then, the oracle policy using MaxWeight in our
setting is defined as {Sk,t}k∈[K] = argmax{Sk}k∈[K]∈M(Nt)
P"
PROBLEM STATEMENT,0.036885245901639344,"k∈[K]
P"
PROBLEM STATEMENT,0.03747072599531616,"n∈Sk Qn(t)µ(n|Sk, θk),
where priority in the assortment scheduling is on queues with either large queue lengths or high
service rates. We provide an analysis of stability of the MaxWeight oracle for known θk’s as follows."
PROBLEM STATEMENT,0.038056206088992975,"Proposition 1. Given the prior knowledge of θk for all k ∈[K], the average queue length of
MaxWeight is bounded as Q(T) = O

min{N,K}"
PROBLEM STATEMENT,0.03864168618266979,"ϵ

, which implies that the algorithm achieves
stability."
PROBLEM STATEMENT,0.039227166276346606,Proof. The proof is provided in Appendix A.3
PROBLEM STATEMENT,0.03981264637002342,"We note that the term of min{N, K} in the average queue length is a result of the system’s variance.
Additionally, as ϵ decreases, the stability of the system deteriorates due to the reduced traffic slackness.
Further discussion regarding ϵ can be found in Appendix A.2."
PROBLEM STATEMENT,0.04039812646370024,"Since the oracle algorithm requires prior knowledge of θk’s for the service rate, we cannot use it
directly in our bandit setting. In the following section, we propose algorithms incorporating an
efficient learning procedure to achieve stability in our setting."
ALGORITHMS AND ANALYSES,0.040983606557377046,"5
Algorithms and Analyses"
UCB-BASED ALGORITHM,0.04156908665105386,"5.1
UCB-based Algorithm
We first propose an algorithm based on the UCB strategy, UCB-QMB (Algorithm 1). We define the
negative log-likelihood as fk,t(θ) := −P"
UCB-BASED ALGORITHM,0.04215456674473068,"n∈Sk,t∪{n0} yn,t log µ(n|Sk,t, θ) where yn,t ∈{0, 1} is
observed preference feedback (1 denotes service acceptance, and 0 denotes refusal) and define the
gradient of the likelihood as"
UCB-BASED ALGORITHM,0.04274004683840749,"gk,t(θ) := ∇θfk,t(θ) =
X"
UCB-BASED ALGORITHM,0.04332552693208431,"n∈Sk,t
(µ(n|Sk,t, θ) −yn,t)xn.
(1)"
UCB-BASED ALGORITHM,0.043911007025761124,"2As mentioned in [42, 15], in general, this stability condition is stronger than the mean rate stability of"
UCB-BASED ALGORITHM,0.04449648711943794,"limT →∞
E[P
n∈[N] Qn(T )]"
UCB-BASED ALGORITHM,0.045081967213114756,"T
= 0 but weaker than the uniform stability of E[P"
UCB-BASED ALGORITHM,0.04566744730679157,"n∈[N] Qn(t)] ≤C for all t > 0
for some constant C > 0."
UCB-BASED ALGORITHM,0.04625292740046839,"Then, we construct the estimator of ˆθk,t from online updates applying online newton step studied by
[21, 53, 24, 14, 44] as ˆθk,t = argminθ∈Θ gk,t−1(ˆθk,t−1)⊤θ + 1"
UCB-BASED ALGORITHM,0.0468384074941452,"2∥θ −ˆθk,t−1∥2
Vk,t, where Θ = {θ ∈"
UCB-BASED ALGORITHM,0.04742388758782201,"Rd : ∥θ∥2 ≤1} and Vk,t = λId + κ"
UCB-BASED ALGORITHM,0.04800936768149883,"2
Pt−1
s=1
P"
UCB-BASED ALGORITHM,0.04859484777517564,"n∈Sk,s xnx⊤
n . Using the estimator, we define the UCB
index for agent n in assortment Sk as"
UCB-BASED ALGORITHM,0.04918032786885246,"eµUCB
t
(n|Sk, ˆθk,t) =
exp(hUCB
n,k,t ) 1 + P"
UCB-BASED ALGORITHM,0.049765807962529274,"m∈Sk exp(hUCB
m,k,t),
(2)"
UCB-BASED ALGORITHM,0.05035128805620609,"where hUCB
n,k,t := x⊤
n ˆθk,t + βt∥xn∥V −1
k,t with βt = C1
q λ + d"
UCB-BASED ALGORITHM,0.050936768149882905,κ log(1 + tLK
UCB-BASED ALGORITHM,0.05152224824355972,"dλ ) for some constant
C1 > 0. We utilize the MaxWeight with the UCB indexes by setting λ = 1."
UCB-BASED ALGORITHM,0.052107728337236536,"Algorithm 1 UCB-Queueing Matching Bandit (UCB-QMB)
Input: λ, κ, C1 > 0
for t = 1, . . . , T do"
UCB-BASED ALGORITHM,0.05269320843091335,for k ∈[K] do
UCB-BASED ALGORITHM,0.05327868852459016,"ˆθk,t ←argminθ∈Θ gk,t−1(ˆθk,t−1)⊤θ + 1"
UCB-BASED ALGORITHM,0.053864168618266976,"2∥θ −ˆθk,t−1∥2
Vk,t with (1)"
UCB-BASED ALGORITHM,0.05444964871194379,"{Sk,t}k∈[K] ←
argmax
{Sk}k∈[K]∈M(Nt) X k∈[K] X"
UCB-BASED ALGORITHM,0.05503512880562061,"n∈Sk
Qn(t)eµUCB
t
(n|Sk, ˆθk,t) with (2)"
UCB-BASED ALGORITHM,0.05562060889929742,"Offer {Sk,t}k∈[K] and observe preference feedback yn,t ∈{0, 1} for all n ∈Sk,t, k ∈[K]"
STABILITY ANALYSIS OF UCB-QMB,0.05620608899297424,"5.1.1
Stability Analysis of UCB-QMB
Here we provide an analysis for the stability of UCB-QMB (Algorithm 1)."
STABILITY ANALYSIS OF UCB-QMB,0.056791569086651054,"Theorem
1.
The
average
queue
length
of
Algorithm
1
is
bounded
as
Q(T)
="
STABILITY ANALYSIS OF UCB-QMB,0.05737704918032787,"O

min{N,K}"
STABILITY ANALYSIS OF UCB-QMB,0.057962529274004686,"ϵ
+ d2N2K2"
STABILITY ANALYSIS OF UCB-QMB,0.0585480093676815,"κ4ϵ6
polylog(T )"
STABILITY ANALYSIS OF UCB-QMB,0.05913348946135832,"T

, which implies that the algorithm achieves stability as"
STABILITY ANALYSIS OF UCB-QMB,0.059718969555035126,"lim
T →∞Q(T) = O
min{N, K} ϵ 
."
STABILITY ANALYSIS OF UCB-QMB,0.06030444964871194,"We note that Algorithm 1 achieves the same average queue length bound of O( min{N,K}"
STABILITY ANALYSIS OF UCB-QMB,0.06088992974238876,"ϵ
) with the
oracle of MaxWeight (Proposition 1) when T is large enough."
STABILITY ANALYSIS OF UCB-QMB,0.06147540983606557,"Proof sketch. Here we provide a proof sketch and the full version is provided in Appendix A.4.
We define the set of queues Q(t) = [Qn(t) : n ∈[N]] and a Lyapunov function as V(Q(t)) =
P"
STABILITY ANALYSIS OF UCB-QMB,0.06206088992974239,"n∈[N] Qn(t)2. For simplicity, we use Dn(t) for Dn(t|Skn,t,t) and D∗
n(t) for Dn(t|Sk∗
n,t,t) when
there is no confusion. Then we analyze the Lyapunov drift as follows:
X"
STABILITY ANALYSIS OF UCB-QMB,0.0626463700234192,"t∈[T ]
V(Q(t + 1)) −V(Q(t)) =
X"
STABILITY ANALYSIS OF UCB-QMB,0.06323185011709602,t∈[T ] X
STABILITY ANALYSIS OF UCB-QMB,0.06381733021077284,"n∈[N]
(Qn(t) + An(t) −D∗
n(t))2 −Qn(t)2 +
X"
STABILITY ANALYSIS OF UCB-QMB,0.06440281030444965,t∈[T ] X
STABILITY ANALYSIS OF UCB-QMB,0.06498829039812647,"n∈[N]
(Qn(t) + An(t) −Dn(t))+2 −
X"
STABILITY ANALYSIS OF UCB-QMB,0.06557377049180328,t∈[T ] X
STABILITY ANALYSIS OF UCB-QMB,0.0661592505854801,"n∈[N]
(Qn(t) + An(t) −D∗
n(t))2.
(3)"
STABILITY ANALYSIS OF UCB-QMB,0.06674473067915691,"For the first two terms in Eq.(3), with Assumption 3, we can show that
X"
STABILITY ANALYSIS OF UCB-QMB,0.06733021077283373,t∈[T ] X
STABILITY ANALYSIS OF UCB-QMB,0.06791569086651054,"n∈[N]
E[(Qn(t) + An(t) −D∗
n(t))2 −Qn(t)2] ≤−
X"
STABILITY ANALYSIS OF UCB-QMB,0.06850117096018736,t∈[T ] X
STABILITY ANALYSIS OF UCB-QMB,0.06908665105386416,"n∈[N]
2ϵE[Qn(t)] + 2 min{N, K}T,"
STABILITY ANALYSIS OF UCB-QMB,0.06967213114754098,"(4)
For the last two terms in Eq.(3), we have E
h X"
STABILITY ANALYSIS OF UCB-QMB,0.0702576112412178,t∈[T ] X
STABILITY ANALYSIS OF UCB-QMB,0.07084309133489461,"n∈[N]
(Qn(t) + An(t) −Dn(t))+2 −
X"
STABILITY ANALYSIS OF UCB-QMB,0.07142857142857142,t∈[T ] X
STABILITY ANALYSIS OF UCB-QMB,0.07201405152224824,"n∈[N]
(Qn(t) + An(t) −D∗
n(t))2i"
STABILITY ANALYSIS OF UCB-QMB,0.07259953161592506,"≤2E
h X"
STABILITY ANALYSIS OF UCB-QMB,0.07318501170960187,t∈[T ] X
STABILITY ANALYSIS OF UCB-QMB,0.07377049180327869,"n∈[N]
(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)
i
+ 5 min{N, K}T,
(5)"
STABILITY ANALYSIS OF UCB-QMB,0.0743559718969555,"where the first term of the last inequality is closely related to the regret analysis of the bandit
strategy. In the following, we focus on analyzing the last term in Eq.(5). We define events E1
t =
{∥ˆθk,t−θ∗
k∥Vk,t ≤βt for all k ∈[K]} and E2
n,t = {maxm∈Sk,t ∥xm∥V −1
k,t ≤C2ϵ/2βt for k = kπ
n,t}"
STABILITY ANALYSIS OF UCB-QMB,0.07494145199063232,"for some constant C2 > 0. We can show that E1
t holds with high probability so here we only consider
the case when E1
t holds. Then we have E
h X"
STABILITY ANALYSIS OF UCB-QMB,0.07552693208430913,t∈[T ] X
STABILITY ANALYSIS OF UCB-QMB,0.07611241217798595,"n∈[N]
µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)
i ≤
X"
STABILITY ANALYSIS OF UCB-QMB,0.07669789227166277,t∈[T ] X
STABILITY ANALYSIS OF UCB-QMB,0.07728337236533958,"n∈[N]
E[(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)(1(E2
n,t) + 1((E2
n,t)c))].
(6)"
STABILITY ANALYSIS OF UCB-QMB,0.0778688524590164,"Then for the first term of Eq.(6), from the UCB strategy and E2
n,t, we can show that
X"
STABILITY ANALYSIS OF UCB-QMB,0.07845433255269321,"t∈[T ]
E
h X"
STABILITY ANALYSIS OF UCB-QMB,0.07903981264637003,"n∈[N]
(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1(E2
n,t)
i
≤C2ϵ
X"
STABILITY ANALYSIS OF UCB-QMB,0.07962529274004684,t∈[T ] X
STABILITY ANALYSIS OF UCB-QMB,0.08021077283372366,"n∈[N]
E [Qn(t)] . (7)"
STABILITY ANALYSIS OF UCB-QMB,0.08079625292740047,"Now we provide a bound for the second term of Eq.(6). For some constant C3 > 0, we can show that
X"
STABILITY ANALYSIS OF UCB-QMB,0.08138173302107728,t∈[T ] X
STABILITY ANALYSIS OF UCB-QMB,0.08196721311475409,"n∈[N]
E[(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1((E2
n,t)c)] ≤
X"
STABILITY ANALYSIS OF UCB-QMB,0.08255269320843091,t∈[T ] X
STABILITY ANALYSIS OF UCB-QMB,0.08313817330210772,"n∈[N]
(ϵ/C3)E [Qn(t)] + O
N 2K2β4
T
κ2ϵ5"
STABILITY ANALYSIS OF UCB-QMB,0.08372365339578454,"
.
(8)"
STABILITY ANALYSIS OF UCB-QMB,0.08430913348946135,"By putting the results of Eqs. (3), (4), (5), (6), (7), (8) altogether, we can obtain E
h X"
STABILITY ANALYSIS OF UCB-QMB,0.08489461358313817,"t∈[T ]
V(Q(t + 1)) −V(Q(t))
i"
STABILITY ANALYSIS OF UCB-QMB,0.08548009367681499,"≤7 min{N, K}T + 2(C2 + (1/C3) −1)ϵ
X"
STABILITY ANALYSIS OF UCB-QMB,0.0860655737704918,t∈[T ] X
STABILITY ANALYSIS OF UCB-QMB,0.08665105386416862,"n∈[N]
E [Qn(t)] + O(N log(T)) + O
N 2K2β4
T
κ2ϵ5 
."
STABILITY ANALYSIS OF UCB-QMB,0.08723653395784543,"Finally, with positive constants C2, C3 > 0 satisfying C2 + (1/C3) < 1, from V(Q(1)) = 0 and
V(Q(T + 1)) ≥0, by using telescoping for the above inequality and rearrangement, we can conclude
the proof by 1 T
P"
STABILITY ANALYSIS OF UCB-QMB,0.08782201405152225,"t∈[T ]
P"
STABILITY ANALYSIS OF UCB-QMB,0.08840749414519906,"n∈[N] E[Qn(t)] = O( min{N,K}"
STABILITY ANALYSIS OF UCB-QMB,0.08899297423887588,"ϵ
+ d2N2K2"
STABILITY ANALYSIS OF UCB-QMB,0.0895784543325527,"κ4ϵ6
polylog(T ) T
)."
REGRET ANALYSIS OF UCB-QMB,0.09016393442622951,"5.1.2
Regret Analysis of UCB-QMB
In addition to the stability analysis, we examine the cumulative regret of UCB-QMB (Algorithm 1).
The regret is defined as the discrepancy between the performance of the oracle policy of MaxWeight
π∗, which operates with the knowledge of the true parameters θk’s, and that of our policy π. Given
the queue lengths at each time t, we denote the oracle assignments as"
REGRET ANALYSIS OF UCB-QMB,0.09074941451990633,"{S∗
k,t}k∈[K] =
argmax
{Sk}k∈[K]∈M(Nt) X k∈[K] X"
REGRET ANALYSIS OF UCB-QMB,0.09133489461358314,"n∈Sk
Qn(t)µ(n|Sk, θk)."
REGRET ANALYSIS OF UCB-QMB,0.09192037470725996,"We show that this oracle policy achieves stability in Proposition 1. For simplicity, we use k∗
n,t for
kπ∗
n,t. Then, the cumulative regret under π is defined as"
REGRET ANALYSIS OF UCB-QMB,0.09250585480093677,"Rπ(T) =
X"
REGRET ANALYSIS OF UCB-QMB,0.09309133489461359,t∈[T ] X
REGRET ANALYSIS OF UCB-QMB,0.0936768149882904,"n∈[N]
E
h
(µ(n|S∗
k∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)
i
.
(9)"
REGRET ANALYSIS OF UCB-QMB,0.0942622950819672,"We define Qmax = E[maxt∈[T ],n∈[N] Qn(t)]. Then the algorithm achieves the following regret
bound."
REGRET ANALYSIS OF UCB-QMB,0.09484777517564402,Theorem 2. The policy π of Algorithm 1 achieves a regret bound of
REGRET ANALYSIS OF UCB-QMB,0.09543325526932084,"Rπ(T) = e
O

min
d κ √"
REGRET ANALYSIS OF UCB-QMB,0.09601873536299765,"KTQmax,
dNK min{N, K}3 κ2ϵ3"
REGRET ANALYSIS OF UCB-QMB,0.09660421545667447,"1/4
T 3/4

."
REGRET ANALYSIS OF UCB-QMB,0.09718969555035128,"We emphasize that our algorithms achieve a sublinear regret bound, even in the worst-case scenario
regarding queue lengths from the minimum in regret. In contrast, [23] achieves a regret bound of
eO(max{
√"
REGRET ANALYSIS OF UCB-QMB,0.0977751756440281,"TQmax, T 3/4}) for a stationary setting, where the worst-case bound is not guaranteed to
be sublinear from the maximum in regret."
REGRET ANALYSIS OF UCB-QMB,0.09836065573770492,"Proof sketch. Here we provide a proof sketch and the full version is provided in Appendix A.5.
We first provide the proof for regret bound of Rπ(T)
=
e
O( d κ
√"
REGRET ANALYSIS OF UCB-QMB,0.09894613583138173,"KTQmax).
We define
event E1
t
=
{∥ˆθk,t −θ∗
k∥Vk,t
≤
βt ∀k
∈
[K]} which holds with a high probabil-
ity.
Therefore, here we only consider the case when Et holds.
Then we can show that
P"
REGRET ANALYSIS OF UCB-QMB,0.09953161592505855,"n∈[N] E[Qn(t)(µ(n|Sk∗
n,t,t, θk∗
n,t)−µ(n|Skn,t,t, θkn,t))] ≤P"
REGRET ANALYSIS OF UCB-QMB,0.10011709601873536,"n∈[N] E[Qn(t)(eµUCB
t
(n|Skn,t,t)−
µ(n|Skn,t,t, θkn,t))] ≤P
k∈[K] E[2βt maxn∈Sk,t ∥xn∥V −1
k,t Qn(t)].
From the inequality, with
PT
t=1 maxn∈Sk,t ∥xn∥2
V −1
k,t ≤(4d/κ) log(1 + (TL/dλ)), we have"
REGRET ANALYSIS OF UCB-QMB,0.10070257611241218,"Rπ(T) =
X"
REGRET ANALYSIS OF UCB-QMB,0.101288056206089,t∈[T ] X
REGRET ANALYSIS OF UCB-QMB,0.10187353629976581,"n∈[N]
E[Qn(t)(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))]"
REGRET ANALYSIS OF UCB-QMB,0.10245901639344263,"≤2E
h
max
t∈[T ],n∈[N] Qn(t)βT
s KT
X"
REGRET ANALYSIS OF UCB-QMB,0.10304449648711944,t∈[T ] X
REGRET ANALYSIS OF UCB-QMB,0.10362997658079626,"k∈[K]
max
l∈Sk,t ∥xl∥2
V −1
k,t"
REGRET ANALYSIS OF UCB-QMB,0.10421545667447307,"i
= e
O
d κ √"
REGRET ANALYSIS OF UCB-QMB,0.10480093676814989,"KTQmax

.(10)"
REGRET ANALYSIS OF UCB-QMB,0.1053864168618267,"Now
we
provide
the
proof
for
the
worst-case
regret
bound
of
Rπ(T)
="
REGRET ANALYSIS OF UCB-QMB,0.10597189695550352,"e
O

dNK min{N,K}3"
REGRET ANALYSIS OF UCB-QMB,0.10655737704918032,"κ2ϵ3
1/4
T 3/4

in
the
following.
We
additionally
define
event"
REGRET ANALYSIS OF UCB-QMB,0.10714285714285714,"E2
n,t = {maxm∈Sk,t ∥xm∥V −1
k,t
≤ζ for k = kn,t} for some constant C2 > 0.
Under E1
t ,
we have
Rπ(T) =
X"
REGRET ANALYSIS OF UCB-QMB,0.10772833723653395,t∈[T ] X
REGRET ANALYSIS OF UCB-QMB,0.10831381733021077,"n∈[N]
E[(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)] ≤
X"
REGRET ANALYSIS OF UCB-QMB,0.10889929742388758,t∈[T ] X
REGRET ANALYSIS OF UCB-QMB,0.1094847775175644,"n∈[N]
E[(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)(1(E2
n,t) + 1((E2
n,t)c))]."
REGRET ANALYSIS OF UCB-QMB,0.11007025761124122,"(11)
Then for the first term of Eq.(11), we have X"
REGRET ANALYSIS OF UCB-QMB,0.11065573770491803,"t∈[T ]
E  X"
REGRET ANALYSIS OF UCB-QMB,0.11124121779859485,"n∈[N]
(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1(E2
n,t)   ≤
X"
REGRET ANALYSIS OF UCB-QMB,0.11182669789227166,"t∈[T ]
E  X"
REGRET ANALYSIS OF UCB-QMB,0.11241217798594848,"n∈[N]
2βt∥xn∥V −1
kn,t,tQn(t)1(E2
n,t)  ≤
X"
REGRET ANALYSIS OF UCB-QMB,0.1129976580796253,t∈[T ] X
REGRET ANALYSIS OF UCB-QMB,0.11358313817330211,"n∈[N]
2βtζE [Qn(t)] ,
(12)"
REGRET ANALYSIS OF UCB-QMB,0.11416861826697892,"where the last inequality is obtained from E2
n,t. By analyzing the selected number of agent n with
(E2
n,t)c, we can show that
X"
REGRET ANALYSIS OF UCB-QMB,0.11475409836065574,t∈[T ] X
REGRET ANALYSIS OF UCB-QMB,0.11533957845433256,"n∈[N]
E[(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1((E2
n,t)c)] ≤
X"
REGRET ANALYSIS OF UCB-QMB,0.11592505854800937,t∈[T ] X
REGRET ANALYSIS OF UCB-QMB,0.11651053864168619,"n∈[N]
ζβT E [Qn(t)] + O
 NK κζ3βT"
REGRET ANALYSIS OF UCB-QMB,0.117096018735363,"
.
(13)"
REGRET ANALYSIS OF UCB-QMB,0.11768149882903982,"By putting the results of Eqs. (11),
(12),
(13),
and Theorem 1,
by setting ζ
=
(ϵNK/ min{N, K}Tκβ2
T )1/4, for large enough T, we have"
REGRET ANALYSIS OF UCB-QMB,0.11826697892271663,Rπ(T) = O 
REGRET ANALYSIS OF UCB-QMB,0.11885245901639344,"ζβT
X"
REGRET ANALYSIS OF UCB-QMB,0.11943793911007025,t∈[T ] X
REGRET ANALYSIS OF UCB-QMB,0.12002341920374707,"n∈[N]
E[Qn(t)] + NK"
REGRET ANALYSIS OF UCB-QMB,0.12060889929742388,"κζ3βT
+ N log(T)   = e
O "
REGRET ANALYSIS OF UCB-QMB,0.1211943793911007,"N
dNK min{N, K}3 κ2ϵ3"
REGRET ANALYSIS OF UCB-QMB,0.12177985948477751,"1/4
T 3/4
!"
REGRET ANALYSIS OF UCB-QMB,0.12236533957845433,",
(14)"
REGRET ANALYSIS OF UCB-QMB,0.12295081967213115,which conclude the proof combined with Eq.(10).
REGRET ANALYSIS OF UCB-QMB,0.12353629976580796,"Algorithm 2 Thompson Sampling-Queueing Matching Bandit (TS-QMB)
Input: λ, M, κ, C1 > 0
for t = 1, . . . , T do"
REGRET ANALYSIS OF UCB-QMB,0.12412177985948478,for k ∈[K] do
REGRET ANALYSIS OF UCB-QMB,0.12470725995316159,"ˆθk,t ←argminθ∈Θ gk,t−1(ˆθk,t−1)⊤θ + 1"
REGRET ANALYSIS OF UCB-QMB,0.1252927400468384,"2∥θ −ˆθk,t−1∥2
Vk,t with (1)"
REGRET ANALYSIS OF UCB-QMB,0.12587822014051522,"Sample {eθ(i)
k,t}i∈[M] independently from N(ˆθk,t, β2
t V −1
k,t )"
REGRET ANALYSIS OF UCB-QMB,0.12646370023419204,"{Sk,t}k∈[K] ←
argmax
{Sk}k∈[K]∈M(Nt) X k∈[K] X"
REGRET ANALYSIS OF UCB-QMB,0.12704918032786885,"n∈Sk
Qn(t)eµT S
t
(n|Sk, {eθ(i)
k,t}i∈[M]) with (15)"
REGRET ANALYSIS OF UCB-QMB,0.12763466042154567,"Offer {Sk,t}k∈[K] and observe preference feedback yn,t ∈{0, 1} for all n ∈Sk,t, k ∈[K]"
THOMPSON SAMPLING-BASED ALGORITHM,0.12822014051522249,"5.2
Thompson Sampling-based Algorithm
Here, we propose an algorithm based on Thompson Sampling, TS-QMB (Algorithm 2). As in the
previous algorithm, we construct the estimator as ˆθk,t = argminθ∈Θ gk,t−1(ˆθk,t−1)⊤θ + 1"
THOMPSON SAMPLING-BASED ALGORITHM,0.1288056206088993,"2∥θ −
ˆθk,t−1∥2
Vk,t. To facilitate exploration, we sample several eθ(i)
k,t for i ∈[M] from a Gaussian distribution"
THOMPSON SAMPLING-BASED ALGORITHM,0.12939110070257612,"of N(ˆθk,t, β2
t V −1
k,t ) and construct the Thompson Sampling (TS) index for assortment Sk as"
THOMPSON SAMPLING-BASED ALGORITHM,0.12997658079625293,"eµT S
t
(n|Sk, {eθ(i)
k,t}i∈[M]) =
exp(hT S
n,k,t) 1 + P"
THOMPSON SAMPLING-BASED ALGORITHM,0.13056206088992975,"m∈Sk exp(hT S
m,k,t),
(15)"
THOMPSON SAMPLING-BASED ALGORITHM,0.13114754098360656,"where hT S
n,k,t = maxi∈[M] x⊤
n eθ(i)
k,t and βt = C1
q λ + d"
THOMPSON SAMPLING-BASED ALGORITHM,0.13173302107728338,κ log(1 + tLK
THOMPSON SAMPLING-BASED ALGORITHM,0.1323185011709602,dλ ) for some constant C1 > 0.
THOMPSON SAMPLING-BASED ALGORITHM,0.132903981264637,"Then we utilize the MaxWeight with TS indexes. We set λ = 1 and M = ⌈1 −
log(KL)
log(1−1/4√eπ)⌉."
STABILITY ANALYSIS OF TS-QMB,0.13348946135831383,"5.2.1
Stability Analysis of TS-QMB
Here we provide stability analysis for TS-QMB (Algorithm 2)."
STABILITY ANALYSIS OF TS-QMB,0.13407494145199064,"Theorem
3.
The
average
queue
length
of
Algorithm
2
is
bounded
as
Q(T)
="
STABILITY ANALYSIS OF TS-QMB,0.13466042154566746,"O

min{N,K}"
STABILITY ANALYSIS OF TS-QMB,0.13524590163934427,"ϵ
+ d4N2K2"
STABILITY ANALYSIS OF TS-QMB,0.1358313817330211,"κ4ϵ6
polylog(T )"
STABILITY ANALYSIS OF TS-QMB,0.1364168618266979,"T

, which implies that the algorithm achieves stability as"
STABILITY ANALYSIS OF TS-QMB,0.13700234192037472,"lim
T →∞Q(T) = O
min{N, K} ϵ 
."
STABILITY ANALYSIS OF TS-QMB,0.1375878220140515,Proof. The proof is provided in Appendix A.6
REGRET ANALYSIS OF TS-QMB,0.13817330210772832,"5.2.2
Regret Analysis of TS-QMB
We provide a regret analysis of TS-QMB (Algorithm 2) for the regret definition of (9) in the following."
REGRET ANALYSIS OF TS-QMB,0.13875878220140514,Theorem 4. The policy π of Algorithm 2 achieves a regret bound of
REGRET ANALYSIS OF TS-QMB,0.13934426229508196,"Rπ(T) = e
O  min"
REGRET ANALYSIS OF TS-QMB,0.13992974238875877,"(
d3/2 κ √"
REGRET ANALYSIS OF TS-QMB,0.1405152224824356,"KTQmax,
d2NK min{N, K}3 κ2ϵ3"
REGRET ANALYSIS OF TS-QMB,0.1411007025761124,"1/4
T 3/4
)! ."
REGRET ANALYSIS OF TS-QMB,0.14168618266978922,Proof. The proof is provided in Appendix A.7
REGRET ANALYSIS OF TS-QMB,0.14227166276346603,"We note that the performance of Algorithm 1 and Algorithm 2 in the analysis results shows similar
trends. However, the TS-based Algorithm 2 incurs a loss with respect to d compared to the UCB-based
Algorithm 1, as commonly seen in previous TS-based algorithms [5, 2, 43]."
REGRET ANALYSIS OF TS-QMB,0.14285714285714285,"Here, we briefly discuss the combinatorial optimization of argmax{Sk}k∈[K]∈M(Nt)
P"
REGRET ANALYSIS OF TS-QMB,0.14344262295081966,"k∈[K] fk(Sk)
for some function fk : S ⊂[N] →R in our algorithms. The exact optimization can be expensive
due to its NP-hard nature. To address this, we can utilize the technique of α-approximation oracle
with 0 ≤α ≤1, first introduced in Kakade et al. [25], which is deferred to Appendix A.9."
REGRET ANALYSIS OF TS-QMB,0.14402810304449648,"0
5000
10000 15000 20000
Time step t 0.0 0.2 0.4 0.6 0.8 1.0 (t)"
REGRET ANALYSIS OF TS-QMB,0.1446135831381733,"1e2
Average Queue Length"
REGRET ANALYSIS OF TS-QMB,0.1451990632318501,"0
5000
10000 15000 20000
Time step t 0.0 0.5 1.0 1.5 2.0 (t)"
REGRET ANALYSIS OF TS-QMB,0.14578454332552693,"1e5
Regret"
REGRET ANALYSIS OF TS-QMB,0.14637002341920374,"ETC-GS
UCB-QMB (Algorithm 1)"
REGRET ANALYSIS OF TS-QMB,0.14695550351288056,"MaxWeight-UCB
TS-QMB (Algorithm 2)"
REGRET ANALYSIS OF TS-QMB,0.14754098360655737,"Q-UCB
Oracle (MaxWeight)"
REGRET ANALYSIS OF TS-QMB,0.1481264637002342,DAM-UCB
REGRET ANALYSIS OF TS-QMB,0.148711943793911,Figure 2: Experimental results for (left) average queue length and (right) regret
EXPERIMENTS,0.14929742388758782,"6
Experiments"
EXPERIMENTS,0.14988290398126464,"Here, we provide experimental results to demonstrate the performance of our algorithms.3 For the
synthetic experiments, we consider N = 4, K = 2, L = 2, and d = 2. Each element in xn and
θk is uniformly generated from [0, 1] and then normalized, and λn’s are determined with ϵ = 0.1.
Even though no dedicated benchmark exists for our queueing matching scenario, we compare our
algorithms with previously suggested ones for queueing bandits or matching bandits: Q-UCB [32],
DAM-UCB [15], and MaxWeight-UCB [52] for multi-queue multi-server bandits with asymmetric
service rates and ETC-GS [34] for matching bandits. In Figure 2, we can observe that our algorithms
(Algorithms 1 and 2) outperform the previously suggested ones except for the oracle (MaxWeight)
operated under known (latent) service rates. We demonstrate that our algorithms achieve stability,
similar to the oracle in the left figure, which matches the results of our stability analysis (Theorems 1
and 3). Regarding regret shown in the right figure, the previously suggested algorithms exhibit
superlinear performance due to the increasing Qn(t), while our algorithms show relatively small
regret (Theorems 2 and 4). Additional experiments can be found in Appendix A.10."
CONCLUSION,0.15046838407494145,"7
Conclusion"
CONCLUSION,0.15105386416861827,"In this paper, we introduce a novel framework for queueing matching bandits with preference
feedback. To achieve stability in this framework, we propose UCB and TS-based algorithms uti-
lizing the MaxWeight strategy. The algorithms achieve system stability with an average queue
length bound of O(min{N, K}/ϵ). Furthermore, the algorithms achieve sublinear regret bounds of
e
O(min{
√"
CONCLUSION,0.15163934426229508,"TQmax, T 3/4}). Lastly, we demonstrate our algorithms using synthetic datasets."
ACKNOWLEDGEMENTS,0.1522248243559719,"8
Acknowledgements"
ACKNOWLEDGEMENTS,0.15281030444964872,"The authors thank Milan Vojnovi´c for helpful discussions and Hyunjun Choi for providing useful code.
JK was supported by the Global-LAMP Program of the National Research Foundation of Korea (NRF)
grant funded by the Ministry of Education (No. RS-2023-00301976). MO was supported by the NRF
grant funded by the Korea government(MSIT) (No. 2022R1C1C1006859 and 2022R1A4A1030579)
and by AI-Bio Research Grant through Seoul National University."
REFERENCES,0.15339578454332553,References
REFERENCES,0.15398126463700235,"[1] Yasin Abbasi-Yadkori, Dávid Pál, and Csaba Szepesvári. Improved algorithms for linear
stochastic bandits. Advances in neural information processing systems, 24, 2011."
REFERENCES,0.15456674473067916,"[2] Marc Abeille and Alessandro Lazaric. Linear thompson sampling revisited. In Artificial
Intelligence and Statistics, pages 176–184. PMLR, 2017."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.15515222482435598,"3The
source
code
is
available
at
https://github.com/junghunkim7786/
Queueing-Matching-Bandits-with-Preference-Feedback"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.1557377049180328,"[3] Marc Abeille, Louis Faury, and Clément Calauzènes. Instance-wise minimax-optimal algorithms
for logistic bandits. In International Conference on Artificial Intelligence and Statistics, pages
3691–3699. PMLR, 2021."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.1563231850117096,"[4] Philipp Afeche, Rene Caldentey, and Varun Gupta. On the optimal design of a bipartite matching
queueing system. Operations Research, 70(1):363–401, 2022."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.15690866510538642,"[5] Shipra Agrawal and Navin Goyal. Thompson sampling for contextual bandits with linear
payoffs. In International conference on machine learning, pages 127–135. PMLR, 2013."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.15749414519906324,"[6] Shipra Agrawal, Vashist Avadhanula, Vineet Goyal, and Assaf Zeevi. Mnl-bandit: A dynamic
learning approach to assortment selection. arXiv preprint arXiv:1706.03880, 2017."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.15807962529274006,"[7] Shipra Agrawal, Vashist Avadhanula, Vineet Goyal, and Assaf Zeevi. Thompson sampling for
the mnl-bandit. In Conference on learning theory, pages 76–78. PMLR, 2017."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.15866510538641687,"[8] Urtzi Ayesta, Peter Jacko, and Vladimir Novak. Scheduling of multi-class multi-server queueing
systems with abandonments. Journal of Scheduling, 20:129–145, 2017."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.1592505854800937,"[9] Soumya Basu, Karthik Abinav Sankararaman, and Abishek Sankararaman. Beyond log2(t)
regret for decentralized bandits in matching markets. In International Conference on Machine
Learning, pages 705–715. PMLR, 2021."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.1598360655737705,"[10] Gruia Calinescu, Chandra Chekuri, Martin Pal, and Jan Vondrák. Maximizing a monotone
submodular function subject to a matroid constraint. SIAM Journal on Computing, 40(6):
1740–1766, 2011."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.16042154566744732,"[11] Xi Chen, Akshay Krishnamurthy, and Yining Wang. Robust dynamic assortment optimization
in the presence of outlier customers. Operations Research, 2023."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.16100702576112413,"[12] Tuhinangshu Choudhury, Gauri Joshi, Weina Wang, and Sanjay Shakkottai. Job dispatching
policies for queueing systems with unknown service rates. In Proceedings of the Twenty-second
International Symposium on Theory, Algorithmic Foundations, and Protocol Design for Mobile
Networks and Mobile Computing, pages 181–190, 2021."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.16159250585480095,"[13] Louis Faury, Marc Abeille, Clément Calauzènes, and Olivier Fercoq. Improved optimistic
algorithms for logistic bandits. In International Conference on Machine Learning, pages
3052–3060. PMLR, 2020."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.16217798594847777,"[14] Louis Faury, Marc Abeille, Kwang-Sung Jun, and Clément Calauzènes. Jointly efficient and
optimal algorithms for logistic bandits. In International Conference on Artificial Intelligence
and Statistics, pages 546–580. PMLR, 2022."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.16276346604215455,"[15] Daniel Freund, Thodoris Lykouris, and Wentao Weng. Efficient decentralized multi-agent
learning in asymmetric queuing systems. In Conference on Learning Theory, pages 4080–4084.
PMLR, 2022."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.16334894613583137,"[16] Bernhard Fuchs, Winfried Hochstättler, and Walter Kern. Online matching on a line. Theoretical
Computer Science, 332(1-3):251–264, 2005."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.16393442622950818,"[17] Jason Gaitonde and Éva Tardos. Stability and learning in strategic queuing systems. In
Proceedings of the 21st ACM Conference on Economics and Computation, pages 319–347,
2020."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.164519906323185,"[18] Buddhima Gamlath, Michael Kapralov, Andreas Maggiori, Ola Svensson, and David Wajc.
Online matching with general arrivals. In 2019 IEEE 60th Annual Symposium on Foundations
of Computer Science (FOCS), pages 26–37. IEEE, 2019."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.16510538641686182,"[19] Kevin D Glazebrook and José Niño-Mora. Parallel scheduling of multiclass m/m/m queues:
Approximate and heavy-traffic optimization of achievable performance. Operations Research,
49(4):609–623, 2001."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.16569086651053863,"[20] J Michael Harrison. Heavy traffic analysis of a system with parallel servers: asymptotic
optimality of discrete-review policies. The Annals of Applied Probability, 8(3):822–848, 1998."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.16627634660421545,"[21] Elad Hazan, Amit Agarwal, and Satyen Kale. Logarithmic regret algorithms for online convex
optimization. Machine Learning, 69(2):169–192, 2007."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.16686182669789226,"[22] Wei-Kang Hsu, Jiaming Xu, Xiaojun Lin, and Mark R Bell. Integrated online learning and
adaptive control in queueing systems with uncertain payoffs. Operations Research, 70(2):
1166–1181, 2022."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.16744730679156908,"[23] Jiatai Huang, Leana Golubchik, and Longbo Huang. When lyapunov drift based queue schedul-
ing meets adversarial bandit learning. IEEE/ACM Transactions on Networking, 2024."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.1680327868852459,"[24] Kwang-Sung Jun, Aniruddha Bhargava, Robert Nowak, and Rebecca Willett. Scalable gen-
eralized linear bandits: Online computation and hashing. Advances in Neural Information
Processing Systems, 30, 2017."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.1686182669789227,"[25] Sham M Kakade, Adam Tauman Kalai, and Katrina Ligett. Playing games with approximation
algorithms. In Proceedings of the thirty-ninth annual ACM symposium on Theory of computing,
pages 546–555, 2007."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.16920374707259953,"[26] Michael Kapralov, Ian Post, and Jan Vondrák. Online submodular welfare maximization:
Greedy is optimal. In Proceedings of the twenty-fourth annual ACM-SIAM symposium on
Discrete algorithms, pages 1216–1225. SIAM, 2013."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.16978922716627634,"[27] Richard M Karp, Umesh V Vazirani, and Vijay V Vazirani. An optimal algorithm for on-line
bipartite matching. In Proceedings of the twenty-second annual ACM symposium on Theory of
computing, pages 352–358, 1990."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.17037470725995316,"[28] Thomas Kesselheim, Klaus Radke, Andreas Tönnis, and Berthold Vöcking. An optimal online
algorithm for weighted bipartite matching and extensions to combinatorial auctions. In European
symposium on algorithms, pages 589–600. Springer, 2013."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.17096018735362997,"[29] Fang Kong and Shuai Li. Player-optimal stable regret for bandit learning in matching markets.
In Proceedings of the 2023 Annual ACM-SIAM Symposium on Discrete Algorithms (SODA),
pages 1512–1522. SIAM, 2023."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.1715456674473068,"[30] Subhashini Krishnasamy, Rajat Sen, Ramesh Johari, and Sanjay Shakkottai. Regret of queueing
bandits. Advances in Neural Information Processing Systems, 29, 2016."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.1721311475409836,"[31] Subhashini Krishnasamy, Ari Arapostathis, Ramesh Johari, and Sanjay Shakkottai. On learning
the cµ rule: Single and multi-server settings. Available at SSRN 3123545, 2018."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.17271662763466042,"[32] Subhashini Krishnasamy, Rajat Sen, Ramesh Johari, and Sanjay Shakkottai. Learning unknown
service rates in queues: A multiarmed bandit approach. Operations research, 69(1):315–330,
2021."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.17330210772833723,"[33] Tor Lattimore and Csaba Szepesvári. Bandit algorithms. Cambridge University Press, 2020."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.17388758782201405,"[34] Lydia T Liu, Horia Mania, and Michael Jordan. Competing bandits in matching markets. In
International Conference on Artificial Intelligence and Statistics, pages 1618–1628. PMLR,
2020."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.17447306791569087,"[35] Lydia T Liu, Feng Ruan, Horia Mania, and Michael I Jordan. Bandit learning in decentralized
matching markets. The Journal of Machine Learning Research, 22(1):9612–9645, 2021."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.17505854800936768,"[36] Nan Liu, Yuhang Ma, and Huseyin Topaloglu. Assortment optimization under the multinomial
logit model with sequential offerings. INFORMS Journal on Computing, 32(3):835–853, 2020."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.1756440281030445,"[37] Avishai Mandelbaum and Alexander L Stolyar. Scheduling flexible servers with convex delay
costs: Heavy-traffic optimality of the generalized cµ-rule. Operations Research, 52(6):836–855,
2004."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.1762295081967213,"[38] Nick McKeown, Adisak Mekkittikul, Venkat Anantharam, and Jean Walrand. Achieving
100% throughput in an input-queued switch. IEEE Transactions on Communications, 47(8):
1260–1267, 1999."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.17681498829039813,"[39] Aranyak Mehta, Amin Saberi, Umesh Vazirani, and Vijay Vazirani. Adwords and generalized
online matching. Journal of the ACM (JACM), 54(5):22–es, 2007."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.17740046838407494,"[40] Aranyak Mehta et al.
Online matching and ad allocation.
Foundations and Trends® in
Theoretical Computer Science, 8(4):265–368, 2013."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.17798594847775176,"[41] Michael J Neely. Queue stability and probability 1 convergence via lyapunov optimization.
arXiv preprint arXiv:1008.3519, 2010."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.17857142857142858,"[42] Michael J Neely. Stability and capacity regions or discrete time queueing networks. arXiv
preprint arXiv:1003.3396, 2010."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.1791569086651054,"[43] Min-hwan Oh and Garud Iyengar. Thompson sampling for multinomial logit contextual bandits.
Advances in Neural Information Processing Systems, 32, 2019."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.1797423887587822,"[44] Min-hwan Oh and Garud Iyengar. Multinomial logit contextual bandits: Provable optimality
and practicality. In Proceedings of the AAAI conference on artificial intelligence, volume 35,
pages 9205–9213, 2021."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.18032786885245902,"[45] Abishek Sankararaman, Soumya Basu, and Karthik Abinav Sankararaman. Dominate or delete:
Decentralized competing bandits with uniform valuation. arXiv preprint arXiv:2006.15166,
2020."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.18091334894613584,"[46] Flore Sentenac, Etienne Boursier, and Vianney Perchet. Decentralized learning in online
queuing systems. Advances in Neural Information Processing Systems, 34:18501–18512, 2021."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.18149882903981265,"[47] Thomas Stahlbuhk, Brooke Shrader, and Eytan Modiano. Learning algorithms for scheduling
in wireless networks with unknown channel statistics. In Proceedings of the Eighteenth ACM
International Symposium on Mobile Ad Hoc Networking and Computing, pages 31–40, 2018."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.18208430913348947,"[48] Thomas Stahlbuhk, Brooke Shrader, and Eytan Modiano. Learning algorithms for minimizing
queue length regret. IEEE Transactions on Information Theory, 67(3):1759–1781, 2021."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.18266978922716628,"[49] Alexander L Stolyar. Maxweight scheduling in a generalized switch: State space collapse and
workload minimization in heavy traffic. The Annals of Applied Probability, 14(1):1–53, 2004."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.1832552693208431,"[50] Leandros Tassiulas and Anthony Ephremides. Stability properties of constrained queueing
systems and scheduling policies for maximum throughput in multihop radio networks. In 29th
IEEE Conference on Decision and Control, pages 2130–2132. IEEE, 1990."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.18384074941451992,"[51] Leandros Tassiulas and Anthony Ephremides. Dynamic server allocation to parallel queues
with randomly varying connectivity. IEEE Transactions on Information Theory, 39(2):466–478,
1993."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.18442622950819673,"[52] Zixian Yang, R Srikant, and Lei Ying. Learning while scheduling in multi-server systems with
unknown statistics: Maxweight with discounted ucb. In International Conference on Artificial
Intelligence and Statistics, pages 4275–4312. PMLR, 2023."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.18501170960187355,"[53] Lijun Zhang, Tianbao Yang, Rong Jin, Yichi Xiao, and Zhi-Hua Zhou. Online stochastic linear
optimization under one-bit feedback. In International Conference on Machine Learning, pages
392–401. PMLR, 2016."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.18559718969555036,"[54] Yirui Zhang, Siwei Wang, and Zhixuan Fang. Matching in multi-arm bandit with collision.
Advances in Neural Information Processing Systems, 35:9552–9563, 2022."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.18618266978922718,"A
Appendix"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.186768149882904,"A.1
Limitations & Discussion
We leave several questions open for future research. Firstly, it remains an open problem to establish
lower bounds for queue lengths and regret. However, we believe that constructing a lower bound
would be much more challenging compared to other parametric bandit problems. Additionally,
improving the dependency on κ for queue length and regret bounds from the structure of MNL would
be an interesting avenue for future work."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.1873536299765808,"Regarding computation efficiency, we note that updating estimators in our algorithms is computa-
tionally efficient because they are based on online updates with convex optimization for updating
estimators. Concerning combinatorial optimization in our algorithms, we can alleviate computational
costs using α-approximation oracle algorithms, as discussed in Appendix A.9. Note that almost
all combinatorial bandit problems, including our proposed matching bandit framework, involve a
combinatorial optimization step which often relies on some type of approximation optimization
oracles. Hence, this is not a particular limitation specific to our study. However, developing an
improved approximation oracle would also be an interesting direction for future research."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.1879391100702576,"A.2
Discussion on Traffic Slackness Parameter ϵ
As in the closely related works of [15, 52, 23], the traffic slackness remains constant regardless of the
number of agents N and the number of servers K as ϵ = ϵ0 for some 0 < ϵ0 < 1. However, this may
not align with intuition, as a large K might be beneficial in terms of traffic slackness, while a large
N could have the opposite effect. To address this, we can consider ϵ = ϵ0
min(N,K)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.1885245901639344,"N
. This reflects
that when N ≥K, due to the lack of servers, increasing K is critical for increasing traffic slackness,
while increasing N could decrease it. When N < K implying there are enough servers, however, the
value of N doesn’t impact the traffic slackness because each agent can be assigned to at most one
server at each time, and there are sufficient servers to handle the agents."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.18911007025761123,"If we consider the traffic slackness as ϵ = ϵ0
min{N,K}"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.18969555035128804,"N
, the oracle strategy of MaxWeight achieves
Q(T) = O( N"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.19028103044496486,"ϵ0 ) from Proposition 1. This result shows that as N increases, causing the traffic
slackness to decrease, the average queue length increases. Meanwhile, the positive influence of K on
traffic slackness is neutralized in the average queue length bound due to system variance."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.19086651053864168,"A.3
Proof of Proposition 1
Define the set of queues Q(t) = [Qn(t) : n ∈[N]] and a Lyapunov function as V(Q(t)) =
P"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.1914519906323185,"n∈[N] Qn(t)2. For simplicity, we use Dn(t) for Dn(t|Skn,t,t) when there is no confusion. We
observe that P"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.1920374707259953,n∈[N] E[An(t)] ≤P
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.19262295081967212,n∈[N] λn ≤P
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.19320843091334894,"n∈[N] µ(n|Sk, θk) ≤K for some Sk from
Assumption 3 and P"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.19379391100702575,n∈[N] λn ≤N. This implies P
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.19437939110070257,"n∈[N][An(t)] ≤min{N, K}. We also have
P
n∈[N] E[Dn(t)] = P
n∈[N] E[µ(n|Sk,t, θk)] ≤min{K, N}. Then we have"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.19496487119437939,E[V(Q(t + 1)) −V(Q(t))] = E  X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.1955503512880562,"n∈[N]
(Qn(t) −An(t) + Dn(t))+2 −Qn(t)2   ≤E  X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.19613583138173302,"n∈[N]
(Qn(t) −An(t) + Dn(t))2 −Qn(t)2   ≤E  2
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.19672131147540983,"n∈[N]
Qn(t)An(t) −2
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.19730679156908665,"n∈[N]
Qn(t)Dn(t) −2
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.19789227166276346,"n∈[N]
An(t)Dn(t) +
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.19847775175644028,"n∈[N]
An(t)2 +
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.1990632318501171,"n∈[N]
Dn(t)2   ≤E  2
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.1996487119437939,"n∈[N]
Qn(t)An(t) −2
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.20023419203747073,"n∈[N]
Qn(t)Dn(t) +
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.20081967213114754,"n∈[N]
An(t) +
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.20140515222482436,"n∈[N]
Dn(t)   ≤E  2
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.20199063231850117,"n∈[N]
Qn(t)An(t) −2
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.202576112412178,"n∈[N]
Qn(t)Dn(t) + 2 min{N, K} "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2031615925058548,"
(16)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.20374707259953162,"From Assumption 3, we define the corresponding assortments as {S′
k}k∈[K] ∈M(N), which satisfies
λn + ϵ ≤µ(n|S′
k, θk) for all n ∈S′
k and k ∈[K]. Then we define the set of non-empty queues in S′
k
at time t as S′
k,t = {n ∈S′
k : Qn(t) ̸= 0}. From the property of the MNL function, we can observe
that µ(n|S′
k, θk) ≤µ(n|S′
k,t, θk) for all n ∈S′
k,t. We also note that {S′
k,t}k∈[K] ∈M(Nt). Then
we have
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.20433255269320844,"n∈[N]
(λn + ϵ)Qn(t) ≤
X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.20491803278688525,"n∈S′
k
µ(n|S′
k, θk)Qn(t) ≤
X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.20550351288056207,"n∈S′
k,t
µ(n|S′
k,t, θk)Qn(t) ≤
X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.20608899297423888,"n∈Sk,t
µ(n|Sk,t, θk)Qn(t),"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2066744730679157,"where the second inequality is obtained from µ(n|S′
k, θk)Qn(t) ≤µ(n|S′
k,t, θk)Qn(t) when n ∈Nt,
and otherwise µ(n|S′
k, θk)Qn(t) = µ(n|S′
k,t, θk)Qn(t) = 0."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.20725995316159251,This implies E  X k∈[K] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.20784543325526933,"n∈Sk,t
Qn(t)Dn(t)  = E  E  X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.20843091334894615,"n∈Sk,t
Qn(t)Dn(t) Q(t)     = E  X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.20901639344262296,"n∈Sk,t
Qn(t)µ(n|Sk,t, θk)   ≥E  X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.20960187353629978,"n∈S′
k,t
Qn(t)µ(n|S′
k,t, θk)   ≥
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2101873536299766,"n∈[N]
(λn + ϵ)E[Qn(t)].
(17)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2107728337236534,"From Eqs.(16) and (17), we have"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.21135831381733022,"E[V(Q(t + 1)) −V(Q(t))] ≤E  2
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.21194379391100704,"n∈[N]
Qn(t)An(t) −2
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.21252927400468383,"n∈[N]
Qn(t)Dn(t) "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.21311475409836064,"+ 2 min{N, K} ≤E    2
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.21370023419203746,"n∈[N]
Qn(t)An(t) −2
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.21428571428571427,"n∈[N]
Qn(t)Dn(t)
Q(t)   "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2148711943793911,"+ 2 min{N, K} ≤E  2
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2154566744730679,"n∈[N]
λnQn(t) −2(λn + ϵ)Qn(t) "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.21604215456674472,"+ 2 min{N, K} ≤−E  2ϵ
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.21662763466042154,"n∈[N]
Qn(t) "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.21721311475409835,"+ 2 min{N, K},"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.21779859484777517,"which implies from V(Q(T + 1)) ≥0 and V(Q(1)) = 0,
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.21838407494145198,"t∈[T ]
E[V(Q(t + 1) −V(Q(t))] = V(Q(T + 1)) ≤−
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2189695550351288,"t∈[T ]
E[2ϵ
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.21955503512880561,"n∈[N]
Qn(t)] + 2 min{N, K}T."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.22014051522248243,"Finally, we can conclude that Q(T) = (1/T) P"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.22072599531615925,t∈[T ] E[P
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.22131147540983606,"n∈[N] Qn(t)] ≤2 min{N, K}/ϵ."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.22189695550351288,"A.4
Proof of Theorem 1
We first define the set of queues Q(t) = [Qn(t) : n ∈[N]] and a Lyapunov function as V(Q(t)) =
P"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2224824355971897,"n∈[N] Qn(t)2. For simplicity, we use Dn(t) for Dn(t|Skn,t,t) and D∗
n(t) for Dn(t|Sk∗
n,t,t) when
there is no confusion. Then we analyze the Lyapunov drift as follows.
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2230679156908665,"t∈[T ]
V(Q(t + 1)) −V(Q(t)) =
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.22365339578454332,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.22423887587822014,"n∈[N]
(Qn(t) + An(t) −Dn(t))+2 −Qn(t)2 =
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.22482435597189696,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.22540983606557377,"n∈[N]
(Qn(t) + An(t) −D∗
n(t))2 −Qn(t)2 +
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2259953161592506,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2265807962529274,"n∈[N]
(Qn(t) + An(t) −Dn(t))+2 −
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.22716627634660422,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.22775175644028103,"n∈[N]
(Qn(t) + An(t) −D∗
n(t))2. (18)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.22833723653395785,We observe that P
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.22892271662763466,n∈[N] E[An(t)] ≤P
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.22950819672131148,n∈[N] λn ≤P
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2300936768149883,"n∈[N] µ(n|Sk, θk) ≤K for some Sk from
Assumption 3 and P"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2306791569086651,n∈[N] λn ≤N. This implies P
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.23126463700234193,"n∈[N][An(t)] ≤min{N, K}. We also have
P"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.23185011709601874,n∈[N] E[Dn(t)] = P
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.23243559718969556,"n∈[N] E[µ(n|Sk,t, θk)] ≤min{K, N}. For the first two terms in Eq.(18), by
following the same procedure of Eqs.(16) and (17), we can obtain
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.23302107728337237,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2336065573770492,"n∈[N]
E[(Qn(t) + An(t) −D∗
n(t))2 −Qn(t)2] ≤
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.234192037470726,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.23477751756440282,"n∈[N]
2E[(λn −µ(n|S∗
k,t, θk))Qn(t)] + 2 min{N, K}T ≤−
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.23536299765807964,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.23594847775175645,"n∈[N]
2ϵE[Qn(t)] + 2 min{N, K}T,
(19)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.23653395784543327,"where the last inequality is obtained using Assumption 3. For the last two terms in Eq.(18), we have
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.23711943793911008,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.23770491803278687,"n∈[N]
(Qn(t) + An(t) −Dn(t))+2 −
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2382903981264637,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2388758782201405,"n∈[N]
(Qn(t) + An(t) −D∗
n(t))2 ≤
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.23946135831381732,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.24004683840749413,"n∈[N]
(D∗
n(t) −Dn(t))(2Qn(t) + 2An(t) −D∗
n(t) −Dn(t)) ≤2
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.24063231850117095,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.24121779859484777,"n∈[N]
An(t)(D∗
n(t) −Dn(t)) −
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.24180327868852458,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2423887587822014,"n∈[N]
D∗
n(t)2 +
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2429742388758782,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.24355971896955503,"n∈[N]
Dn(t)2 + 2
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.24414519906323184,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.24473067915690866,"n∈[N]
(D∗
n(t) −Dn(t))Qn(t) ≤4
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.24531615925058547,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2459016393442623,"n∈[N]
An(t) + 2
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2464871194379391,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.24707259953161592,"n∈[N]
(D∗
n(t) −Dn(t))Qn(t) + min{N, K}T ≤2
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.24765807962529274,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.24824355971896955,"n∈[N]
(D∗
n(t) −Dn(t))Qn(t) + 5 min{N, K}T.
(20)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.24882903981264637,"Now we provide a bound for Eq.(20). We first provide some lemmas for the concentration of
estimators."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.24941451990632318,"Using the above lemma, we can show the following lemma of the concentration."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.25,"Lemma 1 (Lemma 9 in Oh and Iyengar [44]). For t ≥1 and some constant C1 > 0, with probability
at least 1 −1/t2, for all k ∈[K] we have"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2505854800936768,"∥ˆθk,t −θk∥Vk,t ≤βt."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.25117096018735363,"Proof. For the completeness, we provide the proof in Appendix A.8."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.25175644028103045,"Define event E1
t
=
{∥ˆθk,t −θ∗
k∥Vk,t
≤
βt
for all k
∈
[K]} where βt
= C1
q λ + d"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.25234192037470726,"κ log(1 + tLK/dλ), which holds with high probability as P(E1
t ) ≥1 −1/t2 from the
above lemma. We also define E2
n,t = {maxm∈Sk,t ∥xm∥V −1
k,t ≤C2ϵ/2βt for k = kn,t} for some
constant C2 > 0. Then, we have X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2529274004683841,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2535128805620609,"n∈[N]
E[(D∗
n(t) −Dn(t)Qn(t)] =
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2540983606557377,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2546838407494145,"n∈[N]
E[E[(D∗
n(t) −Dn(t)Qn(t)|Qn(t)]]"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.25526932084309134,"= E[
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.25585480093676816,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.25644028103044497,"n∈[N]
µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)] ≤
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2570257611241218,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2576112412177986,"n∈[N]
E[(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1(E1
t ∩E2
n,t)] +
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2581967213114754,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.25878220140515223,"n∈[N]
E[(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)(1((E1
t )c) + 1((E2
n,t)c))]. (21)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.25936768149882905,Now we provide a lemma for bounding the first term in Eq.(21).
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.25995316159250587,"Lemma 2. Under E1
t , for any n ∈[N], we have eµUCB
t
(n|Skn,t, ˆθkn,t,t) −µ(n|Skn,t,t, θkn,t) ≤
2βt∥xn∥V −1
kn,t,t."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2605386416861827,"Proof. Let un,k,t = x⊤
n θk. Under E1
t , for any n ∈[N] and k ∈[K] we have x⊤
n ˆθk,t −βt∥xn∥V −1
k,t ≤"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2611241217798595,"x⊤
n θk ≤x⊤
n ˆθk,t + βt∥xn∥V −1
k,t , which implies 0 ≤hUCB
n,k,t −un,k,t ≤2βt∥xn∥V −1
k,t . Then by the"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2617096018735363,"mean value theorem, there exists ¯un,k,t = (1 −c)hUCB
n,k,t + cun,k,t for some c ∈(0, 1) satisfying, for
any n ∈Sk, Sk ⊂[N], and k ∈[K],"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.26229508196721313,"eµUCB
t
(n|Sk, ˆθk,t) −µ(n|Sk, θk) =
exp(hUCB
n,k,t ) 1 + P"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.26288056206088994,"m∈Sk exp(hUCB
m,k,t) −
exp(un,k,t)
1 + P"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.26346604215456676,"m∈Sk exp(um,k,t) = ∇vn"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2640515222482436,"exp(vn)
1 + P"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2646370023419204,m∈Sk exp(vm)
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2652224824355972,"! 
vn=¯un,k,t
(hUCB
n,k,t −un,k,t)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.265807962529274,"≤
exp(¯un,k,t)(hUCB
n,k,t −un,k,t)
1 + P"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.26639344262295084,"n∈Sk exp(¯un,k,t)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.26697892271662765,"≤hUCB
n,k,t −un,k,t
≤2βt∥xn∥V −1
k,t ."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.26756440281030447,"Since x/(1 + x) is a non-decreasing function for x > −1 and x⊤
n θk∗
n,t ≤x⊤
n ˆθk∗
n,t,t + βt∥xn∥V −1
k∗
n,t,t
under E1
t , we have µ(n|Sk∗
n,t,t, θk∗
n,t) ≤eµUCB
t
(n|Sk∗
n,t, ˆθk∗
n,t,t). Then for the first term of Eq.(21),"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2681498829039813,we have X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2687353629976581,"t∈[T ]
E  X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2693208430913349,"n∈[N]
(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1(E1
t ∩E2
n,t)   ≤
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.26990632318501173,"t∈[T ]
E  X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.27049180327868855,"n∈[N]
(eµUCB
t
(n|Sk∗
n,t, ˆθk∗
n,t,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1(E1
t ∩E2
n,t)   ≤
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.27107728337236536,"t∈[T ]
E  X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2716627634660422,"n∈[N]
(eµUCB
t
(n|Skn,t, ˆθkn,t,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1(E1
t ∩E2
n,t)   ≤
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.272248243559719,"t∈[T ]
E  X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2728337236533958,"n∈[N]
2βt∥xn∥V −1
kn,t,tQn(t)1(E1
t ∩E2
n,t)  "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2734192037470726,"≤C2ϵ
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.27400468384074944,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.27459016393442626,"n∈[N]
E [Qn(t)] ,
(22)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.275175644028103,"where the second inequality comes from the UCB strategy of the algorithm, the last second inequality
is obtained from Lemma 2, and the last inequality is obtained from E2
n,t."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.27576112412177983,Now we provide a bound for the second term of Eq.(21). We first have X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.27634660421545665,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.27693208430913346,"n∈[N]
E
h
(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1((E1
t )c)
i ≤
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2775175644028103,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2781030444964871,"n∈[N]
E

Qn(t)1((E1
t )c)
 ≤
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2786885245901639,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2792740046838407,"n∈[N]
tP((E1
t )c) = O  X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.27985948477751754,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.28044496487119436,"n∈[N]
t(1/t2) "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2810304449648712,"= O(N log(T)),
(23)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.281615925058548,where the second inequality is obtained from Qn(t) ≤t.
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2822014051522248,"Here we utilize some techniques introduced in Freund et al. [15]. Let Tn be the set of time steps
t ∈[T] such that Qn(t) ̸= 0 and let eT = P"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2827868852459016,"n∈[N]
P"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.28337236533957844,"t∈Tn 1((E2
n,t)c) and h = ⌈C3eT /ϵ⌉for some
constant C3 > 0. Then if t ≤h, we have Qn(t) ≤t ≤h. Otherwise, we have"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.28395784543325525,"Qn(t) ≤ t
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.28454332552693207,"s=t−h+1
(1/h)(Qn(s) + (t −s)) ≤(1/h) t
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2851288056206089,"s=1
Qn(s) + (1/h)h2 = (1/h) t
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2857142857142857,"s=1
Qn(s) + h."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2862997658079625,"Then, from the above inequality, we have X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.28688524590163933,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.28747072599531615,"n∈[N]
E[(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1((E2
n,t)c)] =
X n∈[N] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.28805620608899296,"t∈Tn
E[(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1((E2
n,t)c)] ≤
X n∈[N] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2886416861826698,"t∈Tn
E[Qn(t)1((E2
n,t)c)] ≤
X n∈[N] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2892271662763466,"t∈Tn
E[((ϵ/C3eT ) T
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2898126463700234,"s=1
Qn(s) + 2C3eT /ϵ)1((E2
n,t)c)] ≤E "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2903981264637002,"(ϵ/C3)
X n∈[N] T
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.29098360655737704,"s=1
Qn(s) "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.29156908665105385,"+ E

2C3e2
T /ϵ
 =
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.29215456674473067,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2927400468384075,"n∈[N]
(ϵ/C3)E [Qn(t)] + 2C3E[e2
T ]/ϵ.
(24)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2933255269320843,"Now we provide a bound for E[e2
T ].
Define Nn,k(t) = Pt−1
s=1 1(n ∈Sk,s) and eVkn,t,t =
κ
2
Pt−1
s=1
P"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2939110070257611,"n∈Sk,s xnx⊤
n . Then, we have"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.29449648711943793,"eT =
X n∈[N] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.29508196721311475,"t∈Tn
1((E2
n,t)c) ≤
X n∈[N] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.29566744730679156,"t∈Tn
1(∥xn∥V −1
kn,t,t ≥C2ϵ/2βt) ≤
X n∈[N] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2962529274004684,"t∈Tn
1(∥xn∥eV −1
kn,t,t ≥C2ϵ/2βt) ≤
X n∈[N] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2968384074941452,"t∈Tn
1(1/Nn,kn,t(t) ≥(κ/2)(C2ϵ/2βt)2) ≤
X n∈[N] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.297423887587822,"t∈Tn
1(Nn,kn,t(t) ≤(2/κ)(2βt/C2ϵ)2) ≤
X n∈[N] X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2980093676814988,"t∈Tn
1(Nn,k(t) ≤(2/κ)(2βT /C2ϵ)2 and kn,t = k)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.29859484777517564,≤NK(2/κ)(2βT /C2ϵ)2.
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.29918032786885246,"From the above we have E[e2
T ] ≤64N 2K2β4
T /κ2(C2ϵ)4. Then from Eq.(24), we have X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.2997658079625293,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3003512880562061,"n∈[N]
E[(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1((E2
n,t)c)] ≤
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3009367681498829,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3015222482435597,"n∈[N]
(ϵ/C3)E [Qn(t)] + O(N 2K2β4
T /κ2ϵ5).
(25)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.30210772833723654,"By putting the results of Eqs. (18), (19), (20), (21), (22), (23), (25) altogether, we can obtain E  X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.30269320843091335,"t∈[T ]
V(Q(t + 1)) −V(Q(t))  "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.30327868852459017,"≤7 min{N, K}T −2ϵ
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.303864168618267,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3044496487119438,"n∈[N]
E [Qn(t)] + 2
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3050351288056206,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.30562060889929743,"n∈[N]
E
h
(Dn(t|Sk∗
n,t,t) −Dn(t|Skn,t,t))Qn(t)
i"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.30620608899297425,"≤7 min{N, K}T −2ϵ
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.30679156908665106,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3073770491803279,"n∈[N]
E [Qn(t)] + 2C2ϵ
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3079625292740047,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3085480093676815,"n∈[N]
E [Qn(t)]"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3091334894613583,"+ O(N log(T)) + (2ϵ/C3)
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.30971896955503514,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.31030444964871196,"n∈[N]
E [Qn(t)] + O(N 2K2β4
T /κ2ϵ5)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.31088992974238877,"≤7 min{N, K}T + 2(C2 + (1/C3) −1)ϵ
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3114754098360656,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3120608899297424,"n∈[N]
E [Qn(t)] + O(N log(T)) + O(N 2K2β4
T /κ2ϵ5)."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3126463700234192,"Finally, with positive constants C2, C3 > 0 satisfying C2 + (1/C3) < 1, from V(Q(1)) = 0 and
V(Q(T + 1)) ≥0, by using telescoping for the above inequality, we can conclude the proof by
1
T X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.31323185011709603,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.31381733021077285,"n∈[N]
E[Qn(t)] = O
min{N, K} ϵ
+ 1"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.31440281030444966,"T
d2N 2K2"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3149882903981265,"κ4ϵ6
polylog(T)

.
(26)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3155737704918033,"A.5
Proof of Theorem 2"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3161592505854801,"We first provide the proof for regret bound of Rπ(T) = e
O

d
κ
√"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3167447306791569,"KTQmax

."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.31733021077283374,"We define event Et = {∥ˆθk,t −θ∗
k∥Vk,t ≤βt ∀k ∈[K]} which holds at least probability of 1 −1/t2
from Lemma 1."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.31791569086651056,"Lemma 3. Under E1
t , for any Sk ⊂[N], we have
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3185011709601874,"n∈Sk
(eµUCB
t
(n|Sk, ˆθk,t) −µ(n|Sk, θk))Qn(t) ≤2βt max
n∈Sk ∥xn∥V −1
k,t Qn(t)."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3190866510538642,"Proof. Let un,k,t = x⊤
n θk. Under E1
t , for any n ∈[N] and k ∈[K] we have x⊤
n ˆθk,t −βt∥xn∥V −1
k,t ≤"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.319672131147541,"x⊤
n θk ≤x⊤
n ˆθk,t + βt∥xn∥V −1
k,t , which implies 0 ≤hUCB
n,k,t −un,k,t ≤2βt∥xn∥V −1
k,t . Then by the"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3202576112412178,"mean value theorem, there exists ¯un,k,t = (1 −c)hUCB
n,k,t + cun,k,t for some c ∈(0, 1) satisfying, for
any S ⊂[N],X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.32084309133489464,"n∈Sk
(eµUCB
t
(n|Sk, ˆθk,t) −µ(n|Sk, θk))Qn(t) =
X n∈Sk"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.32142857142857145,"exp(hUCB
n,k,t )"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.32201405152224827,"1 + P
m∈Sk exp(hUCB
m,k,t) −
exp(un,k,t)
1 + P"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3225995316159251,"m∈Sk exp(um,k,t) ! Qn(t) =
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3231850117096019,"n∈Sk
∇vn"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3237704918032787,"exp(vn)
1 + P"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.32435597189695553,m∈Sk exp(vm)
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.32494145199063235,"! 
vn=¯un,k,t
(hUCB
n,k,t −un,k,t)Qn(t)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3255269320843091,"=
(1 + P"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3261124121779859,"n∈Sk exp(¯un,k,t))(P"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.32669789227166274,"n∈Sk exp(¯un,k,t)(hUCB
n,k,t −un,k,t)Qn(t))
(1 + P"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.32728337236533955,"n∈Sk exp(¯un,k,t))2"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.32786885245901637,"−
(P
n∈Sk exp(¯un,k,t))(P
n∈Sk exp(¯un,k,t)(hUCB
n,k,t −un,k,t)Qn(t))
(1 + P"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3284543325526932,"n∈Sk exp(¯un,k,t))2 ≤
X n∈Sk"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.32903981264637,"exp(¯un,k,t)
1 + P"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3296252927400468,"m∈Sk exp(¯um,k,t)(hUCB
n,k,t −un,k,t)Qn(t)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.33021077283372363,"≤max
n∈Sk(hUCB
n,k,t −un,k,t)Qn(t)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.33079625292740045,"≤2βt max
n∈Sk ∥xn∥V −1
k,t Qn(t)."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.33138173302107726,"Under Et, from Lemma 3, we have
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3319672131147541,"n∈Sk,t
(eµUCB
t
(n|Sk,t, ˆθk,t) −µ(n|Sk,t, θk))Qn(t) ≤2βt max
n∈Sk,t ∥xn∥V −1
k,t Qn(t),
(27)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3325526932084309,"and since x/(1+x) is a non-decreasing function for x > −1 and x⊤
n θk∗
n,t ≤x⊤
n ˆθ′
k∗
n,t,t+βt∥xn∥V −1
k∗
n,t,t
under E1
t , we have"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3331381733021077,"µ(n|Sk∗
n,t,t, θk∗
n,t) ≤eµUCB
t
(n|Sk∗
n,t, ˆθk∗
n,t,t).
(28)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3337236533957845,Now we provide an elliptical potential lemma.
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.33430913348946134,"Lemma 4. For any k ∈[K], we have T
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.33489461358313816,"t=1
max
n∈Sk,t ∥xn∥2
V −1
k,t ≤(4d/κ) log(1 + (TL/dλ))."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.33548009367681497,"Proof. First, we can show that"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3360655737704918,"det(Vk,t) = det "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3366510538641686,"Vk,t−1 + (κ/2)
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3372365339578454,"n∈Sk,t−1
xnx⊤
n  "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.33782201405152223,"= det(Vk,t−1) det "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.33840749414519905,"Id + (κ/2)
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.33899297423887587,"n∈Sk,t−1
V −1/2
k,t−1xn(V −1/2
k,t−1xn)⊤  "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3395784543325527,"≥det(Vk,t−1) "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3401639344262295,"1 + (κ/2)
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3407494145199063,"n∈Sk,t−1
∥xn∥2
V −1
k,t−1  "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.34133489461358313,"≥det(λId) t−1
Y s=1 "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.34192037470725994,"1 + (κ/2)
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.34250585480093676,"n∈Sk,s
∥xn∥2
V −1
k,s "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3430913348946136,"= λd
t−1
Y s=1 "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3436768149882904,"1 + (κ/2)
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3442622950819672,"n∈Sk,s
∥xn∥2
V −1
k,s  "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.344847775175644,"From the above, using the fact that x ≤2 log(1 + x) for any x ∈[0, 1] and (κ/2)∥xn∥2
eV −1
k,s ≤"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.34543325526932084,"(κ/2)∥xn∥2
2/λ ≤1 from κ < 1, we have X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.34601873536299765,"t∈[T ]
max
n∈Sk,t(κ/2)∥xn∥2
V −1
k,t ≤
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.34660421545667447,"t∈[T ]
min

max
n∈Sk,t(κ/2)∥xn∥2
V −1
k,t−1, 1
 ≤2
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3471896955503513,"t∈[T ]
log "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3477751756440281,"1 +
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3483606557377049,"n∈Sk,t
(κ/2)∥xn∥2
V −1
k,t−1  "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.34894613583138173,"= 2 log
Y"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.34953161592505855,t∈[T ] 
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.35011709601873536,"1 +
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3507025761124122,"n∈Sk,t
(κ/2)∥xn∥2
V −1
k,t−1  "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.351288056206089,"≤2 log
det(Vk,T +1) λd"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3518735362997658,"
.
(29)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3524590163934426,"From Lemma 10 in Abbasi-Yadkori et al. [1] with κ < 1, we can show that"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.35304449648711944,"det(Vk,T +1) ≤(λ + (TL/d))d."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.35362997658079626,"Then from the above inequality and Eq.(29), we can conclude the proof."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3542154566744731,"Then from Eqs.(27), (28), and Lemma 4, we can conclude that"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3548009367681499,"Rπ(T) =
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3553864168618267,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3559718969555035,"n∈[N]
E[Qn(t)(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))] =
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.35655737704918034,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.35714285714285715,"n∈[N]
E[Qn(t)(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))1(E1
t )] +
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.35772833723653397,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3583138173302108,"n∈[N]
E[Qn(t)(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))1((E1
t )c)] =
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3588992974238876,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3594847775175644,"n∈[N]
E[Qn(t)(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))1(E1
t )] +
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.36007025761124123,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.36065573770491804,"n∈[N]
tP((E1
t )c)] ≤
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.36124121779859486,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3618266978922717,"n∈[N]
E[Qn(t)(eµUCB
t
(n|Sk∗
n,t,t, ˆθk∗
n,t,t) −µ(n|Skn,t,t, θkn,t))1(E1
t )] + O(N/T) ≤
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3624121779859485,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3629976580796253,"n∈[N]
E[Qn(t)(eµUCB
t
(n|Skn,t,t, ˆθkn,t,t) −µ(n|Skn,t,t, θkn,t))1(E1
t )] + O(N/T) =
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3635831381733021,"t∈[T ]
E[
X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.36416861826697894,"n∈Sk,t
Qn(t)(eµUCB
t
(n|Sk,t, ˆθk,t) −µ(n|Sk,t, θk))1(E1
t )] + O(N/T) ≤2E  βT
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.36475409836065575,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.36533957845433257,"k∈[K]
max
n∈Sk,t ∥xn∥V −1
k,t Qn(t) "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3659250585480094,+ O(N/T) ≤2E 
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3665105386416862,"
max
t∈[T ],n∈[N] Qn(t)βT
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.367096018735363,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.36768149882903983,"k∈[K]
max
n∈Sk,t ∥xn∥V −1
k,t "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.36826697892271665,+ O(N/T) ≤2E 
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.36885245901639346,"
max
t∈[T ],n∈[N] Qn(t)βT
s KT
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3694379391100703,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3700234192037471,"k∈[K]
max
n∈Sk,t ∥xn∥2
V −1
k,t "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3706088992974239,+ O(N/T)
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3711943793911007,"= e
O
d κ √"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.37177985948477754,"KTQmax 
,"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.37236533957845436,where the last equality comes from Lemma 4.
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3729508196721312,"Now we provide the worst-case regret bound of Rπ(T) = e
O

dNK min{N,K}3"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.373536299765808,"κ2ϵ3
1/4
T 3/4

in the"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3741217798594848,following.
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3747072599531616,"We define event E1
t
=
{∥ˆθk,t −θ∗
k∥Vk,t
≤
βt for all k
∈
[K]} where βt
= C1
q λ + d"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3752927400468384,"κ log(1 + tLK/dλ), which holds with high probability as P(E1
t ) ≥1 −1/t2 from
Lemma 1. We also define E2
n,t = {maxm∈Sk,t ∥xm∥V −1
k,t ≤ζ for k = kn,t} for some constant
C2 > 0."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3758782201405152,Then we have
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.376463700234192,"Rπ(T) =
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3770491803278688,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.37763466042154564,"n∈[N]
E[(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)] ≤
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.37822014051522246,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3788056206088993,"n∈[N]
E[(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1(E1
t ∩E2
n,t)] +
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3793911007025761,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3799765807962529,"n∈[N]
E[(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)(1((E1
t )c) + 1((E2
n,t)c))]. (30)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3805620608899297,"Since x/(1 + x) is a non-decreasing function for x > −1 and x⊤
n θk∗
n,t ≤x⊤
n ˆθk∗
n,t,t + βt∥xn∥V −1
k∗
n,t,t
under E1
t , we have µ(n|Sk∗
n,t,t, θk∗
n,t) ≤eµUCB
t
(n|Sk∗
n,t, ˆθk∗
n,t,t). Then for the first term of Eq.(30),
we have X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.38114754098360654,"t∈[T ]
E  X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.38173302107728335,"n∈[N]
(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1(E1
t ∩E2
n,t)   ≤
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.38231850117096017,"t∈[T ]
E  X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.382903981264637,"n∈[N]
(eµUCB
t
(n|Sk∗
n,t, ˆθk∗
n,t,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1(E1
t ∩E2
n,t)   ≤
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3834894613583138,"t∈[T ]
E  X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3840749414519906,"n∈[N]
(eµUCB
t
(n|Skn,t, ˆθkn,t,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1(E1
t ∩E2
n,t)   ≤
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.38466042154566743,"t∈[T ]
E  X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.38524590163934425,"n∈[N]
2βt∥xn∥V −1
kn,t,tQn(t)1(E1
t ∩E2
n,t)   ≤
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.38583138173302106,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3864168618266979,"n∈[N]
2βtζE [Qn(t)] ,
(31)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3870023419203747,"where the second inequality comes from the UCB strategy of the algorithm, the last second inequality
is obtained from Lemma 2, and the last inequality is obtained from E2
n,t."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3875878220140515,"Now we provide a bound for the second term of Eq.(30). From Eq. (23), we have X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3881733021077283,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.38875878220140514,"n∈[N]
E
h
(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1((E1
t )c)
i = O  X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.38934426229508196,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.38992974238875877,"n∈[N]
t(1/t2) "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3905152224824356,"= O(N log(T)).
(32)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3911007025761124,"Let Tn be the set of time steps t ∈[T] such that Qn(t) ̸= 0 and let eT = P
n∈[N]
P
t∈Tn 1((E2
n,t)c)
and h = ⌈1/ζβT ⌉. Then if t ≤h, we have Qn(t) ≤t ≤h. Otherwise, we have"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3916861826697892,"Qn(t) ≤ t
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.39227166276346603,"s=t−h+1
(1/h)(Qn(s) + (t −s)) ≤(1/h) t
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.39285714285714285,"s=1
Qn(s) + (1/h)h2 = (1/h) t
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.39344262295081966,"s=1
Qn(s) + h."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3940281030444965,"Then, by following the steps in Eq.(24), we have X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3946135831381733,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3951990632318501,"n∈[N]
E[(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1((E2
n,t)c)] ≤
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3957845433255269,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.39637002341920374,"n∈[N]
ζβT E [Qn(t)] + 2E[eT ]/ζβT .
(33)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.39695550351288056,"Now we provide a bound for E[eT ].
Define Nn,k(t) = Pt−1
s=1 1(n ∈Sk,s) and eVk,t =
κ
2
Pt−1
s=1
P"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3975409836065574,"n∈Sk,s xnx⊤
n . Then, we have"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3981264637002342,"eT =
X n∈[N] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.398711943793911,"t∈Tn
1((E2
n,t)c) ≤
X n∈[N] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.3992974238875878,"t∈Tn
1(∥xn∥V −1
kn,t,t ≥ζ) ≤
X n∈[N] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.39988290398126464,"t∈Tn
1(∥xn∥eV −1
kn,t,t ≥ζ) ≤
X n∈[N] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.40046838407494145,"t∈Tn
1(1/Nn,kn,t(t) ≥(κ/2)ζ2) ≤
X n∈[N] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.40105386416861827,"t∈Tn
1(Nn,kn,t(t) ≤2/κζ2) ≤
X n∈[N] X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4016393442622951,"t∈Tn
1(Nn,k(t) ≤2/κζ2 and kn,t = k)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4022248243559719,"≤2NK/κζ2.
(34)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4028103044496487,"Then from Eqs.(33), (34), we have X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.40339578454332553,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.40398126463700235,"n∈[N]
E[(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1((E2
n,t)c)] ≤
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.40456674473067916,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.405152224824356,"n∈[N]
ζβT E [Qn(t)] + O(NK/κζ3βT ).
(35)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4057377049180328,"By putting the results of Eqs. (30), (31), (32), (35), and Theorem 1, by setting ζ
=
(ϵNK/ min{N, K}Tκβ2
T )1/4, for large enough T, we can obtain"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4063231850117096,Rπ(T) = O 
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4069086651053864,"ζβT
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.40749414519906324,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.40807962529274006,"n∈[N]
E[Qn(t)] + NK"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.40866510538641687,"κζ3βT
+ N log(T)  "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4092505854800937,"= O
ζβT min{N, K}T"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4098360655737705,"ϵ
+ NK"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4104215456674473,"κζ3βT
+ N log(T)
 = O"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.41100702576112413,"β1/2
T
T 3/4(NK min{N, K}3)1/4"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.41159250585480095,"κ1/4ϵ3/4
+ N log(T) ! = e
O"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.41217798594847777,"dNK min{N, K}3 κ2ϵ3"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4127634660421546,"1/4
T 3/4
! (36)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4133489461358314,"A.6
Proof of Theorm 3"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4139344262295082,"We first define the set of queues Q(t) = [Qn(t) : n ∈[N]] and a Lyapunov function as V(Q(t)) =
P"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.41451990632318503,"n∈[N] Qn(t)2. For simplicity, we use Dn(t) for Dn(t|Skn,t,t), D∗
n(t) for Dn(t|Sk∗
n,t,t), and"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.41510538641686184,"eµT S
t
(n|Sk,t) for eµT S
t
(n|Sk,t, {eθ(i)
k,t}i∈[M]) when there is no confusion. Then we analyze the Lya-"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.41569086651053866,"punov drift as follows.
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4162763466042155,"t∈[T ]
E [V(Q(t + 1)) −V(Q(t))] =
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4168618266978923,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4174473067915691,"n∈[N]
E
h
(Qn(t) + An(t) −Dn(t))+2 −Qn(t)2i =
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4180327868852459,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.41861826697892274,"n∈[N]
E

(Qn(t) + An(t) −D∗
n(t))2 −Qn(t)2 +
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.41920374707259955,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.41978922716627637,"n∈[N]
E
h
(Qn(t) + An(t) −Dn(t))+2 −(Qn(t) + An(t) −D∗
n(t))2i"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4203747072599532,"≤7 min{N, K}T −
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.42096018735363,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4215456674473068,"n∈[N]
2ϵE[Qn(t)] + 2
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.42213114754098363,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.42271662763466045,"n∈[N]
E [(D∗
n(t) −Dn(t))Qn(t)] , (37)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.42330210772833726,where the last inequality can be obtained by following Eqs.(19) and (20).
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4238875878220141,"Define event E1
t
=
{∥ˆθk,t −θk∥Vk,t
≤
βt
for all k
∈
[K]} where βt
= C1
q λ + d"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4244730679156909,"κ log(1 + tLK/dλ), which holds with high probability as P(E1
t ) ≥1 −1/t2 from"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.42505854800936765,"Lemma 1. We let γt = βt
p"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.42564402810304447,"d log(MKt) and filtration Ft−1 be the σ-algebra generated by random
variables before time t."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4262295081967213,"Lemma 5 (Lemma 10 in Oh and Iyengar [43]). For any given Ft−1, with probability at least
1 −O(1/t2), for all n ∈[N] and k ∈[K], we have"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4268149882903981,"|hT S
n,k,t −x⊤
n ˆθk,t| ≤γt∥xn∥V −1
k,t ."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4274004683840749,"Lemma 6. With probability at least 1 −O(1/t2), for all n ∈[N] and k ∈[K], we have"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.42798594847775173,"eµT S
t
(n|Sk,t) −µ(n|Sk,t, ˆθk,t) ≤γt∥xn∥V −1
k,t ."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.42857142857142855,"Proof. From Lemma 5, with probability at least 1 −O(1/t2), we have |hT S
n,k,t −x⊤
n ˆθk,t| ≤
γt∥xn∥V −1
k,t . Let un,k,t = x⊤
n ˆθk,t.
Then by the mean value theorem, there exists ¯un,k,t ="
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.42915690866510536,"(1 −c)hT S
n,k,t + cun,k,t for some c ∈(0, 1) satisfying, for any n ∈Sk,t and k ∈[K],"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4297423887587822,"eµT S
t
(n|Sk,t) −µ(n|Sk, ˆθk,t) =
exp(hT S
n,k,t) 1 + P"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.430327868852459,"m∈Sk,t exp(hT S
m,k,t) −
exp(un,k,t)
1 + P"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4309133489461358,"m∈Sk,t exp(um,k,t) = ∇vn P"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4314988290398126,"m∈Sk,t exp(vm) 1 + P"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.43208430913348944,"m∈Sk,t exp(vm)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.43266978922716626,"! 
vn=¯un,k,t
(hT S
n,k,t −un,k,t)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4332552693208431,"≤
exp(¯un,k,t)|hT S
n,k,t −un,k,t|
1 + P"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4338407494145199,"n∈Sk,t exp(¯un,k,t)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4344262295081967,"≤|hT S
n,k,t −un,k,t|"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4350117096018735,"≤γt∥xn∥V −1
k,t ."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.43559718969555034,"Then we define E2
t = {eµT S
t
(n|Sk,t) −µ(n|Sk,t, ˆθk,t) ≤γt∥xn∥V −1
k,t ; ∀n ∈[N], ∀k ∈[K]}, which"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.43618266978922715,"holds with probability at least 1 −O(1/t2) from Lemma 6. We also define E3
n,t = {∥xn∥V −1
k,t ≤"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.43676814988290397,"ϵ/C2(γt + βt); ∀k ∈[K]} for some constant C2 ≥17√eπ. Then, for bounding Eq.(37), we have X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4373536299765808,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4379391100702576,"n∈[N]
E[(D∗
n(t) −Dn(t)Qn(t)] =
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4385245901639344,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.43911007025761123,"n∈[N]
E[E[(D∗
n(t) −Dn(t)Qn(t)|Qn(t)]]"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.43969555035128804,"= E[
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.44028103044496486,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4408665105386417,"n∈[N]
µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)] ≤
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4414519906323185,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4420374707259953,"n∈[N]
E[(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1(E1
t ∩E2
t ∩E3
n,t)] +
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4426229508196721,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.44320843091334894,"n∈[N]
E[(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)(1((E1
t )c) + 1((E2
t )c) + 1((E3
n,t)c))]. (38)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.44379391100702575,We provide a bound for the first term of Eq.(38). We first have X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.44437939110070257,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4449648711943794,"n∈[N]
E[(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1(E1
t ∩E2
t ∩E3
n,t)] ≤
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4455503512880562,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.446135831381733,"n∈[N]
E[(µ(n|Sk∗
n,t,t, θk∗
n,t) −eµT S
t
(n|Skn,t,t)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.44672131147540983,"+ eµT S
t
(n|Skn,t,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1(E1
t ∩E2
t ∩E3
n,t)]. (39)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.44730679156908665,"Recall that eµUCB
t
(n|Sk, ˆθk,t) =
exp(hUCB
n,k,t)
1+P"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.44789227166276346,"m∈Sk exp(hUCB
m,k,t). Then we can show that since x/(1 + x) is"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4484777517564403,"a non-decreasing function for x > −1 and x⊤
n ˆθkn,t,t ≤x⊤
n ˆθkn,t,t + βt∥xn∥V −1
kn,t,t under E1
t , with"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4490632318501171,"Lemma 2, we have"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4496487119437939,"µ(n|Skn,t,t, ˆθkn,t,t)−µ(n|Skn,t,t, θkn,t) ≤eµUCB
t
(n|Skn,t,t, ˆθkn,t,t)−µ(n|Skn,t,t, θkn,t) ≤2βt∥xn∥V −1
kn,t,t."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4502341920374707,"From the above inequality, the last two terms in Eq.(39) are bounded as X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.45081967213114754,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.45140515222482436,"n∈[N]
E

eµT S
t
(n|Skn,t,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1(E1
t ∩E2
t ∩E3
n,t)
 ≤
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4519906323185012,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.452576112412178,"n∈[N]
E

(eµT S
t
(n|Skn,t,t) −µ(n|Skn,t,t, ˆθkn,t,t)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4531615925058548,"+ µ(n|Skn,t,t, ˆθkn,t,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1(E1
t ∩E2
t ∩E3
n,t)
 ≤
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4537470725995316,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.45433255269320844,"n∈[N]
E[(eµT S
t
(n|Skn,t,t) −µ(n|Skn,t,t, ˆθkn,t,t) + 2βt∥xn∥V −1
kn,t,t)Qn(t)1(E1
t ∩E2
t ∩E3
n,t)] =
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.45491803278688525,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.45550351288056207,"k∈[K]
E  X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4560889929742389,"n∈Sk,t
(eµT S
t
(n|Sk,t) −µ(n|Sk,t, ˆθk,t) + 2βt∥xn∥V −1
k,t )Qn(t)1(E1
t ∩E2
t ∩E3
n,t)   ≤
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4566744730679157,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4572599531615925,"k∈[K]
E  X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.45784543325526933,"n∈Sk,t
(γt + 2βt)∥xn∥V −1
k,t Qn(t)1(E1
t ∩E2
t ∩E3
n,t)   ≤
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.45843091334894615,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.45901639344262296,"k∈[K]
E  X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4596018735362998,"n∈Sk,t"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4601873536299766,"(γt + 2βt)ϵ
C2(γt + βt)Qn(t)1(E1
t ∩E2
t ∩E3
n,t)   ≤
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4607728337236534,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4613583138173302,"k∈[K]
E  X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.46194379391100704,"n∈Sk,t"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.46252927400468385,"(γt + 2βt)ϵ
C2(γt + βt)Qn(t)1(E1
t )   =
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.46311475409836067,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4637002341920375,"k∈[K]
E  E  X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4642857142857143,"n∈Sk,t"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4648711943793911,"(γt + 2βt)ϵ
C2(γt + βt)Qn(t)|E1
t , Ft−1 "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.46545667447306793,"P(E1
t |Ft−1) "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.46604215456674475,".
(40)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.46662763466042156,Now we provide a bound for the first two terms in Eq.(39).
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4672131147540984,We define sets
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4677985948477752,"eΘt =

{θ(i)
k }i∈[M],k∈[K] :
max
i∈[M] x⊤
n θ(i)
k −x⊤
n ˆθk,t"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.468384074941452,"≤γt∥xn∥V −1
k,t ; ∀n ∈[N], ∀k ∈[K]

and"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4689695550351288,"eΘopt
t
=

{θ(i)
k }i∈[M],k∈[K] :
X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.46955503512880564,"n∈Sk,t
eµT S
t
(n|Sk,t, {θ(i)
k }i∈[M])Qn(t) >
X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.47014051522248246,"n∈S∗
k,t
µ(n|S∗
k,t, θk)Qn(t)

∩eΘt."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4707259953161593,"Then we define event Et(eθ) = {{eθ(i)
k,t}i∈[M],k∈[K] ∈eΘopt
t
}. Recall hT S
n,k,t = maxi∈[M] x⊤
n eθ(i)
k,t.
Then we have E  E  X k∈[K]  X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4713114754098361,"n∈S∗
k,t
µ(n|S∗
k,t, θk)Qn(t) −
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4718969555035129,"n∈Sk,t
eµT S
t
(n|Sk,t, {eθ(i)
k,t}i∈[M])Qn(t) "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4724824355971897,"1(E1
t ∩E2
t ∩E3
n,t)|Ft−1     ≤E  E    X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.47306791569086654,"n∈S∗
k,t
µ(n|S∗
k,t, θk)Qn(t)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.47365339578454335,"−
inf
{θ(i)
l
}i∈[M],l∈[K]∈eΘt
max
{Sk}k∈[K]∈M(Nt) X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.47423887587822017,"n∈Sk
eµT S
t
(n|Sk, {θ(i)
k }i∈[M])Qn(t) "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.474824355971897,"1(E1
t ∩E2
t ∩E3
n,t)|Ft−1     = E  E    X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.47540983606557374,"n∈S∗
k,t
µ(n|S∗
k,t, θk)Qn(t)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.47599531615925056,"−
inf
{θ(i)
l
}i∈[M],l∈[K]∈eΘt
max
{Sk}k∈[K]∈M(Nt) X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4765807962529274,"n∈Sk
eµT S
t
(n|Sk, {θ(i)
k }i∈[M])Qn(t) "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4771662763466042,"1(E1
t ∩E2
t ∩E3
n,t)|Ft−1, Et(eθ)     ≤E  E    X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.477751756440281,"n∈Sk,t
eµT S
t
(n|Sk,t, {eθ(i)
k,t}i∈[M])"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4783372365339578,"−
inf
{θ(i)
l
}i∈[M],l∈[K]∈eΘt X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.47892271662763464,"n∈Sk,t
eµT S
t
(n|Sk,t, {θ(i)
k }i∈[M]) "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.47950819672131145,"Qn(t)1(E1
t ∩E2
t ∩E3
n,t)|Ft−1, Et(eθ)     = E  E  
sup"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.48009367681498827,"{θ(i)
l
}i∈[M],l∈[K]∈eΘt X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4806791569086651,"n∈Sk,t"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4812646370023419,"
eµT S
t
(n|Sk,t, {eθ(i)
k,t}i∈[M])"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4818501170960187,"−eµT S
t
(n|Sk,t, {θ(i)
k }i∈[M])

Qn(t)1(E1
t ∩E2
t ∩E3
n,t)|Ft−1, Et(eθ)
 ≤E  E  
sup"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.48243559718969553,"{θ(i)
l
}i∈[M],l∈[K]∈eΘt X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.48302107728337235,"n∈Sk,t"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.48360655737704916,"hT S
n,k,t −max
j∈[M] x⊤
n θ(j)
k"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.484192037470726,"Qn(t)1(E1
t ∩E2
t ∩E3
n,t)
Ft−1, Et(eθ)     = E  E  
sup"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4847775175644028,"{θ(i)
l
}i∈[M],l∈[K]∈eΘt X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4853629976580796,"n∈Sk,t"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4859484777517564,"hT S
n,k,t −x⊤
n ˆθk,t + x⊤
n ˆθk,t −max
j∈[M] x⊤
n θ(j)
k "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.48653395784543324,"×Qn(t)1(E1
t ∩E2
t ∩E3
n,t)
Ft−1, Et(eθ)
ii ≤2γtE  X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.48711943793911006,"n∈Sk,t
E
h
∥xn∥V −1
k,t Qn(t)1(E1
t ∩E2
t ∩E3
n,t)
Ft−1, Et(eθ)
i
  ≤2γtE  X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.48770491803278687,"n∈Sk,t
E

ϵ
C2(γt + βt)Qn(t)1(E1
t ∩E2
t ∩E3
n,t)
Ft−1, Et(eθ)
  ≤2γtE  X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4882903981264637,"n∈Sk,t
E

ϵ
C2(γt + βt)Qn(t)1(E1
t )
Ft−1, Et(eθ)
 "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4888758782201405,"=
2γtϵ
C2(γt + βt)E  X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4894613583138173,"n∈Sk,t
E
h
Qn(t)
Ft−1, Et(eθ), E1
t
i
× P(E1
t |Et(eθ), Ft−1)  "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.49004683840749413,"=
2γtϵ
C2(γt + βt)E  X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.49063231850117095,"n∈Sk,t
E
h
Qn(t)
Ft−1, Et(eθ), E1
t
i
P(E1
t |Ft−1) "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.49121779859484777,",
(41)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4918032786885246,"where the first inequality is obtained by the event E2
t , the second inequality is obtained from Et(eθ),
the third inequality can be easily obtained by following some of the proof steps in Lemma 2, the
third last inequality is obtained from the definition of eΘt and event Et(eθ), and the last equality comes
from independence between E1
t and Et(eθ) given Ft−1."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4923887587822014,We provide a lemma below for further analysis.
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4929742388758782,"Lemma 7. For all t ∈[T], we have P  X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.49355971896955503,"n∈Sk,t
eµT S
t
(n|Sk,t)Qn(t) >
X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.49414519906323184,"n∈S∗
k,t
µ(n|S∗
k,t, θk)Qn(t)|Ft−1, E1
t "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.49473067915690866,≥1/4√eπ.
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4953161592505855,"Proof. Given Ft−1, x⊤
n eθ(i)
k,t follows Gaussian distribution with mean x⊤
n ˆθk,t and standard deviation
βt∥xn∥V −1
k,t . Then we have"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4959016393442623,"P

max
i∈[M] x⊤
n eθ(i)
k,t > x⊤
n θk|Ft−1, E1
t"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4964871194379391,"
= 1 −P

x⊤
n θ(i)
k,t ≤x⊤
n θk; ∀i ∈[M]|Ft−1, E1
t
"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4970725995316159,= 1 −P 
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.49765807962529274,"Zi ≤x⊤
n θk −x⊤
n ˆθk,t
βt∥xn∥V −1
k,t
; ∀i ∈[M]|Ft−1, E1
t !"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.49824355971896955,"≥1 −P (Z ≤1)M ,"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.49882903981264637,where Zi and Z are standard normal random variables. Then we can show that P  X k∈[K] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.4994145199063232,"n∈Sk,t
eµT S
t
(n|Sk,t)Qn(t) >
X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5,"n∈S∗
k,t
µ(n|S∗
k,t, θk)Qn(t)|Ft−1, E1
t   ≥P  X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5005854800936768,"n∈S∗
k,t
eµT S
t
(n|S∗
k,t)Qn(t) >
X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5011709601873536,"n∈S∗
k,t
µ(n|S∗
k,t, θk)Qn(t)|Ft−1, E1
t  "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5017564402810304,"≥P

max
i∈[M] x⊤
n eθ(i)
k,t > x⊤
n θk; ∀n ∈S∗
k,t, ∀k ∈[K]|Ft−1, E1
t "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5023419203747073,≥1 −LKP(Z ≤1)M
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.502927400468384,≥1 −LK(1 −1/4√eπ)M
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5035128805620609,"≥
1
4√eπ ,"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5040983606557377,"where the second last inequality is obtained from P(Z ≤1) ≤1 −1/4√eπ using the anti-
concentration of standard normal distribution, and the last inequality comes from M = ⌈1 −
log KL
log(1−1/4√eπ)⌉."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5046838407494145,"From Lemmas 5 and 7, for t ≥t0 for some constant t0 > 0, we have"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5052693208430913,"P(Et(eθ)|Ft−1, E1
t ) = P  X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5058548009367682,"n∈Sk,t
eµT S
t
(n|Sk,t) >
X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5064402810304449,"n∈S∗
k,t
µ(n|S∗
k,t, θk) and {eθ(i)
k,t}i∈[M],k∈[K] ∈eΘt|Ft−1, E1
t   = P  X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5070257611241218,"n∈Sk,t
eµT S
t
(n|Sk,t)Qn(t) >
X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5076112412177985,"n∈S∗
k,t
µ(n|S∗
k,t, θk)Qn(t)|Ft−1, E1
t  "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5081967213114754,"−P({eθ(i)
k,t}i∈[M],k∈[K] /∈eΘt|Ft−1, E1
t )"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5087822014051522,≥1/4√eπ −O(1/t2)
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.509367681498829,≥1/8√eπ.
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5099531615925058,"For simplicity of the proof, we ignore the time steps before (constant) t0, which does not affect our
final result. Hence, we have E[
X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5105386416861827,"n∈Sk,t
Qn(t)|Ft−1, E1
t ] ≥E[
X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5111241217798594,"n∈Sk,t
Qn(t)|Ft−1, E1
t , Et(eθ)]P(Et(eθ)|Ft−1, E1
t ) ≥E[
X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5117096018735363,"n∈Sk,t
Qn(t)|Ft−1, E1
t , Et(eθ)]1/8√eπ.
(42)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5122950819672131,"With (41) and (42), we have E[(
X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5128805620608899,"n∈S∗
k,t
µ(n|S∗
k,t, θk) −
X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5134660421545667,"n∈Sk,t
eµT S
t
(n|Sk,t))Qn(t)1(E1
t ∩E2
t ∩E3
n,t)|Ft−1]"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5140515222482436,"≤
2γtϵ
C2(γt + βt)E  X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5146370023419203,"n∈Sk,t
Qn(t)
Ft−1, Et(eθ), E1
t "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5152224824355972,"P(E1
t |Ft−1)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.515807962529274,≤16√eπγtϵ
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5163934426229508,"C2(γt + βt)E[
X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5169789227166276,"n∈Sk,t
Qn(t)|Ft−1, E1
t ]P(E1
t |Ft−1).
(43)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5175644028103045,"Then for the first term of Eq.(38), from Eqs.(39), (40), (43), for some C3 > 0 we have
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5181498829039812,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5187353629976581,"n∈[N]
E[(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1(E1
t ∩E2
t ∩E3
n,t)] ≤
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5193208430913349,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5199063231850117,"n∈[N]
E[(µ(n|Sk∗
n,t,t, θk∗
n,t) −eµT S
t
(n|Skn,t,t)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5204918032786885,"+ eµT S
t
(n|Skn,t,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1(E1
t ∩E2
t ∩E3
n,t)] ≤
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5210772833723654,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5216627634660421,"k∈[K]
E[E[
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.522248243559719,"n∈Sk,t"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5228337236533958,(17√eπγt + 2βt)ϵ
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5234192037470726,"C2(γt + βt)
Qn(t)|Ft−1, E1
t ]P(E1
t |Ft−1)] ≤
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5240046838407494,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5245901639344263,"n∈[N]
C3ϵE[E[Qn(t)|E1
t , Ft−1]P(E1
t |Ft−1)] =
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.525175644028103,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5257611241217799,"n∈[N]
C3ϵE[Qn(t)1(E1
t )] ≤
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5263466042154566,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5269320843091335,"n∈[N]
C3ϵE[Qn(t)],
(44)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5275175644028103,where the second last inequality comes from C2 ≥17√eπ.
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5281030444964872,"For the second term of Eq.(38), we first have X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5286885245901639,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5292740046838408,"n∈[N]
E
h
(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1((E1
t )c)
i ≤
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5298594847775175,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5304449648711944,"n∈[N]
E

Qn(t)1((E1
t )c)
 ≤
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5310304449648712,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.531615925058548,"n∈[N]
tP((E1
t )c) = O  X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5322014051522248,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5327868852459017,"n∈[N]
t(1/t2) "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5333723653395784,"= O(N log(T)),
(45) and
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5339578454332553,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5345433255269321,"n∈[N]
E
h
(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1((E2
t )c)
i ≤
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5351288056206089,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5357142857142857,"n∈[N]
E

Qn(t)1((E2
t )c)
 ≤
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5362997658079626,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5368852459016393,"n∈[N]
tP((E2
t )c) = O  X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5374707259953162,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.538056206088993,"n∈[N]
t(1/t2) "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5386416861826698,"= O(N log(T)).
(46)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5392271662763466,Let Tn be the set of time steps t ∈[T] such that Qn(t) ̸= 0 and let eT = P
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5398126463700235,"n∈[N]
P"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5403981264637002,"t∈Tn 1((E3
n,t)c)
and h = ⌈C4eT /ϵ⌉for some constant C4 > 0. Then if t ≤h, we have Qn(t) ≤t ≤h. Otherwise,
we have"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5409836065573771,"Qn(t) ≤ t
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5415690866510539,"s=t−h+1
(1/h)(Qn(s) + (t −s)) ≤(1/h) t
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5421545667447307,"s=1
Qn(s) + (1/h)h2 = (1/h) t
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5427400468384075,"s=1
Qn(s) + h."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5433255269320844,"From the above, we have X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5439110070257611,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.544496487119438,"n∈[N]
E[(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1((E3
n,t)c)] =
X n∈[N] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5450819672131147,"t∈Tn
E[(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1((E3
n,t)c)] ≤
X n∈[N] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5456674473067916,"t∈Tn
E[Qn(t)1((E3
n,t)c)] ≤
X n∈[N] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5462529274004684,"t∈Tn
E[((ϵ/C4eT ) T
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5468384074941453,"s=1
Qn(s) + 2C4eT /ϵ)1((E3
n,t)c)] ≤E "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.547423887587822,"(ϵ/C4)
X n∈[N] T
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5480093676814989,"s=1
Qn(s) "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5485948477751756,"+ E

2C4e2
T /ϵ
 ≤
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5491803278688525,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5497658079625293,"n∈[N]
(ϵ/C4)E [Qn(t)] + 2C4E[e2
T ]/ϵ.
(47)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.550351288056206,"Now we provide a bound for E[e2
T ].
Define Nn,k(t) = Pt−1
s=1 1(n ∈Sk,s) and eVk,t =
(κ/2) Pt−1
s=1
P"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5509367681498829,"n∈Sk,s xnx⊤
n . Then, we have"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5515222482435597,"eT =
X n∈[N] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5521077283372365,"t∈Tn
1((E2
n,t)c) ≤
X n∈[N] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5526932084309133,"t∈Tn
1(∥xn∥V −1
kn,t,t ≥ϵ/C2(γt + βt)) ≤
X n∈[N] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5532786885245902,"t∈Tn
1(∥xn∥eV −1
kn,t,t ≥ϵ/C2(γt + βt)) ≤
X n∈[N] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5538641686182669,"t∈Tn
1(1/Nn,kn,t(t) ≥(κ/2)(ϵ/C2(γt + βt))2) ≤
X n∈[N] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5544496487119438,"t∈Tn
1(Nn,kn,t(t) ≤(2/κ)(C2(γt + βt)/ϵ)2) ≤
X n∈[N] X k∈[K] X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5550351288056206,"t∈Tn
1(Nn,k(t) ≤(2/κ)(C2(γt + βt)/ϵ)2 and kn,t = k)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5556206088992974,≤NK(2/κ)(C2(γT + βT )/ϵ)2.
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5562060889929742,"From the above we have E[e2
T ] ≤N 2K2(4/κ2)(C2(γT + βT )/ϵ)4. Then from Eq.(47) we have X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5567915690866511,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5573770491803278,"n∈[N]
E[(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1((E2
n,t)c)] ≤
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5579625292740047,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5585480093676815,"n∈[N]
(ϵ/C4)E [Qn(t)] + O(N 2K2(βT + γT )4/κ2ϵ5).
(48)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5591334894613583,"By putting the results of Eqs. (37), (38), (39), (40), (44), (45), (46), (48) altogether, we can obtain E  X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5597189695550351,"t∈[T ]
V(Q(t + 1)) −V(Q(t))  "
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.560304449648712,"≤7 min{N, K}T −2ϵ
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5608899297423887,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5614754098360656,"n∈[N]
E [Qn(t)] + 2
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5620608899297423,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5626463700234192,"n∈[N]
E [(D∗
n(t) −Dn(t))Qn(t)]"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.563231850117096,"≤7 min{N, K}T −2ϵ
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5638173302107728,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5644028103044496,"n∈[N]
E [Qn(t)] + 2C3ϵ
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5649882903981265,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5655737704918032,"n∈[N]
E [Qn(t)]"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5661592505854801,"+ O(N log(T)) + (2ϵ/C4)
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5667447306791569,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5673302107728337,"n∈[N]
E [Qn(t)] + O(N 2K2(βT + γT )4/ϵ5)"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5679156908665105,"≤7 min{N, K}T + 2(C3 + (1/C4) −1)ϵ
X"
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5685011709601874,t∈[T ] X
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.5690866510538641,"n∈[N]
E [Qn(t)] + O(N 2K2(βT + γT )4/ϵ5)."
"THE
SOURCE
CODE
IS
AVAILABLE
AT",0.569672131147541,"Finally, with positive constants C3, C4 > 0 satisfying C3 + (1/C4) < 1, from V(Q(1)) = 0 and
V(Q(T + 1)) ≥0, by using telescoping for the above inequality, we can conclude the proof by"
T,0.5702576112412178,"1
T X"
T,0.5708430913348946,t∈[T ] X
T,0.5714285714285714,"n∈[N]
E[Qn(t)] = O
min{N, K} ϵ
+ 1"
T,0.5720140515222483,"T
d4N 2K2"
T,0.572599531615925,"κ4ϵ6
polylog(T)

.
(49)"
T,0.5731850117096019,"A.7
Proof of Theorem 4"
T,0.5737704918032787,"We first provide the proof for the regret bound of e
O

d3/2 κ
√"
T,0.5743559718969555,"KTQmax

. We define event E1
t ="
T,0.5749414519906323,"{∥ˆθk,t −θk∥Vk,t ≤βt; ∀k ∈[K]} which holds at least probability of 1−1/t2 from Lemma 1. We let
γt = βt
p"
T,0.5755269320843092,"d log(Mt). Then we also define E2
t = {|hT S
n,k,t −x⊤
n ˆθk,t| ≤γt∥xn∥V −1
k,t ; ∀n ∈[N], ∀k ∈"
T,0.5761124121779859,"[K]}, which holds at least probability of 1 −1/t2 from Lemma 5."
T,0.5766978922716628,Then we have
T,0.5772833723653396,"Rπ(T) =
X"
T,0.5778688524590164,t∈[T ] X
T,0.5784543325526932,"n∈[N]
E[Qn(t)(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))] =
X"
T,0.5790398126463701,t∈[T ] X
T,0.5796252927400468,"n∈[N]
E[Qn(t)(µ(n|Sk∗
n,t,t, θk∗
n,t) −eµT S
t
(n|Skn,t,t) + eµT S
t
(n|Skn,t,t) −µ(n|Skn,t,t, θkn,t))] ≤
X"
T,0.5802107728337237,t∈[T ] X
T,0.5807962529274004,"n∈[N]
E[Qn(t)(µ(n|Sk∗
n,t,t, θk∗
n,t) −eµT S
t
(n|Skn,t,t) + eµT S
t
(n|Skn,t,t) −µ(n|Skn,t,t, θkn,t))1(E1
t ∩E2
t )] +
X"
T,0.5813817330210773,t∈[T ] X
T,0.5819672131147541,"n∈[N]
E[Qn(t)(µ(n|Sk∗
n,t,t, θk∗
n,t) −eµT S
t
(n|Skn,t,t) + eµT S
t
(n|Skn,t,t) −µ(n|Skn,t,t, θkn,t))1((E1
t )c)] +
X"
T,0.582552693208431,t∈[T ] X
T,0.5831381733021077,"n∈[N]
E[Qn(t)(µ(n|Sk∗
n,t,t, θk∗
n,t) −eµT S
t
(n|Skn,t,t) + eµT S
t
(n|Skn,t,t) −µ(n|Skn,t,t, θkn,t))1((E2
t )c)]. (50)"
T,0.5837236533957846,"Lemma 8. Under E2
t , for all k ∈[K], we have X"
T,0.5843091334894613,"n∈Sk,t
(eµT S
t
(n|Sk,t) −µ(n|Sk,t, ˆθk,t))Qn(t)"
T,0.5848946135831382,"≤γt max
n∈Sk,t ∥xn∥V −1
k,t Qn(t).
(51)"
T,0.585480093676815,"Proof. Let un,k,t = x⊤
n ˆθk,t. Under E2
t , for any k ∈[K] we have |hT S
n,k,t −un,k,t| ≤γt∥xn∥V −1
k,t ."
T,0.5860655737704918,"Then by the mean value theorem, there exists ¯un,k,t = (1 −c)hT S
n,k,t + cun,k,t for some c ∈(0, 1)"
T,0.5866510538641686,"satisfying,  X"
T,0.5872365339578455,"n∈Sk,t
(eµT S
t
(n|Sk) −µ(n|Sk, θk))Qn(t)  =  X"
T,0.5878220140515222,"n∈Sk,t"
T,0.5884074941451991,"exp(hT S
n,k,t) 1 + P"
T,0.5889929742388759,"m∈Sk exp(hT S
m,k,t) −
exp(un,k,t)
1 + P"
T,0.5895784543325527,"m∈Sk exp(um,k,t) ! Qn(t)  =  X"
T,0.5901639344262295,"n∈Sk,t
∇vn"
T,0.5907494145199064,"P
m∈Sk,t exp(vm) 1 + P"
T,0.5913348946135831,m∈Sk exp(vm)
T,0.59192037470726,"! 
vn=¯un,k,t
(hT S
n,k,t −un,k,t)Qn(t) "
T,0.5925058548009368,"=

(1 + P"
T,0.5930913348946136,"n∈Sk exp(¯un,k,t))(P"
T,0.5936768149882904,"n∈Sk exp(¯un,k,t)(hT S
n,k,t −un,k,t)Qn(t))
(1 + P"
T,0.5942622950819673,"n∈Sk exp(¯un,k,t))2 −
(P"
T,0.594847775175644,"n∈Sk,t exp(¯un,k,t))(P"
T,0.5954332552693209,"n∈Sk,t exp(¯un,k,t)(hT S
n,k,t −un,k,t)Qn(t))"
T,0.5960187353629977,(1 + P
T,0.5966042154566745,"n∈Sk exp(¯un,k,t))2  ≤
X"
T,0.5971896955503513,"n∈Sk,t"
T,0.5977751756440282,"exp(¯un,k,t)
1 + P"
T,0.5983606557377049,"m∈Sk,t exp(¯um,k,t)|hT S
n,k,t −un,k,t|Qn(t)"
T,0.5989461358313818,"≤max
n∈Sk,t |hT S
n,k,t −un,k,t|Qn(t) ≤γt max
n∈Sk,t ∥xn∥V −1
k,t Qn(t)."
T,0.5995316159250585,"Lemma 9. Under E1
t , for all k ∈[K] we have X"
T,0.6001170960187353,"n∈Sk,t
(µ(n|Sk,t, ˆθk,t) −µ(n|Sk,t, θk))Qn(t) ≤2βt max
n∈Sk,t ∥xn∥V −1
k,t Qn(t)."
T,0.6007025761124122,"Proof. Since x/(1 + x) is a non-decreasing function for x > −1 and x⊤
n ˆθkn,t,t ≤x⊤
n ˆθkn,t,t +
βt∥xn∥V −1
kn,t,t under E1
t , with the definition of eµUCB
t
(n|Sk,t), we have X"
T,0.6012880562060889,"n∈Sk,t
(µ(n|Sk,t, ˆθk,t) −µ(n|Sk,t, θk))Qn(t) ≤
X"
T,0.6018735362997658,"n∈Sk,t
(eµUCB
t
(n|Sk,t) −µ(n|Sk,t, θk))Qn(t)."
T,0.6024590163934426,"Then let un,k,t = x⊤
n θk. Under E1
t , for any n ∈[N] and k ∈[K] we have x⊤
n ˆθk,t −βt∥xn∥V −1
k,t ≤"
T,0.6030444964871194,"x⊤
n θk ≤x⊤
n ˆθk,t + βt∥xn∥V −1
k,t , which implies 0 ≤hUCB
n,k,t −un,k,t ≤2βt∥xn∥V −1
k,t . Then by the"
T,0.6036299765807962,"mean value theorem, there exists ¯un,k,t = (1 −c)hUCB
n,k,t + cun,k,t for some c ∈(0, 1) satisfying,
X"
T,0.6042154566744731,"n∈Sk,t
(eµUCB
t
(n|Sk,t, ˆθk,t) −µ(n|Sk,t, θk))Qn(t) =
X n∈Sk"
T,0.6048009367681498,"exp(hUCB
n,k,t )"
T,0.6053864168618267,"1 + P
m∈Sk,t exp(hUCB
m,k,t) −
exp(un,k,t)
1 + P"
T,0.6059718969555035,"m∈Sk,t exp(um,k,t) ! Qn(t) =
X"
T,0.6065573770491803,"n∈Sk,t
∇vn"
T,0.6071428571428571,"exp(vn)
1 + P"
T,0.607728337236534,"m∈Sk,t exp(vm)"
T,0.6083138173302107,"! 
vn=¯un,k,t
(hUCB
n,k,t −un,k,t)Qn(t)"
T,0.6088992974238876,"=
(1 + P"
T,0.6094847775175644,"n∈Sk exp(¯un,k,t))(P"
T,0.6100702576112412,"n∈Sk exp(¯un,k,t)(hUCB
n,k,t −un,k,t)Qn(t))
(1 + P"
T,0.610655737704918,"n∈Sk exp(¯un,k,t))2 −
(P"
T,0.6112412177985949,"n∈Sk,t exp(¯un,k,t))(P"
T,0.6118266978922716,"n∈Sk,t exp(¯un,k,t)(hUCB
n,k,t −un,k,t)Qn(t))"
T,0.6124121779859485,(1 + P
T,0.6129976580796253,"n∈Sk,t exp(¯un,k,t))2 ≤
X"
T,0.6135831381733021,"n∈Sk,t"
T,0.6141686182669789,"exp(¯un,k,t)
1 + P"
T,0.6147540983606558,"m∈Sk,t exp(¯um,k,t)(hUCB
n,k,t −un,k,t)Qn(t)"
T,0.6153395784543325,"≤max
n∈Sk(hUCB
n,k,t −un,k,t)Qn(t)"
T,0.6159250585480094,"≤2βt max
n∈Sk,t ∥xn∥V −1
k,t Qn(t)."
T,0.6165105386416861,"Then we first focus on the first term in the above. From Lemmas 8 and 9, we have
X"
T,0.617096018735363,t∈[T ] X
T,0.6176814988290398,"n∈[N]
E[eµT S
t
(n|Skn,t,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1(E1
t ∩E2
t )] ≤
X"
T,0.6182669789227166,t∈[T ] X
T,0.6188524590163934,"n∈[N]
E[(eµT S
t
(n|Skn,t,t) −µ(n|Skn,t,t, ˆθkn,t,t)"
T,0.6194379391100703,"+ µ(n|Skn,t,t, ˆθkn,t,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1(E1
t ∩E2
t )] ≤
X"
T,0.620023419203747,"t∈[T ]
E[
X k∈[K] X"
T,0.6206088992974239,"n∈Sk,t
(eµT S
t
(n|Sk,t) −µ(n|Sk,t, ˆθk,t)"
T,0.6211943793911007,"+ µ(n|Sk,t, ˆθk,t) −µ(n|Sk,t, θk))Qn(t)1(E1
t ∩E2
t )] ≤
X"
T,0.6217798594847775,t∈[T ] X
T,0.6223653395784543,"k∈[K]
E[(γt + 2βt) max
n∈Sk,t ∥xn∥V −1
k,t Qn(t)1(E1
t )] =
X"
T,0.6229508196721312,t∈[T ] X
T,0.6235362997658079,"k∈[K]
E[E[(γt + 2βt) max
n∈Sk,t ∥xn∥V −1
k,t Qn(t)|E1
t , Ft−1]P(E1
t |Ft−1)].
(52)"
T,0.6241217798594848,We define sets
T,0.6247072599531616,"eΘt =

{θ(i)
k }i∈[M],k∈[K] :

X"
T,0.6252927400468384,"n∈Sk,t
(eµT S
t
(n|Sk,t, {θ(i)
k }i∈[M]) −µ(n|Sk,t, ˆθk,t))Qn(t)"
T,0.6258782201405152,"≤γt max
n∈Sk,t ∥xn∥V −1
k,t Qn(t); ∀k ∈[K]
 and"
T,0.6264637002341921,"eΘopt
t
=

{θ(i)
k }i∈[M],k∈[K] :
X k∈[K] X"
T,0.6270491803278688,"n∈Sk,t
eµT S
t
(n|Sk,t, {θ(i)
k }i∈[M])Qn(t) >
X k∈[K] X"
T,0.6276346604215457,"n∈S∗
k,t
µ(n|S∗
k,t, θk)Qn(t)

∩eΘt."
T,0.6282201405152225,"We define event Et(eθ) = {{eθ(i)
k,t}i∈[M],k∈[K] ∈eΘopt
t
}. Then by following the proof steps in Eq.(41),
we have E  E    X k∈[K] X"
T,0.6288056206088993,"n∈S∗
k,t
µ(n|S∗
k,t, θk)Qn(t) −
X k∈[K] X"
T,0.6293911007025761,"n∈Sk,t
eµT S
t
(n|Sk,t, {eθ(i)
k,t}i∈[M])Qn(t) "
T,0.629976580796253,"1(E1
t ∩E2
t )|Ft−1    "
T,0.6305620608899297,"≤E

E
 X k∈[K] X"
T,0.6311475409836066,"n∈S∗
k,t
µ(n|S∗
k,t, θk)Qn(t)"
T,0.6317330210772834,"−
inf
{θ(i)
l
}i∈[M],l∈[K]∈eΘt X k∈[K] X"
T,0.6323185011709602,"n∈Sk,t
eµT S
t
(n|Sk,t, {θ(i)
k }i∈[M])Qn(t)

1(E1
t ∩E2
t )|Ft−1, Et(eθ)
"
T,0.632903981264637,"≤E

E

sup"
T,0.6334894613583139,"{θ(i)
l
}i∈[M],l∈[K]∈eΘt X k∈[K] X"
T,0.6340749414519906,"n∈Sk,t"
T,0.6346604215456675,"
eµT S
t
(n|Sk,t, {eθ(i)
k,t}i∈[M])"
T,0.6352459016393442,"−eµT S
t
(n|Sk,t, {θ(i)
k }i∈[M])

Qn(t)1(E1
t ∩E2
t )|Ft−1, Et(eθ)
"
T,0.6358313817330211,"≤E

E

sup"
T,0.6364168618266979,"{θ(i)
l
}i∈[M],l∈[K]∈eΘt X k∈[K] X"
T,0.6370023419203747,"n∈Sk,t"
T,0.6375878220140515,"
eµT S
t
(n|Sk,t, {eθ(i)
k,t}i∈[M]) −µ(n|Sk,t, ˆθk,t)"
T,0.6381733021077284,"+ µ(n|Sk,t, ˆθk,t) −eµT S
t
(n|Sk,t, {θ(i)
k }i∈[M])

Qn(t)1(E1
t ∩E2
t )|Ft−1, Et(eθ)
 ≤2γtE  X"
T,0.6387587822014051,"k∈[K]
E

max
n∈Sk,t ∥xn∥V −1
k,t Qn(t)1(E1
t )
Ft−1, Et(eθ)
 "
T,0.639344262295082,= 2γtE  X
T,0.6399297423887588,"k∈[K]
E

max
n∈Sk,t ∥xn∥V −1
k,t Qn(t)
Ft−1, Et(eθ), E1
t"
T,0.6405152224824356,"
× P(E1
t |Et(eθ), Ft−1)  "
T,0.6411007025761124,= 2γtE  X
T,0.6416861826697893,"k∈[K]
E

max
n∈Sk,t ∥xn∥V −1
k,t Qn(t)
Ft−1, Et(eθ), E1
t"
T,0.642271662763466,"
P(E1
t |Ft−1)  "
T,0.6428571428571429,≤32√eπγtE  E  X
T,0.6434426229508197,"k∈[K]
max
n∈Sk,t ∥xn∥V −1
k,t Qn(t)|Ft−1, E1
t "
T,0.6440281030444965,"P(E1
t |Ft−1)  , (53)"
T,0.6446135831381733,"where the last inequality is obtained from (42). Then from Eqs.(52) and (53), for some constant
C2 > 0, we have X"
T,0.6451990632318502,t∈[T ] X
T,0.6457845433255269,"n∈[N]
E[Qn(t)(µ(n|Sk∗
n,t,t, θk∗
n,t) −eµT S
t
(n|Skn,t,t) + eµT S
t
(n|Skn,t,t) −µ(n|Skn,t,t, θkn,t))1(E1
t ∩E2
t )] ≤
X"
T,0.6463700234192038,t∈[T ] X
T,0.6469555035128806,"k∈[K]
E[E[ max
n∈Sk,t(33√eπγt + 2βt)∥xn∥V −1
k,t Qn(t)|E1
t , Ft−1]P(E1
t |Ft−1)] ≤C2
X"
T,0.6475409836065574,t∈[T ] X
T,0.6481264637002342,"k∈[K]
E

max
n∈Sk,t(γt + βt)∥xn∥V −1
k,t Qn(t)1(E1
t )
 ≤C2
X"
T,0.6487119437939111,t∈[T ] X
T,0.6492974238875878,"k∈[K]
E

max
n∈Sk,t(γt + βt)∥xn∥V −1
k,t Qn(t)

. (54)"
T,0.6498829039812647,"For the second and third terms of Eq.(50), we have X"
T,0.6504683840749415,t∈[T ] X
T,0.6510538641686182,"n∈[N]
E
h
(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1((E1
t )c)
i ≤
X"
T,0.6516393442622951,t∈[T ] X
T,0.6522248243559718,"n∈[N]
E

Qn(t)1((E1
t )c)
 ≤
X"
T,0.6528103044496487,t∈[T ] X
T,0.6533957845433255,"n∈[N]
tP((E1
t )c) = O  X"
T,0.6539812646370023,t∈[T ] X
T,0.6545667447306791,"n∈[N]
t(1/t2) "
T,0.655152224824356,"= O(N log(T)),
(55) and X"
T,0.6557377049180327,t∈[T ] X
T,0.6563231850117096,"n∈[N]
E
h
(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1((E2
t )c)
i ≤
X"
T,0.6569086651053864,t∈[T ] X
T,0.6574941451990632,"n∈[N]
E

Qn(t)1((E2
t )c)
 ≤
X"
T,0.65807962529274,t∈[T ] X
T,0.6586651053864169,"n∈[N]
tP((E2
t )c) = O  X"
T,0.6592505854800936,t∈[T ] X
T,0.6598360655737705,"n∈[N]
t(1/t2) "
T,0.6604215456674473,"= O(N log(T)).
(56)"
T,0.6610070257611241,"Finally from Eqs.(50), (54), (55), and (56), we can conclude that"
T,0.6615925058548009,Rπ(T) = O  X
T,0.6621779859484778,t∈[T ] X
T,0.6627634660421545,"k∈[K]
E[ max
n∈Sk,t(γt + βt)∥xn∥V −1
k,t Qn(t)] + N log(T)   = O "
T,0.6633489461358314,"γT E[
max
t∈[T ],n∈[N] Qn(t)
X"
T,0.6639344262295082,t∈[T ] X
T,0.664519906323185,"k∈[K]
max
n∈Sk,t ∥xn∥V −1
k,t ] + N log(T)   = O "
T,0.6651053864168618,"γT E[
max
t∈[T ],n∈[N] Qn(t)
s KT
X"
T,0.6656908665105387,t∈[T ] X
T,0.6662763466042154,"k∈[K]
max
n∈Sk,t ∥xn∥2
V −1
k,t ] + N log(T)  "
T,0.6668618266978923,"= e
O
d3/2 κ √"
T,0.667447306791569,"KTQmax 
,"
T,0.6680327868852459,where the last equality is obtained from Lemma 4.
T,0.6686182669789227,"Here, we provide the proof for the worst-case regret bound of e
O

d2NK min{N,K}3"
T,0.6692037470725996,"κ2ϵ3
1/4
T 3/4

."
T,0.6697892271662763,"We define event E1
t
=
{∥ˆθk,t −θk∥Vk,t
≤
βt for all k
∈
[K]} where βt
= C1
q λ + d"
T,0.6703747072599532,"κ log(1 + tLK/dλ), which holds with high probability as P(E1
t ) ≥1 −1/t2 from"
T,0.6709601873536299,"Lemma 1. We also define E2
t = {eµT S
t
(n|Sk,t) −µ(n|Sk,t, ˆθk,t) ≤γt∥xn∥V −1
k,t ; ∀n ∈[N], ∀k ∈"
T,0.6715456674473068,"[K]}, which holds with high probability as P(E2
t ) ≥1 −O(1/t2), and define E3
n,t = {∥xn∥V −1
k,t ≤"
T,0.6721311475409836,ζ; ∀k ∈[K]}.
T,0.6727166276346604,"Then we have Rπ(T) =
X"
T,0.6733021077283372,t∈[T ] X
T,0.6738875878220141,"n∈[N]
E[Qn(t)(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))] ≤
X"
T,0.6744730679156908,t∈[T ] X
T,0.6750585480093677,"n∈[N]
E[(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1(E1
t ∩E2
t ∩E3
n,t)] +
X"
T,0.6756440281030445,t∈[T ] X
T,0.6762295081967213,"n∈[N]
E[(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)(1((E1
t )c) + 1((E2
t )c) + 1((E3
n,t)c))]. (57)"
T,0.6768149882903981,"We provide a bound for the first term of Eq.(57). We first have
X"
T,0.677400468384075,t∈[T ] X
T,0.6779859484777517,"n∈[N]
E[(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1(E1
t ∩E2
t ∩E3
n,t)] ≤
X"
T,0.6785714285714286,t∈[T ] X
T,0.6791569086651054,"n∈[N]
E[(µ(n|Sk∗
n,t,t, θk∗
n,t) −eµT S
t
(n|Skn,t,t)"
T,0.6797423887587822,"+ eµT S
t
(n|Skn,t,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1(E1
t ∩E2
t ∩E3
n,t)]. (58)"
T,0.680327868852459,"By following the steps in Eq.(40), the last two terms in Eq.(58) are bounded as X"
T,0.6809133489461359,t∈[T ] X
T,0.6814988290398126,"n∈[N]
E[eµT S
t
(n|Skn,t,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1(E1
t ∩E2
t ∩E3
n,t)] ≤
X"
T,0.6820843091334895,t∈[T ] X
T,0.6826697892271663,"k∈[K]
E  E  X"
T,0.6832552693208431,"n∈Sk,t
(γt + 2βt)ζQn(t)|E1
t , Ft−1 "
T,0.6838407494145199,"P(E1
t |Ft−1) "
T,0.6844262295081968,".
(59)"
T,0.6850117096018735,Now we provide a bound for the first two terms in Eq.(58).
T,0.6855971896955504,We define sets
T,0.6861826697892272,"eΘt =

{θ(i)
k }i∈[M],k∈[K] :
max
i∈[M] x⊤
n θ(i)
k −x⊤
n ˆθk,t"
T,0.686768149882904,"≤γt∥xn∥V −1
k,t ; ∀n ∈[N], ∀k ∈[K]

and"
T,0.6873536299765808,"eΘopt
t
= 
"
T,0.6879391100702577,"{θ(i)
k }i∈[M],k∈[K] :
X k∈[K] X"
T,0.6885245901639344,"n∈Sk,t
eµT S
t
(n|Sk,t, {θ(i)
k }i∈[M])Qn(t) >
X k∈[K] X"
T,0.6891100702576113,"n∈S∗
k,t
µ(n|S∗
k,t, θk)Qn(t) 
"
T,0.689695550351288,∩eΘt.
T,0.6902810304449649,"By following the steps in Eq.(41) with Eq. (42), we have"
T,0.6908665105386417,"E[E[(
X k∈[K] X"
T,0.6914519906323185,"n∈S∗
k,t
µ(n|S∗
k,t, θk) −
X k∈[K] X"
T,0.6920374707259953,"n∈Sk,t
eµT S
t
(n|Sk,t, {eθ(i)
k,t}i∈[M]))Qn(t)1(E1
t ∩E2
t ∩E3
n,t)|Ft−1]]"
T,0.6926229508196722,= 2γtζE  X k∈[K] X
T,0.6932084309133489,"n∈Sk,t
E
h
Qn(t)
Ft−1, {eθ(i)
k,t}i∈[M],k∈[K] ∈eΘopt
t
, E1
t
i
P(E1
t |Ft−1)  "
T,0.6937939110070258,≤16√eπγtζE  X k∈[K] X
T,0.6943793911007026,"n∈Sk,t
Qn(t)|Ft−1, E1
t "
T,0.6949648711943794,"P(E1
t |Ft−1). (60)"
T,0.6955503512880562,"Then for the first term of Eq.(57), from Eqs.(58), (59), for some C3 > 0 we have X"
T,0.6961358313817331,t∈[T ] X
T,0.6967213114754098,"n∈[N]
E[(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1(E1
t ∩E2
t ∩E3
n,t)] ≤
X"
T,0.6973067915690867,t∈[T ] X
T,0.6978922716627635,"n∈[N]
E[(µ(n|Sk∗
n,t,t, θk∗
n,t) −eµT S
t
(n|Skn,t,t)"
T,0.6984777517564403,"+ eµT S
t
(n|Skn,t,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1(E1
t ∩E2
t ∩E3
n,t)] ≤
X"
T,0.6990632318501171,t∈[T ] X
T,0.699648711943794,"k∈[K]
E  E  X"
T,0.7002341920374707,"n∈Sk,t
(17√eπγt + 2βt)ζQn(t)|Ft−1, E1
t "
T,0.7008196721311475,"P(E1
t |Ft−1)   ≤
X"
T,0.7014051522248244,t∈[T ] X
T,0.7019906323185011,"n∈[N]
(17√eπγt + 2βt)ζE[E[Qn(t)|E1
t , Ft−1]P(E1
t |Ft−1)] =
X"
T,0.702576112412178,t∈[T ] X
T,0.7031615925058547,"n∈[N]
(17√eπγt + 2βt)ζE[Qn(t)1(E1
t )]"
T,0.7037470725995316,"≤(17√eπγT + 2βT )ζ
X"
T,0.7043325526932084,t∈[T ] X
T,0.7049180327868853,"n∈[N]
E[Qn(t)].
(61)"
T,0.705503512880562,"For the second term of Eq.(57), by following the steps in Eqs.(45), (46) we have X"
T,0.7060889929742389,t∈[T ] X
T,0.7066744730679156,"n∈[N]
E
h
(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1((E1
t )c)
i
= O(N log(T)),
(62) and X"
T,0.7072599531615925,t∈[T ] X
T,0.7078454332552693,"n∈[N]
E
h
(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1((E2
t )c)
i
= O(N log(T)).
(63)"
T,0.7084309133489461,Let Tn be the set of time steps t ∈[T] such that Qn(t) ̸= 0 and let eT = P
T,0.7090163934426229,"n∈[N]
P"
T,0.7096018735362998,"t∈Tn 1((E3
n,t)c)
and h = ⌈1/(17√eπγT + 2βT )ζ⌉. Then if t ≤h, we have Qn(t) ≤t ≤h. Otherwise, we have"
T,0.7101873536299765,"Qn(t) ≤ t
X"
T,0.7107728337236534,"s=t−h+1
(1/h)(Qn(s) + (t −s)) ≤(1/h) t
X"
T,0.7113583138173302,"s=1
Qn(s) + (1/h)h2 = (1/h) t
X"
T,0.711943793911007,"s=1
Qn(s) + h."
T,0.7125292740046838,"Then, by following the steps in Eq.(47), we have X"
T,0.7131147540983607,t∈[T ] X
T,0.7137002341920374,"n∈[N]
E[(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1((E2
n,t)c)] ≤
X"
T,0.7142857142857143,t∈[T ] X
T,0.7148711943793911,"n∈[N]
(17√eπγT + 2βT )ζE [Qn(t)] + 2E[eT ]/(17√eπγT + 2βT )ζ.
(64)"
T,0.7154566744730679,"Now we provide a bound for E[eT ].
Define Nn,k(t) = Pt−1
s=1 1(n ∈Sk,s) and eVk,t =
(κ/2) Pt−1
s=1
P"
T,0.7160421545667447,"n∈Sk,s xnx⊤
n . Then, we have"
T,0.7166276346604216,"eT =
X n∈[N] X"
T,0.7172131147540983,"t∈Tn
1((E2
n,t)c) ≤
X n∈[N] X"
T,0.7177985948477752,"t∈Tn
1(∥xn∥V −1
kn,t,t ≥ζ) ≤
X n∈[N] X"
T,0.718384074941452,"t∈Tn
1(∥xn∥eV −1
kn,t,t ≥ζ) ≤
X n∈[N] X"
T,0.7189695550351288,"t∈Tn
1(1/Nn,kn,t(t) ≥(κ/2)ζ2) ≤
X n∈[N] X"
T,0.7195550351288056,"t∈Tn
1(Nn,kn,t(t) ≤2/κζ2) ≤
X n∈[N] X k∈[K] X"
T,0.7201405152224825,"t∈Tn
1(Nn,k(t) ≤2/κζ2 and kn,t = k)"
T,0.7207259953161592,"≤2NK/κζ2.
(65)"
T,0.7213114754098361,"Then from Eqs.(64), (65), we have
X"
T,0.7218969555035128,t∈[T ] X
T,0.7224824355971897,"n∈[N]
E[(µ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)1((E2
n,t)c)] ≤O  X"
T,0.7230679156908665,t∈[T ] X
T,0.7236533957845434,"n∈[N]
ζ(βT + γT )E [Qn(t)] +
NK
κζ3(βT + γT ) "
T,0.7242388758782201,".
(66)"
T,0.724824355971897,"By putting the results of Eqs. (57), (58), (59), (61), (62), (63), (66), and Theorem 3, by setting
ζ = (ϵNK/ min{N, K}κT(βT + γT )2)1/4, for large enough T, we can obtain"
T,0.7254098360655737,Rπ(T) = O 
T,0.7259953161592506,"ζ(βT + γT )
X"
T,0.7265807962529274,t∈[T ] X
T,0.7271662763466042,"n∈[N]
E[Qn(t)] +
NK
κζ3(βT + γT ) + N log(T)  "
T,0.727751756440281,"= O
ζ(βT + γT ) min{N, K}T"
T,0.7283372365339579,"ϵ
+
NK
κζ3(βT + γT ) + N log(T)
"
T,0.7289227166276346,"= O
(βT + γT )1/2T 3/4(NK min{N, K}3)1/4"
T,0.7295081967213115,"κ1/4ϵ3/4
+ N log(T)
 = e
O"
T,0.7300936768149883,"d2NK min{N, K}3 κ2ϵ3"
T,0.7306791569086651,"1/4
T 3/4
! ."
T,0.7312646370023419,"A.8
Proof of Lemma 1"
T,0.7318501170960188,"We first define
¯fk,t(θ) = Ey[fk,t(θ)|Ft−1] and ¯gk,t(θ) = Ey[gk,t(θ)|Ft−1],"
T,0.7324355971896955,"where Ft−1 is the filtration contains outcomes for time s such that s ≤t−1 and y = {yn,t : n ∈Sk,t}.
From Lemma 10 in Oh and Iyengar [44], by taking expectation over y gives"
T,0.7330210772833724,"¯fk,t(ˆθk,t) ≤¯fk,t(θk) + ¯gk,t(ˆθk,t)⊤(ˆθk,t −θk) −κ"
T,0.7336065573770492,"2 (θk −ˆθk,t)⊤Wk,t(θk −ˆθk,t),"
T,0.734192037470726,"where Wk,t = P
n∈Sk,t xnx⊤
n . Then with ¯fk,t(θk) ≤¯fk,t(ˆθk,t) from Lemma 12 in Oh and Iyengar
[44], we have"
T,0.7347775175644028,"0 ≤¯fk,t(ˆθk,t) −¯fk,t(θk)"
T,0.7353629976580797,"≤¯gk,t(ˆθk,t)⊤(ˆθk,t −θk) −κ"
T,0.7359484777517564,"2 ∥θk −ˆθk,t∥2
Wk,t"
T,0.7365339578454333,"= gk,t(ˆθk,t)⊤(ˆθk,t −θk) −κ"
T,0.7371194379391101,"2 ∥θk −ˆθk,t∥2
Wk,t + (¯gk,t(ˆθk,t) −gk,t(ˆθk,t))⊤(ˆθk,t −θk) ≤1"
T,0.7377049180327869,"2∥gk,t(ˆθk,t)∥2
V −1
k,t+1 + 1"
T,0.7382903981264637,"2∥ˆθk,t −θk∥2
Vk,t+1 −1"
T,0.7388758782201406,"2∥ˆθk,t+1 −θk∥2
Vk,t+1 −κ"
T,0.7394613583138173,"2 ∥θk −ˆθk,t∥2
Wk,t + (¯gk,t(ˆθk,t) −gk,t(ˆθk,t))⊤(ˆθk,t −θk)"
T,0.7400468384074942,"≤2 max
n∈Sk,t ∥xn∥2
V −1
k,t+1 + 1"
T,0.740632318501171,"2∥ˆθk,t −θk∥2
Vk,t+1 −1"
T,0.7412177985948478,"2∥ˆθk,t+1 −θk∥2
Vk,t+1 −κ"
T,0.7418032786885246,"2 ∥θk −ˆθk,t∥2
Wk,t + (¯gk,t(ˆθk,t) −gk,t(ˆθk,t))⊤(ˆθk,t −θk)"
T,0.7423887587822015,"≤2 max
n∈Sk,t ∥xn∥2
V −1
k,t+1 + 1"
T,0.7429742388758782,"2∥ˆθk,t −θk∥2
Vk,t + κ"
T,0.7435597189695551,"4 ∥ˆθk,t −θk∥2
Wk,t −1"
T,0.7441451990632318,"2∥ˆθk,t+1 −θk∥2
Vk,t+1 −κ"
T,0.7447306791569087,"2 ∥θk −ˆθk,t∥2
Wk,t + (¯gk,t(ˆθk,t) −gk,t(ˆθk,t))⊤(ˆθk,t −θk)"
T,0.7453161592505855,"≤2 max
n∈Sk,t ∥xn∥2
V −1
k,t+1 + 1"
T,0.7459016393442623,"2∥ˆθk,t −θk∥2
Vk,t −κ"
T,0.7464871194379391,"4 ∥ˆθk,t −θk∥2
Wk,t −1"
T,0.747072599531616,"2∥ˆθk,t+1 −θk∥2
Vk,t+1"
T,0.7476580796252927,"+ (¯gk,t(ˆθk,t) −gk,t(ˆθk,t))⊤(ˆθk,t −θk),
(67)"
T,0.7482435597189696,"where the third inequality comes from Lemma 11 in Oh and Iyengar [44] and the fourth inequality
comes from Lemma 13 in Oh and Iyengar [44]. We note that, although our estimator lies in Θ, we
can still utilize Lemma 11 from Oh and Iyengar [44] by following the same proof steps."
T,0.7488290398126464,"Hence, from the above, we have"
T,0.7494145199063232,"∥ˆθk,t+1−θk∥2
Vk,t+1 ≤4 max
n∈Sk,t ∥xn∥2
V −1
k,t+1+∥ˆθk,t−θk∥2
Vk,t−κ"
T,0.75,"2 ∥ˆθk,t−θk∥2
Wk,t+2(¯gk,t(ˆθk,t)−gk,t(ˆθk,t))⊤(ˆθk,t−θk)."
T,0.7505854800936768,"Then using telescoping by summing the above over t, with at least probability 1 −δ, we have"
T,0.7511709601873536,"∥ˆθk,t+1 −θk∥2
Vk,t+1 ≤λ + 4 t
X"
T,0.7517564402810304,"s=1
max
n∈Sk,s ∥xn∥2
V −1
k,s+1 −κ 2 t
X"
T,0.7523419203747073,"s=1
∥ˆθk,s −θk∥2
Wk,s + 2 t
X"
T,0.752927400468384,"s=1
(¯gk,s(ˆθk,s) −gk,s(ˆθk,s))⊤(ˆθk,s −θk)"
T,0.7535128805620609,"≤λ + 4 t
X"
T,0.7540983606557377,"s=1
max
n∈Sk,s ∥xn∥2
V −1
k,s+1 −κ 2 t
X"
T,0.7546838407494145,"s=1
∥ˆθk,s −θk∥2
Wk,s + κ 2 t
X"
T,0.7552693208430913,"s=1
∥θk −ˆθk,t∥2
Wk,s + 2C1"
T,0.7558548009367682,"κ
log((log tL)t2K/δ)"
T,0.7564402810304449,"≤λ + 4 t
X"
T,0.7570257611241218,"s=1
max
n∈Sk,s ∥xn∥2
V −1
k,s+1 + 2C1"
T,0.7576112412177985,"κ
log((log tL)t2K/δ)"
T,0.7581967213114754,≤λ + 16(d/κ) log(1 + (tL/dλ)) + 2C1
T,0.7587822014051522,"κ
log((log tL)t2K/δ),
(68)"
T,0.759367681498829,"where the second inequality is obtained from Lemma 14 in Oh and Iyengar [44] and the last one is
obtained from Lemma 4"
T,0.7599531615925058,"Then with δ = 1/t2, we can conclude that"
T,0.7605386416861827,"∥ˆθk,t −θk∥Vk,t ≤C1 r λ + d"
T,0.7611241217798594,κ log(1 + tLK/dλ).
T,0.7617096018735363,"A.9
α-approximation Oracle
In this section, we provide a detailed explanation for α-approxiamtion oracle to reduce the computa-
tion. Instead of obtaining the exact solution, the α-approximation oracle, denoted by Oα, outputs
{Sα
k }k∈[K] satisfying P"
T,0.7622950819672131,"k∈[K] fk(Sα
k ) ≥max{Sk}k∈[K]∈M(Nt)
P"
T,0.7628805620608899,"k∈[K] αfk(Sk). Such an oracle
can be constructed using a straightforward greedy policy as outlined in prior work [26, 10]. Then
for assortments {Sα
k,t}k∈[K] for t ∈[T] from Algorithms 1 and 2 using Oα, we can obtain the same
queue length bounds and regret bounds for α-regret in Theorems 1, 2, 3, and 4 under an α-slackness
assumption, respectively."
T,0.7634660421545667,We first consider the following traffic slackness assumption with 0 < α < 1 instead of Assumption 3.
T,0.7640515222482436,"Assumption 4. For some traffic slackness 0 < ϵ < 1, for each t ∈[T], there exists {Sk,t}k∈[K] ∈
M(N) which satisfies λn + ϵ ≤αµ(n|Sk,t, θk) for all n ∈Sk,t and k ∈[K]."
T,0.7646370023419203,"A.9.1
α-approximation Oracle for Algorithm 1
Here we introduce an algorithm (Algorithm 3) by modifying Algorithm 1 using an α-approximation
oracle. We explain the distinct parts of the algorithm as follows. We define an oracle Oα, which
outputs {Sα
k,t}k∈[K] satisfying"
T,0.7652224824355972,"max
{Sk}k∈[K]∈M(Nt) X k∈[K] X"
T,0.765807962529274,"n∈Sk
αQn(t)eµUCB
t
(n|Sk, ˆθk,t) ≤
X k∈[K] X"
T,0.7663934426229508,"n∈Sα
k,t
Qn(t)eµUCB
t
(n|Sα
k,t, ˆθk,t). (69)"
T,0.7669789227166276,"Algorithm 3 α-approximated UCB-Queueing Matching Bandit
Input: λ, κ, C1 > 0
for t = 1, . . . , T do"
T,0.7675644028103045,for k ∈[K] do
T,0.7681498829039812,"ˆθk,t ←argminθ∈Θ gk,t(ˆθk,t−1)⊤(θ −ˆθk,t−1) + 1"
T,0.7687353629976581,"2∥θ −ˆθk,t−1∥2
Vk,t
{Sα
k,t}k∈[K] ←Oα from (69)
Offer {Sα
k,t}k∈[K] and observe preference feedback yn,t ∈{0, 1} for all n ∈Sk,t, k ∈[K]"
T,0.7693208430913349,"For the stability analysis, we provide the following theorem."
T,0.7699063231850117,Theorem 5. The time average expected queue length of Algorithm 3 is bounded as
T,0.7704918032786885,"Q(T) = O
min{N, K} ϵ
+ 1"
T,0.7710772833723654,"T
d2N 2K2"
T,0.7716627634660421,"κ4ϵ6
polylog(T)

,"
T,0.772248243559719,which implies that the algorithm achieves stability as
T,0.7728337236533958,"lim
T →∞Q(T) = O
min{N, K} ϵ 
."
T,0.7734192037470726,"Proof. Here we provide only the proof parts which are different from Theorem 1. We analyze the
Lyapunov drift as follows.
X"
T,0.7740046838407494,"t∈[T ]
V(Q(t + 1)) −V(Q(t)) =
X"
T,0.7745901639344263,t∈[T ] X
T,0.775175644028103,"n∈[N]
(Qn(t) + An(t) −Dn(t))+2 −Qn(t)2 =
X"
T,0.7757611241217799,t∈[T ] X
T,0.7763466042154566,"n∈[N]
(Qn(t) + An(t) −αD∗
n(t))2 −Qn(t)2 +
X"
T,0.7769320843091335,t∈[T ] X
T,0.7775175644028103,"n∈[N]
(Qn(t) + An(t) −Dn(t))+2 −
X"
T,0.7781030444964872,t∈[T ] X
T,0.7786885245901639,"n∈[N]
(Qn(t) + An(t) −αD∗
n(t))2. (70)"
T,0.7792740046838408,"For the first two terms in Eq.(70), by following the same procedure of Eqs.(16) and (17), under
Assumption 4, we can obtain
X"
T,0.7798594847775175,t∈[T ] X
T,0.7804449648711944,"n∈[N]
E[(Qn(t) + An(t) −αD∗
n(t))2 −Qn(t)2] ≤
X"
T,0.7810304449648712,t∈[T ] X
T,0.781615925058548,"n∈[N]
2E[(λn −αµ(n|S∗
k,t, θk))Qn(t)] + 2NT ≤−
X"
T,0.7822014051522248,t∈[T ] X
T,0.7827868852459017,"n∈[N]
2ϵE[Qn(t)] + 2 min{N, K}T,
(71)"
T,0.7833723653395784,"For the last two terms in Eq.(18), by following the steps for Eq.(20), we have
X"
T,0.7839578454332553,t∈[T ] X
T,0.7845433255269321,"n∈[N]
(Qn(t) + An(t) −Dn(t))+2 −
X"
T,0.7851288056206089,t∈[T ] X
T,0.7857142857142857,"n∈[N]
(Qn(t) + An(t) −αD∗
n(t))2 ≤4
X"
T,0.7862997658079626,t∈[T ] X
T,0.7868852459016393,"n∈[N]
An(t) + 2
X"
T,0.7874707259953162,t∈[T ] X
T,0.788056206088993,"n∈[N]
(αD∗
n(t) −Dn(t))Qn(t) + min{N, K}T ≤2
X"
T,0.7886416861826698,t∈[T ] X
T,0.7892271662763466,"n∈[N]
(αD∗
n(t) −Dn(t))Qn(t) + 5 min{N, K}T.
(72)"
T,0.7898126463700235,"We also have
X"
T,0.7903981264637002,t∈[T ] X
T,0.7909836065573771,"n∈[N]
E[(αD∗
n(t) −Dn(t)Qn(t)] ≤
X"
T,0.7915690866510539,t∈[T ] X
T,0.7921545667447307,"n∈[N]
E[(αµ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Sα
kn,t,t, θkn,t))Qn(t)1(E1
t ∩E2
n,t)] +
X"
T,0.7927400468384075,t∈[T ] X
T,0.7933255269320844,"n∈[N]
E[(αµ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Sα
kn,t,t, θkn,t))Qn(t)(1((E1
t )c) + 1((E2
n,t)c))]. (73)"
T,0.7939110070257611,"Then for the first term of Eq.(73), we have X"
T,0.794496487119438,"t∈[T ]
E  X"
T,0.7950819672131147,"n∈[N]
(αµ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Sα
kn,t,t, θkn,t))Qn(t)1(E1
t ∩E2
n,t)   ≤
X"
T,0.7956674473067916,"t∈[T ]
E  X"
T,0.7962529274004684,"n∈[N]
(αeµUCB
t
(n|Sk∗
n,t, ˆθk∗
n,t,t) −µ(n|Sα
kn,t,t, θkn,t))Qn(t)1(E1
t ∩E2
n,t)   ≤
X"
T,0.7968384074941453,"t∈[T ]
E  X"
T,0.797423887587822,"n∈[N]
(eµUCB
t
(n|Sα
kn,t,t, ˆθkn,t,t) −µ(n|Sα
kn,t,t, θkn,t))Qn(t)1(E1
t ∩E2
n,t)   ≤
X"
T,0.7980093676814989,"t∈[T ]
E  X"
T,0.7985948477751756,"n∈[N]
2βt∥xn∥V −1
kn,t,tQn(t)1(E1
t ∩E2
n,t)  "
T,0.7991803278688525,"≤C2ϵ
X"
T,0.7997658079625293,t∈[T ] X
T,0.800351288056206,"n∈[N]
E [Qn(t)] .
(74)"
T,0.8009367681498829,The rest of the proofs can be easily obtained from the proof steps in Theorem 1.
T,0.8015222482435597,"Now, we investigate the regret of Algorithm 3. The α-regret regarding policy π is defined as"
T,0.8021077283372365,"Rα,π(T) =
X"
T,0.8026932084309133,t∈[T ] X
T,0.8032786885245902,"n∈[N]
E
h
(αµ(n|S∗
k∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)
i
."
T,0.8038641686182669,The algorithm achieves the following regret bound.
T,0.8044496487119438,Theorem 6. The policy π of Algorithm 3 achieves a regret bound of
T,0.8050351288056206,"Rα,π(T) = e
O  min (
d
κ √"
T,0.8056206088992974,"KTQmax,
dNK min{N, K}3 κ2ϵ3"
T,0.8062060889929742,"1/4
T 3/4
)! ."
T,0.8067915690866511,"Proof. In this proof, we provide only the parts that are different from the proof of Theorem 2."
T,0.8073770491803278,"We first provide the proof for regret bound of Rα,π(T) = e
O

d
κ
√"
T,0.8079625292740047,"KTQmax

."
T,0.8085480093676815,We can show that
T,0.8091334894613583,"Rα,π(T) =
X"
T,0.8097189695550351,t∈[T ] X
T,0.810304449648712,"n∈[N]
E[Qn(t)(αµ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Sα
kn,t,t, θkn,t))] =
X"
T,0.8108899297423887,t∈[T ] X
T,0.8114754098360656,"n∈[N]
E[Qn(t)(αµ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Sα
kn,t,t, θkn,t))1(E1
t )] +
X"
T,0.8120608899297423,t∈[T ] X
T,0.8126463700234192,"n∈[N]
E[Qn(t)(αµ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Sα
kn,t,t, θkn,t))1((E1
t )c)] =
X"
T,0.813231850117096,t∈[T ] X
T,0.8138173302107728,"n∈[N]
E[Qn(t)(αµ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Sα
kn,t,t, θkn,t))1(E1
t )] +
X"
T,0.8144028103044496,t∈[T ] X
T,0.8149882903981265,"n∈[N]
tP((E1
t )c)] ≤
X"
T,0.8155737704918032,t∈[T ] X
T,0.8161592505854801,"n∈[N]
E[Qn(t)(αeµUCB
t
(n|Sk∗
n,t,t, ˆθk∗
n,t,t) −µ(n|Sα
kn,t,t, θkn,t))1(E1
t )] + O(N/T) ≤
X"
T,0.8167447306791569,t∈[T ] X
T,0.8173302107728337,"n∈[N]
E[Qn(t)((eµUCB
t
(n|Sα
kn,t,t, ˆθkn,t,t) −µ(n|Sα
kn,t,t, θkn,t))1(E1
t )] + O(N/T) ≤
X"
T,0.8179156908665105,"t∈[T ]
E[
X k∈[K] X"
T,0.8185011709601874,"n∈Sk,t
Qn(t)(eµUCB
t
(n|Sα
k,t) −µt(n|Sα
k,t))1(E1
t )] + O(N/T) ≤2E  βT
X"
T,0.8190866510538641,t∈[T ] X
T,0.819672131147541,"k∈[K]
max
n∈Sα
k,t
∥xn∥V −1
k,t Qn(t) "
T,0.8202576112412178,+ O(N/T) ≤2E 
T,0.8208430913348946,"
max
t∈[T ],n∈[N] Qn(t)βT
X"
T,0.8214285714285714,t∈[T ] X
T,0.8220140515222483,"k∈[K]
max
n∈Sα
k,t
∥xn∥V −1
k,t "
T,0.822599531615925,+ O(N/T) ≤2E 
T,0.8231850117096019,"
max
t∈[T ],n∈[N] Qn(t)βT
s KT
X"
T,0.8237704918032787,t∈[T ] X
T,0.8243559718969555,"k∈[K]
max
n∈Sα
k,t
∥xn∥2
V −1
k,t "
T,0.8249414519906323,+ O(N/T)
T,0.8255269320843092,"= e
O
d κ √"
T,0.8261124121779859,"KTQmax 
."
T,0.8266978922716628,"By following the similar steps above and the proofs for Theorem 2, we can easily obtain the worst-case"
T,0.8272833723653396,"regret bound of Rα,π(T) = e
O

dNK min{N,K}3"
T,0.8278688524590164,"κ2ϵ3
1/4
T 3/4

, which conclude the proof."
T,0.8284543325526932,"A.9.2
α-approximation Oracle for Algorithm 2
We can obtain similar results for Algorithm 2 as in the case of Algorithm 3. Here we introduce an
algorithm (Algorithm 4) by modifying Algorithm 2 using an α-approximation oracle. We explain
the distinct parts of the algorithm as follows. We define an oracle Oα, which outputs {Sα
k,t}k∈[K]
satisfying"
T,0.8290398126463701,"max
{Sk}k∈[K]∈M(Nt) X k∈[K] X"
T,0.8296252927400468,"n∈Sk
αQn(t)eµT S
t
(n|Sk, {eθ(i)
k,t}i∈[M]) ≤
X k∈[K] X"
T,0.8302107728337237,"n∈Sα
k,t
Qn(t)eµT S
t
(n|Sα
k,t, {eθ(i)
k,t}i∈[M]). (75)"
T,0.8307962529274004,"Algorithm 4 α-approximated Thompson Sampling-Queueing Matching Bandit
Input: λ, M, κ, C1 > 0
for t = 1, . . . , T do"
T,0.8313817330210773,for k ∈[K] do
T,0.8319672131147541,"ˆθk,t ←argminθ∈Θ gk,t(ˆθk,t−1)⊤(θ −ˆθk,t−1) + 1"
T,0.832552693208431,"2∥θ −ˆθk,t−1∥2
Vk,t
Sample {eθ(i)
k,t}i∈[M] independently from N(ˆθk,t, β2
t V −1
k,t )"
T,0.8331381733021077,"{Sα
k,t}k∈[K] ←Oα from (75)
Offer {Sα
k,t}k∈[K] and observe preference feedback yn,t ∈{0, 1} for all n ∈Sk,t, k ∈[K]"
T,0.8337236533957846,"For the stability analysis, we provide the following theorem."
T,0.8343091334894613,Theorem 7. The time average expected queue length of Algorithm 4 is bounded as
T,0.8348946135831382,"Q(T) = O
min{N, K} ϵ
+ 1"
T,0.835480093676815,"T
d4N 2K2"
T,0.8360655737704918,"κ4ϵ6
polylog(T)

,"
T,0.8366510538641686,which implies that the algorithm achieves stability as
T,0.8372365339578455,"lim
T →∞Q(T) = O
min{N, K} ϵ 
."
T,0.8378220140515222,"Proof. Here we provide only the proof parts which are different from Theorem 3. We analyze the
Lyapunov drift as follows with Assumption 4.
X"
T,0.8384074941451991,"t∈[T ]
E [V(Q(t + 1)) −V(Q(t))] =
X"
T,0.8389929742388759,t∈[T ] X
T,0.8395784543325527,"n∈[N]
E
h
(Qn(t) + An(t) −Dn(t))+2 −Qn(t)2i =
X"
T,0.8401639344262295,t∈[T ] X
T,0.8407494145199064,"n∈[N]
E

(Qn(t) + An(t) −αD∗
n(t))2 −Qn(t)2 +
X"
T,0.8413348946135831,t∈[T ] X
T,0.84192037470726,"n∈[N]
E
h
(Qn(t) + An(t) −Dn(t))+2 −(Qn(t) + An(t) −αD∗
n(t))2i"
T,0.8425058548009368,"≤7 min{N, K}T −
X"
T,0.8430913348946136,t∈[T ] X
T,0.8436768149882904,"n∈[N]
2ϵE[Qn(t)] + 2
X"
T,0.8442622950819673,t∈[T ] X
T,0.844847775175644,"n∈[N]
E [(αD∗
n(t) −Dn(t))Qn(t)] , (76)"
T,0.8454332552693209,"Then, for bounding Eq.(76), we have
X"
T,0.8460187353629977,t∈[T ] X
T,0.8466042154566745,"n∈[N]
E[(αD∗
n(t) −Dn(t)Qn(t)] ≤
X"
T,0.8471896955503513,t∈[T ] X
T,0.8477751756440282,"n∈[N]
E[(αµ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Sα
kn,t,t, θkn,t))Qn(t)1(E1
t ∩E2
t ∩E3
n,t)] +
X"
T,0.8483606557377049,t∈[T ] X
T,0.8489461358313818,"n∈[N]
E[(αµ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Sα
kn,t,t, θkn,t))Qn(t)(1((E1
t )c) + 1((E2
t )c) + 1((E3
n,t)c))]. (77)"
T,0.8495316159250585,"We provide a bound for the first term of Eq.(77). We first have
X"
T,0.8501170960187353,t∈[T ] X
T,0.8507025761124122,"n∈[N]
E[(αµ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Sα
kn,t,t, θkn,t))Qn(t)1(E1
t ∩E2
t ∩E3
n,t)] ≤
X"
T,0.8512880562060889,t∈[T ] X
T,0.8518735362997658,"n∈[N]
E[(αµ(n|Sk∗
n,t,t, θk∗
n,t) −eµT S
t
(n|Sα
kn,t,t)"
T,0.8524590163934426,"+ eµT S
t
(n|Sα
kn,t,t) −µ(n|Sα
kn,t,t, θkn,t))Qn(t)1(E1
t ∩E2
t ∩E3
n,t)]. (78)"
T,0.8530444964871194,Now we provide a bound for the first two terms in Eq.(78).
T,0.8536299765807962,We define sets
T,0.8542154566744731,"eΘt =

{θ(i)
k }i∈[M],k∈[K] :
max
i∈[M] x⊤
n θ(i)
k −x⊤
n ˆθk,t"
T,0.8548009367681498,"≤γt∥xn∥V −1
k,t ; ∀n ∈[N], ∀k ∈[K]

and"
T,0.8553864168618267,"eΘopt
t
=

{θ(i)
k }i∈[M],k∈[K] :
X k∈[K] X"
T,0.8559718969555035,"n∈Sα
k,t
eµT S
t
(n|Sα
k,t, {θ(i)
k }i∈[M])Qn(t) >
X k∈[K] X"
T,0.8565573770491803,"n∈S∗
k,t
αµ(n|S∗
k,t, θk)Qn(t)

∩eΘt."
T,0.8571428571428571,"Then we define event Et(eθ) = {{eθ(i)
k,t}i∈[M],k∈[K] ∈eΘopt
t
}. Recall hT S
n,k,t = maxi∈[M] x⊤
n eθ(i)
k,t.
Then we have E  E  X k∈[K]  X"
T,0.857728337236534,"n∈S∗
k,t
αµ(n|S∗
k,t, θk)Qn(t) −
X"
T,0.8583138173302107,"n∈Sα
k,t
eµT S
t
(n|Sα
k,t, {eθ(i)
k,t}i∈[M])Qn(t) "
T,0.8588992974238876,"1(E1
t ∩E2
t ∩E3
n,t)|Ft−1, Et(eθ)     ≤E  E    X k∈[K] X"
T,0.8594847775175644,"n∈S∗
k,t
αµ(n|S∗
k,t, θk)Qn(t)"
T,0.8600702576112412,"−
inf
{θ(i)
l
}i∈[M],l∈[K]∈eΘt X k∈[K] X"
T,0.860655737704918,"n∈Sα
k,t
eµT S
t
(n|Sα
k,t, {θ(i)
k }i∈[M])Qn(t) "
T,0.8612412177985949,"1(E1
t ∩E2
t ∩E3
n,t)|Ft−1, Et(eθ)     ≤E  E    X k∈[K] X"
T,0.8618266978922716,"n∈Sα
k,t
eµT S
t
(n|Sα
k,t, {eθ(i)
k,t}i∈[M])"
T,0.8624121779859485,"−
inf
{θ(i)
l
}i∈[M],l∈[K]∈eΘt X k∈[K] X"
T,0.8629976580796253,"n∈Sα
k,t
eµT S
t
(n|Sα
k,t, {θ(i)
k }i∈[M]) "
T,0.8635831381733021,"Qn(t)1(E1
t ∩E2
t ∩E3
n,t)|Ft−1, Et(eθ)    "
T,0.8641686182669789,"=
2γtϵ
C2(γt + βt)E  X k∈[K] X"
T,0.8647540983606558,"n∈Sα
k,t
E
h
Qn(t)
Ft−1, Et(eθ), E1
t
i
P(E1
t |Ft−1)  , (79)"
T,0.8653395784543325,We provide a lemma below for further analysis.
T,0.8659250585480094,"Lemma 10. For all t ∈[T], we have P  X k∈[K] X"
T,0.8665105386416861,"n∈Sα
k,t
eµT S
t
(n|Sk,t)Qn(t) >
X k∈[K] X"
T,0.867096018735363,"n∈S∗
k,t
αµ(n|S∗
k,t, θk)Qn(t)|Ft−1, E1
t "
T,0.8676814988290398,≥1/4√eπ
T,0.8682669789227166,"Proof. Given Ft−1, x⊤
n eθ(i)
k,t follows Gaussian distribution with mean x⊤
n ˆθk,t and standard deviation
βt∥xn∥V −1
k,t . Then we have"
T,0.8688524590163934,"P

max
i∈[M] x⊤
n eθ(i)
k,t > x⊤
n θk|Ft−1, E1
t"
T,0.8694379391100703,"
= 1 −P

x⊤
n θ(i)
k,t ≤x⊤
n θk; ∀i ∈[M]|Ft−1, E1
t
"
T,0.870023419203747,= 1 −P 
T,0.8706088992974239,"Zi ≤x⊤
n θk −x⊤
n ˆθk,t
βt∥xn∥V −1
k,t
; ∀i ∈[M]|Ft−1, E1
t !"
T,0.8711943793911007,"≥1 −P (Z ≤1)M ,"
T,0.8717798594847775,where Zi and Z are standard normal random variables. Then we can show that P  X k∈[K] X
T,0.8723653395784543,"n∈Sα
k,t
eµT S
t
(n|Sα
k,t)Qn(t) >
X k∈[K] X"
T,0.8729508196721312,"n∈S∗
k,t
αµ(n|S∗
k,t, θk)Qn(t)|Ft−1, E1
t   ≥P  X k∈[K] X"
T,0.8735362997658079,"n∈Sα
k,t
αeµT S
t
(n|Sα
k,t)Qn(t) >
X k∈[K] X"
T,0.8741217798594848,"n∈S∗
k,t
αµ(n|S∗
k,t, θk)Qn(t)|Ft−1, E1
t   ≥P  X k∈[K] X"
T,0.8747072599531616,"n∈S∗
k,t
αeµT S
t
(n|S∗
k,t)Qn(t) >
X k∈[K] X"
T,0.8752927400468384,"n∈S∗
k,t
αµ(n|S∗
k,t, θk)Qn(t)|Ft−1, E1
t   = P  X k∈[K] X"
T,0.8758782201405152,"n∈S∗
k,t
eµT S
t
(n|S∗
k,t)Qn(t) >
X k∈[K] X"
T,0.8764637002341921,"n∈S∗
k,t
µ(n|S∗
k,t, θk)Qn(t)|Ft−1, E1
t  "
T,0.8770491803278688,"≥P

max
i∈[M] x⊤
n eθ(i)
k,t > x⊤
n θk; ∀n ∈S∗
k,t, ∀k ∈[K]|Ft−1, E1
t "
T,0.8776346604215457,≥1 −LKP(Z ≤1)M
T,0.8782201405152225,≥1 −LK(1 −1/4√eπ)M
T,0.8788056206088993,"≥
1
4√eπ ,"
T,0.8793911007025761,"where the second last inequality is obtained from P(Z ≤1) ≤1 −1/4√eπ using the anti-
concentration of standard normal distribution, and the last inequality comes from M = ⌈1 −
log KL
log(1−1/4√eπ)⌉."
T,0.879976580796253,The rest of the proof can be easily obtained by following the proof steps in Theorem 3.
T,0.8805620608899297,"Now, we investigate the regret of Algorithm 4. The α-regret regarding policy π is defined as"
T,0.8811475409836066,"Rα,π(T) =
X"
T,0.8817330210772834,t∈[T ] X
T,0.8823185011709602,"n∈[N]
E
h
(αµ(n|S∗
k∗
n,t,t, θk∗
n,t) −µ(n|Skn,t,t, θkn,t))Qn(t)
i
."
T,0.882903981264637,The algorithm achieves the following regret bound.
T,0.8834894613583139,Theorem 8. The policy π of Algorithm 4 achieves a regret bound of
T,0.8840749414519906,"Rα,π(T) = e
O  min"
T,0.8846604215456675,"(
d3/2 κ √"
T,0.8852459016393442,"KTQmax,
d2NK min{N, K}3 κ2ϵ3"
T,0.8858313817330211,"1/4
T 3/4
)! ."
T,0.8864168618266979,Proof. Here we provide only the proof parts which are different from Theorem 4.
T,0.8870023419203747,"We first provide the proof for the regret bound of e
O

d3/2 κ
√"
T,0.8875878220140515,"KTQmax

. We have"
T,0.8881733021077284,"Rπ(T) =
X"
T,0.8887587822014051,t∈[T ] X
T,0.889344262295082,"n∈[N]
E[Qn(t)(αµ(n|Sk∗
n,t,t, θk∗
n,t) −µ(n|Sα
kn,t,t, θkn,t))] ≤
X"
T,0.8899297423887588,t∈[T ] X
T,0.8905152224824356,"n∈[N]
E[Qn(t)(αµ(n|Sk∗
n,t,t, θk∗
n,t) −eµT S
t
(n|Sα
kn,t,t) + eµT S
t
(n|Sα
kn,t,t) −µ(n|Sα
kn,t,t, θkn,t))1(E1
t ∩E2
t )] +
X"
T,0.8911007025761124,t∈[T ] X
T,0.8916861826697893,"n∈[N]
E[Qn(t)(αµ(n|Sk∗
n,t,t, θk∗
n,t) −eµT S
t
(n|Sα
kn,t,t) + eµT S
t
(n|Sα
kn,t,t) −µ(n|Sα
kn,t,t, θkn,t))1((E1
t )c)] +
X"
T,0.892271662763466,t∈[T ] X
T,0.8928571428571429,"n∈[N]
E[Qn(t)(αµ(n|Sk∗
n,t,t, θk∗
n,t) −eµT S
t
(n|Sα
kn,t,t) + eµT S
t
(n|Sα
kn,t,t) −µ(n|Sα
kn,t,t, θkn,t))1((E2
t )c)]."
T,0.8934426229508197,"By following the similar proof steps in Theorem 7, we can obtain
X"
T,0.8940281030444965,t∈[T ] X
T,0.8946135831381733,"n∈[N]
E[Qn(t)(αµ(n|Sk∗
n,t,t, θk∗
n,t) −eµT S
t
(n|Sα
kn,t,t)"
T,0.8951990632318502,"+ eµT S
t
(n|Sα
kn,t,t) −µ(n|Sα
kn,t,t, θkn,t))1(E1
t ∩E2
t )] ≤C2
X"
T,0.8957845433255269,t∈[T ] X
T,0.8963700234192038,"k∈[K]
E """
T,0.8969555035128806,"max
n∈Sα
k,t
(γt + βt)∥xn∥V −1
k,t Qn(t) # ."
T,0.8975409836065574,"The rest of the proof can be easily obtained from the proof steps in Theorem 4 by incorporating
techniques in the proof of Theorem 7."
T,0.8981264637002342,"A.10
Additional Experiments"
T,0.8987119437939111,"0
5000
10000 15000 20000
Time step t 0.0 0.2 0.4 0.6 0.8 1.0 (t)"
T,0.8992974238875878,"1e2
Average Queue Length"
T,0.8998829039812647,"0
5000
10000 15000 20000
Time step t 0.0 0.5 1.0 1.5 2.0 (t)"
T,0.9004683840749415,"1e5
Regret"
T,0.9010538641686182,"ETC-GS
UCB-QMB (Algorithm 1)"
T,0.9016393442622951,"MaxWeight-UCB
TS-QMB (Algorithm 2)"
T,0.9022248243559718,"Q-UCB
Oracle (MaxWeight)"
T,0.9028103044496487,DAM-UCB
T,0.9033957845433255,"Figure 3: Experimental results with N = 4, K = 3, L = 2, d = 2 for (left) average queue length
and (right) regret"
T,0.9039812646370023,"A.11
Notation Table"
T,0.9045667447306791,Table 1: Notation Table.
T,0.905152224824356,"T
Time horizon
N
Number of agents (queues)
K
Number of arms (servers)
d
Dimension of model parameters and features
xn
Feature vector of agent n
θk
Model parameter vector of arm k
Qn(t)
Length of agent n at time t
ϵ
Traffic slackness parameter
µ(n|Sk, θk)
Service rate of arm k with θk for a job in agent n given assortment
Sk
n0
Null agent
λn
Job arrival rate for agent n
kπ
n,t(= kn,t)
A server that agent n is assigned at time t according to π (simply
kn,t)
An(t)
The number of arrival jobs in agent n at time t; Random variable
with mean λn
Dn(t|Sk)
The number of departure job in agent n by arm k given Sk; Random
variable with mean µ(n|Sk, θk)
Q(T)
Average queue lengths over horizon time T
Rπ(T)
Cumulative regret under π over T
κ
Regularity parameter for MNL
Nt
Set of non-empty agents at time t
M()
Set of feasible disjoint assortments given a set of agents
Sk,t
Set of agents assigned to arm k by policy π
S∗
k,t
Set of agents assigned to arm k by the oracle π∗"
T,0.9057377049180327,"kπ∗
n,t(= k∗
n,t)
A server that agent n is assigned by π∗at time t
yn,t
Preference feedback, {0, 1}, for assigned agent n at time t"
T,0.9063231850117096,NeurIPS Paper Checklist
CLAIMS,0.9069086651053864,1. Claims
CLAIMS,0.9074941451990632,"Question: Do the main claims made in the abstract and introduction accurately reflect the
paper’s contributions and scope?"
CLAIMS,0.90807962529274,Answer: [Yes]
CLAIMS,0.9086651053864169,"Justification: Through the abstract and introduction, we explain our setting with providing
motivation examples and summarize our contributions."
CLAIMS,0.9092505854800936,Guidelines:
CLAIMS,0.9098360655737705,"• The answer NA means that the abstract and introduction do not include the claims
made in the paper."
CLAIMS,0.9104215456674473,"• The abstract and/or introduction should clearly state the claims made, including the
contributions made in the paper and important assumptions and limitations. A No or
NA answer to this question will not be perceived well by the reviewers."
CLAIMS,0.9110070257611241,"• The claims made should match theoretical and experimental results, and reflect how
much the results can be expected to generalize to other settings."
CLAIMS,0.9115925058548009,"• It is fine to include aspirational goals as motivation as long as it is clear that these goals
are not attained by the paper."
LIMITATIONS,0.9121779859484778,2. Limitations
LIMITATIONS,0.9127634660421545,Question: Does the paper discuss the limitations of the work performed by the authors?
LIMITATIONS,0.9133489461358314,Answer: [Yes]
LIMITATIONS,0.9139344262295082,"Justification: In the limitations section (Section A.1), we provide several avenues for
interesting future work. We also discuss the computational efficiency of our algorithms."
LIMITATIONS,0.914519906323185,Guidelines:
LIMITATIONS,0.9151053864168618,"• The answer NA means that the paper has no limitation while the answer No means that
the paper has limitations, but those are not discussed in the paper."
LIMITATIONS,0.9156908665105387,"• The authors are encouraged to create a separate ""Limitations"" section in their paper."
LIMITATIONS,0.9162763466042154,"• The paper should point out any strong assumptions and how robust the results are to
violations of these assumptions (e.g., independence assumptions, noiseless settings,
model well-specification, asymptotic approximations only holding locally). The authors
should reflect on how these assumptions might be violated in practice and what the
implications would be."
LIMITATIONS,0.9168618266978923,"• The authors should reflect on the scope of the claims made, e.g., if the approach was
only tested on a few datasets or with a few runs. In general, empirical results often
depend on implicit assumptions, which should be articulated."
LIMITATIONS,0.917447306791569,"• The authors should reflect on the factors that influence the performance of the approach.
For example, a facial recognition algorithm may perform poorly when image resolution
is low or images are taken in low lighting. Or a speech-to-text system might not be
used reliably to provide closed captions for online lectures because it fails to handle
technical jargon."
LIMITATIONS,0.9180327868852459,"• The authors should discuss the computational efficiency of the proposed algorithms
and how they scale with dataset size."
LIMITATIONS,0.9186182669789227,"• If applicable, the authors should discuss possible limitations of their approach to
address problems of privacy and fairness."
LIMITATIONS,0.9192037470725996,"• While the authors might fear that complete honesty about limitations might be used by
reviewers as grounds for rejection, a worse outcome might be that reviewers discover
limitations that aren’t acknowledged in the paper. The authors should use their best"
LIMITATIONS,0.9197892271662763,"judgment and recognize that individual actions in favor of transparency play an impor-
tant role in developing norms that preserve the integrity of the community. Reviewers
will be specifically instructed to not penalize honesty concerning limitations."
THEORY ASSUMPTIONS AND PROOFS,0.9203747072599532,3. Theory Assumptions and Proofs
THEORY ASSUMPTIONS AND PROOFS,0.9209601873536299,"Question: For each theoretical result, does the paper provide the full set of assumptions and
a complete (and correct) proof?"
THEORY ASSUMPTIONS AND PROOFS,0.9215456674473068,Answer: [Yes]
THEORY ASSUMPTIONS AND PROOFS,0.9221311475409836,"Justification: We provide assumptions in Section 3 and proof sketches of some of the main
theorems in the main text, with complete proofs for theorems in the appendix."
THEORY ASSUMPTIONS AND PROOFS,0.9227166276346604,Guidelines:
THEORY ASSUMPTIONS AND PROOFS,0.9233021077283372,• The answer NA means that the paper does not include theoretical results.
THEORY ASSUMPTIONS AND PROOFS,0.9238875878220141,"• All the theorems, formulas, and proofs in the paper should be numbered and cross-
referenced."
THEORY ASSUMPTIONS AND PROOFS,0.9244730679156908,• All assumptions should be clearly stated or referenced in the statement of any theorems.
THEORY ASSUMPTIONS AND PROOFS,0.9250585480093677,"• The proofs can either appear in the main paper or the supplemental material, but if
they appear in the supplemental material, the authors are encouraged to provide a short
proof sketch to provide intuition."
THEORY ASSUMPTIONS AND PROOFS,0.9256440281030445,"• Inversely, any informal proof provided in the core of the paper should be complemented
by formal proofs provided in appendix or supplemental material."
THEORY ASSUMPTIONS AND PROOFS,0.9262295081967213,• Theorems and Lemmas that the proof relies upon should be properly referenced.
EXPERIMENTAL RESULT REPRODUCIBILITY,0.9268149882903981,4. Experimental Result Reproducibility
EXPERIMENTAL RESULT REPRODUCIBILITY,0.927400468384075,"Question: Does the paper fully disclose all the information needed to reproduce the main ex-
perimental results of the paper to the extent that it affects the main claims and/or conclusions
of the paper (regardless of whether the code and data are provided or not)?"
EXPERIMENTAL RESULT REPRODUCIBILITY,0.9279859484777517,Answer: [Yes]
EXPERIMENTAL RESULT REPRODUCIBILITY,0.9285714285714286,"Justification: In Section 6, we provide all the information necessary for conducting the
synthetic experiments."
EXPERIMENTAL RESULT REPRODUCIBILITY,0.9291569086651054,Guidelines:
EXPERIMENTAL RESULT REPRODUCIBILITY,0.9297423887587822,• The answer NA means that the paper does not include experiments.
EXPERIMENTAL RESULT REPRODUCIBILITY,0.930327868852459,"• If the paper includes experiments, a No answer to this question will not be perceived
well by the reviewers: Making the paper reproducible is important, regardless of
whether the code and data are provided or not."
EXPERIMENTAL RESULT REPRODUCIBILITY,0.9309133489461359,"• If the contribution is a dataset and/or model, the authors should describe the steps taken
to make their results reproducible or verifiable."
EXPERIMENTAL RESULT REPRODUCIBILITY,0.9314988290398126,"• Depending on the contribution, reproducibility can be accomplished in various ways.
For example, if the contribution is a novel architecture, describing the architecture fully
might suffice, or if the contribution is a specific model and empirical evaluation, it may
be necessary to either make it possible for others to replicate the model with the same
dataset, or provide access to the model. In general. releasing code and data is often
one good way to accomplish this, but reproducibility can also be provided via detailed
instructions for how to replicate the results, access to a hosted model (e.g., in the case
of a large language model), releasing of a model checkpoint, or other means that are
appropriate to the research performed."
EXPERIMENTAL RESULT REPRODUCIBILITY,0.9320843091334895,"• While NeurIPS does not require releasing code, the conference does require all submis-
sions to provide some reasonable avenue for reproducibility, which may depend on the
nature of the contribution. For example"
EXPERIMENTAL RESULT REPRODUCIBILITY,0.9326697892271663,"(a) If the contribution is primarily a new algorithm, the paper should make it clear how
to reproduce that algorithm."
EXPERIMENTAL RESULT REPRODUCIBILITY,0.9332552693208431,"(b) If the contribution is primarily a new model architecture, the paper should describe
the architecture clearly and fully."
EXPERIMENTAL RESULT REPRODUCIBILITY,0.9338407494145199,"(c) If the contribution is a new model (e.g., a large language model), then there should
either be a way to access this model for reproducing the results or a way to reproduce
the model (e.g., with an open-source dataset or instructions for how to construct
the dataset)."
EXPERIMENTAL RESULT REPRODUCIBILITY,0.9344262295081968,"(d) We recognize that reproducibility may be tricky in some cases, in which case
authors are welcome to describe the particular way they provide for reproducibility.
In the case of closed-source models, it may be that access to the model is limited in
some way (e.g., to registered users), but it should be possible for other researchers
to have some path to reproducing or verifying the results."
OPEN ACCESS TO DATA AND CODE,0.9350117096018735,5. Open access to data and code
OPEN ACCESS TO DATA AND CODE,0.9355971896955504,"Question: Does the paper provide open access to the data and code, with sufficient instruc-
tions to faithfully reproduce the main experimental results, as described in supplemental
material?"
OPEN ACCESS TO DATA AND CODE,0.9361826697892272,Answer: [Yes]
OPEN ACCESS TO DATA AND CODE,0.936768149882904,Justification: There is a link to our code in Section 6.
OPEN ACCESS TO DATA AND CODE,0.9373536299765808,Guidelines:
OPEN ACCESS TO DATA AND CODE,0.9379391100702577,• The answer NA means that paper does not include experiments requiring code.
OPEN ACCESS TO DATA AND CODE,0.9385245901639344,"• Please see the NeurIPS code and data submission guidelines (https://nips.cc/
public/guides/CodeSubmissionPolicy) for more details."
OPEN ACCESS TO DATA AND CODE,0.9391100702576113,"• While we encourage the release of code and data, we understand that this might not be
possible, so “No” is an acceptable answer. Papers cannot be rejected simply for not
including code, unless this is central to the contribution (e.g., for a new open-source
benchmark)."
OPEN ACCESS TO DATA AND CODE,0.939695550351288,"• The instructions should contain the exact command and environment needed to run to
reproduce the results. See the NeurIPS code and data submission guidelines (https:
//nips.cc/public/guides/CodeSubmissionPolicy) for more details."
OPEN ACCESS TO DATA AND CODE,0.9402810304449649,"• The authors should provide instructions on data access and preparation, including how
to access the raw data, preprocessed data, intermediate data, and generated data, etc."
OPEN ACCESS TO DATA AND CODE,0.9408665105386417,"• The authors should provide scripts to reproduce all experimental results for the new
proposed method and baselines. If only a subset of experiments are reproducible, they
should state which ones are omitted from the script and why."
OPEN ACCESS TO DATA AND CODE,0.9414519906323185,"• At submission time, to preserve anonymity, the authors should release anonymized
versions (if applicable)."
OPEN ACCESS TO DATA AND CODE,0.9420374707259953,"• Providing as much information as possible in supplemental material (appended to the
paper) is recommended, but including URLs to data and code is permitted."
OPEN ACCESS TO DATA AND CODE,0.9426229508196722,6. Experimental Setting/Details
OPEN ACCESS TO DATA AND CODE,0.9432084309133489,"Question: Does the paper specify all the training and test details (e.g., data splits, hyper-
parameters, how they were chosen, type of optimizer, etc.) necessary to understand the
results?"
OPEN ACCESS TO DATA AND CODE,0.9437939110070258,Answer: [Yes]
OPEN ACCESS TO DATA AND CODE,0.9443793911007026,"Justification: We use synthetic datasets and provide details on how to generate them in
Section 6."
OPEN ACCESS TO DATA AND CODE,0.9449648711943794,Guidelines:
OPEN ACCESS TO DATA AND CODE,0.9455503512880562,• The answer NA means that the paper does not include experiments.
OPEN ACCESS TO DATA AND CODE,0.9461358313817331,"• The experimental setting should be presented in the core of the paper to a level of detail
that is necessary to appreciate the results and make sense of them."
OPEN ACCESS TO DATA AND CODE,0.9467213114754098,"• The full details can be provided either with the code, in appendix, or as supplemental
material."
EXPERIMENT STATISTICAL SIGNIFICANCE,0.9473067915690867,7. Experiment Statistical Significance
EXPERIMENT STATISTICAL SIGNIFICANCE,0.9478922716627635,"Question: Does the paper report error bars suitably and correctly defined or other appropriate
information about the statistical significance of the experiments?"
EXPERIMENT STATISTICAL SIGNIFICANCE,0.9484777517564403,Answer: [Yes]
EXPERIMENT STATISTICAL SIGNIFICANCE,0.9490632318501171,"Justification: In our experimental results in Section 6, we include error bars of standard
deviation along with expectation values."
EXPERIMENT STATISTICAL SIGNIFICANCE,0.949648711943794,Guidelines:
EXPERIMENT STATISTICAL SIGNIFICANCE,0.9502341920374707,• The answer NA means that the paper does not include experiments.
EXPERIMENT STATISTICAL SIGNIFICANCE,0.9508196721311475,"• The authors should answer ""Yes"" if the results are accompanied by error bars, confi-
dence intervals, or statistical significance tests, at least for the experiments that support
the main claims of the paper."
EXPERIMENT STATISTICAL SIGNIFICANCE,0.9514051522248244,"• The factors of variability that the error bars are capturing should be clearly stated (for
example, train/test split, initialization, random drawing of some parameter, or overall
run with given experimental conditions)."
EXPERIMENT STATISTICAL SIGNIFICANCE,0.9519906323185011,"• The method for calculating the error bars should be explained (closed form formula,
call to a library function, bootstrap, etc.)"
EXPERIMENT STATISTICAL SIGNIFICANCE,0.952576112412178,"• The assumptions made should be given (e.g., Normally distributed errors)."
EXPERIMENT STATISTICAL SIGNIFICANCE,0.9531615925058547,"• It should be clear whether the error bar is the standard deviation or the standard error
of the mean."
EXPERIMENT STATISTICAL SIGNIFICANCE,0.9537470725995316,"• It is OK to report 1-sigma error bars, but one should state it. The authors should
preferably report a 2-sigma error bar than state that they have a 96% CI, if the hypothesis
of Normality of errors is not verified."
EXPERIMENT STATISTICAL SIGNIFICANCE,0.9543325526932084,"• For asymmetric distributions, the authors should be careful not to show in tables or
figures symmetric error bars that would yield results that are out of range (e.g. negative
error rates)."
EXPERIMENT STATISTICAL SIGNIFICANCE,0.9549180327868853,"• If error bars are reported in tables or plots, The authors should explain in the text how
they were calculated and reference the corresponding figures or tables in the text."
EXPERIMENTS COMPUTE RESOURCES,0.955503512880562,8. Experiments Compute Resources
EXPERIMENTS COMPUTE RESOURCES,0.9560889929742389,"Question: For each experiment, does the paper provide sufficient information on the com-
puter resources (type of compute workers, memory, time of execution) needed to reproduce
the experiments?"
EXPERIMENTS COMPUTE RESOURCES,0.9566744730679156,Answer: [No]
EXPERIMENTS COMPUTE RESOURCES,0.9572599531615925,Justification: The conducted experiments do not require significant computing power.
EXPERIMENTS COMPUTE RESOURCES,0.9578454332552693,Guidelines:
EXPERIMENTS COMPUTE RESOURCES,0.9584309133489461,• The answer NA means that the paper does not include experiments.
EXPERIMENTS COMPUTE RESOURCES,0.9590163934426229,"• The paper should indicate the type of compute workers CPU or GPU, internal cluster,
or cloud provider, including relevant memory and storage."
EXPERIMENTS COMPUTE RESOURCES,0.9596018735362998,"• The paper should provide the amount of compute required for each of the individual
experimental runs as well as estimate the total compute."
EXPERIMENTS COMPUTE RESOURCES,0.9601873536299765,"• The paper should disclose whether the full research project required more compute
than the experiments reported in the paper (e.g., preliminary or failed experiments that
didn’t make it into the paper)."
CODE OF ETHICS,0.9607728337236534,9. Code Of Ethics
CODE OF ETHICS,0.9613583138173302,"Question: Does the research conducted in the paper conform, in every respect, with the
NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines?"
CODE OF ETHICS,0.961943793911007,Answer: [Yes]
CODE OF ETHICS,0.9625292740046838,Justification: We have reviewed the NeurIPS Code of Ethics.
CODE OF ETHICS,0.9631147540983607,Guidelines:
CODE OF ETHICS,0.9637002341920374,• The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.
CODE OF ETHICS,0.9642857142857143,"• If the authors answer No, they should explain the special circumstances that require a
deviation from the Code of Ethics."
CODE OF ETHICS,0.9648711943793911,"• The authors should make sure to preserve anonymity (e.g., if there is a special consid-
eration due to laws or regulations in their jurisdiction)."
BROADER IMPACTS,0.9654566744730679,10. Broader Impacts
BROADER IMPACTS,0.9660421545667447,"Question: Does the paper discuss both potential positive societal impacts and negative
societal impacts of the work performed?"
BROADER IMPACTS,0.9666276346604216,Answer: [NA]
BROADER IMPACTS,0.9672131147540983,"Justification: Given that this study primarily focuses on theoretical analysis, we do not
foresee any negative social consequences."
BROADER IMPACTS,0.9677985948477752,Guidelines:
BROADER IMPACTS,0.968384074941452,• The answer NA means that there is no societal impact of the work performed.
BROADER IMPACTS,0.9689695550351288,"• If the authors answer NA or No, they should explain why their work has no societal
impact or why the paper does not address societal impact."
BROADER IMPACTS,0.9695550351288056,"• Examples of negative societal impacts include potential malicious or unintended uses
(e.g., disinformation, generating fake profiles, surveillance), fairness considerations
(e.g., deployment of technologies that could make decisions that unfairly impact specific
groups), privacy considerations, and security considerations."
BROADER IMPACTS,0.9701405152224825,"• The conference expects that many papers will be foundational research and not tied
to particular applications, let alone deployments. However, if there is a direct path to
any negative applications, the authors should point it out. For example, it is legitimate
to point out that an improvement in the quality of generative models could be used to
generate deepfakes for disinformation. On the other hand, it is not needed to point out
that a generic algorithm for optimizing neural networks could enable people to train
models that generate Deepfakes faster."
BROADER IMPACTS,0.9707259953161592,"• The authors should consider possible harms that could arise when the technology is
being used as intended and functioning correctly, harms that could arise when the
technology is being used as intended but gives incorrect results, and harms following
from (intentional or unintentional) misuse of the technology."
BROADER IMPACTS,0.9713114754098361,"• If there are negative societal impacts, the authors could also discuss possible mitigation
strategies (e.g., gated release of models, providing defenses in addition to attacks,
mechanisms for monitoring misuse, mechanisms to monitor how a system learns from
feedback over time, improving the efficiency and accessibility of ML)."
SAFEGUARDS,0.9718969555035128,11. Safeguards
SAFEGUARDS,0.9724824355971897,"Question: Does the paper describe safeguards that have been put in place for responsible
release of data or models that have a high risk for misuse (e.g., pretrained language models,
image generators, or scraped datasets)?"
SAFEGUARDS,0.9730679156908665,Answer: [NA]
SAFEGUARDS,0.9736533957845434,Justification: This paper poses no such risks.
SAFEGUARDS,0.9742388758782201,Guidelines:
SAFEGUARDS,0.974824355971897,• The answer NA means that the paper poses no such risks.
SAFEGUARDS,0.9754098360655737,"• Released models that have a high risk for misuse or dual-use should be released with
necessary safeguards to allow for controlled use of the model, for example by requiring
that users adhere to usage guidelines or restrictions to access the model or implementing
safety filters."
SAFEGUARDS,0.9759953161592506,"• Datasets that have been scraped from the Internet could pose safety risks. The authors
should describe how they avoided releasing unsafe images."
SAFEGUARDS,0.9765807962529274,"• We recognize that providing effective safeguards is challenging, and many papers do
not require this, but we encourage authors to take this into account and make a best
faith effort."
LICENSES FOR EXISTING ASSETS,0.9771662763466042,12. Licenses for existing assets
LICENSES FOR EXISTING ASSETS,0.977751756440281,"Question: Are the creators or original owners of assets (e.g., code, data, models), used in
the paper, properly credited and are the license and terms of use explicitly mentioned and
properly respected?"
LICENSES FOR EXISTING ASSETS,0.9783372365339579,Answer: [NA]
LICENSES FOR EXISTING ASSETS,0.9789227166276346,Justification: This paper does not use existing assets.
LICENSES FOR EXISTING ASSETS,0.9795081967213115,Guidelines:
LICENSES FOR EXISTING ASSETS,0.9800936768149883,• The answer NA means that the paper does not use existing assets.
LICENSES FOR EXISTING ASSETS,0.9806791569086651,• The authors should cite the original paper that produced the code package or dataset.
LICENSES FOR EXISTING ASSETS,0.9812646370023419,"• The authors should state which version of the asset is used and, if possible, include a
URL."
LICENSES FOR EXISTING ASSETS,0.9818501170960188,"• The name of the license (e.g., CC-BY 4.0) should be included for each asset."
LICENSES FOR EXISTING ASSETS,0.9824355971896955,"• For scraped data from a particular source (e.g., website), the copyright and terms of
service of that source should be provided."
LICENSES FOR EXISTING ASSETS,0.9830210772833724,"• If assets are released, the license, copyright information, and terms of use in the
package should be provided. For popular datasets, paperswithcode.com/datasets
has curated licenses for some datasets. Their licensing guide can help determine the
license of a dataset."
LICENSES FOR EXISTING ASSETS,0.9836065573770492,"• For existing datasets that are re-packaged, both the original license and the license of
the derived asset (if it has changed) should be provided."
LICENSES FOR EXISTING ASSETS,0.984192037470726,"• If this information is not available online, the authors are encouraged to reach out to
the asset’s creators."
NEW ASSETS,0.9847775175644028,13. New Assets
NEW ASSETS,0.9853629976580797,"Question: Are new assets introduced in the paper well documented and is the documentation
provided alongside the assets?"
NEW ASSETS,0.9859484777517564,Answer: [NA]
NEW ASSETS,0.9865339578454333,Justification: This paper does not release new assets.
NEW ASSETS,0.9871194379391101,Guidelines:
NEW ASSETS,0.9877049180327869,• The answer NA means that the paper does not release new assets.
NEW ASSETS,0.9882903981264637,"• Researchers should communicate the details of the dataset/code/model as part of their
submissions via structured templates. This includes details about training, license,
limitations, etc."
NEW ASSETS,0.9888758782201406,"• The paper should discuss whether and how consent was obtained from people whose
asset is used."
NEW ASSETS,0.9894613583138173,"• At submission time, remember to anonymize your assets (if applicable). You can either
create an anonymized URL or include an anonymized zip file."
CROWDSOURCING AND RESEARCH WITH HUMAN SUBJECTS,0.9900468384074942,14. Crowdsourcing and Research with Human Subjects
CROWDSOURCING AND RESEARCH WITH HUMAN SUBJECTS,0.990632318501171,"Question: For crowdsourcing experiments and research with human subjects, does the paper
include the full text of instructions given to participants and screenshots, if applicable, as
well as details about compensation (if any)?"
CROWDSOURCING AND RESEARCH WITH HUMAN SUBJECTS,0.9912177985948478,Answer: [NA]
CROWDSOURCING AND RESEARCH WITH HUMAN SUBJECTS,0.9918032786885246,Justification: This paper does not involve crowdsourcing nor research with human subjects.
CROWDSOURCING AND RESEARCH WITH HUMAN SUBJECTS,0.9923887587822015,Guidelines:
CROWDSOURCING AND RESEARCH WITH HUMAN SUBJECTS,0.9929742388758782,"• The answer NA means that the paper does not involve crowdsourcing nor research with
human subjects."
CROWDSOURCING AND RESEARCH WITH HUMAN SUBJECTS,0.9935597189695551,"• Including this information in the supplemental material is fine, but if the main contribu-
tion of the paper involves human subjects, then as much detail as possible should be
included in the main paper."
CROWDSOURCING AND RESEARCH WITH HUMAN SUBJECTS,0.9941451990632318,"• According to the NeurIPS Code of Ethics, workers involved in data collection, curation,
or other labor should be paid at least the minimum wage in the country of the data
collector."
CROWDSOURCING AND RESEARCH WITH HUMAN SUBJECTS,0.9947306791569087,"15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human
Subjects"
CROWDSOURCING AND RESEARCH WITH HUMAN SUBJECTS,0.9953161592505855,"Question: Does the paper describe potential risks incurred by study participants, whether
such risks were disclosed to the subjects, and whether Institutional Review Board (IRB)
approvals (or an equivalent approval/review based on the requirements of your country or
institution) were obtained?"
CROWDSOURCING AND RESEARCH WITH HUMAN SUBJECTS,0.9959016393442623,Answer: [NA]
CROWDSOURCING AND RESEARCH WITH HUMAN SUBJECTS,0.9964871194379391,Justification: This paper does not involve crowdsourcing nor research with human subjects.
CROWDSOURCING AND RESEARCH WITH HUMAN SUBJECTS,0.997072599531616,Guidelines:
CROWDSOURCING AND RESEARCH WITH HUMAN SUBJECTS,0.9976580796252927,"• The answer NA means that the paper does not involve crowdsourcing nor research with
human subjects."
CROWDSOURCING AND RESEARCH WITH HUMAN SUBJECTS,0.9982435597189696,"• Depending on the country in which research is conducted, IRB approval (or equivalent)
may be required for any human subjects research. If you obtained IRB approval, you
should clearly state this in the paper."
CROWDSOURCING AND RESEARCH WITH HUMAN SUBJECTS,0.9988290398126464,"• We recognize that the procedures for this may vary significantly between institutions
and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the
guidelines for their institution."
CROWDSOURCING AND RESEARCH WITH HUMAN SUBJECTS,0.9994145199063232,"• For initial submissions, do not include any information that would break anonymity (if
applicable), such as the institution conducting the review."
