Section,Section Appearance Order,Paragraph
ABSTRACT,0.0,Abstract
ABSTRACT,0.001834862385321101,"While the success of large language models (LLMs) increases demand for machine-
generated text, current pay-per-token pricing schemes create a misalignment of
incentives known in economics as moral hazard: Text-generating agents have
strong incentive to cut costs by preferring a cheaper model over the cutting-edge
one, and this can be done ‚Äúbehind the scenes‚Äù since the agent performs inference
internally. In this work, we approach this issue from an economic perspective,
by proposing a pay-for-performance, contract-based framework for incentivizing
quality. We study a principal-agent game where the agent generates text using
costly inference, and the contract determines the principal‚Äôs payment for the text
according to an automated quality evaluation. Since standard contract theory is
inapplicable when internal inference costs are unknown, we introduce cost-robust
contracts. As our main theoretical contribution, we characterize optimal cost-robust
contracts through a direct correspondence to optimal composite hypothesis tests
from statistics, generalizing a result of Saig et al. (NeurIPS‚Äô23). We evaluate our
framework empirically by deriving contracts for a range of objectives and LLM
evaluation benchmarks, and find that cost-robust contracts sacrifice only a marginal
increase in objective value compared to their cost-aware counterparts."
INTRODUCTION,0.003669724770642202,"1
Introduction"
INTRODUCTION,0.005504587155963303,"Modern-day LLMs are showing increasingly impressive capabilities, and simultaneously becoming
increasingly costly. With rising success at handling complex tasks, conversational AI systems are
seeing ubiquitous usage across critical domains such as healthcare [19, 34], financial risk assessment
[27], and law [24, 35]. To achieve such levels of performance, contemporary LLM architectures
contain billions and even trillions of parameters, leading to a computational pipeline that requires
dedicated facilities and substantial energy to operate [33]."
INTRODUCTION,0.007339449541284404,"Due to the high computational requirements of modern LLMs, language generation tasks are typically
outsourced to commercial firms which generate text for a fee. These firms either maintain dedicated
infrastructure optimized for inference workloads, or act as intermediaries that facilitate access to
such resources. To address the tension between performance and computational costs, such firms
typically have multiple service options, each offering a different trade-off between model quality and
cost [1, 7, 36, 37]. Currently, the most common pricing scheme for such services is pay-per-token, in
which users agree in advance to pay a fixed rate for each token of text generated by the system [10]."
INTRODUCTION,0.009174311926605505,"While simple and intuitive, the pay-per-token pricing scheme creates a misalignment of economic
incentives between the firms and their consumers, known in the economic literature as moral hazard:
As inference is performed internally and a fixed price is agreed upon in advance, firms can strategically
increase their profit margin by generating text using a cheaper, lower-quality model. Due to the
stochastic nature of language generation, consumers may not be able to reliably determine the quality
of the model being used, exposing them to this kind of hazard."
INTRODUCTION,0.011009174311926606,"Moral hazard is especially prevalent in cases where the text generation task is complex, and so
evaluation is hard: Consider a scenario where a healthcare provider hires a firm to use conversational
AI for summarizing medical notes. As medical diagnosis is an intricate and critical task, the healthcare
provider wishes the medical summaries to be generated using the most advanced language model.
Under the pay-per-token pricing scheme, the healthcare provider agrees in advance to pay the firm a
fixed amount for each token generated. However, it is not hard to imagine that the firm may attempt
to increase profit margins by routing some of the summarization requests to cheaper language models,
instead of the most advanced one, without taking into account their purpose, and knowing that any
lower-quality results would be attributed to the stochastic nature of LLM inference."
INTRODUCTION,0.012844036697247707,"From pay-per-token to pay-for-performance.
In the economic literature, the canonical solution
to moral hazard problems is pay-for-performance, or P4P [17]. Instead of paying a fixed price for
any outcome, the parties agree in advance on a contract that specifies a differential payment scheme
‚Äì for example, agreeing in advance that the firm will receive higher pay when the generated text is
considered to be of higher quality. When designed correctly, contracts incentivize rational agents to
invest more effort, thus providing a way to align incentives. Interaction around contracts is modeled
as a principal-agent game, where the principal commits to a payment scheme, and the agent responds
by rationally selecting a utility-maximizing action. Within this framework, the principal seeks to
design a contract which satisfies some notion of optimality, such as requiring the least amount of
expected pay (‚Äúmin-pay contract‚Äù), or the lowest budget (‚Äúmin-budget contract‚Äù)."
INTRODUCTION,0.014678899082568808,"In this work, we extend the theory of contract design, and use it to design optimal pay-for-performance
pricing schemes for delegated text generation. Applying contract design to this setting requires us to
overcome the challenges of automated evaluation and cost uncertainty. The former stems from the
need for a scalable measure of performance to support pay-for-performance pricing, while the latter
arises from the principal‚Äôs uncertainty about the agent‚Äôs true internal cost structure, as commercial
firms often regard operational costs and implementation details as proprietary information."
INTRODUCTION,0.01651376146788991,"Our results.
To tackle automated evaluation, we draw upon recent advances in the LLM evaluation
literature [9], and propose a modular contract design framework which uses LLM evaluators as
subroutines. More specifically, upon receiving generated text, our pricing scheme is implemented
by evaluating the prompt-response pair using an automated evaluator and paying accordingly. The
choice of evaluator can be tailored to the task: optimal pricing schemes in code generation tasks, for
example, would rely on a pass/fail code evaluator [11, 4], whereas evaluation of linguistic tasks can
be achieved using an ‚ÄúLLM-as-a-judge‚Äù approach [41, 28, 25]. In our theoretical analysis, we show
that our framework is applicable even to intricate tasks where current evaluation methods are noisy
and undecisive, as the principal can compensate for the noise by paying more (Proposition 1)."
INTRODUCTION,0.01834862385321101,"To address the challenge of cost uncertainty, we propose a new notion of cost-robust contracts,
which are pay-for-performance schemes guaranteed to incentivize effort even when the internal cost
structure is uncertain. Our main theoretical contribution is a statistical characterization of optimal
cost-robust contracts (Theorem 1): We prove a direct correspondence between optimal cost-robust
contracts and statistical hypothesis tests by showing that the min-budget and min-pay contract
objectives correspond to minimax risk functions of composite hypothesis tests (Type-1+Type-2
errors and FP/TP, respectively). This significantly generalizes a recent result by Saig et al. [31]
to arbitrary action spaces and multiple optimality objectives. The statistical connection provides
intuition and interpretation for numerical results, and the applicability to multiple objectives allows
system designers to accommodate different business requirements. Intriguingly, the relation between
the optimal contract and the optimal statistical risk have the same functional form in both objectives
(min-budget and min-pay). Moreover, multiplying optimal hypothesis tests by a constant whose value
depends only on the statistical risk yields approximately-optimal contracts (Theorem 2)."
INTRODUCTION,0.02018348623853211,"Finally, we evaluate the empirical performance of cost-robust contracts by analyzing LLM evaluation
benchmarks for two families of tasks. In the first experiment, we compare the performance of
two-outcome contracts across code generation tasks with varying difficulty; results show that what
determines the pricing scheme is the relative success rates of the models, not the task difficulty. In the
second experiment, we compute multi-outcome contracts for an intricate conversational task evaluated
via LLM-as-a-judge. Numerical results show that the optimal monotone cost-robust pricing scheme
has an intuitive 3-level structure: pay nothing if the quality is poor, pay extra if it is exceptional, and
pay a fixed baseline otherwise. We show our framework‚Äôs flexibility by providing a comprehensive
comparison across various contract objectives and simplicity constraints."
INTRODUCTION,0.022018348623853212,"Principal
Agent"
INTRODUCTION,0.023853211009174313,Automated
INTRODUCTION,0.025688073394495414,Evaluator
INTRODUCTION,0.027522935779816515,Choose text generator ùëî‚àºùúéùë°
INTRODUCTION,0.029357798165137616,"Generate response ùúî! = ùëîùúî"""
INTRODUCTION,0.031192660550458717,at cost ùõº# ùúî!
INTRODUCTION,0.03302752293577982,"Evaluate quality ùëûùúî"",ùúî! ‚ààùëö"
INTRODUCTION,0.03486238532110092,"Text 
Generators"
B,0.03669724770642202,"7B
13B
70B"
B,0.03853211009174312,"Prompt ùúî"""
B,0.04036697247706422,Response ùúî!
B,0.04220183486238532,Payment ùë°(ùëû)
B,0.044036697247706424,Interaction
B,0.045871559633027525,"Commit to pay ùë°: ùëö‚Üí‚Ñù$"""
B,0.047706422018348627,Receive ùë°ùëû monetary units
B,0.04954128440366973,"Figure 1: Interaction protocol. Principal commits to pay t(q) monetary units according to response
quality, and sends prompt œâ0; Agent selects text generator g ‚àºœÉ(t), and generates response
œâR = g(œâ0) at cost Œ±g|œâR|; Principal evaluates response quality q(œâ0, œâR), and pays accordingly."
RELATED WORK,0.05137614678899083,"1.1
Related work
Our main technical tool is algorithmic contract design (see [5, 20, 14] and subsequent works). Many
works in this area address distributional robustness, e.g. [8], [14] which also studies approximation
guarantees of simple contracts, and the recent [3] which presents a distributionally-robust contract
design approach for delegation of learning. However, to our knowledge, none address cost-robustness.
Connections between contract design and statistics have long been known to exist at a high level
(see, e.g., [32]), and were recently explored by [6] in the context of adverse selection, and [31] for
two-action min-budget contract. From a technical standpoint, our work is closest to [31], which only
proves the statistical connection for the special case of two-action min-budget contracts. Finally,
we note that our cost-robustness framework is general, and our characterization results may be of
independent interest. Additional related work appears in Appendix A."
RELATED WORK,0.05321100917431193,"2
Problem Setting: Contract Design for Text Generation"
RELATED WORK,0.05504587155963303,"We study the delegation of a text generation task from a strategic principal to agent, with a payment
scheme designed to incentivize quality. Here we formulate the problem as a contract design instance."
RELATED WORK,0.05688073394495413,"2.1
Quality text generation (agent‚Äôs perspective)
The core of our setting is a standard language generation task. Let V be a vocabulary of tokens,
and denote the set of all token sequences by V ‚àó. A text generator g : V ‚àó‚ÜíV ‚àóis a mapping from
a textual prompt œâ0 to a response œâR. We assume that prompts are sampled from a distribution
œâ0 ‚àºD ‚àà‚àÜ(V ‚àó), and denote by Dg the distribution of prompt-response pairs, where the prompt
is sampled from D and the response is generated by generator g. Given a prompt and generated
response, a quality evaluator is a function q : V ‚àó√ó V ‚àó‚Üí[m] which scores the response on a scale
of 1, . . . , m. We use Fg to denote the distribution over scores [m] induced by applying the quality
evaluator to a random pair (œâ0, œâR) ‚àºDg, and Fgj to denote the probability of score j ‚àà[m]."
RELATED WORK,0.05871559633027523,"The agent has access to a collection of possible text generators G = {g1, . . . , gn}, which we also
refer to for convenience by their indices [n]. Each model gi ‚ààG is associated with a model-dependent
cost Œ±i ‚â•0, which is the average cost (borne by the agent) of generating a single token from gi.
For convenience we write Di = Dgi and Fi = Fgi. Denote by ci = Œ±iE(œâ0,œâR)‚àºDi[|œâR|] the
expected cost of using the ith generator. We assume w.l.o.g. that the costs are non-decreasing, i.e.,
c1 ‚â§¬∑ ¬∑ ¬∑ ‚â§cn, and that they reflect the inherent quality of the models. In contract design terminology,
the generators are the agent‚Äôs possible actions. The agent can choose a single (pure) action, or a
distribution over text generators œÉ ‚àà‚àÜ(G) known in game theory as a mixed action.1 The cost c1 of
the lowest-cost action is the agent‚Äôs ‚Äúopportunity cost‚Äù, and unless stated otherwise c1 = 0.2"
RELATED WORK,0.060550458715596334,"As an abstract contract design problem.
The above setting is precisely a contract design setting
with n actions and m outcomes [21]. Such a setting is defined by the pair (F, c), where F is an n√óm
matrix with distribution Fi as its ith row for every i (known as the distribution matrix), and where c
is a vector of costs. For every action i, Fi and ci are the outcome distribution and cost, respectively."
RELATED WORK,0.062385321100917435,"1For example, the agent can generate responses using a larger model for 95% of requests, and apply the
smaller model for the remaining 5%, corresponding to the mixed action œÉ = (0.05, 0.95).
2Choosing the first action can be thought of as opting out of the task at cost c1. If c1 = 0 then the agent
participates in the contract only if the expected utility is non-negative ‚Äì a property known as individual rationality."
RELATED WORK,0.06422018348623854,"Pay-for-performance and agent‚Äôs utility.
To incentivize high quality text generation, the principal
commits in advance to a pay-for-performance contract, which specifies the amount of payment to
the agent for generating a response with a certain quality. More formally, given a quality evaluator q
with an output scale 1, . . . , m, a contract t : [m] ‚ÜíR‚â•0 is a mapping from the estimated quality to
the size of monetary transfer. Note that transfers are non-negative; this standard restriction is known
as limited liability, and it mirrors the fact that when a principal hires an agent to perform a task,
money flows in one way only (from principal to agent, and not vice versa). If transfers are increasing
with score, we say t is a monotone contract. Monotonicity is not without loss of generality, but is a
desirable property as monotone contracts are generally simpler and easier to explain [14]."
RELATED WORK,0.06605504587155964,"Given a contract t ‚ààRm
‚â•0 and an action œÉ ‚àà‚àÜ(G), the agent‚Äôs expected utility uA(t; œÉ) (a.k.a. the
agent‚Äôs profit) is the difference between the expected reward and the expected cost of text generation:
uA(t; œÉ) = Egi‚àºœÉ;(œâ0,œâR)‚àºDi[t(q(œâ0, œâR)) ‚àíŒ±i|œâR|] = Egi‚àºœÉ;j‚àºFi[t(j) ‚àíci],"
RELATED WORK,0.06788990825688074,"where (œâ0, œâR) ‚àºDi are the prompt and generated response, t(q(œâ0, œâR)) is the payment transferred
to the agent based on the quality of response, and Œ±i|œâR| is the agent‚Äôs cost of generating the response.
We assume the agent is rational and therefore selects, when facing contract t, an action œÉ(t) which
maximizes their expected profit (also known as the agent‚Äôs best response):
œÉ(t) ‚ààarg max
œÉ‚àà‚àÜ(G)
uA(t; œÉ)."
RELATED WORK,0.06972477064220184,"As is standard in contract theory, we assume the agent breaks ties consistently and in a way that
agrees with the principal‚Äôs preferences.3 The interaction model is summarized in Figure 1."
RELATED WORK,0.07155963302752294,"2.2
Designing the contract (principal‚Äôs perspective)
We assume that the principal seeks to obtain text generated by the model gn ‚ààG, the most advanced
model with the (strictly) highest associated cost cn > cn‚àí1. We refer to gn as the target action,
i.e. the action which the principal wishes to incentivize. Taking the role of the principal, our goal
is to design the ‚Äúbest‚Äù contract t‚àóthat incentivizes the agent to generate responses using the target
model gn. This is formalized by the following optimization problem:
t‚àó= arg min
t‚ààRm
‚â•0
‚à•t‚à•
s.t.
œÉ(t) = Œ¥gn,
(1)"
RELATED WORK,0.07339449541284404,"where ‚à•t‚à•is a norm of t representing the principal‚Äôs economic objective (see below), and Œ¥gn is a
point-mass distribution over text generators, supported by the target generator gn. We denote the set
of contracts incentivizing action gn by T (gn) =

t ‚ààRm
‚â•0 | œÉ(t) = Œ¥gn
	
, and further note that the
assumption of a single target action serves as a foundational step towards more complex contract
design scenarios (see Appendix B.1)."
RELATED WORK,0.07522935779816514,"Information structure (who knows what).
The agent‚Äôs available actions G and the possible scores
[m] are known to both players. As the quality distributions Fi can be learned from past data, we
assume they are known to both principal and agent. As the costs of inference {Œ±i} depend on internal
implementation details, we assume the costs are known to the agent but uncertain to the principal. We
thus aim for a contract optimization framework which maximizes different types of objectives, and
allows for optimization of t even when the costs incurred by the agent are uncertain to the principal."
RELATED WORK,0.07706422018348624,"Objectives: min-budget, min-pay and min-variance contracts.
In eq. (1), different norms ‚à•t‚à•
correspond to different possible optimization goals of the principal: For example, a contract is
min-pay if it incentivizes the target action using minimum total expected payment Ej‚àºFn[t(j)]
among all contracts in T (gn) [14]; In eq. (1), this corresponds to the ‚Ñì1 norm weighted by the
quality distribution of the target action. Similarly, a contract is min-budget if it incentivizes the
target action using minimum budget Bt = maxj t(j) [31]; In eq. (1), this corresponds to the ‚Ñì‚àû
norm. Additionally, we also consider a natural min-variance objective, which was not previously
studied to our knowledge. A min-variance contract minimizes the objective Var(t), corresponding to
a weighted ‚Ñì2 norm. Optimal contracts for these objectives can be computed in polynomial time by
solving a corresponding linear or convex-quadratic program (see Appendix D.1). We also consider
approximately-optimal contracts:"
RELATED WORK,0.07889908256880734,"Definition 1 (Œ∑-optimal contract). Let Œ∑ ‚â•1. For contract setting (F, c), let t‚àó‚ààT (gn) be the
optimal contract with respect to objective ‚à•t‚à•. A contract t ‚ààT (gn) is Œ∑-optimal if ‚à•t‚à•‚â§Œ∑ ‚à•t‚àó‚à•."
RELATED WORK,0.08073394495412844,"3In our context, this means that if action gn is a best response for the agent, then the agent will choose œÉ(t)
that plays gn with probability 1 (see Section 2.2)."
HYPOTHESIS TESTING AND CONTRACTS,0.08256880733944955,"3
Hypothesis Testing and Contracts"
HYPOTHESIS TESTING AND CONTRACTS,0.08440366972477065,This section sets the stage for connecting cost-robust contracts to statistical tests in Section 4.
"PRELIMINARIES
SIMPLE HYPOTHESIS TESTS",0.08623853211009175,"3.1
Preliminaries
Simple hypothesis tests
Consider two distributions F0, F1 ‚àà‚àÜ([m]). Given j ‚àà[m] which is
sampled from either F0 or F1, a hypothesis test is a function œà : [m] ‚Üí[0, 1] which outputs 1 if j
is likely to have been sampled from F1, and 0 otherwise4. In the hypothesis testing literature, F0
is a simple null hypothesis, and F1 is a simple alternative hypothesis. Performance measures of
hypothesis tests are derived from the probabilities of making different types of errors: For a test œà,
the probability of false positives FP = Pm
j=1 F0,jœàj measures the rate of type-1 errors; This is when
the test rejects the null hypothesis despite the sample being drawn from F0. Similarly, the probability
of false negatives FN = Pm
j=1 F1,j(1 ‚àíœàj) measures the rate of type-2 errors, i.e. when the test
does not reject the null hypothesis despite the sample being drawn from F1. We also denote the true
positives by TP = Pm
j=1 F1,jœàj; TP is also known as the test‚Äôs power, and equal to 1 ‚àíFN."
"PRELIMINARIES
SIMPLE HYPOTHESIS TESTS",0.08807339449541285,"Composite hypothesis tests.
Consider now two sets of distributions {Fk}n‚àí1
k=1, {Fn}, where
Fi ‚àà‚àÜ([m]) for all i ‚àà[n]. In hypothesis testing terms, {Fk}n‚àí1
k=1 is a composite null hypothesis.
{Fn} is a simple alternative hypothesis as before, and a composite hypothesis test œà outputs 1 if
a given j ‚àà[m] is likely to have been sampled from Fn. To define performance in the composite
case, we denote by FPk = Pm
j=1 Fk,jœàj the standard type-1 error between distributions Fk and Fn.
As the alternative hypothesis is still simple, definitions of FN and TP remain as before, using Fn
as the reference distribution. To measure the performance of hypothesis tests, it is common to take
a worst-case approach, and define the composite FP as the standard type-1 error FPk against the
worst-case distribution Fk in the null hypothesis set."
RISK AND MINIMAX TESTS,0.08990825688073395,"3.2
Risk and minimax tests
To formalize the notion of worst-case error, let œà be a composite hypothesis test for {Fk}n‚àí1
k=1, {Fn}.
For any k ‚àà[n ‚àí1], define a risk function rk : [0, 1]m ‚ÜíR‚â•0 to be a mapping from œà to a risk
score, treating œà as a simple hypothesis test between distributions Fk and Fn. A natural way of
measuring risk is by combining the test‚Äôs two error types. One measure is the sum of errors, denoted
by Rk(œà) := FPk + FN. A classic result by Neyman and Pearson shows that Rk(œà) is minimized
by the likelihood-ratio test for any fixed k [29]. Another measure is the ratio of false positives to
true positives, denoted by œÅk(œà) := FPk / TP. To generalize a risk measure rk to a composite
hypothesis test, we adopt the worst-case approach and define r(œà) := maxk‚àà[n‚àí1]{rk(œà)}. Thus,
R(œà) = maxk‚àà[n‚àí1]{Rk} = FP + FN, and œÅ(œà) = maxk‚àà[n‚àí1]{œÅk} = FP / TP."
RISK AND MINIMAX TESTS,0.09174311926605505,"Definition 2 (Minimax hypothesis test). Let œà‚àó
F be a composite hypothesis test for {Fk}n‚àí1
k=1, {Fn},
and fix a risk function rk. The test œà‚àó
F is minimax optimal w.r.t. r if it minimizes the worst-case risk:"
RISK AND MINIMAX TESTS,0.09357798165137615,"œà‚àó
F = arg min
œà‚àà[0,1]m max
k‚àà[n‚àí1]{rk(œà)} = arg min
œà‚àà[0,1]m{r(œà)}."
RISK AND MINIMAX TESTS,0.09541284403669725,"The minimax sum-optimal test and minimax ratio-optimal test are the minimax optimal tests with
respect to the sum R and the ratio œÅ, respectively."
RISK AND MINIMAX TESTS,0.09724770642201835,"Observe that the optimal risk of both types of tests is bounded by r(œà) ‚â§1, as the constant test
œàj = 0.5 satisfies R(œà) = œÅ(œà) = 1. We assume at least a small difference between the hypotheses,
such that r(œà) < 1. This allows us to define contracts based on these tests."
FROM TESTS TO CONTRACTS AND BACK,0.09908256880733946,"3.3
From tests to contracts and back
We derive ‚Äústatistical‚Äù contracts from hypothesis tests by multiplying them by a function of the risk,
and derive ‚Äúcontractual‚Äù tests from contracts by normalizing them: Consider a contract setting (F, c),
with either known costs and b := cn ‚àíc1, or a cost upper bound b ‚â•cn ‚àíc1. Fix a risk function r
and a corresponding budget function Br(œà, b) ‚ààR."
FROM TESTS TO CONTRACTS AND BACK,0.10091743119266056,"‚Ä¢ Test-to-contract: Let œà be a test for sets {Fk}n‚àí1
k=1, {Fn} with budget Br(œà, b) ‚àà[0, ‚àû). The
corresponding statistical contract t(r,œà) is Br(œà, b) ¬∑ œà."
FROM TESTS TO CONTRACTS AND BACK,0.10275229357798166,‚Ä¢ Contract-to-test: Let t be a contract. The corresponding contractual test œàt is t/ ‚à•t‚à•‚àû.
FROM TESTS TO CONTRACTS AND BACK,0.10458715596330276,"4When œà(j) is fractional, we consider the output of the test to be 1 with probability œà(j), and 0 otherwise."
FROM TESTS TO CONTRACTS AND BACK,0.10642201834862386,"Economic objective
Objective function
Statistical objective
Risk function"
FROM TESTS TO CONTRACTS AND BACK,0.10825688073394496,"Min-budget
maxj‚àà[m] tj
FP + FN
PrFk(œà = 1) + PrFn(œà = 0)"
FROM TESTS TO CONTRACTS AND BACK,0.11009174311926606,"Min-pay
Ej‚àºFn[tj]
FP / TP
PrFk (œà=1)
PrFn(œà=1)"
FROM TESTS TO CONTRACTS AND BACK,0.11192660550458716,"Table 1: Correspondence between cost-robust contracts and hypothesis tests, arising from Theorem 1."
FROM TESTS TO CONTRACTS AND BACK,0.11376146788990826,We are interested in the following statistical contracts corresponding to the tests from Definition 2:
FROM TESTS TO CONTRACTS AND BACK,0.11559633027522936,"Definition 3. Consider a contract setting (F, c), with either known costs and b := cn ‚àíc1, or a
cost upper bound b ‚â•cn ‚àíc1. The sum-optimal statistical contract B‚àó
R(b) ¬∑ œà‚àó
R is obtained from the
minimax sum-optimal test œà‚àó
R multiplied by B‚àó
R(b) :=
b
1‚àíR(œà‚àó
R). The ratio-optimal statistical contract"
FROM TESTS TO CONTRACTS AND BACK,0.11743119266055047,"B‚àó
œÅ(b)¬∑œà‚àó
œÅ is obtained from the minimax ratio-optimal test œà‚àó
œÅ multiplied by B‚àó
œÅ(b) :=
b
TP(œà‚àóœÅ)‚àíFP(œà‚àóœÅ)."
COST-ROBUST CONTRACTS,0.11926605504587157,"4
Cost-Robust Contracts"
COST-ROBUST CONTRACTS,0.12110091743119267,"In this section we state and prove our main result ‚Äì a direct connection between composite hypothesis
testing and cost-robust contracts. Consider a contract design setting (F, c) with increasing costs
c1 ‚â§¬∑ ¬∑ ¬∑ ‚â§cn‚àí1 < cn, where n is the target action. In real-world settings, the principal may not
have full knowledge of the agent‚Äôs internal cost structure. We model this by assuming the principal is
oblivious to the precise costs, but knows an upper bound b ‚â•cn ‚àíc1. We are interested in robust
contracts that incentivize the target action for any cost vector compatible with the upper bound:"
COST-ROBUST CONTRACTS,0.12293577981651377,"Definition 4 (Cost-robust contracts). Consider a distribution matrix F and a bound b > 0 on the
costs. Let Cb be an ambiguity set of all increasing cost vectors c such that cn ‚àíc1 ‚â§b. A contract is
b-cost-robust if it implements action n for any cost vector c ‚ààCb."
COST-ROBUST CONTRACTS,0.12477064220183487,"Informally, our main theoretical result shows that optimal cost-robust contracts are optimal hypothesis
tests up to scaling, where the scaler depends on the risk measure which the test optimizes. Our
approach can be applied to several notions of optimality, and each optimality criterion for contracts
corresponds to a different optimality criterion for hypothesis tests. Specifically, we derive the
correspondence for min-budget and min-pay optimality of contracts. Formally (recall Definition 3):"
COST-ROBUST CONTRACTS,0.12660550458715597,"Theorem 1 (Optimal cost-robust contracts). For every contract setting with distribution matrix
F and an upper bound b on the (unknown) costs, let œà‚àó
R (resp., œà‚àó
œÅ) be the minimax sum-optimal
(ratio-optimal) test with risk R‚àó(œÅ‚àó) among all composite hypothesis tests for {Fk}n‚àí1
k=1, {Fn}. Then:"
COST-ROBUST CONTRACTS,0.12844036697247707,"‚Ä¢ The sum-optimal statistical contract B‚àó
R(b) ¬∑ œà‚àó
R is b-cost-robust with budget b/(1 ‚àíR‚àó), and has
the lowest budget among all b-cost-robust contracts."
COST-ROBUST CONTRACTS,0.13027522935779817,"‚Ä¢ The ratio-optimal statistical contract B‚àó
œÅ(b) ¬∑ œà‚àó
œÅ is b-cost-robust with expected total payment
b/(1 ‚àíœÅ‚àó), and has the lowest expected total payment among all b-cost-robust contracts."
COST-ROBUST CONTRACTS,0.13211009174311927,"Table 1 summarizes the contract vs. test equivalences arising from Theorem 1. In the special case
of contract design settings combining (i) a binary action space (n = 2), (ii) a zero-cost action
(c1 = 0), and (iii) a tight upper bound (b = c2), the first half of Theorem 1 recovers a recently-
discovered correspondence between hypothesis testing and (non-cost-robust) two-action min-budget
contracts [31, Theorem 2]. Theorem 1 is more general since it applies to any number of actions
as well as to the standard min-pay objective. Thus, Theorem 1 can also be seen as extending the
interpretable format of optimal contracts for binary-action settings beyond two actions."
COST-ROBUST CONTRACTS,0.13394495412844037,"In Appendix D.2, we derive our main lemmas, which are used in Appendix D.4 to prove Theorem 1.
Our proofs rely on two main assumptions. The first assumption is that the cost uncertainty bounds are
known; as these bounds become looser, the required budget and expected payout increase linearly. The
second assumption is that the contract design problem is implementable ‚Äì i.e., that there exists some
contract incentivizing the target action. In particular, implementability holds when text generated
by the target model has the highest quality in expectation (see Appendix C.1). Generally, a contract
design problem is implementable when the observed quality distribution of the target model can‚Äôt be
emulated by a combination of alternative models at a lower cost (see, e.g., [14])."
ADDITIONAL PROPERTIES OF OPTIMAL COST-ROBUST CONTRACTS,0.13577981651376148,"4.1
Additional properties of optimal cost-robust contracts"
ADDITIONAL PROPERTIES OF OPTIMAL COST-ROBUST CONTRACTS,0.13761467889908258,"In this section, we focus for concreteness on min-budget cost-robust contracts, and establish their
approximation guarantees as well as their functional form under structural assumptions. First, in
analogy to [14], it is natural to examine the approximation guarantees of cost-robust contracts. We
show (recall Definition 1):"
ADDITIONAL PROPERTIES OF OPTIMAL COST-ROBUST CONTRACTS,0.13944954128440368,"Theorem 2 (Approximation guarantees). For every contract setting (F, c), let 0 < a ‚â§b be a lower
and upper bound on the difference between the target cost and any other cost, i.e., (cn ‚àíci) ‚àà[a, b]
for all i ‚àà[n ‚àí1]. Then the min-budget b-cost-robust contract for (F, c) is b"
ADDITIONAL PROPERTIES OF OPTIMAL COST-ROBUST CONTRACTS,0.14128440366972478,"a-optimal with respect to
the budget objective ‚à•t‚à•‚àû, and the approximation ratio b"
ADDITIONAL PROPERTIES OF OPTIMAL COST-ROBUST CONTRACTS,0.14311926605504588,a is tight.
ADDITIONAL PROPERTIES OF OPTIMAL COST-ROBUST CONTRACTS,0.14495412844036698,"Proof in Appendix D.5. As a corollary, combining this result with Theorem 1 shows that statistical
contracts are approximately optimal in the global sense: For any contract setting (F, c) with corre-
sponding minimax sum-optimal hypothesis test œà‚àó
R, the contract t = cn‚àíc1"
ADDITIONAL PROPERTIES OF OPTIMAL COST-ROBUST CONTRACTS,0.14678899082568808,"1‚àíR‚àóœà‚àó
R is Œ∑-optimal with
respect to the budget metric and Œ∑ =
cn‚àíc1
cn‚àícn‚àí1 . We also note that similar results hold for min-pay
cost-robust contracts."
ADDITIONAL PROPERTIES OF OPTIMAL COST-ROBUST CONTRACTS,0.14862385321100918,"We next turn to consider the functional form of optimal cost-robust contracts (i.e., why their payments
are as they are). One of the criticisms of optimal (non-robust) contracts is that the payments
seem arbitrary and opaque. Compared to this, cost-robust contracts are more transparent and
explainable. We show two additional results regarding their format, leveraging the connection to
minimax hypothesis testing."
ADDITIONAL PROPERTIES OF OPTIMAL COST-ROBUST CONTRACTS,0.15045871559633028,"The first result explains the budget: By the minimax principle, there is a ‚Äúleast favorable distribution‚Äù
(to use terminology from statistics) or, equivalently, a mixed strategy over the rows of F (to use
terminology from game theory) such that no test can achieve for it better risk than the minimax
risk R‚àó. We show that the budget of the optimal cost-robust contract can be interpreted using this
distribution. Formally, let ‚à•F1 ‚àíF2‚à•TV be the total variation distance between distributions F1, F2,
then the budget is as follows (see Appendix D.5 for a proof):"
ADDITIONAL PROPERTIES OF OPTIMAL COST-ROBUST CONTRACTS,0.15229357798165138,"Proposition 1 (Distribution distance determines budget). For every contract setting with distribution
matrix F and spread of costs cn ‚àíc1 ‚â§b, the minimum budget of a b-cost-robust contract is
maxŒª‚àà‚àÜ([n‚àí1]) b/
Fn ‚àíP"
ADDITIONAL PROPERTIES OF OPTIMAL COST-ROBUST CONTRACTS,0.15412844036697249,"i<n ŒªiFi

TV ."
ADDITIONAL PROPERTIES OF OPTIMAL COST-ROBUST CONTRACTS,0.1559633027522936,The distribution P
ADDITIONAL PROPERTIES OF OPTIMAL COST-ROBUST CONTRACTS,0.1577981651376147,"i<n ŒªiFi that maximizes the above expression is the least favorable one. Intuitively,
the closer it is to the target distribution Fn, the larger the budget needed for the agent to distinguish
among them and prefer the target action. We also note that the required budget approaches infinity
when the worst-case distribution distance approaches zero, coinciding with the implementability
characterization known from the literature (see Appendix C.1). The second set of results adds
standard structure to the distribution matrix F to obtain even simpler contract formats:"
ADDITIONAL PROPERTIES OF OPTIMAL COST-ROBUST CONTRACTS,0.1596330275229358,"Definition 5 (Monotone Likelihood Ratio (MLR)). A distribution matrix F satisfies MLR if Fi,j/Fi‚Ä≤,j
is monotonically increasing in j ‚àà[m] for all i > i‚Ä≤."
ADDITIONAL PROPERTIES OF OPTIMAL COST-ROBUST CONTRACTS,0.1614678899082569,"Intuitively, if F satisfies MLR, then the higher the outcome j, the more likely it is to origin from a
more costly distribution Fi than from Fi‚Ä≤ (recall that costs ci are increasing in i). Consider minimax
composite hypothesis tests for {Fk}n‚àí1
k=1, {Fn}; if F does not satisfy MLR, optimal such tests may
require randomization (i.e., œàj ‚àà(0, 1) for some outcome j) and/or non-monotonicity (i.e. œàj > œàj‚Ä≤
for some pair of outcomes j < j‚Ä≤). However, if MLR holds for F, then nice properties (determinism,
monotonicity) hold for minimax tests (e.g., by the Karlin-Rubin theorem [29]), and consequently
also for cost-robust contracts (see Appendix D.6 for a proof):"
ADDITIONAL PROPERTIES OF OPTIMAL COST-ROBUST CONTRACTS,0.163302752293578,"Proposition 2 (MLR induces threshold simplicity). For every contract setting with distribution matrix
F that satisfies MLR, and with spread of costs cn ‚àíc1 ‚â§b, the min-budget b-cost-robust contract for
F is a monotone threshold contract, which pays full budget to the agent for every outcome j above
some threshold j‚àó."
ADDITIONAL PROPERTIES OF OPTIMAL COST-ROBUST CONTRACTS,0.1651376146788991,"For min-pay rather than min-budget, under MLR we get a monotone contract with a single positive
payment, which is optimal (see [14, Lemma 7]). Finally, we note that finding cost-robust min-budget
contracts with two levels of pay (‚Äúall-or-nothing‚Äù [31]) is computationally hard in the general case,
as the reduction by [31, Theorem 3] also applies in the cost-robust case (see Appendix D.8)."
B,0.1669724770642202,70B
B,0.1688073394495413,13B
B,0.1706422018348624,7B Model
B,0.1724770642201835,MBPP outcomes
B,0.1743119266055046,"0%
20%
40%
60%
pass@1"
B,0.1761467889908257,70B
B,0.1779816513761468,13B
B,0.1798165137614679,7B Model
B,0.181651376146789,HumanEval outcomes
B,0.1834862385321101,"cost-robust
cost-aware
Contract robustness 0 1 2 3 4"
B,0.1853211009174312,Payment for success
B,0.1871559633027523,CodeGen contracts
B,0.1889908256880734,"HEval
MBPP"
B,0.1908256880733945,1 2 3 4 5 6 7 8 9 10
B,0.1926605504587156,Quality score 0.0 0.1 0.2 0.3 0.4
B,0.1944954128440367,Probability
B,0.1963302752293578,MT-Bench outcomes
B,0.1981651376146789,"7B
13B
70B"
B,0.2,"1
2
3
4
5
6
7
8
9 10
Quality score 0.0 2.5 5.0 7.5 10.0 12.5"
B,0.2018348623853211,Payment
B,0.2036697247706422,MT-Bench contracts
B,0.20550458715596331,"min-budget
min-pay
min-variance"
B,0.20733944954128442,"Figure 2: Empirical evaluation results. (Left) Outcome distributions and optimal contracts for Code
Generation data, Section 5.1. (Right) Outcome distributions and optimal contracts for MT-Bench
data, Section 5.2. For the contracts plot, solid lines represent cost-robust contracts, dashed lines
represent cost-aware contracts, and dotted lines represent threshold contracts."
EMPIRICAL EVALUATION,0.20917431192660552,"5
Empirical Evaluation"
EMPIRICAL EVALUATION,0.21100917431192662,"We evaluate the empirical performance of our cost-robust contracts using LLM evaluation benchmarks.
We compute binary and multi-outcome contracts for two distinct families of tasks based on evaluation
scores from known benchmark datasets, optimizing the contract objectives set forth in Section 2.2.
Our action space consists of the 7B, 13B, and 70B parameter model versions of the open-source
Llama2 and CodeLlama LLMs [37, 30], which share the same architecture and hence similar inference
costs. The benchmark data is used to create an empirical outcome distribution for each LLM in the
action space. In both cases, contract optimization targets of the largest model variant (70B), which is
the most performant and costly. Implementation details are provided in Appendix E.3, and code is
available at: https://github.com/edensaig/llm-contracts."
EMPIRICAL EVALUATION,0.21284403669724772,"Cost estimation.
To estimate the inference costs of the language models, we leverage their
open-source availability. We use energy consumption data from the popular Hugging Face LLM-
Performance Leaderboard [22, 23], which we then convert to dollar values using conservative cost
estimates (see Appendix E.1). As a first-order assumption of cost uncertainty, we assume that infer-
ence costs of alternative generators are bounded from below by the cost of the most energy-efficient
alternative model (c1), and bounded from above by the cost of the alternative model with the highest
energy consumption (cn‚àí1)."
EMPIRICAL EVALUATION,0.21467889908256882,"5.1
Binary-outcome contracts across tasks (code generation)
We begin by analyzing a simple contract design setting across benchmarks of varying difficulties.
We use the LLM task of code-generation which has m = 2 outcomes: pass or fail. The analysis of a
binary outcome space is motivated by the following theoretical property:"
EMPIRICAL EVALUATION,0.21651376146788992,"Proposition 3. For any contract design problem with m = 2 where the most-costly (target) action
has the highest pass rate, the optimal contract is identical for all optimality objectives (min-pay,
min-budget, and min-variance). Moreover, the optimal contract satisfies tpass > 0, tfail = 0."
EMPIRICAL EVALUATION,0.21834862385321102,"Proof in Appendix D.7. Proposition 3 allows us to compare performance across different evaluation
tasks without being sensitive to the choice of contract objective and constraints such as monotonicity."
EMPIRICAL EVALUATION,0.22018348623853212,"Datasets.
We use evaluation data from two distinct benchmarks, which represent differing degrees
of task difficulty. The Mostly Basic Programming Problems (MBPP) benchmark [4] contains 974
entry-level programming problems with 3 unit tests per problem. The HumanEval benchmark [11]
consists of 164 hand-written functional programming problems. Included in each programming
problem is a function signature, a doc-string prompt, and unit tests. There is an average of 7.7 unit
tests per problem, and the overall score is based on a pass/fail evaluation of the responses. For
each of these benchmarks, we create a binary-outcome (m = 2) contract from the pass rates of
the CodeLlama model family (CodeLlama-{7B,13B,70B}). We use the pass@1 values from the
CodeLlama paper [30] (success rates for a single response), as they capture a setting where the agent
gets paid for each response."
EMPIRICAL EVALUATION,0.22201834862385322,"Cost-aware
Cost-robust"
EMPIRICAL EVALUATION,0.22385321100917432,"E[t]
Budget
stdev(t)
E[t]
Budget
stdev(t)"
EMPIRICAL EVALUATION,0.22568807339449543,"Min-Pay
4.19
10.6
5.2
4.82 (+15%)
12.2
5.98
Min-Budget
4.73
6.16
1.71
5.48
6.63 (+1.7%)
1.83
Min-Variance
4.73
6.16
1.71
5.48
6.63
1.83 (+6.7%)"
EMPIRICAL EVALUATION,0.22752293577981653,"Table 2: Monotone contracts curated on the MT-bench dataset. Costs are in units of $/1M tokens,
and are order-of-magnitude estimates based on typical prices of electricity (see Appendix E.1). The
numbers in bold denote the relative increase from the optimal monotone contract that the cost-
robustness sacrifices in each setting. The percentages denote the price of cost-robustness: how much
the objective values increase relative to the cost-aware setting."
EMPIRICAL EVALUATION,0.22935779816513763,"Task difficulty and optimal pay.
Figure 2 (Left-Center) presents optimal cost-aware and cost-
robust contracts for code-generation. We observe that cost uncertainty entails a consistent increase in
payment across tasks: For MBPP, we observe a 14.9% increase, and for HumanEval we observe a
similar 14.7% increase. Additionally, while the MBPP task is easier than HumanEval (i.e. character-
ized by higher pass rates), the resulting contracts for MBPP are more expensive. This demonstrates
the fundamental connection between contracts and statistics: In MBPP, there is smaller gap between
the performance of the target model (70B) and the performance of the alternatives. This makes the
highest-performing model harder to detect, increasing the cost of the contract. The required payments
in this case thus depend on the absolute differences between pass rates, rather than absolute values."
MULTI-OUTCOME CONTRACTS,0.23119266055045873,"5.2
Multi-outcome contracts
To understand the relation between different optimality objectives and constraints, we analyze optimal
contracts in an expressive multi-outcome (m = 10) environment based on MT-Bench."
MULTI-OUTCOME CONTRACTS,0.23302752293577983,"Dataset.
The MT-Bench benchmark [41] is designed to evaluate the conversational and instruction-
following abilities of LLMs in multi-turn (MT) conversational settings. The benchmark consists of
80 prompts in the format of multi-turn questions, and the evaluation dataset includes LLM-as-a-judge
evaluations on (prompt,response) pairs from various models, using GPT-4 as the judge. In the dataset,
each (prompt,response) pair is given discrete response quality scores in the range 1, . . . , 10. These
scores define our contract outcome space. In consistence with the analysis in section 5.1, we use
the outcome distributions of (Llama-2-{7B,13B,70B}-chat), and target the 70B model. Outcome
distributions for the MT-Bench dataset are presented in Figure 2."
MULTI-OUTCOME CONTRACTS,0.23486238532110093,"Simple optimal contracts.
In practical applications, contracts with a simple functional form are
often preferred since they are easier to comprehend. We compute optimal contracts with two types of
simplicity constraints: monotone contracts (weakly increasing payout), and threshold contracts (full
budget for all scores above a threshold, and zero otherwise). Results are presented in Figure 2 (Right),
and Table 2. For the min-budget and min-variance criteria, monotone cost-robust contracts have
an intuitive three-level structure: Zero pay for outputs with the lowest quality score, base pay for
intermediate scores, and extra pay for outputs with the highest quality score. While threshold contracts
may resemble current pricing schemes more closely (see Appendix E.1), monotone contracts enable
a lower overall budget while still maintaining a simple functional form. For min-pay, monotone
cost-robust contracts are in themselves threshold contracts, however they may deter risk-averse agents
as they only pay for highest-quality outputs. In Appendix E.2, we additionally analyze non-monotone
contracts, and show that further economic efficiency can be achieved by sacrificing simplicity."
MULTI-OUTCOME CONTRACTS,0.23669724770642203,"Price of cost-robustness.
Table 2 compares cost-robust and cost-aware monotone contracts across
different performance metrics. We observe that cost-robust contracts setting sacrifice a marginal
increase in objective values: a 15% increase in the min-pay objective, an 1.7% increase if optimizing
for budget, and 6.7% increase when optimizing for minimum variance. We refer to Appendix E.2 for
further analysis of cost-robustness in the non-monotone setting."
DISCUSSION,0.23853211009174313,"6
Discussion"
DISCUSSION,0.24036697247706423,"In this paper, we introduce cost-robust contracts as a means to address the emerging problem of
moral hazards in LLM inference. Our aim is to offer flexible payment schemes that ensure integrity
in current LLM markets, even when facing challenges of incomplete information. One of the key
insights from our study is that cost-robust contracts can be relevant and effective in practical settings.
Moreover, we generalize the work paved by Saig et al. [31] by uncovering stronger connections
between the fields of contract design and statistical hypothesis testing. These connections underscore
the statistical intuition that is prevalent in contract design."
DISCUSSION,0.24220183486238533,"Despite the promising results, our work still has several limitations that would do well to be addressed
in future research. For one, the data we capture through the evaluation benchmarks does not accurately
reflect real-world distributions, where the prompt space is much richer. A natural direction for future
work is to explore approximation guarantees when learning contracts from data. Additionally, our
analysis relies on a set of assumptions regarding the cost uncertainty and estimations, which should be
carefully considered when designing contracts for Generative AI. Lastly, it would also be interesting
to see our contract design framework applied to markets with a more elaborate action space."
DISCUSSION,0.24403669724770644,"Acknowledgements.
The authors would like to thank Nir Rosenfeld, Ariel Procaccia, Stephen
Bates, and Michael Toker for their insightful remarks and valuable suggestions. Eden Saig is supported
by the Israel Council for Higher Education PBC scholarship for Ph.D. students in data science. This
work received funding from the European Research Council (ERC) under the European Union‚Äôs
Horizon 2020 research and innovation program (grant No.: 101077862, project: ALGOCONTRACT,
PI: Inbal Talgam-Cohen), by the Israel Science Foundation (grant No.: 3331/24), by the NSF-BSF
(grant No.: 2021680), and by a Google Research Scholar Award."
REFERENCES,0.24587155963302754,References
REFERENCES,0.24770642201834864,"[1] Josh Achiam, Steven Adler, Sandhini Agarwal, Lama Ahmad, Ilge Akkaya, Florencia Leoni
Aleman, Diogo Almeida, Janko Altenschmidt, Sam Altman, Shyamal Anadkat, et al. Gpt-4
technical report. arXiv preprint arXiv:2303.08774, 2023."
REFERENCES,0.24954128440366974,"[2] Akshay Agrawal, Robin Verschueren, Steven Diamond, and Stephen Boyd. A rewriting system
for convex optimization problems. Journal of Control and Decision, 5(1):42‚Äì60, 2018."
REFERENCES,0.25137614678899084,"[3] Nivasini Ananthakrishnan, Stephen Bates, Michael Jordan, and Nika Haghtalab. Delegating
data collection in decentralized machine learning. In International Conference on Artificial
Intelligence and Statistics, pages 478‚Äì486. PMLR, 2024."
REFERENCES,0.25321100917431194,"[4] Jacob Austin, Augustus Odena, Maxwell Nye, Maarten Bosma, Henryk Michalewski, David
Dohan, Ellen Jiang, Carrie Cai, Michael Terry, Quoc Le, et al. Program synthesis with large
language models. arXiv preprint arXiv:2108.07732, 2021."
REFERENCES,0.25504587155963304,"[5] Moshe Babaioff, Michal Feldman, Noam Nisan, and Eyal Winter. Combinatorial agency.
Journal of Economic Theory, 147(3):999‚Äì1034, 2012."
REFERENCES,0.25688073394495414,"[6] Stephen Bates, Michael I Jordan, Michael Sklar, and Jake A Soloff. Principal-agent hypothesis
testing. arXiv preprint arXiv:2205.06812, 2022."
REFERENCES,0.25871559633027524,"[7] Tom Brown, Benjamin Mann, Nick Ryder, Melanie Subbiah, Jared D Kaplan, Prafulla Dhariwal,
Arvind Neelakantan, Pranav Shyam, Girish Sastry, Amanda Askell, et al. Language models are
few-shot learners. Advances in neural information processing systems, 33:1877‚Äì1901, 2020."
REFERENCES,0.26055045871559634,"[8] Gabriel Carroll. Robustness and linear contracts. American Economic Review, 105(2):536‚Äì563,
2015."
REFERENCES,0.26238532110091745,"[9] Yupeng Chang, Xu Wang, Jindong Wang, Yuan Wu, Linyi Yang, Kaijie Zhu, Hao Chen,
Xiaoyuan Yi, Cunxiang Wang, Yidong Wang, et al. A survey on evaluation of large language
models. ACM Transactions on Intelligent Systems and Technology, 15(3):1‚Äì45, 2024."
REFERENCES,0.26422018348623855,"[10] Lingjiao Chen, Matei Zaharia, and James Zou. Frugalgpt: How to use large language models
while reducing cost and improving performance. arXiv preprint arXiv:2305.05176, 2023."
REFERENCES,0.26605504587155965,"[11] Mark Chen, Jerry Tworek, Heewoo Jun, Qiming Yuan, Henrique Ponde de Oliveira Pinto, Jared
Kaplan, Harri Edwards, Yuri Burda, Nicholas Joseph, Greg Brockman, et al. Evaluating large
language models trained on code. arXiv preprint arXiv:2107.03374, 2021."
REFERENCES,0.26788990825688075,"[12] Steven Diamond and Stephen Boyd. CVXPY: A Python-embedded modeling language for
convex optimization. Journal of Machine Learning Research, 17(83):1‚Äì5, 2016."
REFERENCES,0.26972477064220185,"[13] Paul Duetting, Vahab Mirrokni, Renato Paes Leme, Haifeng Xu, and Song Zuo. Mechanism
design for large language models. In Proceedings of the ACM on Web Conference 2024, pages
144‚Äì155, 2024."
REFERENCES,0.27155963302752295,"[14] Paul D√ºtting, Tim Roughgarden, and Inbal Talgam-Cohen. Simple versus optimal contracts.
In Proceedings of the 2019 ACM Conference on Economics and Computation, pages 369‚Äì387,
2019."
REFERENCES,0.27339449541284405,"[15] Sara Fish, Paul G√∂lz, David C Parkes, Ariel D Procaccia, Gili Rusak, Itai Shapira, and Manuel
W√ºthrich. Generative social choice. arXiv preprint arXiv:2309.01291, 2023."
REFERENCES,0.27522935779816515,"[16] Paul J. Goulart and Yuwen Chen. Clarabel: An interior-point solver for conic programs with
quadratic objectives, 2024."
REFERENCES,0.27706422018348625,"[17] Stuart E Greene and David B Nash. Pay for performance: an overview of the literature. American
Journal of Medical Quality, 24(2):140‚Äì163, 2009."
REFERENCES,0.27889908256880735,"[18] Keegan Harris, Nicole Immorlica, Brendan Lucier, and Aleksandrs Slivkins. Algorithmic
persuasion through simulation: Information design in the age of generative ai. arXiv preprint
arXiv:2311.18138, 2023."
REFERENCES,0.28073394495412846,"[19] Kai He, Rui Mao, Qika Lin, Yucheng Ruan, Xiang Lan, Mengling Feng, and Erik Cambria.
A survey of large language models for healthcare: from data, technology, and applications to
accountability and ethics. arXiv preprint arXiv:2310.05694, 2023."
REFERENCES,0.28256880733944956,"[20] Chien-Ju Ho, Aleksandrs Slivkins, and Jennifer Wortman Vaughan. Adaptive contract design
for crowdsourcing markets: Bandit algorithms for repeated principal-agent problems. Journal
of Artificial Intelligence Research, 55:317‚Äì359, 2016."
REFERENCES,0.28440366972477066,"[21] Bengt Holmstr√∂m. Moral hazard and observability. The Bell journal of economics, pages 74‚Äì91,
1979."
REFERENCES,0.28623853211009176,"[22] R√©gis Pierrard Ilyas Moutawwakil. Llm-perf leaderboard. https://huggingface.co/spa
ces/optimum/llm-perf-leaderboard, 2023."
REFERENCES,0.28807339449541286,"[23] R√©gis Pierrard Ilyas Moutawwakil. Optimum-benchmark: A framework for benchmarking the
performance of transformers models with different hardwares, backends and optimizations.,
2023."
REFERENCES,0.28990825688073396,"[24] Jinqi Lai, Wensheng Gan, Jiayang Wu, Zhenlian Qi, and Philip S Yu. Large language models in
law: A survey. arXiv preprint arXiv:2312.03718, 2023."
REFERENCES,0.29174311926605506,"[25] Junlong Li, Shichao Sun, Weizhe Yuan, Run-Ze Fan, Hai Zhao, and Pengfei Liu. Genera-
tive judge for evaluating alignment. In The Twelfth International Conference on Learning
Representations, ICLR 2024, Vienna, Austria, May 7-11, 2024. OpenReview.net, 2024."
REFERENCES,0.29357798165137616,"[26] Linyang Li, Pengyu Wang, Ke Ren, Tianxiang Sun, and Xipeng Qiu. Origin tracing and
detecting of llms. arXiv preprint arXiv:2304.14072, 2023."
REFERENCES,0.29541284403669726,"[27] Yinheng Li, Shaofei Wang, Han Ding, and Hang Chen. Large language models in finance: A
survey. In Proceedings of the Fourth ACM International Conference on AI in Finance, pages
374‚Äì382, 2023."
REFERENCES,0.29724770642201837,"[28] Yang Liu, Dan Iter, Yichong Xu, Shuohang Wang, Ruochen Xu, and Chenguang Zhu. G-eval:
NLG evaluation using gpt-4 with better human alignment. In Houda Bouamor, Juan Pino, and
Kalika Bali, editors, Proceedings of the 2023 Conference on Empirical Methods in Natural
Language Processing, EMNLP 2023, Singapore, December 6-10, 2023, pages 2511‚Äì2522.
Association for Computational Linguistics, 2023. URL https://aclanthology.org/2023.
emnlp-main.153."
REFERENCES,0.29908256880733947,"[29] Phillippe Rigollet and Jan-Christian H√ºtter. High dimensional statistics. Lecture notes for
course 18S997, 813(814):46, 2015."
REFERENCES,0.30091743119266057,"[30] Baptiste Roziere, Jonas Gehring, Fabian Gloeckle, Sten Sootla, Itai Gat, Xiaoqing Ellen Tan,
Yossi Adi, Jingyu Liu, Tal Remez, J√©r√©my Rapin, et al. Code llama: Open foundation models
for code. arXiv preprint arXiv:2308.12950, 2023."
REFERENCES,0.30275229357798167,"[31] Eden Saig, Inbal Talgam-Cohen, and Nir Rosenfeld. Delegated classification. Advances in
Neural Information Processing Systems, 36, 2024."
REFERENCES,0.30458715596330277,"[32] Bernard Salani√©. The Economics of Contracts: A Primer. MIT press, 2017."
REFERENCES,0.30642201834862387,"[33] Siddharth Samsi, Dan Zhao, Joseph McDonald, Baolin Li, Adam Michaleas, Michael Jones,
William Bergeron, Jeremy Kepner, Devesh Tiwari, and Vijay Gadepally. From words to
watts: Benchmarking the energy costs of large language model inference. In 2023 IEEE High
Performance Extreme Computing Conference (HPEC), pages 1‚Äì9. IEEE, 2023."
REFERENCES,0.30825688073394497,"[34] Karan Singhal, Shekoofeh Azizi, Tao Tu, S Sara Mahdavi, Jason Wei, Hyung Won Chung,
Nathan Scales, Ajay Tanwani, Heather Cole-Lewis, Stephen Pfohl, et al. Large language models
encode clinical knowledge. Nature, 620(7972):172‚Äì180, 2023."
REFERENCES,0.3100917431192661,"[35] Zhongxiang Sun. A short survey of viewing large language models in legal aspect. arXiv
preprint arXiv:2303.09136, 2023."
REFERENCES,0.3119266055045872,"[36] Hugo Touvron, Thibaut Lavril, Gautier Izacard, Xavier Martinet, Marie-Anne Lachaux, Timo-
th√©e Lacroix, Baptiste Rozi√®re, Naman Goyal, Eric Hambro, Faisal Azhar, et al. Llama: Open
and efficient foundation language models. arXiv preprint arXiv:2302.13971, 2023."
REFERENCES,0.3137614678899083,"[37] Hugo Touvron, Louis Martin, Kevin Stone, Peter Albert, Amjad Almahairi, Yasmine Babaei,
Nikolay Bashlykov, Soumya Batra, Prajjwal Bhargava, Shruti Bhosale, et al. Llama 2: Open
foundation and fine-tuned chat models. arXiv preprint arXiv:2307.09288, 2023."
REFERENCES,0.3155963302752294,"[38] Adaku Uchendu, Thai Le, Kai Shu, and Dongwon Lee. Authorship attribution for neural text
generation. In Proceedings of the 2020 Conference on Empirical Methods in Natural Language
Processing (EMNLP), pages 8384‚Äì8395, 2020."
REFERENCES,0.3174311926605505,"[39] Xianjun Yang, Liangming Pan, Xuandong Zhao, Haifeng Chen, Linda Petzold, William Yang
Wang, and Wei Cheng. A survey on detection of llms-generated content. arXiv preprint
arXiv:2310.15654, 2023."
REFERENCES,0.3192660550458716,"[40] Xianjun Yang, Wei Cheng, Yue Wu, Linda Ruth Petzold, William Yang Wang, and Haifeng
Chen. DNA-GPT: divergent n-gram analysis for training-free detection of gpt-generated text. In
The Twelfth International Conference on Learning Representations, ICLR 2024, Vienna, Austria,
May 7-11, 2024. OpenReview.net, 2024."
REFERENCES,0.3211009174311927,"[41] Lianmin Zheng, Wei-Lin Chiang, Ying Sheng, Siyuan Zhuang, Zhanghao Wu, Yonghao Zhuang,
Zi Lin, Zhuohan Li, Dacheng Li, Eric Xing, et al. Judging llm-as-a-judge with mt-bench and
chatbot arena. Advances in Neural Information Processing Systems, 36, 2024."
REFERENCES,0.3229357798165138,"A
Additional Related Work"
REFERENCES,0.3247706422018349,"Detection.
As a possible alternative to a contract-design approach, the LLM content detection
literature develops tools which attempt to detect machine-generated text, and distinguish between
different text generators [38, 26, 40, 39]. Using such tools, a principal could deploy an LLM content
detector and penalize firms who are not labeled as using target text generator. From this perspective,
contract design is a complementary approach which provides guidelines for positive incentives in case
a generated text gets accepted, an approach considered more effective at encouraging participation.
Additionally, our pay-for-performance framework supports richer outcomes spaces beyond binary
pass/fail, enabling more granular, and thus more efficient, control of incentives."
REFERENCES,0.326605504587156,"AGT and LLMs.
On a broader perspective, our work further promotes the role of Algorithmic
Game Theory in the economics of Generative AI. Previous works include: Duetting et al. [13] who
design auctions that merge outputs from multiple LLMs; Harris et al. [18] who offer a Bayesian
Persuasion setting where the sender can use Generative AI to simulate the receiver‚Äôs behavior; and
Fish et al. [15] who leverage the creative nature of LLMs to enhance social choice settings."
REFERENCES,0.3284403669724771,"B
Extensions"
REFERENCES,0.3302752293577982,"B.1
Targeting a set of high-quality models
For high-stake tasks such as summarizing medical information, it makes sense to target the most
advanced model. In other scenarios, specifying a single target action can act as an intermediate step
toward the final contract design."
REFERENCES,0.3321100917431193,"For instance, a principal might aim to incentivize the use of any model that meets a certain quality
threshold, e.g., requiring text generation from any LLM with more than 70B parameters. Formally,
given a set of models G = {g1, . . . , gn} with associated costs c1 < c2 < ¬∑ ¬∑ ¬∑ < cn, we assume that
higher-cost models offer higher quality. Let k ‚àà[n] represent the index of the minimum quality model
that the principal seeks to target, such that the goal is to incentivize any model gi ‚àà{gk, . . . , gn}."
REFERENCES,0.3339449541284404,"To compute the optimal contract in this setting, the principal enumerates over the different target
models gi ‚àà{gk, . . . , gn}, designs an optimal single-target contract for each, and selects the ‚Äúbest‚Äù
contract among the resulting designs ‚Äì formally, the contract minimizing ‚à•t‚à•for the appropriate
norm (see Section 2.2). Since all enumerated contracts are designed to satisfy incentive compatibility
and potentially cost-robustness, the optimal contract among them also satisfies these properties."
REFERENCES,0.3357798165137615,"C
Contract Implementability"
REFERENCES,0.3376146788990826,"C.1
Conditions for implementablity
The implementatbility of min-pay contracts is discussed in [14, Appendix A.2], and the imple-
mentatbility of min-budget contracts is discussed in [31, Appendix B.3.1]. In both cases, the
implementability of the contract design problems is characterized by the following condition:"
REFERENCES,0.3394495412844037,"Proposition 4 (Implementablity; [e.g., 14, Proposition 2]). In a contract design problem (F, c) with
n possible actions, an action i ‚àà[n] is implementable if and only if there is no convex combination of
alternative actions that results in the same outcome distribution P"
REFERENCES,0.3412844036697248,"i‚Ä≤Ã∏=i Œªi‚Ä≤Fi‚Ä≤ = Fi but lower cost
P"
REFERENCES,0.3431192660550459,i‚Ä≤Ã∏=i Œªi‚Ä≤ci‚Ä≤ < ci.
REFERENCES,0.344954128440367,"We note that Proposition 4 holds for all objectives ‚à•t‚à•described in eq. (1), as feasibility only depends
on the incentive compatibility constraints. Adding to the result above, we show that implementability
holds in the the intuitive case where the target model has the highest expected quality:"
REFERENCES,0.3467889908256881,"Proposition 5 (Highest expected quality implies implementability). For a contract design problem
(F, c), denote the expected quality of action i by qi = Ej‚ààFi[j]. If qi < qn for all i < n, then the
contract is implementable."
REFERENCES,0.3486238532110092,"Proof. By contradiction. Assume that qi < qn for all i < n but the contract design problem
is not implementable. By Proposition 4, there exists a convex combination of actions such that
P
i<n ŒªiFi = Fn and P
i ci < cn. Denote the convex combination of distributions by FŒª. By
definition, it holds that:
Ej‚àºFŒª[j] =
X"
REFERENCES,0.3504587155963303,"i<n
ŒªiEj‚àºFi[j] =
X"
REFERENCES,0.3522935779816514,"i<n
Œªiqi"
REFERENCES,0.3541284403669725,"But from the infeasibility assumption P
i<n ŒªiFi = Fn, and therefore it also holds that:"
REFERENCES,0.3559633027522936,Ej‚àºFŒª[j] = Ej‚àºFn[j] = qn
REFERENCES,0.3577981651376147,and therefore P
REFERENCES,0.3596330275229358,"i<n Œªiqi < qn, which contradicts the initial assumption that qi < qn for all i."
REFERENCES,0.3614678899082569,"C.2
Designing cost-robust contracts for strictly-intermediate target actions"
REFERENCES,0.363302752293578,"Our main analysis technique for cost-robust contracts requires a separation between the interval
covering the costs of target actions, and the interval covering the costs of alternative actions (see
proofs of Lemma 2 and Lemma 3). This assumption does not hold when the principal targets a strictly
intermediate model, formally gi ‚ààG such that i < n and ci < cn. This captures scenarios where
the principal seeks to incentivize text generation from a medium-sized model, but not from larger,
costlier models that are available. In such instances, guaranteeing the implementability of cost-robust
contracts requires additional assumptions."
REFERENCES,0.3651376146788991,"To illustrate this, consider the following design setting, with n = 3 actions and m = 2 outcomes:"
REFERENCES,0.3669724770642202,"F1 = (1, 0)
c1 = 0
F2 = (0, 1)
c2 = 1
F3 = (0.5, 0.5)
c3 = 10"
REFERENCES,0.3688073394495413,"Assume that the principal targets action i‚àó= 2. In this setting, the cost difference is upper-bounded
by ci‚àó‚àíci ‚â§c2 ‚àíc1 = 1, and the cost-robust min-budget contract corresponding to the bound b = 1
is given by Theorem 1:"
REFERENCES,0.3706422018348624,"t =

0,
b
‚à•F3 ‚àíF2‚à•TV"
REFERENCES,0.3724770642201835,"
=

0, 1 0.5"
REFERENCES,0.3743119266055046,"
= (0, 2)"
REFERENCES,0.3761467889908257,"This contract is incentive compatible with respect to the target action, yielding expected utilities
uA(t, 1) = 0 for action 1, uA(t, 2) = 1 for action 2, and uA(t, 3) = ‚àí9 for action 3."
REFERENCES,0.3779816513761468,"However, consider the following setting, with identical target and different outcome distributions:"
REFERENCES,0.3798165137614679,"F1 = (1, 0)
c1 = 0
F2 = (0.5, 0.5)
c2 = 1
F3 = (0, 1)
c3 = 10"
REFERENCES,0.381651376146789,"In this setting, an incentive-compatible contract exists (e.g., t = (0, 4)), and the same cost upper
bound b = 1 holds, however the cost-robust contract design problems are unfeasible by Proposition 4,
as in the truncated contract design setting (F = (F1, F2, F3), cconst = (0, 1, 0)) there exists a convex
combination of alternative actions Œª1 = 0.5, Œª3 = 0.5 which satisfies P"
REFERENCES,0.3834862385321101,"i‚àà{1,3} ŒªiFi = F2 and
P"
REFERENCES,0.3853211009174312,"i‚àà{1,3} Œªicconst
i
= 0 < c2 = 1."
REFERENCES,0.3871559633027523,"D
Deferred Proofs"
REFERENCES,0.3889908256880734,"D.1
Convex programs and equivalent forms"
REFERENCES,0.3908256880733945,"In this section, we include linear programs (LPs) for optimizing contracts and hypothesis tests.
Non-negativity constraints on the variables are ommitted where clear from context."
REFERENCES,0.3926605504587156,"By definition (see Section 2.2), a contract t is min-budget with respect to target action i if and
only if it is an optimal solution to the following MIN-BUDGET LP, where IC stands for incentive
compatibility (i.e., the constraints that ensure the agent‚Äôs best response to t is choosing action i):"
REFERENCES,0.3944954128440367,"min
t‚ààRm
‚â•0,B‚ààR‚â•0
B"
REFERENCES,0.3963302752293578,"s.t.
X"
REFERENCES,0.3981651376146789,"j
Fi‚Ä≤jtj ‚àíci‚Ä≤ ‚â§
X"
REFERENCES,0.4,"j
Fijtj ‚àíci
‚àÄi‚Ä≤ Ã∏= i
(IC)"
REFERENCES,0.4018348623853211,"tj ‚â§B
‚àÄj ‚àà[m]
(BUDGET) (2)"
REFERENCES,0.4036697247706422,"Proposition 6 (Equivalent form to the MIN-BUDGET LP; [31, B.2]). When eq. (2) is feasible,
the variable transformation (t, B) 7‚Üí(œà/Œ≤, 1/Œ≤) yields an equivalent LP which we refer to as the
statistical LP:
max
œà‚àà[0,1]m,Œ≤‚ààR‚â•0
Œ≤"
REFERENCES,0.4055045871559633,"s.t.
X"
REFERENCES,0.4073394495412844,"j
Fi‚Ä≤jœàj +
X"
REFERENCES,0.4091743119266055,"j
Fij(1 ‚àíœàj) ‚â§1 ‚àí(ci ‚àíci‚Ä≤)Œ≤
‚àÄi‚Ä≤ Ã∏= i
(3)"
REFERENCES,0.41100917431192663,"Similarly to the MIN-BUDGET LP, we have the MIN-PAY LP:"
REFERENCES,0.41284403669724773,"min
t‚ààRm
‚â•0 X"
REFERENCES,0.41467889908256883,"j
Fijtj"
REFERENCES,0.41651376146788993,"s.t.
X"
REFERENCES,0.41834862385321103,"j
Fi‚Ä≤jtj ‚àíci‚Ä≤ ‚â§
X"
REFERENCES,0.42018348623853213,"j
Fijtj ‚àíci
‚àÄi‚Ä≤ Ã∏= i
(IC)
(4)"
REFERENCES,0.42201834862385323,"There are also natural LP formulations for hypothesis testing. A hypothesis test œà is the minimax
sum-optimal test w.r.t. risk (see Definition 2) if and only if it is an optimal solution to the following
LP:
min
œà‚àà[0,1]m,r‚ààR‚â•0
r"
REFERENCES,0.42385321100917434,"s.t.
X"
REFERENCES,0.42568807339449544,"j
Fijœàj +
X"
REFERENCES,0.42752293577981654,"j
Fnj(1 ‚àíœàj) ‚â§r
‚àÄi < n
(5)"
REFERENCES,0.42935779816513764,Proposition 7 (Dual of statistical LP). The dual of eq. (3) is given by:
REFERENCES,0.43119266055045874,"min
Œª‚ààRn‚àí1
‚â•0 ,¬µ‚ààRm
‚â•0 X"
REFERENCES,0.43302752293577984,"j‚àà[m]
¬µj"
REFERENCES,0.43486238532110094,"s.t.
X"
REFERENCES,0.43669724770642204,"i<n
(Fn,j ‚àíFi,j) Œªi ‚â§¬µj
‚àÄj ‚àà[m] X"
REFERENCES,0.43853211009174314,"i<n
(cn ‚àíci) Œªi ‚â•1"
REFERENCES,0.44036697247706424,"¬µj ‚â•0
‚àÄj ‚àà[m]
Œªi ‚â•0
‚àÄi ‚àà[n ‚àí1] (6)"
REFERENCES,0.44220183486238535,"Proof. Denote:
x = (œà1, . . . , œàm, Œ≤) ‚ààRm+1. A = Ô£´"
REFERENCES,0.44403669724770645,"Ô£¨
Ô£¨
Ô£¨
Ô£¨
Ô£¨
Ô£¨
Ô£¨
Ô£¨
Ô£¨
Ô£¨
Ô£¨
Ô£¨
Ô£¨
Ô£¨
Ô£¨
Ô£≠"
REFERENCES,0.44587155963302755,"F1,1 ‚àíFn,1
¬∑ ¬∑ ¬∑
F1,m ‚àíFn,m
cn ‚àíc1
...
...
...
Fi,j ‚àíFn,j
...
cn ‚àíci
...
...
F(n‚àí1),1 ‚àíFn,1
¬∑ ¬∑ ¬∑
F(n‚àí1),m ‚àíFn,m
cn ‚àícn‚àí1 0 Im√óm ...
0 Ô£∂"
REFERENCES,0.44770642201834865,"Ô£∑
Ô£∑
Ô£∑
Ô£∑
Ô£∑
Ô£∑
Ô£∑
Ô£∑
Ô£∑
Ô£∑
Ô£∑
Ô£∑
Ô£∑
Ô£∑
Ô£∑
Ô£∏"
REFERENCES,0.44954128440366975,"b = ( 0, . . . , 0
| {z }
n ‚àí1 times"
REFERENCES,0.45137614678899085,", 1, . . . , 1
| {z }
m times"
REFERENCES,0.45321100917431195,) ‚ààRn‚àí1+m.
REFERENCES,0.45504587155963305,"c = (0, . . . , 0
| {z }
m times"
REFERENCES,0.45688073394495415,", 1) ‚ààRm+1."
REFERENCES,0.45871559633027525,"Using these notations, eq. (3) can be written as:"
REFERENCES,0.46055045871559636,"max
x‚â•0
cT x"
REFERENCES,0.46238532110091746,"s.t.
Ax ‚â§b
(7)"
REFERENCES,0.46422018348623856,The symmetric dual LP of eq. (7) is given by:
REFERENCES,0.46605504587155966,"min
y‚â•0
bT y"
REFERENCES,0.46788990825688076,"s.t.
AT y ‚â•c
(8)"
REFERENCES,0.46972477064220186,"Denote:
y = (Œª1, . . . , Œªn‚àí1, ¬µ1, . . . , ¬µm).
Unpacking the matrix notations in eq. (8) yields the following:"
REFERENCES,0.47155963302752296,"min
Œª‚ààRn‚àí1
‚â•0 ,¬µ‚ààRm
‚â•0 X"
REFERENCES,0.47339449541284406,"j‚àà[m]
¬µj"
REFERENCES,0.47522935779816516,"s.t.
X"
REFERENCES,0.47706422018348627,"i<n
(Fi,j ‚àíFn,j) Œªi + ¬µj ‚â•0
‚àÄj ‚àà[m] X"
REFERENCES,0.47889908256880737,"i<n
(cn ‚àíci) Œªi ‚â•1"
REFERENCES,0.48073394495412847,which is equivalent to eq. (6).
REFERENCES,0.48256880733944957,Proposition 8. A min-variance contract is an optimal solution for the following quadratic program:
REFERENCES,0.48440366972477067,"min
t‚ààRm
‚â•0
tT V t"
REFERENCES,0.48623853211009177,"s.t.
X"
REFERENCES,0.48807339449541287,"j
Fi‚Ä≤jtj ‚àíci‚Ä≤ ‚â§
X"
REFERENCES,0.48990825688073397,"j
Fijtj ‚àíci
‚àÄi‚Ä≤ Ã∏= i
(IC)
(9)"
REFERENCES,0.4917431192660551,Where V is a positive semi-definite matrix depending on the target action distribution Fi.
REFERENCES,0.4935779816513762,"Proof. Denote the contract by t ‚ààRm
‚â•0 and the probability distribution of the target action by
p ‚àà‚àÜ([m]). We use the following matrix notations: p = Ô£´ Ô£¨
Ô£≠"
REFERENCES,0.4954128440366973,"p1
...
pm Ô£∂"
REFERENCES,0.4972477064220184,"Ô£∑
Ô£∏;
t = Ô£´ Ô£¨
Ô£≠"
REFERENCES,0.4990825688073395,"t1
...
tm Ô£∂"
REFERENCES,0.5009174311926605,"Ô£∑
Ô£∏;
1 = Ô£´ Ô£¨
Ô£≠"
REFERENCES,0.5027522935779817,"1
...
1 Ô£∂"
REFERENCES,0.5045871559633027,"Ô£∑
Ô£∏;
diag (p) = Ô£´ Ô£¨
Ô£≠"
REFERENCES,0.5064220183486239,"p1
...
pm Ô£∂ Ô£∑
Ô£∏"
REFERENCES,0.5082568807339449,The variance of t is given by:
REFERENCES,0.5100917431192661,"Var (t) = Ej‚àºp
h
(tj ‚àíE[t])2i =
X j
pj "
REFERENCES,0.5119266055045871,"tj ‚àí
X"
REFERENCES,0.5137614678899083,"k
pktk !2"
REFERENCES,0.5155963302752293,"= diag (p)
It ‚àí1pT t
2"
REFERENCES,0.5174311926605505,"=
diag (‚àöp)
 
I ‚àí1pT 
t
2"
REFERENCES,0.5192660550458715,"Denote R = diag
 ‚àöp
  
I ‚àí1pT 
, and V = RT R. Then:"
REFERENCES,0.5211009174311927,Var (t) = ‚à•Rt‚à•
REFERENCES,0.5229357798165137,= tT RT Rt
REFERENCES,0.5247706422018349,= tT V t
REFERENCES,0.5266055045871559,"Note that V = RT R is a Gram matrix. It is therefore positive semi-definite, and the quadratic
program is convex."
REFERENCES,0.5284403669724771,"D.2
Main lemmas
The next lemmas are the workhorses of our theoretical results. We use T(F,c) to denote the set of
contracts incentivizing the target action n in a contract design setting (F, c); the contracts in T(F,c)
are also known as the feasible solutions of the setting. For simplicity we focus on settings for which
the set of feasible solutions is nonempty (i.e., the target action is implementable). Given either a
non-decreasing cost vector c = (c1, . . . , cn‚àí1, cn) ‚ààRn
‚â•0 and an index k ‚àà[n ‚àí1], or a cost cn and
a constant c‚Ä≤ < cn, define"
REFERENCES,0.5302752293577981,"c(k) := (ck, . . . , ck, cn) ‚ààRn
‚â•0;
cconst := (c‚Ä≤, . . . , c‚Ä≤, cn)."
REFERENCES,0.5321100917431193,"These are vectors with uniform costs (up to cn). Note that the costs in c(1) are (weakly) lower than
those in c, and vice versa for c(n‚àí1):"
REFERENCES,0.5339449541284403,c(1) ‚â§c ‚â§c(n‚àí1)
REFERENCES,0.5357798165137615,"Where the relation ‚â§is defined element-wise. Intuitively, since the agent gravitates towards lower
costs, it is harder to incentivize the target action against lower costs. We formalize this as follows:"
REFERENCES,0.5376146788990825,"Lemma 1 (Incentivizing against lower costs is harder). Consider a distribution matrix F, and two
cost vectors c ‚â§c ‚ààRn
‚â•0 satisfying cn = cn (i.e., c is dominated by c, and the cost of the target
action coincides). Then the sets of feasible solutions for contract design settings (F, c) and (F, c)
satisfy T(F,c) ‚äÜT(F,c)."
REFERENCES,0.5394495412844037,"Corollary 1. For every contract design setting (F, c), the set T(F,c) of feasible solutions satisfies
T(F,c(1)) ‚äÜT(F,c) ‚äÜT(F,c(n‚àí1))."
REFERENCES,0.5412844036697247,"Consider now a contract setting (F, cconst), where the action costs are uniformly equal to c‚Ä≤ except
for the target action (which is more costly). We show that for such a setting, the optimal contract for
incentivizing the target action has an interpretable format closely related to hypothesis testing. Recall
the notions of sum-optimal and ratio-optimal statistical contracts from Definition 3; then:"
REFERENCES,0.5431192660550459,"Lemma 2 (Min-budget optimality in uniform-cost settings). For every contract design setting
(F, cconst), the min-budget contract coincides with the sum-optimal statistical contract B‚àó
R(cn ‚àíc‚Ä≤) ¬∑
œà‚àó
R, and the optimal budget is (cn ‚àíc‚Ä≤)/(1 ‚àíR‚àó)."
REFERENCES,0.544954128440367,"Lemma 3 (Min-pay optimality in uniform-cost settings). For every contract design setting (F, cconst),
the min-pay contract coincides with the ratio-optimal statistical contract B‚àó
œÅ(cn ‚àíc‚Ä≤) ¬∑ œà‚àó
œÅ, and the
optimal expected total payment is (cn ‚àíc‚Ä≤)/(1 ‚àíœÅ‚àó)."
REFERENCES,0.5467889908256881,"Proofs appear in Appendix D.3, establishing also the other direction:"
REFERENCES,0.5486238532110091,"Observation 1. Let (F, cconst) be a contract design setting. Then the minimax sum-optimal test
among the composite hypothesis tests for {Fk}n‚àí1
k=1, {Fn} is obtained by normalizing the min-budget
contract, and the minimax ratio-optimal test is obtained by normalizing the min-pay contract."
REFERENCES,0.5504587155963303,"D.3
Proofs of main lemmas
Proof of Lemma 1. For target action n and any alternative action i < n, the (IC) constraint of the
MIN-BUDGET LP (eq. (2)) is given by:
X"
REFERENCES,0.5522935779816514,"j
Fijtj ‚àíci ‚â§
X"
REFERENCES,0.5541284403669725,"j
Fnjtj ‚àícn."
REFERENCES,0.5559633027522936,"Rearranging the terms yields:
X"
REFERENCES,0.5577981651376147,"j
(Fij ‚àíFnj) tj ‚â§ci ‚àícn.
(10)"
REFERENCES,0.5596330275229358,"Let c be a cost vector satisfying c ‚â§c and cn = cn. The costs ck are assumed to be increasing in k,
and therefore ci ‚àícn = ci ‚àícn < 0 for all i. Moreover, as ci ‚â§ci for all i < n, the RHS of eq. (10)
satisfies:
ci ‚àícn
| {z }
RHS of (F, c) LP"
REFERENCES,0.5614678899082569,"‚â§
ci ‚àícn
| {z }
RHS of (F, c) LP < 0."
REFERENCES,0.563302752293578,"Hence, the (IC) constraints of the (F, c) contract design problem are more restrictive than the (IC)
constraints of the (F, c) design problem. Since the design problems (F, c) , (F, c) , only differ in the
RHS of the (IC) constraints, the sets of feasible solutions satisfy the desired inclusion relation."
REFERENCES,0.5651376146788991,"Proof of Lemma 2. Under the ‚Äústatistical‚Äù variable transformation (t, B) 7‚Üí(œà/Œ≤, 1/Œ≤), the MIN-
BUDGET LP for (F, cconst) is given by eq. (3):"
REFERENCES,0.5669724770642202,"max
œà‚àà[0,1]m,Œ≤‚ààR‚â•0
Œ≤"
REFERENCES,0.5688073394495413,"s.t.
X"
REFERENCES,0.5706422018348624,"j
Fijœàj +
X"
REFERENCES,0.5724770642201835,"j
Fnj(1 ‚àíœàj) ‚â§1 ‚àí(cn ‚àíc‚Ä≤)Œ≤
‚àÄi < n"
REFERENCES,0.5743119266055046,Applying the variable transformation r = 1 ‚àí(cn ‚àíc‚Ä≤)Œ≤ yields the following equivalent LP:
REFERENCES,0.5761467889908257,"min
œà‚àà[0,1]m,r‚ààR‚â•0
r"
REFERENCES,0.5779816513761468,"s.t.
X"
REFERENCES,0.5798165137614679,"j
Fijœàj +
X"
REFERENCES,0.581651376146789,"j
Fnj(1 ‚àíœàj) ‚â§r
‚àÄi < n"
REFERENCES,0.5834862385321101,"This LP is equivalent to the minimax sum-optimal test œà‚àó
R in eq. (5), and therefore the optimal
solution œà‚àóis precisely this test. By the same equivalence, the optimal value of the optimization
parameter r satisfies r‚àó= R‚àó, where R‚àóis the minimax risk of the testing problem (i.e., the risk of
œà‚àó
R). By construction, the optimal Œ≤ satisfies Œ≤‚àó= 1‚àír‚àó"
REFERENCES,0.5853211009174312,cn‚àíc‚Ä≤ = 1‚àíR‚àó
REFERENCES,0.5871559633027523,"cn‚àíc‚Ä≤ , and therefore the minimal budget"
REFERENCES,0.5889908256880734,"is B‚àó=
1
Œ≤‚àó= cn‚àíc‚Ä≤"
REFERENCES,0.5908256880733945,"1‚àíR‚àówhich in the notation of Definition 3 is B‚àó
R(cn ‚àíc‚Ä≤). Reversing the variable
transformation we get t‚àó= œà‚àó/Œ≤‚àó= B‚àó¬∑ œà‚àó, which is equal to the sum-optimal statistical contract
B‚àó
R(cn ‚àíc‚Ä≤) ¬∑ œà‚àó
R, as required."
REFERENCES,0.5926605504587156,"Proof of Lemma 3. For the min-pay contract design problem, introduce an auxiliary variable Œ≤ > 0,
and define a ‚Äústatistical‚Äù variable transformation t 7‚Üícn‚àíc‚Ä≤"
REFERENCES,0.5944954128440367,"Œ≤
œà, where œà ‚àà[0, 1]m. The MIN-PAY LP
(eq. (4)) transforms into:"
REFERENCES,0.5963302752293578,"min
œà‚àà[0,1]m,Œ≤>0
cn ‚àíc‚Ä≤ Œ≤ X"
REFERENCES,0.5981651376146789,"j
Fnjœàj"
REFERENCES,0.6,"s.t.
Œ≤ ‚â§
X"
REFERENCES,0.6018348623853211,"j
Fnjœàj ‚àí
X"
REFERENCES,0.6036697247706422,"j
Fkjœàj
‚àÄk ‚àà[n ‚àí1]
(11)"
REFERENCES,0.6055045871559633,"For any given œà, the optimal value of Œ≤ is:"
REFERENCES,0.6073394495412844,"Œ≤‚àó=
min
k‚àà[n‚àí1] Ô£´ Ô£≠X"
REFERENCES,0.6091743119266055,"j
Fnjœàj ‚àí
X"
REFERENCES,0.6110091743119266,"j
Fkjœàj Ô£∂ Ô£∏ =
X"
REFERENCES,0.6128440366972477,"j
Fnjœàj ‚àímax
k‚àà[n‚àí1] X"
REFERENCES,0.6146788990825688,"j
Fkjœàj."
REFERENCES,0.6165137614678899,"Therefore, eq. (11) is equivalent to:"
REFERENCES,0.618348623853211,"min
œà‚àà[0,1]m
(cn ‚àíc‚Ä≤) P"
REFERENCES,0.6201834862385321,"j Fnjœàj
P"
REFERENCES,0.6220183486238532,"j Fnjœàj ‚àímaxk
P"
REFERENCES,0.6238532110091743,"j Fkjœàj
.
(12)"
REFERENCES,0.6256880733944954,"Divide the numerator and the denominator by P
j Fnjœàj to obtain the transformed objective:
P"
REFERENCES,0.6275229357798165,"j Fnjœàj
P"
REFERENCES,0.6293577981651376,"j Fnjœàj ‚àímaxk‚àà[n‚àí1]
P"
REFERENCES,0.6311926605504588,"j Fkjœàj
=
1"
REFERENCES,0.6330275229357798,1 ‚àímaxk‚àà[n‚àí1] P
REFERENCES,0.634862385321101,"j Fkjœàj
P"
REFERENCES,0.636697247706422,j Fnjœàj
REFERENCES,0.6385321100917432,"=
1
1 ‚àímaxk‚àà[n‚àí1] œÅk(œà)."
REFERENCES,0.6403669724770642,And hence eq. (12) can be written compactly as:
REFERENCES,0.6422018348623854,"min
œà‚àà[0,1]m
cn ‚àíc‚Ä≤"
REFERENCES,0.6440366972477064,"1 ‚àímaxk‚àà[n‚àí1] œÅk(œà).
(13)"
REFERENCES,0.6458715596330276,"The optimal solution for eq. (13) is the minimizer of maxk‚àà[n‚àí1] œÅk(œà), which is equivalent to the
minimax ratio-optimal test œà‚àó
œÅ by Definition 2. The optimal expected pay is cn‚àíc‚Ä≤"
REFERENCES,0.6477064220183486,"1‚àíœÅ‚àó, and the optimal
contract is given by:"
REFERENCES,0.6495412844036698,t‚àó= cn ‚àíc‚Ä≤
REFERENCES,0.6513761467889908,"Œ≤‚àó
œà‚àó=
cn ‚àíc‚Ä≤"
REFERENCES,0.653211009174312,"TP(œà‚àóœÅ) ‚àíFP(œà‚àóœÅ)œà‚àó
œÅ. = B‚àó
œÅ(cn ‚àíc‚Ä≤) ¬∑ œà‚àó
œÅ,"
REFERENCES,0.655045871559633,"where B‚àó
œÅ(¬∑) is as in Definition 3. We conclude that t‚àóis the ratio-optimal statistical contract, as
required."
REFERENCES,0.6568807339449542,"D.4
Proof of main theorem
We are now ready to prove our main theorem:"
REFERENCES,0.6587155963302752,"Proof of Theorem 1. We prove the first half of the theorem, i.e., that the sum-optimal statistical
contract is b-cost-robust and has the lowest budget b/(1 ‚àíR‚àó) among all b-cost-robust contracts. The
second half of the theorem follows by swapping Lemma 2 with Lemma 3."
REFERENCES,0.6605504587155964,"We first show that the sum-optimal statistical contract is b-cost-robust, i.e., incentivizes the target
action for every cost vector in the ambiguity set C: Define c0 := (0, . . . , 0, b). By Lemma 2, the min-
budget contract for the setting (F, c0) is the sum-optimal statistical contract t‚àó
R, i.e., B‚àó
R(cn ‚àíc‚Ä≤)¬∑œà‚àó
R,
where œà‚àó
R is the minimax sum-optimal composite test for distribution sets {Fi}i‚àà[n‚àí1], {Fn}. Its
budget is (b ‚àí0)/(1 ‚àíR‚àó) = b/(1 ‚àíR‚àó)."
REFERENCES,0.6623853211009174,"In particular, t‚àó
R incentivizes the target action and so belongs to T(F,c0). Observe that any increasing
cost vector c with cn = b dominates the cost vector c0, and therefore by Lemma 1, contract t‚àó
R
also belongs to T(F,c) for any such cost vector c that dominates c0. Furthermore, any cost vector c
in the ambiguity set C has a corresponding cost vector c in which all costs are identical except for
cn ‚â§cn = b. Lowering the target action‚Äôs cost from cn to cn can only help incentivize it, thus we
conclude that t‚àó
R ‚ààT(F,c), as required."
REFERENCES,0.6642201834862386,"We now show optimality of the budget: Since t‚àó
R is the min-budget contract for the setting (F, c0),
and since c0 is within the ambiguity region C, it holds that any b-cost-robust contract t must satisfy
Bt ‚â•b/(1 ‚àíR‚àó). As t‚àó
R satisfies this bound exactly, it has the lowest budget among all b-cost-robust
contracts."
REFERENCES,0.6660550458715596,"D.5
Proof of properties of optimal cost-robust contracts
Proof of Theorem 2. Let ccn‚àía = (cn ‚àía, . . . , cn ‚àía, cn) and ccn‚àíb = (cn ‚àíb, . . . , cn ‚àíb, cn) be
two uniform-cost profiles; for brevity we refer to these as c‚àía, c‚àíb. Since in contract setting (F, c)
it holds that (cn ‚àíci) ‚àà[a, b] for all i ‚àà[n ‚àí1], we have that c‚àíb
i
‚â§ci ‚â§c‚àía
i
for all i. Thus by
Lemma 1 it holds that
T(F,c) ‚äÜT(F,c‚àía),
(14)"
REFERENCES,0.6678899082568808,"that is, any contract that incentivizes the target action in setting (F, c) will incentivize it also in setting
(F, c‚àía)."
REFERENCES,0.6697247706422018,"Consider the min-budget contracts for settings (F, c‚àía), (F, c), (F, c‚àíb). Denote their budgets by
B‚àó
(F,c‚àía), B‚àó
(F,c), B‚àó
(F,c‚àíb), respectively. We deduce from Equation (14) that"
REFERENCES,0.671559633027523,"B‚àó
(F,c) ‚â•B‚àó
(F,c‚àía),
(15)"
REFERENCES,0.673394495412844,"since the min-budget contract for (F, c) is feasible for (F, c‚àía). Now recall that Lemma 2 gives us
an expression for the optimal budgets of the two uniform-cost settings. This expression depends on
the risk R‚àóof the minimax sum-optimal hypothesis test for {Fk}n‚àí1
k=1, {Fn}, which is static across
the two settings. It also depends on the difference between the highest and lowest cost in each setting.
Thus:
B‚àó
(F,c‚àía)
B‚àó
(F,c‚àíb)
= a"
REFERENCES,0.6752293577981652,"b .
(16)"
REFERENCES,0.6770642201834862,Combining Equation (15) and Equation (16) we get b
REFERENCES,0.6788990825688074,"aB‚àó
(F,c) ‚â•B‚àó
(F,c‚àíb). We conclude that the
min-budget contract for setting (F, c‚àíb) is a b"
REFERENCES,0.6807339449541284,"a-min-budget contract for (F, c). By Lemma 2 the"
REFERENCES,0.6825688073394496,"min-budget contract is the sum-optimal statistical contract
b
1‚àíR‚àóœà‚àó
R, which by Theorem 1 is the
b-cost-robust contract with the lowest budget, as required."
REFERENCES,0.6844036697247706,We now turn to the claim of tightness. Consider the following contract design setting:
REFERENCES,0.6862385321100918,"F1 = (1, 0)
F2 = (Œµ, 1 ‚àíŒµ)
F3 = (0, 1)"
REFERENCES,0.6880733944954128,"Where costs are increasing c1 < c2 < c3, and Œµ is a parameter satisfying:"
REFERENCES,0.689908256880734,Œµ < c3 ‚àíc2
REFERENCES,0.691743119266055,"c3 ‚àíc1
.
(17)"
REFERENCES,0.6935779816513762,"The target distribution F3 is only supported on j = 3, and therefore the minimax sum-optimal test
for this setting is:
œà‚àó= (0, 1).
As F1, F3 do not overlap, the minimax risk is given with respect to F2 by the Neyman-Pearson
Lemma [29]:
R = 1 ‚àí‚à•F2 ‚àíF3‚à•TV = 1 ‚àíŒµ,
and therefore the approximate contract given by Theorem 2 is:"
REFERENCES,0.6954128440366972,t = cn ‚àíc1
REFERENCES,0.6972477064220184,"1 ‚àíR œà‚àó=

0, c3 ‚àíc1 Œµ 
."
REFERENCES,0.6990825688073394,"As for the optimal contract, it satisfies t‚àó= (0, B‚àó) because the target distribution is only supported
on j = 2, and it has a threshold form due to [31, Lemma 4]. The optimal budget is:"
REFERENCES,0.7009174311926606,"B‚àó= max

c3 ‚àíc1, c3 ‚àíc2 Œµ "
REFERENCES,0.7027522935779816,"When Œµ satisfies Equation (17), the optimal budget is B‚àó= c3‚àíc2"
REFERENCES,0.7045871559633028,"Œµ
, and therefore:"
REFERENCES,0.7064220183486238,‚à•t‚à•‚àû= c3 ‚àíc1 Œµ
REFERENCES,0.708256880733945,= c3 ‚àíc1
REFERENCES,0.710091743119266,"c3 ‚àíc2
¬∑ c3 ‚àíc2"
REFERENCES,0.7119266055045872,"Œµ
| {z }
=B‚àó"
REFERENCES,0.7137614678899082,"=
cn ‚àíc1
cn ‚àícn‚àí1
‚à•t‚àó‚à•‚àû"
REFERENCES,0.7155963302752294,as required.
REFERENCES,0.7174311926605504,"Remark 1 (Extending the proof of Theorem 2 to cost-robust min-pay contracts). By Lemma 3, the
min-pay contracts for the design settings (F, c‚àía), (F, c‚àíb) defined in the proof depend linearly on
a, b, respectively, and thus their expected pay is also linear in the bounds. The inclusion argument
in eq. (14) holds for min-pay contracts as well, and thus an argument analogous to eq. (16) can be
constructed for the ratio of expected payments. The rest of the proof follows similarly."
REFERENCES,0.7192660550458716,"Proof of Proposition 1. By Theorem 1 and Lemma 2, the b-cost-robust contract with minimum
budget is the min-budget contract for setting (F, cconst) where cconst = (0, . . . , 0, b). For this setting,
plugging variables ÀúŒª, Àú¬µ into the dual in eq. (6), we get:"
REFERENCES,0.7211009174311926,"min
ÀúŒª‚ààRn‚àí1
‚â•0 ,Àú¬µ‚ààRm
‚â•0 X"
REFERENCES,0.7229357798165138,"j‚àà[m]
Àú¬µj"
REFERENCES,0.7247706422018348,"s.t.
X"
REFERENCES,0.726605504587156,"i<n
(Fn,j ‚àíFi,j) ÀúŒªi ‚â§Àú¬µj
‚àÄj ‚àà[m] X"
REFERENCES,0.728440366972477,"i<n
bÀúŒªi ‚â•1"
REFERENCES,0.7302752293577982,Define the following variable transformation:
REFERENCES,0.7321100917431193,"Œª = bÀúŒª;
¬µ = bÀú¬µ."
REFERENCES,0.7339449541284404,"Under this transformation, the dual LP is equivalent to:"
REFERENCES,0.7357798165137615,"min
Œª‚ààRn‚àí1
‚â•0 ,¬µ‚ààRm
‚â•0 X"
REFERENCES,0.7376146788990826,"j‚àà[m]
¬µj"
REFERENCES,0.7394495412844037,"s.t.
X"
REFERENCES,0.7412844036697248,"i<n
(Fn,j ‚àíFi,j) Œªi ‚â§¬µj
‚àÄj ‚àà[m] X"
REFERENCES,0.7431192660550459,"i<n
Œªi ‚â•1"
REFERENCES,0.744954128440367,"When the contract is implementable, the optimal solution to the primal statistical LP (eq. (3)) satisfies
Œ≤‚àó> 0, corresponding to the last constraint in the dual LP. Therefore, the last constraint of the dual
is tight due to complementary slackness:
X"
REFERENCES,0.7467889908256881,"i<n
Œªi = 1,"
REFERENCES,0.7486238532110092,and the LP is equivalent to:
REFERENCES,0.7504587155963303,"min
Œª‚àà‚àÜ([n‚àí1]),¬µ‚ààRm
‚â•0 X"
REFERENCES,0.7522935779816514,"j‚àà[m]
¬µj"
REFERENCES,0.7541284403669725,"s.t.
Fn,j ‚àí
X"
REFERENCES,0.7559633027522936,"i<n
ŒªiFi,j ‚â§¬µj
‚àÄj ‚àà[m]"
REFERENCES,0.7577981651376147,As ¬µ ‚â•0 we can write:
REFERENCES,0.7596330275229358,"min
Œª‚àà‚àÜ([n‚àí1]) X j‚àà[m] "
REFERENCES,0.7614678899082569,"Fn,j ‚àí
X"
REFERENCES,0.763302752293578,"i<n
ŒªiFi,j !+ ,"
REFERENCES,0.7651376146788991,"and by the definition of total variation distance (e.g by [31, Claim 4]), the optimization objective
satisfies:
X j‚àà[m] "
REFERENCES,0.7669724770642202,"Fn,j ‚àí
X"
REFERENCES,0.7688073394495413,"i<n
ŒªiFi,j !+ ="
REFERENCES,0.7706422018348624,"Fn ‚àí
X"
REFERENCES,0.7724770642201835,"i
ŒªiFi"
REFERENCES,0.7743119266055046,"TV
Applying the inverse transformation yields:
X"
REFERENCES,0.7761467889908257,"j‚àà[m]
Àú¬µ‚àó
j = 1 b X"
REFERENCES,0.7779816513761468,"j‚àà[m]
¬µ‚àó
j"
REFERENCES,0.7798165137614679,"= minŒª‚àà‚àÜ([n‚àí1])
Fn ‚àíP"
REFERENCES,0.781651376146789,"i<n ŒªiFi

TV
b
."
REFERENCES,0.7834862385321101,"Then, by strong LP duality Œ≤‚àó= P"
REFERENCES,0.7853211009174312,"j Àú¬µ‚àó
j, and the final result is obtain by applying the nonlinear
variable transformation B‚àó=
1
Œ≤‚àó. This gives the desired expression for the minimum budget B‚àóof a
b-cost-robust contract: maxŒª‚àà‚àÜ([n‚àí1]) b/
Fn ‚àíP"
REFERENCES,0.7871559633027523,"i<n ŒªiFi

TV ."
REFERENCES,0.7889908256880734,"D.6
MLR
In this section, we prove that cost-robust min-budget contracts for distributions satisfying the Mono-
tone Likelihood Ratio (MLR) property have a threshold functional form."
REFERENCES,0.7908256880733945,"Proof of Proposition 2. Let (F, c) be a contract design setting with cn ‚àíca ‚â§b, such that F satisfies
monotone likelihood ratio. By the Karlin-Rubin theorem, the hypothesis test for the composite
hypotheses {Fk}n‚àí1
k=1, {Fn} minimizing FP + FN is a threshold function, and therefore there exists
j0 ‚àà[m] such that œà‚àó(j) = 1 [j ‚â•j0]. By Theorem 1, the optimal contract in this case is of the form
t‚àó= Bœà‚àófor some scalar B > 0, and therefore t‚àóis a threshold contract."
REFERENCES,0.7926605504587156,"D.7
Two-outcome settings"
REFERENCES,0.7944954128440367,"Proposition 9. Let (F, c) be a two-outcome contract design setting (m = 2). A contract t = (t0, t1)
with t1 ‚â•t0 implements the target action if and only if the contract t‚Ä≤ = (0, t1 ‚àít0) implements the
target action."
REFERENCES,0.7963302752293578,"Proof. For any action i ‚àà[n ‚àí1], the corresponding (IC) constraint is:
X"
REFERENCES,0.7981651376146789,"j‚àà{0,1}
fi,jtj ‚àíci ‚â§
X"
REFERENCES,0.8,"j‚àà{0,1}
fn,jtj ‚àícn
(18)"
REFERENCES,0.8018348623853211,"As fi, fn are probability distributions, the following holds for any t0:
X"
REFERENCES,0.8036697247706422,"j‚àà{0,1}
fi,jt0 =
X"
REFERENCES,0.8055045871559633,"j‚àà{0,1}
fn,jt0
(19)"
REFERENCES,0.8073394495412844,"Subtracting eq. (19) from eq. (18) does not change the (IC) constraint, as both sides of eq. (19) are
equal. Performing the subtraction and rearranging the terms gives:
X"
REFERENCES,0.8091743119266055,"j‚àà{0,1}
fi,j(tj ‚àít0) ‚àíci ‚â§
X"
REFERENCES,0.8110091743119267,"j‚àà{0,1}
fn,j(tj ‚àít0) ‚àícn"
REFERENCES,0.8128440366972477,"which is equivalent to:
fi,1(t1 ‚àít0) ‚àíci ‚â§fn,1(t1 ‚àít0) ‚àícn"
REFERENCES,0.8146788990825689,"and this is the (IC) constraint for the contract t‚Ä≤ = (0, t1 ‚àít0). Therefore, the contract t is feasible if
and only if the contract t‚Ä≤ is feasible."
REFERENCES,0.8165137614678899,"Proposition 10. Let (F, c) be a two-outcome contract design setting (m = 2), and let t = (t0, t1).
Then the contract t‚Ä≤ = (0, t1 ‚àít0) has weakly-better expected pay, weakly-better budget requirements,
and the same variance as t."
REFERENCES,0.818348623853211,"Proof. For the min-pay objective, we obtain from linearity of expectation:"
REFERENCES,0.8201834862385321,Ej‚ààfn[tj ‚àít0] ‚â§Ej‚ààfn[tj]
REFERENCES,0.8220183486238533,"and therefore t‚Ä≤ has weakly-better expected pay. For the min-budget objective, it holds that :"
REFERENCES,0.8238532110091743,"max {0, t1 ‚àít0} ‚â§max {t0, t1}"
REFERENCES,0.8256880733944955,"and therefore t‚Ä≤ has weakly-better budget requirement. for the min-variance objective, adding a
constant to a random variable does not affect its variance:"
REFERENCES,0.8275229357798165,Var(t) = Var(t‚Ä≤)
REFERENCES,0.8293577981651377,and therefore t‚Ä≤ has the same variance as t.
REFERENCES,0.8311926605504587,"Proof of Proposition 3. For all i ‚àà[n], let Fi = Bernoulli(pi). As m = 2, any contract t is a
two-dimensional vector. By proposition 9, proposition 10, it holds that the optimal contract is of the
form t‚àó= (0, t‚àó
1) for any of the three objectives. To prove that the optimal payment t‚àó
1 is the same for
all objectives, observe that all objective functions are monotonically-increasing in t‚àó
1:"
REFERENCES,0.8330275229357799,"max t‚àó= t‚àó
1
(Required budget)
Ej‚àºfn[t‚àó] = fn,1t‚àó
1
(Expected pay)"
REFERENCES,0.8348623853211009,"Var(t‚àó) = fn,1(1 ‚àífn,1) (t‚àó
1)2
(Variance)"
REFERENCES,0.8366972477064221,"Since all the optimization problems are of a single variable with identical (IC) constraints, their
optimal solutions are all identical."
REFERENCES,0.8385321100917431,"Model size
Llama2 cost
($/1M tokens)
CodeLlama cost
($/1M tokens)"
B,0.8403669724770643,"7B
$0.182
$0.183
13B
$0.24
$0.24
70B
$0.64
$0.64"
B,0.8422018348623853,"Table 3: Estimated energy costs for the Llama2 and CodeLlama model families, according to the
methodology described in Appendix E.1."
B,0.8440366972477065,"D.8
Hardness of all-or-nothing cost-robust contracts"
B,0.8458715596330275,"While cost-robust contracts can be computed in polynomial time by solving the corresponding convex
programs (see Appendix D.1), restricting the functional form of the solution to have only two levels
of payment entails computational hardness:"
B,0.8477064220183487,"Definition 6 (All-or-nothing contract; [31]). A contract t has an all-or-nothing functional form if
there exists B > 0 such that tj ‚àà{0, B} for all j ‚àà[m]."
B,0.8495412844036697,"In [31, Theorem 3], it is shown that computing a min-budget all-or-nothing contract is NP-hard. We
show that the same reduction is applicable for min-budget cost-robust contracts:"
B,0.8513761467889909,Proposition 11 (Hardness). Computing a min-budget all-or-nothing contract is NP-hard.
B,0.8532110091743119,"Proof. By reduction from 3SAT. Given a 3-CNF formula, we show that there exists a cost-robust
contract design problem such that the required budget of an all-or-nothing cost-robust min-budget
contract is below a certain threshold if and only if the formula is satisfyiable."
B,0.8550458715596331,"First, given a 3-CNF formula, apply the polynomial-time reduction described in [31, Appendix B.5.3]
to construct a min-budget contract design problem (F, c). Denote the target action of the design
problem by n ‚àà[n]. By the construction described in [31, Equation (27)], it holds that cn = 1 and
ci = 0 for all i < n. Thus, the contract design problem tightly satisfies the cost difference upper
bound cn ‚àíci ‚â§1. Moreover, since all alternative actions have the same cost ci = 0, the cost vector
c it is also the worst-case cost vector in the cost uncertainty set induced by the bound b (by Lemma 1).
Therefore, (F, c) is also a cost-robust contract design setting for the bound cn ‚àíci ‚â§1."
B,0.8568807339449541,"By the proof of [31, Theorem 3], there exists a threshold B0 such that the required budget of an
all-or-nothing min-budget contract in the design setting (F, c) is below a certain threshold if and only
if the 3-CNF formula is satisfiable."
B,0.8587155963302753,"E
Experiments/Empirical Evaluation"
B,0.8605504587155963,"E.1
Inference Costs
To calculate the costs for each model, we use energy data from the Hugging Face LLM Performance
Leaderboard5. The energy efficiency for each model is expressed in the leaderboard in units of output
tokens per kWH. To convert to actionable costs we assume a rate of .105 $/kWH, aligning with
conservative energy costs in the United States and giving us order-of-magnitude approximations
of the actual inference costs. The inference costs are presented in units of $/1M tokens. The
leaderboard data was taken from the experiments on the A100 GPUs. For each model, we took
the GPTQ-4bit+exllama-v2 quantization benchmark. Table 3 shows the energy costs on the
leaderboard for Llama2 and CodeLlama. We note that energy data was missing for CodeLlama-70B,
so we extrapolated from Llama2-70B-chat."
B,0.8623853211009175,"Model verbosity.
Calculation of the per-token inference costs are not complete without an analysis
of the response length produced by the various models. Table 4 shows the average verbosity (output
length) of the 3 Llama models on the single-turn prompts in the MT-bench evaluation set. Since the
values are of the same order of magnitude, we simplify and assume that the choice of model does not
influence the verbosity, and therefore we do not include this in our cost calculations."
B,0.8642201834862385,5https://huggingface.co/spaces/optimum/llm-perf-leaderboard.
B,0.8660550458715597,"Model
Verbosity"
B,0.8678899082568807,"Llama-2-7B-chat
1625
Llama-2-13B-chat
1573
Llama-2-70B-chat
1695"
B,0.8697247706422019,"Table 4: Model verbosities (average output length) of the models in consideration. Since the values
are of the same order of magnitude, we assume for simplification that the choice of model does not
significantly affect verbosity (see Appendix E.1)."
B,0.8715596330275229,"Cost-aware
Cost-robust"
B,0.8733944954128441,"E[t]
max tj
stdev(t)
E[t]
max tj
stdev(t)"
B,0.8752293577981651,"Min-Pay
0.86
73.4
7.63
0.92 (+6.9%)
73.4
8.16
Min-Budget
2.48
3.59
1.60
2.78
3.91 (+8.7%)
1.70
Min-Variance
3.52
6.31
1.45
3.84
6.58
1.53 (+6.5%)"
B,0.8770642201834863,"Table 5: Cost-aware vs Cost-robust contracts in the non-monotone setting. The numbers in bold
denote the optimal values achieved for the 3 objectives. The percentages denote the relative increase
from the optimal that the cost-robustness sacrifices in each setting."
B,0.8788990825688073,"Current market pricing schemes
As described in Section 1, current market pricing schemes for
LLM generation involve pay-per-token rates for which the user pays regardless of the response quality.
For open-source models such as Llama2, there exist API services to run model inference, such as
AWS and Microsoft Azure. In other scenarios, some pricing schemes behave as threshold contracts:
an unsatisfied user may request from the API to regenerate a response free of charge, and hence will
only pay if the response quality is above some threshold. For this reason threshold contracts can offer
a ‚Äúsatisfaction guarantee‚Äù while retaining a simple form."
B,0.8807339449541285,"E.2
Multi-outcome contracts: Further Analysis"
B,0.8825688073394495,"Non-Monotone Contracts
Table 5 shows the statistics of the various contract objectives in contracts
when optimized without a monotonicity constraint, and displays how they match up to each other in
cost-aware and cost-robust settings. We observe that the min-pay contract minimizes expected pay
at the expense of high budget and variance. The min-budget contract, on the other hand, is not the
worst in any of the objectives. Additionally, the cost-robust setting sacrifices only a marginal increase
in objective values: a 6.9% increase in the Min-pay objective, an 8.7% increase if optimizing for
budget, and 6.5% increase when optimizing for minimum variance."
B,0.8844036697247707,"Price of monotonicity
It is of interest to analyze the relative difference in resulting contracts that
occurs due to removing the monotonicity constraint. Table 6 shows the discrepancy in contract
objectives for cost-robust contracts. We can observe that while the monotone contracts as a whole are
simpler, more intuitive, and closely resemble threshold contracts, it is not without cost as they suffer
a sizeable increase in contract objectives, most notably an increase of 388% when trying to minimize
expected pay."
B,0.8862385321100917,"Non-Monotone
Monotone"
B,0.8880733944954129,"E[t]
max tj
stdev(t)
E[t]
max tj
stdev(t)"
B,0.8899082568807339,"Min-Pay
0.92
73.4
8.16
4.82
12.23
5.98
Min-Budget
2.78
3.91
1.70
5.48
6.63
1.83
Min-Variance
3.84
6.58
1.53
5.48
6.63
1.83"
B,0.8917431192660551,"Table 6: Cost-robust contracts, monotone vs. non-monotone setting. The numbers in bold denote the
optimal values achieved for the 3 objectives."
B,0.8935779816513761,"E.3
Implementation details
Code.
We implement our code in Python. Our code relies on cvxpy [12, 2] and Clarabel [16] for
solving linear and quadratic programs.
Code is available at: https://github.com/edensaig/llm-contracts."
B,0.8954128440366973,"Hardware.
All experiments were run on a single Macbook Pro laptop, with 16GB of RAM, and
M2 processor, and with no GPU support. Overall computation time is approximately one minute."
B,0.8972477064220183,"Implementation of cost-robustness.
To implement cost-robustness of a contract setting with costs
(c1, c2, . . . , cn), we assume knowledge of only the range of costs, and calculate the contract using
costs (0, 0, . . . , cn ‚àíc1). This modeling assumption provides us with the flexibility of solving
contracts in settings without full-information while maintaining the approximation guarantee set forth
in Theorem 2."
B,0.8990825688073395,"E.3.1
Contract design solvers
To compute optimal contracts, we implemented the following solvers:"
B,0.9009174311926605,"‚Ä¢ Convex programming solvers: Given outcome distributions {fi} and costs {ci}, we solve the
MIN-PAY LP (eq. (4)), the MIN-BUDGET LP (eq. (2)), and the MIN-VARIANCE QP (eq. (9))
using cvxpy. All optimization programs enforce incentive compatibility (IC) constraints for the
target action n against all other actions i ‚àà[1, n ‚àí1]. We note that the Clarabel solver supports
both linear and quadratic programs."
B,0.9027522935779817,"‚Ä¢ Threshold contract solver: To find threshold contracts for problems with low-dimensional
outcome and action spaces (such as with MT-bench), we implement a brute-force solver which
performs full enumerations of all possible thresholds, as proposed by [31]. We refer to the Full
Enumeration Solver in [31, Appendix C.2.1] for further implementation details."
B,0.9045871559633027,NeurIPS Paper Checklist
CLAIMS,0.9064220183486239,1. Claims
CLAIMS,0.908256880733945,"Question: Do the main claims made in the abstract and introduction accurately reflect the
paper‚Äôs contributions and scope?"
CLAIMS,0.9100917431192661,Answer: [Yes]
LIMITATIONS,0.9119266055045872,2. Limitations
LIMITATIONS,0.9137614678899083,Question: Does the paper discuss the limitations of the work performed by the authors?
LIMITATIONS,0.9155963302752294,Answer: [Yes]
LIMITATIONS,0.9174311926605505,"Justification: See Section 6, and Appendix C."
THEORY ASSUMPTIONS AND PROOFS,0.9192660550458716,3. Theory Assumptions and Proofs
THEORY ASSUMPTIONS AND PROOFS,0.9211009174311927,"Question: For each theoretical result, does the paper provide the full set of assumptions and
a complete (and correct) proof?"
THEORY ASSUMPTIONS AND PROOFS,0.9229357798165138,Answer: [Yes]
THEORY ASSUMPTIONS AND PROOFS,0.9247706422018349,"Justification: See Appendix C, and Appendix D."
EXPERIMENTAL RESULT REPRODUCIBILITY,0.926605504587156,4. Experimental Result Reproducibility
EXPERIMENTAL RESULT REPRODUCIBILITY,0.9284403669724771,"Question: Does the paper fully disclose all the information needed to reproduce the main ex-
perimental results of the paper to the extent that it affects the main claims and/or conclusions
of the paper (regardless of whether the code and data are provided or not)?"
EXPERIMENTAL RESULT REPRODUCIBILITY,0.9302752293577982,Answer: [Yes]
EXPERIMENTAL RESULT REPRODUCIBILITY,0.9321100917431193,"Justification: See Section 5, Appendix E, and attached code."
OPEN ACCESS TO DATA AND CODE,0.9339449541284404,5. Open access to data and code
OPEN ACCESS TO DATA AND CODE,0.9357798165137615,"Question: Does the paper provide open access to the data and code, with sufficient instruc-
tions to faithfully reproduce the main experimental results, as described in supplemental
material?"
OPEN ACCESS TO DATA AND CODE,0.9376146788990826,Answer: [Yes]
OPEN ACCESS TO DATA AND CODE,0.9394495412844037,6. Experimental Setting/Details
OPEN ACCESS TO DATA AND CODE,0.9412844036697248,"Question: Does the paper specify all the training and test details (e.g., data splits, hyper-
parameters, how they were chosen, type of optimizer, etc.) necessary to understand the
results?"
OPEN ACCESS TO DATA AND CODE,0.9431192660550459,Answer: [Yes]
OPEN ACCESS TO DATA AND CODE,0.944954128440367,Justification: See Appendix E.
EXPERIMENT STATISTICAL SIGNIFICANCE,0.9467889908256881,7. Experiment Statistical Significance
EXPERIMENT STATISTICAL SIGNIFICANCE,0.9486238532110092,"Question: Does the paper report error bars suitably and correctly defined or other appropriate
information about the statistical significance of the experiments?"
EXPERIMENT STATISTICAL SIGNIFICANCE,0.9504587155963303,Answer: [NA]
EXPERIMENTS COMPUTE RESOURCES,0.9522935779816514,8. Experiments Compute Resources
EXPERIMENTS COMPUTE RESOURCES,0.9541284403669725,"Question: For each experiment, does the paper provide sufficient information on the com-
puter resources (type of compute workers, memory, time of execution) needed to reproduce
the experiments?"
EXPERIMENTS COMPUTE RESOURCES,0.9559633027522936,Answer: [Yes]
EXPERIMENTS COMPUTE RESOURCES,0.9577981651376147,Justification: See Appendix E.
CODE OF ETHICS,0.9596330275229358,9. Code Of Ethics
CODE OF ETHICS,0.9614678899082569,"Question: Does the research conducted in the paper conform, in every respect, with the
NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines?"
CODE OF ETHICS,0.963302752293578,Answer: [Yes]
BROADER IMPACTS,0.9651376146788991,10. Broader Impacts
BROADER IMPACTS,0.9669724770642202,"Question: Does the paper discuss both potential positive societal impacts and negative
societal impacts of the work performed?"
BROADER IMPACTS,0.9688073394495413,Answer: [Yes]
BROADER IMPACTS,0.9706422018348624,"Justification: See Section 1, and Section 6."
SAFEGUARDS,0.9724770642201835,11. Safeguards
SAFEGUARDS,0.9743119266055046,"Question: Does the paper describe safeguards that have been put in place for responsible
release of data or models that have a high risk for misuse (e.g., pretrained language models,
image generators, or scraped datasets)?"
SAFEGUARDS,0.9761467889908257,Answer: [NA]
LICENSES FOR EXISTING ASSETS,0.9779816513761468,12. Licenses for existing assets
LICENSES FOR EXISTING ASSETS,0.9798165137614679,"Question: Are the creators or original owners of assets (e.g., code, data, models), used in
the paper, properly credited and are the license and terms of use explicitly mentioned and
properly respected?"
LICENSES FOR EXISTING ASSETS,0.981651376146789,Answer: [NA]
NEW ASSETS,0.9834862385321101,13. New Assets
NEW ASSETS,0.9853211009174312,"Question: Are new assets introduced in the paper well documented and is the documentation
provided alongside the assets?"
NEW ASSETS,0.9871559633027523,Answer: [NA]
CROWDSOURCING AND RESEARCH WITH HUMAN SUBJECTS,0.9889908256880734,14. Crowdsourcing and Research with Human Subjects
CROWDSOURCING AND RESEARCH WITH HUMAN SUBJECTS,0.9908256880733946,"Question: For crowdsourcing experiments and research with human subjects, does the paper
include the full text of instructions given to participants and screenshots, if applicable, as
well as details about compensation (if any)?"
CROWDSOURCING AND RESEARCH WITH HUMAN SUBJECTS,0.9926605504587156,Answer: [NA]
CROWDSOURCING AND RESEARCH WITH HUMAN SUBJECTS,0.9944954128440368,"15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human
Subjects"
CROWDSOURCING AND RESEARCH WITH HUMAN SUBJECTS,0.9963302752293578,"Question: Does the paper describe potential risks incurred by study participants, whether
such risks were disclosed to the subjects, and whether Institutional Review Board (IRB)
approvals (or an equivalent approval/review based on the requirements of your country or
institution) were obtained?"
CROWDSOURCING AND RESEARCH WITH HUMAN SUBJECTS,0.998165137614679,Answer: [NA]
