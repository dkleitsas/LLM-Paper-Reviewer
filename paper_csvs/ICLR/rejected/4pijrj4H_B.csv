Section,Section Appearance Order,Paragraph
ABSTRACT,0.0,ABSTRACT
ABSTRACT,0.0021141649048625794,"Node representation learning has demonstrated its efficacy for various applica-
tions on graphs, which leads to increasing attention towards the area. However,
fairness is a largely under-explored territory within the field, which may lead to
biased results towards underrepresented groups in ensuing tasks. To this end, this
work theoretically explains the sources of bias in node representations obtained
via Graph Neural Networks (GNNs). Our analysis reveals that both nodal fea-
tures and graph structure lead to bias in the obtained representations. Building
upon the analysis, fairness-aware data augmentation frameworks on nodal fea-
tures and graph structure are developed to reduce the intrinsic bias. Our analysis
and proposed schemes can be readily employed to enhance the fairness of various
GNN-based learning mechanisms. Extensive experiments on node classification
and link prediction are carried out over real networks in the context of graph con-
trastive learning. Comparison with multiple benchmarks demonstrates that the
proposed augmentation strategies can improve fairness in terms of statistical par-
ity and equal opportunity, while providing comparable utility to state-of-the-art
contrastive methods."
INTRODUCTION,0.004228329809725159,"1
INTRODUCTION"
INTRODUCTION,0.006342494714587738,"Graphs are widely used in modeling and analyzing complex systems such as biological networks or
financial markets, which leads to a rise in attention towards various machine learning (ML) tasks
over graphs. Specifically, node representation learning is a field with growing popularity. Node
representations are mappings from nodes to vector embeddings containing both structural and at-
tributive information. Their applicability on ensuing tasks has enabled various applications such as
traffic forecasting (Opolka et al., 2019), and crime forecasting (Jin et al., 2020). Graph neural net-
works (GNNs) have been prevalently used for representation learning, where node embeddings are
created by repeatedly aggregating information from neighbors for both supervised and unsupervised
learning tasks (Kipf & Welling, 2017; Veliˇckovi´c et al., 2018; Garc´ıa-Dur´an & Niepert, 2017)."
INTRODUCTION,0.008456659619450317,"It has been shown that ML models propagate pre-existing bias in training data, which may lead to
discriminative results for ensuing applications (Dwork et al., 2012; Beutel et al., 2017). Particular
to ML over graphs, while GNN-based methods achieve state-of-the-art results for graph represen-
tation learning, they also amplify already existing biases in training data (Dai & Wang, 2020). For
example, nodes in social networks tend to connect to other nodes with similar attributes, leading
to denser connectivity between nodes with same sensitive attributes (e.g., gender) (Hofstra et al.,
2017). Thus, by aggregating information from the neighbors, the representations obtained by GNNs
may be highly correlated with the sensitive attributes. This causes discrimination in ensuing tasks
even when the sensitive attributes are not directly used in training (Hajian & Domingo-Ferrer, 2013)."
INTRODUCTION,0.010570824524312896,"Data augmentation has been widely utilized to improve generalizability in trained models, as well
as enable learning in unsupervised methods such as contrastive or self-supervised learning. Aug-
mentation schemes have been extensively studied in vision (Shorten & Khoshgoftaar, 2019; Hjelm
et al., 2018) and natural language processing (Zhang et al., 2015; Kafle et al., 2017). However,
there are comparatively limited work in the graph domain due to the complex, non-Euclidean struc-
ture of graphs. To the best of our knowledge, (Agarwal et al., 2021) is the only study that designs
fairness-aware graph data augmentation in the contrastive learning framework to reduce bias."
INTRODUCTION,0.012684989429175475,Under review as a conference paper at ICLR 2022
INTRODUCTION,0.014799154334038054,"This study theoretically investigates the sources of bias in GNN-based learning and in turn improves
fairness in node representations by employing fairness-aware graph data augmentation schemes.
Proposed schemes corrupt both input graph topology and nodal features adaptively, in order to re-
duce the corresponding terms in the analysis that lead to bias. Although the proposed schemes are
presented over their applications using contrastive learning, the introduced augmentation strategies
can be flexibly utilized in several GNN-based learning approaches together with other fairness-
enhancement methods. Our contributions in this paper can be summarized as follows:
c1) We theoretically analyze the sources of bias that is propagated towards node representations in
a GNN-based learning framework.
c2) Based on the analysis, we develop novel fairness-aware graph data augmentations that can re-
duce potential bias in learning node representations. Our approach is adaptive to both input graph
and sensitive attributes, and to the best of our knowledge, is the first study that tackles fairness en-
hancement through adaptive graph augmentation design.
c3) The proposed strategies incur low additional computation complexity compared to non-adaptive
counterparts, and are compatible to operate in conjunction with various GNN-based learning frame-
works, including other fairness enhancement methods.
c4) Theoretical analysis is provided to corroborate the effectiveness of the proposed feature masking
and node sampling augmentation schemes.
c5) Performance of the proposed graph data augmentation schemes is evaluated on real networks
for both node classification and link prediction tasks. It is shown that compared to state-of-the-art
graph contrastive learning methods, the novel augmentation schemes improve fairness metrics while
providing comparable utility measures."
RELATED WORK,0.016913319238900635,"2
RELATED WORK"
RELATED WORK,0.019027484143763214,"Representation learning on graphs. Conventional graph representation learning approaches can
be summarized under two categories: factorization-based and random walk-based approaches.
Factorization-based methods aim to minimize the difference between the inner product of node
representations and a deterministic similarity metric between them (Ahmed et al., 2013; Cao et al.,
2015; Ou et al., 2016). Random walk-based approaches, on the other hand, employ stochastic mea-
sures of similarity between nodes (Perozzi et al., 2014; Grover & Leskovec, 2016; Tang et al., 2015;
Chen et al., 2018). GNNs have gained popularity in representation learning, for both supervised
(Kipf & Welling, 2017; Veliˇckovi´c et al., 2018; Hu et al., 2019; Wu et al., 2019), and unsupervised
tasks, e.g., (Garc´ıa-Dur´an & Niepert, 2017; Hamilton et al., 2017). Specifically, recent success of
contrastive learning on visual representation learning (Wu et al., 2018; Ye et al., 2019; Ji et al., 2019)
has paved the way for contrastive learning for unsupervised graph representation learning."
RELATED WORK,0.021141649048625793,"Graph data augmentation. Augmentation strategies have been extensively investigated in vision
(Shorten & Khoshgoftaar, 2019; Hjelm et al., 2018) and natural language processing (Zhang et al.,
2015; Kafle et al., 2017) domains. However, the area is comparatively under-explored in the graph
domain due to the complex, non-Euclidean topology of graphs. Graph augmentation based on graph
structure modification has been developed to improve the utility of ensuing tasks (Rong et al., 2019;
Zhao et al., 2020; Chen et al., 2020a). Meanwhile, graph data augmentation has been used to gen-
erate graph views for unsupervised graph contrastive learning, see, e.g., (Veliˇckovi´c et al., 2019;
Opolka et al., 2019; Zhu et al., 2020; 2021), which achieves state-of-the-art results in various learn-
ing tasks over graphs such as node classification, regression, and link prediction (Opolka et al., 2019;
Veliˇckovi´c et al., 2019; You et al., 2020; Zhu et al., 2020; Peng et al., 2020; Hassani & Khasahmadi,
2020). Among which, (Zhu et al., 2020) is the first study that aims to maximize the agreement of
node-level embeddings across two corrupted graph views. Building upon (Zhu et al., 2020), (Zhu
et al., 2021) develops adaptive augmentation schemes with respect to various node centrality mea-
sures and achieves better results. However, none of these studies are fairness-aware."
RELATED WORK,0.023255813953488372,"Fairness-aware learning on graphs. A pioneering study tackling the fairness problem in graph
representation learning based on random walks is developed in (Rahman et al., 2019). In addi-
tion, adversarial regularization is employed to account for fairness of node representations (Dai &
Wang, 2020; Bose & Hamilton, 2019; Fisher et al., 2020) where (Dai & Wang, 2020) is presented
specifically for node classification, and (Fisher et al., 2020) works on knowledge graphs. (Buyl &
De Bie, 2020) also aims to create fair node representations by utilizing a Bayesian approach where
sensitive information is modeled in the prior distribution. Contrary to these aforementioned works,"
RELATED WORK,0.02536997885835095,Under review as a conference paper at ICLR 2022
RELATED WORK,0.02748414376321353,"our framework is built on a theoretical analysis (developed within this paper). Similar to the works
mentioned above, the proposed methods can be utilized within the learning process to mitigate bias
by modifying the learned model (i.e., in-processing fairness strategy). In addition, the proposed
schemes can also be regarded as “pre-processing” tools, implying their compatibility to a wide array
of GNN-based learning schemes in a versatile manner. Furthermore, (Ma et al., 2021) carries out a
PAC-Bayesian analysis and connects the concept of subgroup generalization to accuracy disparity,
and (Zeng et al., 2021) introduces several methods including GNN-based ones to decrease the bias
for the representations of heterogeneous information networks. While (Li et al., 2021; Laclau et al.,
2021) modify adjacency to improve different fairness measures specifically for link prediction, (Buyl
& De Bie, 2021) designs a regularizer for the same purpose. With a specific interest on individual
fairness over graphs, (Dong et al., 2021) employs a ranking-based strategy. A biased edge dropout
scheme is proposed in (Spinelli et al., 2021) to improve fairness. However, the scheme therein is not
adaptive to the graph structure (the parameters of the framework are independent of the input graph
topology). Fairness-aware graph contrastive learning is first studied in (Agarwal et al., 2021), where
a layer-wise weight normalization scheme along with graph augmentations is introduced. However,
the fairness-aware augmentation utilized therein is designed primarily for counterfactual fairness."
FAIRNESS IN GNN-BASED REPRESENTATION LEARNING,0.02959830866807611,"3
FAIRNESS IN GNN-BASED REPRESENTATION LEARNING"
FAIRNESS IN GNN-BASED REPRESENTATION LEARNING,0.03171247357293869,"GNN-based approaches are the state-of-the-art for node representation learning. However, it has
been demonstrated that the utilization of graph structure in the learning process not just propagates
but also amplifies a possible bias towards certain sensitive groups (Dai & Wang, 2020). To this
end, this section investigates the sources of bias in the generated representations via GNN-based
learning. It carries out an analysis revealing that both nodal features and graph structure lead to bias,
for which several graph data augmentation frameworks are introduced."
PRELIMINARIES,0.03382663847780127,"3.1
PRELIMINARIES"
PRELIMINARIES,0.035940803382663845,"This study aims to learn fairness-aware nodal representations for a given graph G := (V, E) where
V := {v1, v1, · · · , vN} denotes the node set, and E ⊆V × V represents the edge set. X ∈RN×F
and A ∈{0, 1}N×N are used to denote the feature and adjacency matrices, respectively, with
the (i, j)-th entry aij = 1 if and only if eij := (vi, vj) ∈E. Degree matrix D ∈RN×N is
defined to be a diagonal matrix with the nth diagonal entry dn denoting the degree of vn. For the
fairness examination, sensitive attributes of the nodes are represented with s ∈{0, 1}N×1, where
the existence of a single, binary sensitive attribute is considered. In this work, unsupervised methods
are chosen as enabling schemes for the representation generation where given the inputs A, X, and
s, the main purpose is to learn a mapping f : RN×N × RN×F × RN×1 →RN×F L that generates
F L dimensional (generally F L ≪F) unbiased nodal representations HL = f(A, X, s) ∈RN×F L"
PRELIMINARIES,0.03805496828752643,"through an L-layer GNN, which can be used in an ensuing task such as node classification. xi ∈RF ,
hl
i ∈RF l, and si ∈{0, 1} denote the feature vector, representation at layer l and the sensitive
attribute of node vi. Furthermore, S0 and S1 denote the set of nodes whose sensitive attributes are
0 and 1, respectively. Define inter-edge set Eχ := {eij|vi ∈Sa, vj ∈Sb, a ̸= b}, while intra-edge
set is defined as Eω := {eij|vi ∈Sa, vj ∈Sb, a = b} . Similarly, the set of nodes having at least
one inter edge is denoted by Sχ, while Sω defines the set of nodes that have no inter-edges. The
intersection of the sets S0, Sχ is denoted as Sχ
0 . Additionally, dχ
i and dω
i denote the numbers of
inter-edges and intra-edges adjacent to vi, respectively. Finally, |˙| denotes the entry-wise absolute
value for scalar or vector inputs, while it is used for the cardinality when the input is a set."
ANALYSIS FOR BIAS IN GNN REPRESENTATIONS,0.040169133192389,"3.2
ANALYSIS FOR BIAS IN GNN REPRESENTATIONS"
ANALYSIS FOR BIAS IN GNN REPRESENTATIONS,0.042283298097251586,"This subsection presents an analysis to find out the sources of bias in node representations generated
by GNNs. Analysis is developed for the mean aggregation scheme in which aggregated representa-
tions at layer l, Zl ∈RN×F l, are generated such that zl
i =
1
di
P"
ANALYSIS FOR BIAS IN GNN REPRESENTATIONS,0.04439746300211417,"vj∈N(i) hl−1
j
for i = {1, · · · , N},
where zl
i is the ith row of Zl corresponding to node vi, di denotes the degree of node vi, N(i) refers
to the neighbor set of node vi (including itself). The recursive relation in a GNN layer in which left
normalization is applied for feature smoothing is Hl = σ(D−1(A + IN)Hl−1Wl) where Wl is
the weight matrix in layer l, and IN ∈RN×N denotes an identity matrix. With these definitions, the"
ANALYSIS FOR BIAS IN GNN REPRESENTATIONS,0.046511627906976744,Under review as a conference paper at ICLR 2022
ANALYSIS FOR BIAS IN GNN REPRESENTATIONS,0.048625792811839326,"relation between the aggregated information Zl and node representations Hl becomes equivalent
to Hl = σ(ZlWl) at the lth GNN layer. As the provided analysis is applicable to every layer, l
superscript is dropped in the following to keep the notation simple."
ANALYSIS FOR BIAS IN GNN REPRESENTATIONS,0.0507399577167019,"It has been demonstrated that features that are correlated with the sensitive attribute result in bias
even when the sensitive attribute is not utilized in the learning process (Hajian & Domingo-Ferrer,
2013). This work provides an analysis on the correlation of s with Z, and aims to reduce it. Note
that, the reduction of correlation can still allow the generation of discriminable representations for
different class labels, if the discriminability is provided by non-sensitive attributes. The (sample)
correlation between the sensitive attributes s and aggregated representations can be written as"
ANALYSIS FOR BIAS IN GNN REPRESENTATIONS,0.052854122621564484,"ρi = Corr(˜z:,i, s) ="
ANALYSIS FOR BIAS IN GNN REPRESENTATIONS,0.05496828752642706,"PN
j=1(zji −1"
ANALYSIS FOR BIAS IN GNN REPRESENTATIONS,0.05708245243128964,"N
PN
k=1 zki)( sj −1"
ANALYSIS FOR BIAS IN GNN REPRESENTATIONS,0.05919661733615222,"N
PN
k=1 sk)
qPN
j=1(zji −1"
ANALYSIS FOR BIAS IN GNN REPRESENTATIONS,0.0613107822410148,"N
PN
k=1 zki)2
qPN
j=1( sj −1"
ANALYSIS FOR BIAS IN GNN REPRESENTATIONS,0.06342494714587738,"N
PN
k=1 sk)2"
ANALYSIS FOR BIAS IN GNN REPRESENTATIONS,0.06553911205073996,"where ˜z:,i, i = 1 · · · F is the ith column of Z. In the analysis, following assumptions are made:
A1: Node representations have sample means µ0 and µ1 respectively across each group, where
µi = mean(hj | vj ∈Si). Throughout the paper, mean(·) denotes the sample mean operation.
A2: Node representations have finite maximal deviations ∆0 and ∆1: That is, ∥hj −µi∥∞≤∆i,
∀vj ∈Si with i ∈{0, 1}.
Based on these assumptions, the following theorem shows that ∥ρ∥1 can be bounded from above,
which will serve as a guideline to design a fairness-aware graph data augmentation scheme.
Theorem 1. The total correlation between the sensitive attributes s and representations Z that are
obtained after a mean aggregation over graph G, ∥ρ∥1, can be bounded above by"
ANALYSIS FOR BIAS IN GNN REPRESENTATIONS,0.06765327695560254,"∥ρ∥1 ≤∥c∥1(∥δ∥1 max(γ1, γ2) + 2N∆)
(1)"
ANALYSIS FOR BIAS IN GNN REPRESENTATIONS,0.06976744186046512,"where ci :=
√"
ANALYSIS FOR BIAS IN GNN REPRESENTATIONS,0.07188160676532769,"|S0||S1|
Nσ˜z:,i
, with σθ :=
q"
"N
PN",0.07399577167019028,"1
N
PN
n=1(θn −1"
"N
PN",0.07610993657505286,"N
PN
i=1 θi)2, ∀θ ∈RN, δ := µ0 −µ1,"
"N
PN",0.07822410147991543,"γ1 :=
1 −|Sχ
0 |
|S0| −|Sχ
1 |
|S1|
, γ2 =
1 −2 min
 
mean
 
dχ
m
dχ
m+dω
m |vm ∈S0

, mean
 
dχ
n
dχ
n+dω
n |vn ∈S1
,
∆= max(∆0, ∆1)."
"N
PN",0.080338266384778,"The proof is given in Appendix A.1. The upper bound in equation 1 can be lowered by i) utilizing
feature masking which has an effect on the term ∥µ0 −µ1∥1 at the first layer, ii) node sampling that
can change the value of γ1, iii) edge augmentations that can reduce the value of γ2."
FAIR GRAPH DATA AUGMENTATIONS,0.0824524312896406,"3.3
FAIR GRAPH DATA AUGMENTATIONS"
FAIR GRAPH DATA AUGMENTATIONS,0.08456659619450317,"Data augmentation has been studied extensively in order to enable certain unsupervised learning
schemes such as contrastive learning, self-supervised learning or as a general framework to improve
the generalizability of the trained models over unseen data. However, the design of graph data
augmentations is still a developing research area due to the challenges introduced by complex, non-
Euclidean graph structure. Several augmentation schemes over the graph structure are proposed in
order to enhance the generalizability of GNNs (Rong et al., 2019; Zhao et al., 2020), while both
topological (e.g., edge/node deletion) and attributive (e.g., feature shuffling/masking) corruption
schemes have been developed in the context of contrastive learning (Veliˇckovi´c et al., 2019; You
et al., 2020; Zhu et al., 2021; 2020). However, none of these works are fairness-aware. Hence, in
this work, novel data augmentation schemes that are adaptive to the sensitive attributes, as well as
the input graph structure are introduced with Theorem 1 as guidelines."
FEATURE MASKING,0.08668076109936575,"3.3.1
FEATURE MASKING"
FEATURE MASKING,0.08879492600422834,"In this subsection, an augmentation framework on nodal features H0 = X is presented in order
to mitigate possible intrinsic bias propagated by them. Note that ∥δ∥1 in equation 1 is minimized
when all nodal features are the same (i.e., all nodal features masked/zeroed out). However, this
would result in the loss of all information in nodal features. Motivated by this, the proposed scheme
aims to improve uniform feature masking in terms of reducing ∥δ∥1 for a given masking budget
(a total amount of nodal features to be masked in expectation). Specifically, the random feature
masking scheme used in (You et al., 2020; Zhu et al., 2020) where each feature has the same masking
probability is modified to assign higher masking probabilities to the features varying more across"
FEATURE MASKING,0.09090909090909091,Under review as a conference paper at ICLR 2022
FEATURE MASKING,0.09302325581395349,"different sensitive groups. Thus, masking probabilities are generated based on the term |δ|. Let ¯δ :=
|δ|−min(|δ|)
max(|δ|)−min(|δ|) denote the normalized |δ|, the feature masking probability can then be designed as"
FEATURE MASKING,0.09513742071881606,p(m) = min α¯δ
"F
PF",0.09725158562367865,"1
F
PF
i=1 ¯δi
, 1 ! (2)"
"F
PF",0.09936575052854123,"where α is a hyperparameter. The feature mask m ∈{0, 1}F is then generated as a random binary
vector, with the i-th entry of m drawn independently from Bernoulli distribution with pi = (1 −
p(m)
i
) for i = 1, . . . , F. The augmented feature matrix is obtained via"
"F
PF",0.1014799154334038,"˜X = [m ◦x1; . . . ; m ◦xN]⊤,
(3)"
"F
PF",0.10359408033826638,"where [·; ·] is the concatenation operator, and ◦is the Hadamard product. Since the proposed feature
masking scheme is probabilistic in nature, the resulting ˜δ is a random vector with entry ˜δi having"
"F
PF",0.10570824524312897,"|˜δi| =
|δi|,
with probability pi,
0,
with probability 1 −pi
(4)"
"F
PF",0.10782241014799154,"where pi := 1 −p(m)
i
is the probability that the ith feature is not masked in the graph view. The
following proposition shows that the novel, adaptive feature masking approach can decrease ∥ρ∥1
compared to random feature masking, the proof of which can be found in Appendix A.2.
Proposition 1. In expectation, the proposed adaptive feature masking scheme results in a lower
∥˜δ∥1 value compared to uniform feature masking, meaning"
"F
PF",0.10993657505285412,"Ep[∥˜δ∥1] ≤Eq[∥˜δ∥1]
(5)"
"F
PF",0.11205073995771671,"where q corresponds to uniform masking with masking probability 1 −qi, and qi = 1"
"F
PF",0.11416490486257928,"F
PF
j=1 pj."
NODE SAMPLING,0.11627906976744186,"3.3.2
NODE SAMPLING"
NODE SAMPLING,0.11839323467230443,"In this subsection, an adaptive node sampling framework is introduced to decrease the term γ1 :=
1−
  |Sχ
0 |
|S0| + |Sχ
1 |
|S1|
 =
1−
 
|Sχ
0 |
|Sχ
0 |+|Sω
0 | +
|Sχ
1 |
|Sχ
1 |+|Sω
1 |
 in equation 1 of Theorem 1, and hence to reduce
the intrinsic bias that the graph topology can create. A small γ1 suggests a more balanced population
distribution with respect to |Sχ| and |Sω|. Specifically, a subset of nodes is selected at every epoch
and the training is carried over the subgraph induced by the sampled nodes. This augmentation
mainly aims at reducing the bias by selecting a subset of more balanced groups, meanwhile it also
helps reduce the computational and memory complexity in training."
NODE SAMPLING,0.12050739957716702,"The proposed node sampling is adaptive to the input graph, that is, it depends on the cardinalities of
the sets Sχ
0 , Sχ
1 , Sω
0 , and Sω
1 . The developed scheme copes with the case |Sχ| ≤|Sω|. In algorithm
design, it is assumed that if |Sχ| ≤|Sω| then |Sχ
0 | ≤|Sω
0 | and |Sχ
1 | ≤|Sω
1 | (same for Sω), which
holds for all real graphs in our experiments, but our design principles can be readily extended to
different settings as well."
NODE SAMPLING,0.1226215644820296,"Given input graph G , the augmented graph ˜G can be obtained as an induced subgraph from a subset
of nodes ˜V. All nodes in Sχ are retained, ( ˜Sχ
0 = Sχ
0 and ˜Sχ
1 = Sχ
1 ), while subsets of nodes ¯Sω
0
and ¯Sω
1 are randomly sampled from Sω
0 and Sω
1 with sample sizes | ¯Sω
0 | = |Sχ
0 | and | ¯Sω
1 | = |Sχ
1 |,
respectively . See also Algorithm 1 in Appendix A.3. The cardinalities of node sets in the resulting
graph augmentation ˜G satisfy γ1 = 0. (See Appendix A.3 for details.)"
NODE SAMPLING,0.12473572938689217,"Remark 1.
Note that the resulting graph ˜G yields γ1 = 0 as long as | ˜Sχ
0 |/| ˜S0| = 1/2 + ϕ and
| ˜Sχ
1 |/| ˜S1| = 1/2 −ϕ is satisfied for any −1/2 < ϕ < 1/2. The presented scheme here simply sets
ϕ = 0, which results in a balanced ratio across groups, but the performance can be improved if ϕ is
selected carefully for specific datasets."
AUGMENTATION ON GRAPH CONNECTIVITY,0.12684989429175475,"3.3.3
AUGMENTATION ON GRAPH CONNECTIVITY"
AUGMENTATION ON GRAPH CONNECTIVITY,0.12896405919661733,"Minimizing γ2 to zero in Theorem 1 suggests a graph topology where all nodes in the network have
the same number of neighbors from each sensitive group, i.e., dω
i = dχ
i , ∀vi ∈V. Since, for this"
AUGMENTATION ON GRAPH CONNECTIVITY,0.13107822410147993,Under review as a conference paper at ICLR 2022
AUGMENTATION ON GRAPH CONNECTIVITY,0.1331923890063425,"scenario, γ2 =
1 −2 min
 
mean
 
dχ
m
dχ
m+dω
m |vm ∈S0

, mean
 
dχ
n
dχ
n+dω
n |vn ∈S1
 = 0. Note that this
finding is parallel to the main design idea of Fairwalk (Rahman et al., 2019) in which the transition
probabilities are equalized for different sensitive groups in random walks in order to reduce bias in
random walk-based representations."
AUGMENTATION ON GRAPH CONNECTIVITY,0.13530655391120508,"This finding suggests that an ideal augmented graph ˜G could be generated by deleting edges from
or adding edges to G such that each node has exactly the same number of neighbors from each
sensitive group. However, such a per-node sampling scheme is computationally complex and may
not be ideal for large-scale graphs. To this end, we propose global probabilistic edge augmentation
schemes such that in the augmented graph,"
AUGMENTATION ON GRAPH CONNECTIVITY,0.13742071881606766,"E[| ˜Eω|] = E[| ˜Eχ|].
(6)"
AUGMENTATION ON GRAPH CONNECTIVITY,0.13953488372093023,"Here the expectation is taken with respect to the randomness in the augmentation design. It is shown
in our experiments that the global approach can indeed help to reduce the value of γ2 (see Appendix
A.8). Note that even though the strategy is presented for the case where |Eχ| ≤|Eω| (which holds for
all datasets considered herein), the scheme can be easily generalized to the case where |Eχ| > |Eω|."
AUGMENTATION ON GRAPH CONNECTIVITY,0.1416490486257928,"In social networks, users connect to other users that are similar to themselves with higher proba-
bilities (Mislove et al., 2010), hence the graph connectivity naturally inherits bias towards potential
minority groups. Motivated by the reduction of γ2, the present subsection introduces augmentation
schemes over edges to provide a balanced graph structure that can mitigate such bias."
AUGMENTATION ON GRAPH CONNECTIVITY,0.14376321353065538,"Adaptive Edge Deletion.
To obtain a balanced graph structure, we first develop an adaptive edge
deletion scheme where edges are removed with certain deletion probabilities. Based on the graph
structure and sensitive attributes, the probabilities are assigned as"
AUGMENTATION ON GRAPH CONNECTIVITY,0.14587737843551796,p(e)(eij) =
AUGMENTATION ON GRAPH CONNECTIVITY,0.14799154334038056,"


 

"
AUGMENTATION ON GRAPH CONNECTIVITY,0.15010570824524314,"1 −π,
if si ̸= sj
1 −
|Eχ|
2|Eω
S0|π,
if si = sj = 0"
AUGMENTATION ON GRAPH CONNECTIVITY,0.1522198731501057,"1 −
|Eχ|
2|Eω
S1|π,
if si = sj = 1
(7)"
AUGMENTATION ON GRAPH CONNECTIVITY,0.1543340380549683,"where p(e)(eij) is the removal probability of the edge connecting nodes vi and vj, π is a hyper-
parameter, and Eω
Si denotes the set of intra-edges connecting the nodes in Si. Note that π is chosen
to be 1 in this work, but it can be selected by schemes such as grid search to improve performance.
While this graph-level edge deletion scheme does not not directly minimize γ2, it provides a bal-
anced global structure such that Ep(e)[| ˜Eω
S0|] = Ep(e)[| ˜Eω
S1|] = 1"
AUGMENTATION ON GRAPH CONNECTIVITY,0.15644820295983086,"2Ep(e)[| ˜Eχ|], henceforth equation 6
holds in the augmented graph ˜G, see Appendix A.4 for more details."
AUGMENTATION ON GRAPH CONNECTIVITY,0.15856236786469344,"Adaptive Edge Addition.
For graphs that are very sparse, edge deletion may not be an ideal graph
augmentation as it may lead to unstable results. In this case, an adaptive edge addition framework
is developed to obtain a more balanced graph structure. Specifically, for graphs where |Eχ| ≤|Eω|
holds, |Eω| −|Eχ| pairs of the nodes are sampled uniformly from Sχ
0 and Sχ
1 with replacement.
Then, a new edge is created to connect each sampled pair of nodes, in order to obtain an augmented
graph ˜G for which equation 6 holds. Note that experimental results in Section 4 also show that edge
addition may become a better alternative over edge deletion for graphs that are sparse in inter-edges."
AUGMENTATION ON GRAPH CONNECTIVITY,0.160676532769556,"Remark 2. Overall, while a subset of these augmentation schemes can be employed based on the
input graph properties (sparse/dense, large/small), all schemes can also be employed on the input
graph sequentially. The framework where node sampling, edge deletion, edge addition are employed
sequentially together with feature masking is called ’FairAug’. It is worth emphasizing that edge
augmentation schemes should always follow node sampling, as performing node sampling changes
the distribution of edges. Since the cardinalities of different sets will be calculated only once (in
pre-processing), we note that the proposed augmentations will not incur significant additional cost."
EXPERIMENTS,0.16279069767441862,"4
EXPERIMENTS"
EXPERIMENTS,0.1649048625792812,"In this section, experiments are carried out on 7 real-world datasets for node classification and link
prediction tasks. Performances of our proposed adaptive augmentations are compared with baseline
schemes in terms of utility and fairness metrics."
EXPERIMENTS,0.16701902748414377,Under review as a conference paper at ICLR 2022
DATASETS AND SETTINGS,0.16913319238900634,"4.1
DATASETS AND SETTINGS"
DATASETS AND SETTINGS,0.17124735729386892,"Datasets.
Experiments are conducted on real-world social and citation networks consisting of
Pokec-z, Pokec-n (Dai & Wang, 2020), UCSD34, Berkeley13 (Red et al., 2011), Cora, Citeseer,
Pubmed. Pokec-z and Pokec-n sampled from a larger social network, Pokec (Takac & Zabovsky,
2012), are used in node classification experiments where Pokec is a Facebook-like, social network
used in Slovakia. While the original network includes millions of users, Pokec-z and Pokec-n are
generated by collecting the information of users from two major regions (Dai & Wang, 2020). The
region information is treated as the sensitive attribute, while the working field of the users is the
label to be predicted in classification. Both attributes are binarized, see also (Dai & Wang, 2020).
UCSD34 and Berkeley13 are Facebook networks where edges are created based on the friendship
information in social media. Each user (node) has 7 dimensional nodal features including stu-
dent/faculty status, gender, major, etc. Gender is utilized as the sensitive attribute in UCSD34 and
Berkeley13. Cora, Citeseer, and Pubmed are citation networks that consider articles as nodes and
descriptions of articles as their nodal attributes. In these datasets, the category of the articles is used
as the sensitive attribute. Statistics for datasets are presented in Tables 5 and 6 of Appendix A.5."
DATASETS AND SETTINGS,0.1733615221987315,"Evaluation Metrics. Performance of the node classification task is evaluated in terms of accuracy.
Two quantitative group fairness metrics are used to assess the effectiveness of fairness aware strate-
gies in terms of statistical parity: ∆SP = |P(ˆy = 1 | s = 0) −P(ˆy = 1 | s = 1)| and equal
opportunity: ∆EO = |P(ˆy = 1 | y = 1, s = 0) −P(ˆy = 1 | y = 1, s = 1)|, where y and
ˆy denote the ground-truth and the predicted labels, respectively. Lower values for ∆SP and ∆EO
imply better fairness performance (Dai & Wang, 2020). For the link prediction task, both accu-
racy and Area Under the Curve (AUC) are employed as utility metrics. As the fairness metrics,
the definitions of statistical parity and equal opportunity are modified for link prediction such that
∆SP = |P(ˆy = 1 | e ∈Eχ)−P(ˆy = 1 | e ∈Eω)| and ∆EO = |P(ˆy = 1 | y = 1, e ∈Eχ)−P(ˆy =
1 | y = 1, e ∈Eω)|, where e denotes the edges and ˆy is the decision for whether the edge exists."
DATASETS AND SETTINGS,0.17547568710359407,"Implementation details. The proposed augmentation scheme is tested on social networks with node
representations generated through an unsupervised contrastive learning framework. Node classifica-
tion and link prediction are employed as ensuing tasks that evaluate the performances of generated
node representations. In addition, we also provide link prediction results obtained via an end-to-end
graph convolutional network (GCN) model on citation networks. Further details on the implemen-
tation of the experiments are provided in Appendix A.7. Contrastive learning is utilized to demon-
strate the effects of the proposed augmentation schemes, as augmentations are inherently utilized in
its original design (You et al., 2020). Specifically, GRACE (Zhu et al., 2020) is employed as our
baseline framework. GRACE constructs two different graph views using random, non-adaptive aug-
mentation schemes, which we replaced by augmentations obtained via FairAug in the experiments.
For more details on the employed contrastive learning framework, see Appendix A.6."
DATASETS AND SETTINGS,0.17758985200845667,"Baselines. We present the performances on a total of 7 baseline studies. As we examine our pro-
posed augmentations in the context of contrastive learning, graph contrastive learning schemes are
employed as the natural baselines. Said schemes are Deep Graph Infomax (DGI) (Veliˇckovi´c et al.,
2019), Deep Graph Contrastive Representation Learning (GRACE) (Zhu et al., 2020), Graph Con-
trastive Learning with Adaptive Augmentations (GCA) (Zhu et al., 2021), and Fair and Stable Graph
Representation Learning (NIFTY) (Agarwal et al., 2021). We note that the objective function of
NIFTY (Agarwal et al., 2021) consists of both supervised and unsupervised components, and its
results for the unsupervised setting are provided here given the scope of this paper. In addition, as
another family of unsupervised approaches, random walk-based methods for unsupervised node rep-
resentation generation are also considered. Such schemes include DeepWalk (Perozzi et al., 2014),
Node2Vec (Grover & Leskovec, 2016), and FairWalk (Rahman et al., 2019). Lastly, for end-to-end
link prediction, we present results for the random edge dropout scheme (Rong et al., 2019)."
EXPERIMENTAL RESULTS,0.17970401691331925,"4.2
EXPERIMENTAL RESULTS"
EXPERIMENTAL RESULTS,0.18181818181818182,"The comparison between baselines and our proposed framework FairAug is presented in Table 1.
Note that ’FairAug wo ED’ in Table 1 refers to FairAug where edge deletion (ED) is removed
from the chain, but all node sampling (NS), edge addition (EA), and feature masking (FM) are
still employed. Firstly, the results of Table 1 show that FairAug provides roughly 45% reduction
in fairness metrics over GRACE, the strategy it is built upon, while providing similar accuracy"
EXPERIMENTAL RESULTS,0.1839323467230444,Under review as a conference paper at ICLR 2022
EXPERIMENTAL RESULTS,0.18604651162790697,Table 1: Comparative Results with Baselines on Node Classification
EXPERIMENTAL RESULTS,0.18816067653276955,"Pokec-z
Pokec-n"
EXPERIMENTAL RESULTS,0.19027484143763213,"Accuracy (%)
∆SP (%)
∆EO (%)
Accuracy (%)
∆SP (%)
∆EO(%)"
EXPERIMENTAL RESULTS,0.19238900634249473,"DeepWalk
60.82 ± 0.77
9.79 ± 3.43
8.51 ± 1.67
59.66 ± 1.02
20.19 ± 3.38
22.96 ± 3.44
Node2Vec
61.56 ± 0.50
16.18 ± 12.40
14.88 ± 12.31
60.31 ± 0.75
20.76 ± 1.64
20.32 ± 1.36
FairWalk
57.48 ± 0.11
12.03 ± 10.19
10.95 ± 8.82
57.44 ± 0.73
15.00 ± 1.40
15.72 ± 1.80"
EXPERIMENTAL RESULTS,0.1945031712473573,"DGI
65.56 ± 1.29
4.82 ± 1.89
5.81 ± 0.97
65.71 ± 0.24
5.18 ± 2.15
7.16 ± 2.44
GRACE
67.09 ± 0.47
6.20 ± 2.22
6.18 ± 2.46
67.90 ± 0.13
8.85 ± 1.39
10.13 ± 2.11
GCA
66.85 ± 0.71
7.40 ± 4.14
7.46 ± 4.09
67.02 ± 0.43
5.31 ± 0.62
7.75 ± 1.49
NIFTY
66.09 ± 0.40
5.86 ± 1.97
6.19 ± 1.72
65.44 ± 0.17
5.18 ± 2.80
5.78 ± 3.18"
EXPERIMENTAL RESULTS,0.19661733615221988,"FairAug
67.04 ± 0.69
3.29 ± 1.66
3.04 ± 1.37
67.88 ± 0.45
4.81 ± 0.59
6.52 ± 0.99
FairAug wo ED
67.38 ± 0.31
2.66 ± 3.22
4.26 ± 2.92
67.57 ± 0.18
3.37 ± 0.62
5.13 ± 1.12"
EXPERIMENTAL RESULTS,0.19873150105708245,Table 2: Ablation Study on Node Classification
EXPERIMENTAL RESULTS,0.20084566596194503,"Pokec-z
Pokec-n"
EXPERIMENTAL RESULTS,0.2029598308668076,"Accuracy (%)
∆SP (%)
∆EO (%)
Accuracy (%)
∆SP (%)
∆EO(%)"
EXPERIMENTAL RESULTS,0.20507399577167018,"GRACE
67.09 ± 0.47
6.20 ± 2.22
6.18 ± 2.46
67.90 ± 0.13
8.85 ± 1.39
10.13 ± 2.11"
EXPERIMENTAL RESULTS,0.20718816067653276,"FairAug
67.04 ± 0.69
3.29 ± 1.66
3.04 ± 1.37
67.88 ± 0.45
4.81 ± 0.59
6.52 ± 0.99
FairAug wo FM
66.88 ± 0.42
4.64 ± 1.91
5.50 ± 1.80
66.15 ± 0.75
7.61 ± 0.29
9.28 ± 1.06
FairAug wo NS
67.01 ± 0.41
6.05 ± 2.63
6.83 ± 2.88
66.33 ± 0.20
6.26 ± 0.26
9.16 ± 0.63
FairAug wo ED
67.38 ± 0.31
2.66 ± 3.22
4.26 ± 2.92
67.57 ± 0.18
3.37 ± 0.62
5.13 ± 1.12
FairAug wo EA
66.96 ± 1.08
2.86 ± 1.79
3.22 ± 1.29
67.96 ± 0.19
7.13 ± 0.29
9.40 ± 0.81"
EXPERIMENTAL RESULTS,0.20930232558139536,"values. Second, we note that similar to our framework, GCA is built upon GRACE through adaptive
augmentations as well. However, the adaptive augmentations utilized in GCA are not fairness-aware,
and the results of Table 1 demonstrate that the effect of such augmentations on the fairness metrics
is unpredictable. Third, the results indicate that all contrastive learning methods provide better
fairness performance than random walk-based methods on evaluated datasets, including Fairwalk,
which is a fairness-aware study. Since the sole information source of random walk-based studies is
the graph structure, obtained results confirm that the graph topology indeed propagates bias, which
is consistent with the motivation of our graph data augmentation design. Finally, the results of Table
1 demonstrate that the closest competitor scheme to FairAug is NIFTY (Agarwal et al., 2021) in
terms of fairness measures. For ∆SP , FairAug outperforms NIFTY on both datasets, whereas in
terms of ∆EO, FairAug and NIFTY outperform each other on Pokec-z and Pokec-n, respectively.
Table 1 shows that the ED-removed version of FairAug, ’FairAug wo ED’, outperforms NIFTY on
Pokec-n as well, suggesting that at least one of the proposed strategies outperform all considered
benchmark schemes in both ∆SP and ∆EO. This fairness performance improvement achieved by
ED removal motivated us to conduct an ablation study on the building blocks of FairAug, which we
present in the sequel."
EXPERIMENTAL RESULTS,0.21141649048625794,"Table 2 lists the results of an ablation study for FairAug, where the last four rows demonstrate
the effects of the removal of FM, NS, ED, and EA, respectively. Pokec-z and Pokec-n are highly
unbalanced datasets (|Eω| ≈20|Eχ|) with a considerable sparsity in inter-edges (see Table 5 of
Appendix A.5). For such networks, the exact probabilities presented in equation 7 cannot be utilized
for edge deletion as it would result in the deletion of a significantly large portion of the edges,
damaging the graph structure. We employ an upper limit on the deletion probabilities to avoid
this (see Appendix A.7). However, with such a limit, the proposed ED framework alone cannot
sufficiently balance |Eω| and |Eχ|. At this point, we note that since |Sω| > |Sχ|, node sampling
also provides a way of decreasing |Eω| by excluding nodes from the set Sω when generating the
subgraph. As the graph was already sparse initially in inter-edges (i.e., small |Eχ|), employing
both NS and ED causes a similar over-deletion of intra-edges and creates unstable results due to the
significantly distorted graph structure. Overall, combining this phenomenon with the results of Table
2, in order to balance the input graphs on Pokec networks consistently (which have |Eω| >> |Eχ|
and inter-edge sparsity), node sampling is observed to be a better choice than edge manipulations."
EXPERIMENTAL RESULTS,0.2135306553911205,"Table 3 presents the obtained results for link prediction in the framework of contrastive learning.
Results demonstrate that ’FairAug wo NS’ consistently improves the fairness metrics of the frame-
work it is built upon (GRACE), together with similar utility measures. In addition, comparing GCA"
EXPERIMENTAL RESULTS,0.2156448202959831,Under review as a conference paper at ICLR 2022
EXPERIMENTAL RESULTS,0.21775898520084566,Table 3: Link prediction results obtained on node representations
EXPERIMENTAL RESULTS,0.21987315010570824,"UCSD34
Berkeley13"
EXPERIMENTAL RESULTS,0.2219873150105708,"AUC (%)
∆SP (%)
∆EO (%)
AUC (%)
∆SP (%)
∆EO(%)"
EXPERIMENTAL RESULTS,0.22410147991543342,"GCA
71.59 ± 0.29
0.70 ± 0.27
1.92 ± 0.45
69.69 ± 0.38
0.50 ± 0.36
6.52 ± 0.99
GRACE
71.57 ± 0.28
0.49 ± 0.28
1.48 ± 0.70
69.55 ± 0.46
0.76 ± 0.44
4.34 ± 1.20"
EXPERIMENTAL RESULTS,0.226215644820296,"FairAug
71.46 ± 0.30
0.71 ± 0.38
1.62 ± 0.62
69.48 ± 0.29
0.70 ± 0.43
4.24 ± 0.90
FairAug wo NS
71.50 ± 0.31
0.41 ± 0.32
1.16 ± 0.65
69.65 ± 0.33
0.68 ± 0.34
4.22 ± 0.97"
EXPERIMENTAL RESULTS,0.22832980972515857,Table 4: Employment of fair edge deletion as an edge dropout method
EXPERIMENTAL RESULTS,0.23044397463002114,"Accuracy (%)
AUC (%)
∆SP (%)
∆EO (%)"
EXPERIMENTAL RESULTS,0.23255813953488372,"Cora
Edge Dropout
82.79 ± 0.83
90.52 ± 0.52
57.22 ± 2.19
36.18 ± 4.53
Fair ED
80.38 ± 1.14
87.95 ± 1.22
48.78 ± 2.58
27.79 ± 3.89"
EXPERIMENTAL RESULTS,0.2346723044397463,"Citeseer
Edge Dropout
78.30 ± 1.17
87.93 ± 1.05
43.05 ± 2.39
25.45 ± 3.69
Fair ED
77.26 ± 1.80
86.79 ± 1.39
39.90 ± 3.57
25.02 ± 6.93"
EXPERIMENTAL RESULTS,0.23678646934460887,"Pubmed
Edge Dropout
88.63 ± 0.34
95.14 ± 0.16
45.59 ± 0.78
15.81 ± 0.92
Fair ED
87.48 ± 0.54
94.15 ± 0.36
40.90 ± 1.10
11.70 ± 0.68"
EXPERIMENTAL RESULTS,0.23890063424947147,"and GRACE, obtained results confirm our previous assessment regarding the unpredictable effect of
GCA’s augmentations on the fairness metrics. Finally, comparing FairAug with and without NS, the
results of Table 3 show that in UCSD34 and Berkeley13, the employment of node sampling can be
ineffective in improving fairness metrics, or can even worsen them. In UCSD34 and Berkeley13, we
have |Sχ| >> |Sω| (see Table 5 of Appendix A.5). Therefore, for NS on these datasets, half of the
nodes are sampled randomly from the sets Sχ
1 and Sχ
0 (as the limit on the minimum node sampling
budget is half of the initial group size to avoid a possible over-sampling, see Appendix A.7). Since
|Sχ| >> |Sω|, such a sampling framework coincides with random sampling, which makes the ef-
fects of the proposed node sampling scheme unpredictable on the fairness metrics. Furthermore,
while γ1 suggests that the cardinality of the set |Sχ| should be reduced when |Sω| ≤|Sχ|, γ1 ac-
tually appears in the upper bound and not in the exact ∥ρ∥1 expression. The removal of nodes with
inter-edges is actually counter-intuitive, as inter-edges generally help to reduce bias in graphs where
|Eω| ≥|Eχ| (which holds for all datasets considered herein). Therefore, the proposed node sam-
pling becomes effective for graph structures providing |Sω| ≥|Sχ|. The effect of node sampling on
Facebook networks is further investigated through γ1 and γ2 in Appendix A.8, which corroborates
the explanations on the random/detrimental effect of node sampling for these datasets."
EXPERIMENTAL RESULTS,0.24101479915433405,"As also noted in Section 1, even though FairAug is presented through its application on graph con-
strastive learning in this section, the proposed approach can be fully or partially used in conjunction
to other learning frameworks as well. To exemplify such a use case, Table 4 lists the results for an
end-to-end link prediction task with a two-layer GCN where the proposed fair edge deletion scheme
is employed as an edge dropout method. As the benchmark, random edge dropout (Rong et al.,
2019) is considered, which is a scheme originally proposed to improve the generalizability of the
model on unseen data (Rong et al., 2019). In the experiments, the number of deleted edges is the
same for both strategies. The results demonstrate that our method ’Fair ED’ can indeed enhance the
fairness of the learning framework it is employed in while it slightly reduces the utility measures."
CONCLUSIONS,0.24312896405919662,"5
CONCLUSIONS"
CONCLUSIONS,0.2452431289640592,"In this study, the source of bias in aggregated representations in a GNN-based framework has been
theoretically analyzed. Based on the analysis, several fairness-aware augmentation schemes have
been introduced on both graph structure and nodal features. The proposed augmentations can be
flexibly utilized together with several GNN-based learning methods. In addition, they can readily be
employed in unsupervised node representation learning schemes such as graph contrastive learning.
Experimental results on real-world graphs demonstrate that the proposed adaptive augmentations
can improve fairness metrics with comparable utilities to state-of-the-art in node classification and
link prediction."
CONCLUSIONS,0.24735729386892177,Under review as a conference paper at ICLR 2022
REPRODUCIBILITY STATEMENT,0.24947145877378435,"6
REPRODUCIBILITY STATEMENT"
REPRODUCIBILITY STATEMENT,0.25158562367864695,"The proofs for Theorem 1 and Proposition 1 are presented together with all assumptions made for
them in Appendix A.1 and Appendix A.2, respectively. Implementation details and hyperparameter
values are presented in Appendix A.7 for the clarification of experimental settings. All codes that
are needed to regenerate the presented results in Tables 1, 2, 3 and 4 are provided within the sup-
plementary material together with a README file. Finally, the details on the utilized data sets are
provided in Appendix A.5 where all datasets are publicly available."
REFERENCES,0.2536997885835095,REFERENCES
REFERENCES,0.2558139534883721,"Chirag Agarwal, Himabindu Lakkaraju*, and Marinka Zitnik*. Towards a unified framework for
fair and stable graph representation learning. arXiv preprint arXiv:2102.13186, February 2021."
REFERENCES,0.25792811839323465,"Amr Ahmed, Nino Shervashidze, Shravan Narayanamurthy, Vanja Josifovski, and Alexander J
Smola. Distributed large-scale natural graph factorization. In Proc. International Conference
on World Wide Web (WWW), pp. 37–48, May 2013."
REFERENCES,0.26004228329809725,"Alex Beutel, Jilin Chen, Zhe Zhao, and Ed H Chi. Data decisions and theoretical implications when
adversarially learning fair representations. arXiv preprint arXiv:1707.00075, June 2017."
REFERENCES,0.26215644820295986,"Avishek Bose and William Hamilton. Compositional fairness constraints for graph embeddings. In
International Conference on Machine Learning (ICML, pp. 715–724. PMLR, 2019."
REFERENCES,0.2642706131078224,"Maarten Buyl and Tijl De Bie. Debayes: a bayesian method for debiasing network embeddings. In
International Conference on Machine Learning (ICML), pp. 1220–1229. PMLR, 2020."
REFERENCES,0.266384778012685,"Maarten Buyl and Tijl De Bie. The kl-divergence between a graph model and its fair i-projection as
a fairness regularizer. arXiv preprint arXiv:2103.01846, 2021."
REFERENCES,0.26849894291754756,"Shaosheng Cao, Wei Lu, and Qiongkai Xu. Grarep: Learning graph representations with global
structural information. In Proc. ACM International Conference on Information and Knowledge
Management (CIKM), pp. 891–900, October 2015."
REFERENCES,0.27061310782241016,"Deli Chen, Yankai Lin, Wei Li, Peng Li, Jie Zhou, and Xu Sun. Measuring and relieving the over-
smoothing problem for graph neural networks from the topological view. In Proceedings of the
AAAI Conference on Artificial Intelligence, volume 34, pp. 3438–3445, 2020a."
REFERENCES,0.2727272727272727,"Haochen Chen, Bryan Perozzi, Yifan Hu, and Steven Skiena. Harp: Hierarchical representation
learning for networks. In Proc. AAAI Conference on Artificial Intelligence, volume 32, February
2018."
REFERENCES,0.2748414376321353,"Ting Chen, Simon Kornblith, Mohammad Norouzi, and Geoffrey Hinton. A simple framework
for contrastive learning of visual representations. In Proc. International Conference on Machine
Learning (ICML), pp. 1597–1607, July 2020b."
REFERENCES,0.2769556025369979,"Enyan Dai and Suhang Wang. Say no to the discrimination: Learning fair graph neural networks
with limited sensitive attribute information. arXiv preprint arXiv:2009.01454, September 2020."
REFERENCES,0.27906976744186046,"Yushun Dong, Jian Kang, Hanghang Tong, and Jundong Li. Individual fairness for graph neural
networks: A ranking based approach. In Proc ACM Conference on Knowledge Discovery & Data
Mining (SIGKDD), pp. 300–310, 2021."
REFERENCES,0.28118393234672306,"Cynthia Dwork, Moritz Hardt, Toniann Pitassi, Omer Reingold, and Richard Zemel.
Fairness
through awareness. In Proc. Innovations in Theoretical Computer Science (ITCS), pp. 214–226,
January 2012."
REFERENCES,0.2832980972515856,"Joseph Fisher, Arpit Mittal, Dave Palfrey, and Christos Christodoulopoulos. Debiasing knowledge
graph embeddings. In Proc. Conference on Empirical Methods in Natural Language Processing
(EMNLP), pp. 7332–7345, 2020."
REFERENCES,0.2854122621564482,Under review as a conference paper at ICLR 2022
REFERENCES,0.28752642706131076,"Alberto Garc´ıa-Dur´an and Mathias Niepert. Learning graph representations with embedding propa-
gation. In Proc. International Conference on Neural Information Processing Systems (NeurIPS),
pp. 5125–5136, December 2017."
REFERENCES,0.28964059196617337,"Xavier Glorot and Yoshua Bengio. Understanding the difficulty of training deep feedforward neural
networks. In Proc. International Conference on Artificial Intelligence and Statistics (AISTATS),
pp. 249–256, May 2010."
REFERENCES,0.2917547568710359,"Ignacio S Gomez, Bruno G da Costa, and Maike AF Dos Santos. Majorization and dynamics of
continuous distributions. Entropy, 21(6):590, 2019."
REFERENCES,0.2938689217758985,"Aditya Grover and Jure Leskovec. node2vec: Scalable feature learning for networks. In Proc. ACM
International Conference on Knowledge Discovery and Data Mining (SIGKDD), August 2016."
REFERENCES,0.2959830866807611,"Sara Hajian and Josep Domingo-Ferrer. A methodology for direct and indirect discrimination pre-
vention in data mining. IEEE Transactions on Knowledge and Data Engineering, 25(7):1445–
1459, July 2013. doi: 10.1109/TKDE.2012.72."
REFERENCES,0.29809725158562367,"William L Hamilton, Rex Ying, and Jure Leskovec.
Inductive representation learning on large
graphs. In Proc. International Conference on Neural Information Processing Systems (NeurIPS),
pp. 1025–1035, December 2017."
REFERENCES,0.30021141649048627,"Kaveh Hassani and Amir Hosein Khasahmadi. Contrastive multi-view representation learning on
graphs. In Proc. International Conference on Machine Learning (ICML), pp. 4116–4126, July
2020."
REFERENCES,0.3023255813953488,"R Devon Hjelm, Alex Fedorov, Samuel Lavoie-Marchildon, Karan Grewal, Phil Bachman, Adam
Trischler, and Yoshua Bengio. Learning deep representations by mutual information estimation
and maximization. In Proc. International Conference on Learning Representations (ICLR), April
2018."
REFERENCES,0.3044397463002114,"Bas Hofstra, Rense Corten, Frank Van Tubergen, and Nicole B Ellison. Sources of segregation
in social networks: A novel approach using facebook. American Sociological Review, 82(3):
625–656, May 2017."
REFERENCES,0.30655391120507397,"Fenyu Hu, Yanqiao Zhu, Shu Wu, Liang Wang, and Tieniu Tan. Hierarchical graph convolutional
networks for semi-supervised node classification. In Proc. International Joint Conference on
Artificial Intelligence, (IJCAI), August 2019."
REFERENCES,0.3086680761099366,"Xu Ji, Jo˜ao F Henriques, and Andrea Vedaldi. Invariant information clustering for unsupervised
image classification and segmentation. In Proc. IEEE International Conference on Computer
Vision (ICCV), pp. 9865–9874, October 2019."
REFERENCES,0.3107822410147992,"Guangyin Jin, Qi Wang, Cunchao Zhu, Yanghe Feng, Jincai Huang, and Jiangping Zhou.
Ad-
dressing crime situation forecasting task with temporal graph convolutional neural network ap-
proach. In Proc. International Conference on Measuring Technology and Mechatronics Automa-
tion (ICMTMA), pp. 474–478, February 2020. doi: 10.1109/ICMTMA50254.2020.00108."
REFERENCES,0.3128964059196617,"Kushal Kafle, Mohammed Yousefhussien, and Christopher Kanan. Data augmentation for visual
question answering. In Proceedings of the 10th International Conference on Natural Language
Generation, pp. 198–202, 2017."
REFERENCES,0.3150105708245243,"Diederik P Kingma and Jimmy Ba. Adam: A method for stochastic optimization. arXiv preprint
arXiv:1412.6980, 2014."
REFERENCES,0.3171247357293869,"Thomas N. Kipf and Max Welling. Semi-supervised classification with graph convolutional net-
works. In Proc. International Conference on Learning Representations (ICLR), April 2017."
REFERENCES,0.3192389006342495,"Charlotte Laclau, Ievgen Redko, Manvi Choudhary, and Christine Largeron. All of the fairness for
edge prediction with optimal transport. In International Conference on Artificial Intelligence and
Statistics, pp. 1774–1782. PMLR, 2021."
REFERENCES,0.321353065539112,Under review as a conference paper at ICLR 2022
REFERENCES,0.32346723044397463,"Peizhao Li, Yifei Wang, Han Zhao, Pengyu Hong, and Hongfu Liu. On dyadic fairness: Explor-
ing and mitigating bias in graph connections. In Proc. International Conference on Learning
Representations (ICLR), April 2021."
REFERENCES,0.32558139534883723,"Jiaqi Ma, Junwei Deng, and Qiaozhu Mei. Subgroup generalization and fairness of graph neural
networks. arXiv preprint arXiv:2106.15535, 2021."
REFERENCES,0.3276955602536998,"Albert W Marshall, Ingram Olkin, and Barry C Arnold. Inequalities: theory of majorization and its
applications, volume 143. Springer, 1979."
REFERENCES,0.3298097251585624,"Alan Mislove, Bimal Viswanath, Krishna P Gummadi, and Peter Druschel. You are who you know:
inferring user profiles in online social networks. In Proc. ACM International Conference on Web
Search and Data Mining (WSDM), pp. 251–260, February 2010."
REFERENCES,0.33192389006342493,"Felix L Opolka, Aaron Solomon, C˘at˘alina Cangea, Petar Veliˇckovi´c, Pietro Li`o, and R Devon
Hj elm. Spatio-temporal deep graph infomax. arXiv preprint arXiv:1904.06316, April 2019."
REFERENCES,0.33403805496828753,"Mingdong Ou, Peng Cui, Jian Pei, Ziwei Zhang, and Wenwu Zhu. Asymmetric transitivity pre-
serving graph embedding. In Proc. ACM International Conference on Knowledge Discovery and
Data Mining (SIGKDD), pp. 1105–1114, August 2016."
REFERENCES,0.3361522198731501,"Zhen Peng, Wenbing Huang, Minnan Luo, Qinghua Zheng, Yu Rong, Tingyang Xu, and Junzhou
Huang. Graph representation learning via graphical mutual information maximization. In Proc.
Web Conference (WWW), pp. 259–270, April 2020."
REFERENCES,0.3382663847780127,"Bryan Perozzi, Rami Al-Rfou, and Steven Skiena.
Deepwalk: Online learning of social rep-
resentations.
In Proc. ACM International Conference on Knowledge Discovery and Data
Mining (SIGKDD), pp. 701–710, August 2014. URL http://doi.acm.org/10.1145/
2623330.2623732."
REFERENCES,0.3403805496828753,"Tahleen A Rahman, Bartlomiej Surma, Michael Backes, and Yang Zhang. Fairwalk: Towards fair
graph embedding. In Proc. International Joint Conference on Artificial Intelligence (IJCAI), pp.
3289–3295, August 2019."
REFERENCES,0.34249471458773784,"Veronica Red, Eric D Kelsic, Peter J Mucha, and Mason A Porter. Comparing community structure
to characteristics in online collegiate social networks. SIAM review, 53(3):526–543, 2011."
REFERENCES,0.34460887949260044,"Yu Rong, Wenbing Huang, Tingyang Xu, and Junzhou Huang. Dropedge: Towards deep graph
convolutional networks on node classification. arXiv preprint arXiv:1907.10903, 2019."
REFERENCES,0.346723044397463,"Connor Shorten and Taghi M Khoshgoftaar. A survey on image data augmentation for deep learning.
Journal of Big Data, 6(1):1–48, 2019."
REFERENCES,0.3488372093023256,"Indro Spinelli, Simone Scardapane, Amir Hussain, and Aurelio Uncini. Biased edge dropout for
enhancing fairness in graph representation learning. arXiv preprint arXiv:2104.14210, 2021."
REFERENCES,0.35095137420718814,"Lubos Takac and Michal Zabovsky. Data analysis in public social networks. In International Sci-
entific Conference and International Workshop. ’Present Day Trends of Innovations’, volume 1,
May 2012."
REFERENCES,0.35306553911205074,"Jian Tang, Meng Qu, Mingzhe Wang, Ming Zhang, Jun Yan, and Qiaozhu Mei. Line: Large-scale
information network embedding. In Proc. International Conference on World Wide Web (WWW),
pp. 1067–1077, May 2015."
REFERENCES,0.35517970401691334,"Petar Veliˇckovi´c, Guillem Cucurull, Arantxa Casanova, Adriana Romero, Pietro Li`o, and Yoshua
Bengio. Graph attention networks. Proc. International Conference on Learning Representations
(ICLR), April 2018."
REFERENCES,0.3572938689217759,"Petar Veliˇckovi´c, William Fedus, William L. Hamilton, Pietro Li`o, Yoshua Bengio, and R Devon
Hjelm. Deep graph infomax. In Proc. International Conference on Learning Representations
(ICLR), May 2019. URL https://openreview.net/forum?id=rklz9iAcKQ."
REFERENCES,0.3594080338266385,"Felix Wu, Amauri Souza, Tianyi Zhang, Christopher Fifty, Tao Yu, and Kilian Weinberger. Sim-
plifying graph convolutional networks. In Proc. International Conference on Machine Learning
(ICML), pp. 6861–6871, July 2019."
REFERENCES,0.36152219873150104,Under review as a conference paper at ICLR 2022
REFERENCES,0.36363636363636365,"Zhirong Wu, Yuanjun Xiong, Stella X Yu, and Dahua Lin. Unsupervised feature learning via non-
parametric instance discrimination. In Proc. IEEE Conference on Computer Vision and Pattern
Recognition (CVPR), pp. 3733–3742, June 2018."
REFERENCES,0.3657505285412262,"Mang Ye, Xu Zhang, Pong C Yuen, and Shih-Fu Chang. Unsupervised embedding learning via
invariant and spreading instance feature. In Proc. IEEE Conference on Computer Vision and
Pattern Recognition (CVPR), pp. 6210–6219, June 2019."
REFERENCES,0.3678646934460888,"Yuning You, Tianlong Chen, Yongduo Sui, Ting Chen, Zhangyang Wang, and Yang Shen. Graph
contrastive learning with augmentations. Proc. International Conference on Neural Information
Processing Systems (NeurIPS), 33, December 2020."
REFERENCES,0.3699788583509514,"Ziqian Zeng, Rashidul Islam, Kamrun Naher Keya, James Foulds, Yangqiu Song, and Shimei
Pan.
Fair representation learning for heterogeneous information networks.
arXiv preprint
arXiv:2104.08769, 2021."
REFERENCES,0.37209302325581395,"Xiang Zhang, Junbo Zhao, and Yann LeCun. Character-level convolutional networks for text clas-
sification. Advances in neural information processing systems, 28:649–657, 2015."
REFERENCES,0.37420718816067655,"Tong Zhao, Yozen Liu, Leonardo Neves, Oliver Woodford, Meng Jiang, and Neil Shah. Data aug-
mentation for graph neural networks. arXiv preprint arXiv:2006.06830, 2020."
REFERENCES,0.3763213530655391,"Yanqiao Zhu, Yichen Xu, Feng Yu, Qiang Liu, Shu Wu, and Liang Wang.
Deep Graph Con-
trastive Representation Learning.
In Proc. International Conference on Machine Learning
(ICML) Workshop on Graph Representation Learning and Beyond, July 2020.
URL http:
//arxiv.org/abs/2006.04131."
REFERENCES,0.3784355179704017,"Yanqiao Zhu, Yichen Xu, Feng Yu, Qiang Liu, Shu Wu, and Liang Wang. Graph contrastive learning
with adaptive augmentation. In Proc. Web Conference (WWW), April 2021."
REFERENCES,0.38054968287526425,Under review as a conference paper at ICLR 2022
REFERENCES,0.38266384778012685,"A
APPENDIX"
REFERENCES,0.38477801268498946,"A.1
PROOF OF THEOREM 1"
REFERENCES,0.386892177589852,Let ¯s = 1
REFERENCES,0.3890063424947146,"N
PN
i=1 si = |S1|"
REFERENCES,0.39112050739957716,"N Hence, the elements of centered sensitive attribute vector can be written
as
ρi =
1
Nσsσ˜z:,i
(
X"
REFERENCES,0.39323467230443976,"vm∈S0
(0 −¯s)(zm,i −¯zi) +
X"
REFERENCES,0.3953488372093023,"vn∈S1
(1 −¯s)(zn,i −¯zi)),
(8)"
REFERENCES,0.3974630021141649,"where ¯zi =
1
N
PN
j=1 zji and zji is the element of matrix Z at row j, column i. Using ¯s values, the
equation 8 becomes"
REFERENCES,0.39957716701902746,"ρi =
1
Nσsσ˜z:,i
(
X vm∈S0 −|S1|"
REFERENCES,0.40169133192389006,"N
(zm,i −¯zi) +
X vn∈S1 |S0|"
REFERENCES,0.40380549682875266,"N (zn,i −¯zi)),"
REFERENCES,0.4059196617336152,"=
1
Nσsσ˜z:,i
(|S0||S1|"
REFERENCES,0.4080338266384778,"N
¯zi +
X vm∈S0 −|S1|"
REFERENCES,0.41014799154334036,"N
zm,i −|S0||S1|"
REFERENCES,0.41226215644820297,"N
¯zi +
X vn∈S1 |S0|"
REFERENCES,0.4143763213530655,"N zn,i),"
REFERENCES,0.4164904862579281,"=
1
Nσsσ˜z:,i
(
X vn∈S1 |S0|"
REFERENCES,0.4186046511627907,"N zn,i −
X vm∈S0 |S1|"
REFERENCES,0.42071881606765327,"N zm,i),"
REFERENCES,0.42283298097251587,"=
|S0||S1|
N 2σsσ˜z:,i"
REFERENCES,0.4249471458773784,"1
|S1| X"
REFERENCES,0.427061310782241,"vn∈S1
zn,i −
1
|S0| X"
REFERENCES,0.42917547568710357,"vm∈S0
zm,i ! . (9)"
REFERENCES,0.4312896405919662,Similarly analysis for σs follows as σs :=
REFERENCES,0.4334038054968288,"v
u
u
t 1 N N
X"
REFERENCES,0.4355179704016913,"n=1
(sn −¯s)2 ="
REFERENCES,0.4376321353065539,"v
u
u
t 1 N N
X n=1 X vm∈S0 |S1|2"
REFERENCES,0.4397463002114165,"N 2 +
X vn∈S1 |S0|2 N 2 ! = s"
N,0.4418604651162791,"1
N"
N,0.4439746300211416,|S0||S1|2
N,0.44608879492600423,"N 2
+ |S1||S0|2 N 2  = s"
N,0.44820295983086683,"1
N"
N,0.4503171247357294,"
|S0||S1| (|S0| + |S1|)"
N,0.452431289640592,(|S0| + |S1|)2  = p
N,0.45454545454545453,|S0||S1| N (10)
N,0.45665961945031713,"Define ci :=
√"
N,0.4587737843551797,"|S0||S1|
Nσ˜z:,i
and c ∈RF
′
denote the vector whose elements are cis. Then ρ equals to"
N,0.4608879492600423,ρ = c ◦
N,0.4630021141649049,"1
|S1| X"
N,0.46511627906976744,"vn∈S1
zn −
1
|S0| X"
N,0.46723044397463004,"vm∈S0
zm ! (11)"
N,0.4693446088794926,"where ◦represents the Hadamard product. Therefore, ∥ρ∥1 follows as"
N,0.4714587737843552,"∥ρ∥1 =
c ◦"
N,0.47357293868921774,"1
|S1| X"
N,0.47568710359408034,"vn∈S1
zn −
1
|S0| X"
N,0.47780126849894294,"vm∈S0
zm"
N,0.4799154334038055,"!
1
.
(12)"
N,0.4820295983086681,"We first consider the terms
1
|S1|
P"
N,0.48414376321353064,"vn∈S1 zn and
1
|S0|
P"
N,0.48625792811839325,vm∈S0 zm individually
N,0.4883720930232558,"1
|S1| X"
N,0.4904862579281184,"vn∈S1
zn ∈
1
|S1| X"
N,0.492600422832981,"vn∈S1
( 1 dn X"
N,0.49471458773784355,"a∈N(n)∩S0
µ0 + 1 dn X"
N,0.49682875264270615,"b∈N(n)∩S1
µ1) ± ∆,"
N,0.4989429175475687,"∈
1
|S1| X vn∈S1"
N,0.5010570824524313,"dχ
nµ0 + dω
nµ1
dχ
n + dωn
± ∆,"
N,0.5031712473572939,"∈
1
|S1| X vn∈S1"
N,0.5052854122621564,"
µ1 +
dχ
n
dχ
n + dωn
(µ0 −µ1)

± ∆. (13)"
N,0.507399577167019,Under review as a conference paper at ICLR 2022
N,0.5095137420718816,"Similarly, the expression for the term
1
|S0|
P"
N,0.5116279069767442,vm∈S0 zm can also be derived.
N,0.5137420718816068,"1
|S0| X"
N,0.5158562367864693,"vm∈S0
zm ∈
1
|S0| X vm∈S0"
N,0.5179704016913319,"
µ0 +
dχ
m
dχ
m + dωm
(µ1 −µ0)

± ∆.
(14)"
N,0.5200845665961945,"Define ϵ :=
1
|S1|
P"
N,0.5221987315010571,"vn∈S1 zn −
1
|S0|
P"
N,0.5243128964059197,"vm∈S0 zm, the following can be written by equation 13 and
equation 14"
N,0.5264270613107822,ϵ ∈(µ1 −µ0) 
N,0.5285412262156448,"1 −
1
|S1| X vn∈S1"
N,0.5306553911205074,"
dχ
n
dχ
n + dωn"
N,0.53276955602537,"
−
1
|S0| X vm∈S0"
N,0.5348837209302325,"
dχ
m
dχ
m + dωm !"
N,0.5369978858350951,"± 2∆.
(15)"
N,0.5391120507399577,"ϵ is bounded below, which follows as"
N,0.5412262156448203,"1 −
1
|S1| X vn∈S1"
N,0.5433403805496829,"
dχ
n
dχ
n + dωn 
−1 |S0| X vm∈S0"
N,0.5454545454545454,"
dχ
m
dχ
m + dωm "
N,0.547568710359408,"= 1 −
1
|S1| X"
N,0.5496828752642706,"vn∈Sχ
1"
N,0.5517970401691332,"
dχ
n
dχ
n + dωn"
N,0.5539112050739958,"
−
1
|S0| X"
N,0.5560253699788583,"vm∈Sχ
0"
N,0.5581395348837209,"
dχ
m
dχ
m + dωm"
N,0.5602536997885835,"
(16)"
N,0.5623678646934461,"≥1 −|Sχ
0 |
|S0| −|Sχ
1 |
|S1|
(17)"
N,0.5644820295983086,"equation 16 follows as dχ
u = 0 for ∀vu ∈Sω. The upper bound equation 17 holds, since

dχ
u
dχ
u+dω
u"
N,0.5665961945031712,"
≤
1 for ∀vu ∈G."
N,0.5687103594080338,The upper bound for ϵ follows as
N,0.5708245243128964,"1 −
1
|S1| X vn∈S1"
N,0.572938689217759,"
dχ
n
dχ
n + dωn"
N,0.5750528541226215,"
−
1
|S0| X vm∈S0"
N,0.5771670190274841,"
dχ
m
dχ
m + dωm"
N,0.5792811839323467,"
(18)"
N,0.5813953488372093,"= 1 −mean

dχ
m
dχ
m + dωm
|vm ∈S0"
N,0.5835095137420718,"
−mean

dχ
n
dχ
n + dωn
|vn ∈S1"
N,0.5856236786469344,"
(19)"
N,0.587737843551797,"≤1 −2 min

mean

dχ
m
dχ
m + dωm
|vm ∈S0"
N,0.5898520084566596,"
, mean

dχ
n
dχ
n + dωn
|vn ∈S1 
, (20)"
N,0.5919661733615222,"where mean(·) denotes the sample mean operation. The main purpose is to generate an upper bound
for ∥ρ∥1, for which the first step is to derive the following bound"
N,0.5940803382663847,"∥ρ∥1 ≤∥c∥1∥ϵ∥1
(21)"
N,0.5961945031712473,"equation 21 can be written, as ∥x ◦y∥1 ≤∥x∥1∥y∥1 for arbitrary vectors x and y ∈RN (|x1y1| +
· · · + |xNyN| ≤(|x1| + · · · + |xN|)(|y1| + · · · + |yN|) due to additional non-negative cross-terms
|xi||yj|, i ̸= j). The next step is to bound the ℓ1 norm of the difference term ϵ:"
N,0.5983086680761099,"∥ϵ∥1 ≤∥µ1 −µ0∥1max(γ1, γ2) + 2N∆
(22)"
N,0.6004228329809725,"using the derived bounds in equation 17, equation 20 and the equality 2∆· ∥1∥1
="
N,0.6025369978858351,"2N∆, where 1 denotes an N × 1 vector of ones, γ1
:=
1 −|Sχ
0 |
|S0| −|Sχ
1 |
|S1|"
N,0.6046511627906976,", and γ2
=
1 −2 min

mean

dχ
m
dχ
m+dω
m |vm ∈S0

, mean

dχ
n
dχ
n+dω
n |vn ∈S1
. Using equation 21 and equa-
tion 22, the final upper bound can be derived:"
N,0.6067653276955602,"∥ρ∥1 ≤∥c∥1 (∥µ1 −µ0∥1max(γ1, γ2) + 2N∆) .
(23)"
N,0.6088794926004228,Under review as a conference paper at ICLR 2022
N,0.6109936575052854,"A.2
PROOF OF PROPOSITION 1"
N,0.6131078224101479,The expected ∥˜δ∥1 can be written as:
N,0.6152219873150105,"Ep[∥˜δ∥1] = E "" F
X"
N,0.6173361522198731,"i=1
|˜δi| # = F
X"
N,0.6194503171247357,"i=1
E[|˜δi|] = F
X"
N,0.6215644820295984,"i=1
pi|δi|. (24)"
N,0.6236786469344608,"Similarly, the expected ∥˜δ∥1 for the uniform masking scheme is:1"
N,0.6257928118393234,"Eq[∥˜δ∥1] = F
X"
N,0.627906976744186,"i=1
qi|δi|.
(25)"
N,0.6300211416490487,"For fair comparison, set uniform keeping probability of the nodal features qi = ¯p =
1
F
PF
i=1 pi.
Without loss of generality, assume, |δi|s are ordered such that |δ1| ≤· · · ≤|δF |. With the ordered
|δi|s, assigned probabilities to keep the nodal features by our method will also be ordered such that
p1 ≥· · · ≥pF . Defining a dummy variable |δ0| := 0, equation 24 can be rewritten as: F
X"
N,0.6321353065539113,"i=1
pi|δi| = (|δ1| −|δ0|)(p1 + · · · + pF ) + (|δ2| −|δ1|)(p2 + · · · + pF ) + . . ."
N,0.6342494714587738,"· · · + (|δF −1| −|δF −2|)(pF −1 + pF ) + (|δF | −|δF −1|)(pF ) = F
X"
N,0.6363636363636364,"l=1
(|δl| −|δl−1|) F
X"
N,0.638477801268499,"i=l
pi. (26)"
N,0.6405919661733616,"Following the definition in (Marshall et al., 1979), a sequence x = {x1, x2, . . . , xF } majorizes
another sequence y = {y1, y2, . . . , yF }, if the following holds: k
X"
N,0.642706131078224,"i=1
yi ≤ k
X"
N,0.6448202959830867,"i=1
xi
k = 1, . . . , F −1, F
X"
N,0.6469344608879493,"i=1
yi = F
X"
N,0.6490486257928119,"i=1
xi. (27)"
N,0.6511627906976745,"Since the uniform sequence is majorized by any other non-increasing ordered sequence with the
same sum (see (Gomez et al., 2019, Equation 3)), the sequence p = {p1, p2, · · · , pF } majorizes
the sequence q = {q1, q2, . . . , qF } where qi = ¯p, ∀i ∈{1, . . . , F}. Defining P0
i=1 pi := 0,
equation 26 can be re-written as"
N,0.653276955602537,"Ep[∥˜δ∥1] = F
X"
N,0.6553911205073996,"l=1
(|δl| −|δl−1|) F
X"
N,0.6575052854122622,"i=l
pi = F
X"
N,0.6596194503171248,"l=1
(|δl| −|δl−1|)(F ¯p − l−1
X"
N,0.6617336152219874,"i=1
pi) (a)
≤ F
X"
N,0.6638477801268499,"l=1
(|δl| −|δl−1|)(F ¯p − l−1
X"
N,0.6659619450317125,"i=1
qi) = F
X"
N,0.6680761099365751,"l=1
(|δl| −|δl−1|) F
X"
N,0.6701902748414377,"i=l
qi"
N,0.6723044397463002,"= Eq[∥˜δ∥1], (28)"
N,0.6744186046511628,"1From equation 25, it can be obtained that Eq[∥˜δ∥1] = PF
i=1 qi|δi|≤PF
i=1 |δi| = ∥δ∥1, as the probabil-
ities qi ∈[0, 1]. Here, ∥δ∥1 corresponds to the distribution difference with no feature masking (qi = 1, ∀i).
This implies that no feature masking upper bounds E[∥˜δ∥1], which is obtained via a stochastic feature masking."
N,0.6765327695560254,Under review as a conference paper at ICLR 2022
N,0.678646934460888,where inequality (a) follows from the definition of majorization in equation 27.
N,0.6807610993657506,"A.3
NODE SAMPLING AND ITS EFFECTS"
N,0.6828752642706131,"Algorithm 1: Node Sampling
Data: G := (V, E), X , s, β
Result: ˜G, ˜X,˜s
Split V into sets {Sχ
0 , Sχ
1 , Sω
0 , Sω
1 }
if |Sω| ≥|Sχ| then"
N,0.6849894291754757,"Sample |Sχ
0 | nodes from Sω
0 uniformly to obtain ¯Sω
0 ;
Sample |Sχ
1 | nodes from Sω
1 uniformly to obtain ¯Sω
1 ;
˜V := {Sχ, ¯Sω
0 , ¯Sω
1 };
end
if |Sχ| ≥|Sω| then"
N,0.6871035940803383,"Sample |Sω
0 | nodes from Sχ
0 uniformly to obtain ¯Sχ
0 ;
Sample |Sω
1 | nodes from Sχ
1 uniformly to obtain ¯Sχ
1 ;
˜V := { ¯Sχ
0 , ¯Sχ
1 , Sω};
end
Obtain subgraph ˜G induced by ˜V along with the nodal features ˜X and sensitive attributes ˜s"
N,0.6892177589852009,The overall node sampling scheme is presented in Algorithm 1.
N,0.6913319238900634,"Assuming |Sω| ≥|Sχ|, all nodes in Sχ are retained, meaning ˜Sχ
0 = Sχ
0 and ˜Sχ
1 = Sχ
1 . While
subsets of nodes ¯Sω
0 and ¯Sω
1 are randomly sampled from Sω
0 and Sω
1 respectively with sample size
| ¯Sω
0 | = |Sχ
0 | and | ¯Sω
1 | = |Sχ
1 |."
N,0.693446088794926,"Therefore, in the resulting graph ˜G, we have"
N,0.6955602536997886,"| ˜Sω
0 | =| ¯Sω
0 | = |Sχ
0 |
(29)"
N,0.6976744186046512,"| ˜Sω
1 | =| ¯Sω
1 | = |Sχ
1 |
(30)"
N,0.6997885835095138,"therefore
 ˜Sχ
0"
N,0.7019027484143763,"| ˜Sχ
0 | + | ˜Sω
0 |
=
|Sχ
0 |
|Sχ
0 | + |Sχ
0 | = 1"
N,0.7040169133192389,"2
(31)
 ˜Sχ
1"
N,0.7061310782241015,"| ˜Sχ
1 | + | ˜Sω
1 |
=
|Sχ
1 |
|Sχ
1 | + |Sχ
1 | = 1"
N,0.7082452431289641,"2
(32)"
N,0.7103594080338267,which leads to γ1 = 0 for the obtained ˜G.
N,0.7124735729386892,"A.4
EFFECTS OF GLOBAL EDGE DELETION SCHEME IN EQUATION 7"
N,0.7145877378435518,"Given the edge deletion scheme in equation 7, we have"
N,0.7167019027484144,"Ep(e)
h
| ˜Eχ|
i
=π|Eχ|
(33)"
N,0.718816067653277,"Ep(e)
h
| ˜Eω
S0|
i
= |Eχ|"
N,0.7209302325581395,"2
Eω
S0
π ×
Eω
S0
 = π|Eχ|"
N,0.7230443974630021,"2
(34)"
N,0.7251585623678647,"Ep(e)
h
| ˜Eω
S1|
i
= |Eχ|"
N,0.7272727272727273,"2
Eω
S1
π ×
Eω
S1
 = π|Eχ|"
N,0.7293868921775899,"2
.
(35)"
N,0.7315010570824524,"Therefore, Ep(e)
h
| ˜Eω
S0|
i
= Ep(e)
h
| ˜Eω
S1|
i
= 1"
N,0.733615221987315,"2Ep(e)
h
| ˜Eχ|
i
and equation 6 holds."
N,0.7357293868921776,Under review as a conference paper at ICLR 2022
N,0.7378435517970402,"A.5
DATASET STATISTICS"
N,0.7399577167019028,Dataset statistics are provided in Tables 5 and 6.
N,0.7420718816067653,"Table 5: Dataset statistics for social networks
Dataset
|Sχ
0 |
|Sω
0 |
|Sχ
1 |
|Sω
1 |
|Eχ|
|Eω
S0|
|Eω
S1|"
N,0.7441860465116279,"Pokec-z
622
4229
582
2226
1730
23428
15942
Pokec-n
423
3617
479
1666
1422
18548
10672
UCSD34
2246
118
1697
71
51607
36787
19989
Berkeley13
1619
80
1488
77
27542
19550
13582"
N,0.7463002114164905,Table 6: Dataset statistics for citation networks
N,0.7484143763213531,"Dataset
|V|
# sensitive attr.
|Eχ|
|Eω|"
N,0.7505285412262156,"Cora
2708
7
1428
5964
Citeseer
3327
6
1628
4746
Pubmed
19717
3
12254
49802"
N,0.7526427061310782,"A.6
CONTRASTIVE LEARNING OVER GRAPHS"
N,0.7547568710359408,"The main goal of contrastive learning is to learn discriminable representations by contrasting the em-
beddings of positive and negative examples, through minimizing a specific contrastive loss (Opolka
et al., 2019; Veliˇckovi´c et al., 2019; Zhu et al., 2021; 2020). The contrastive loss in the present work
is designed to maximize node-level agreement, meaning that the representations of the same node
generated from different graph views can be discriminated from the embeddings of other nodes. Let
H1 = f( eA1, eX1) and H2 = f( eA2, eX2) denote the nodal embeddings generated with graph views
eG1 and eG2, where eAi, and eXi are the adjacency and feature matrices of eGi, which are corrupted
versions of the matrices A and X. Let h1
i and h2
i denote the embeddings for vi: They should be
more similar to each other than to the embeddings of all other nodes. Hence, the representations of
all other nodes are used as negative samples. The contrastive loss for generating embeddings h1
i and
h2
i (considering h1
i as the anchor representation) can be written as"
N,0.7568710359408034,"ℓ
 
h1
i , h2
i

=−log
es(h1
i ,h2
i)/τ"
N,0.758985200845666,"es(h1
i ,h2
i)/τ+PN
k=1 1[k̸=i]es(h1
i ,h2
k)/τ+PN
k=11[k̸=i]es(h1
i ,h1
k)/τ
(36)"
N,0.7610993657505285,"where s
 
h1
i , h2
i

:= c
 
g(h1
i ), g(h2
i )

, with c(·, ·) denoting the cosine similarity between the in-
put vectors, and g(·) representing a nonlinear learnable transform executed by utilizing a 2-layer
multi-layer perceptron (MLP), see also, (Zhu et al., 2021; 2020; Chen et al., 2020b). τ denotes the
temperature parameter, and 1[k̸=i] ∈{0, 1} is the indicator function which takes the value 1 when
k ̸= i. This objective can also be written in the symmetric form, when the generated representation
h2
i is considered as the anchor example. Therefore, considering all nodes in the given graph, the
final loss can be expressed as"
N,0.7632135306553911,"J =
1
2N N
X i=1"
N,0.7653276955602537,"
ℓ
 
h1
i , h2
i

+ ℓ
 
h2
i , h1
i

.
(37)"
N,0.7674418604651163,"A.7
HYPERPARAMETERS AND IMPLEMENTATION DETAILS"
N,0.7695560253699789,"Contrastive Learning:
All experimental settings are kept unaltered as presented in our baseline
study GRACE (Zhu et al., 2020) for fair comparison, where in the GNN-based encoder, weights are
initialized utilizing Glorot initialization (Glorot & Bengio, 2010) and ReLU activation is used after
each GCN layer. All models are trained for 400 epochs by employing Adam optimizer (Kingma &
Ba, 2014) together with a learning rate of 5×10−4 and ℓ2 weight decay factor of 10−5. The tempera-
ture parameter τ in contrastive loss is chosen to be 0.4 and the dimension of the node representations
is selected as 256 for all datasets."
N,0.7716701902748414,Under review as a conference paper at ICLR 2022
N,0.773784355179704,"End-to-end training: All models are trained for 100 epochs by employing Adam optimizer
(Kingma & Ba, 2014) together with a learning rate of 5 × 10−3. The dimension of the node repre-
sentations is selected as 128 for all datasets."
N,0.7758985200845666,"Implementation details: Node representations are obtained using a two-layer GCN (Kipf &
Welling, 2017) for all contrastive learning baselines, which is kept the same as the one used in
(Zhu et al., 2021; 2020) to ensure fair comparison. After obtaining node embeddings from differ-
ent schemes, a linear classifier based on ℓ2-regularized logistic regression is applied for the node
classification and link prediction tasks, which is again the same as the scheme used in (Veliˇckovi´c
et al., 2019; Zhu et al., 2021; 2020). In node classification, the classifier is trained on 90% of the
nodes selected through a random split, and the remaining nodes constitute the test set. For each
experiment, results for three random data splits are obtained, and the average together with standard
deviations are presented. In link prediction, 90% of the edges are utilized in the training of GCN
encoder and linear classifier. For each edge, the input to the linear classifier is the concatenated
representations of the nodes that the edge connects. Results for link prediction are obtained for five
different edge splits, the resulting average metrics and standard deviations are provided. Finally, in
the end-to-end link prediction experiments, a two-layer GCN is trained, and results are obtained for
6 different random data splits."
N,0.7780126849894292,"Note that if the sizes of the sets ˆS and ˜S are highly unbalanced, we put a limit on the minimum
of sampling budgets in node sampling to prevent any excessive corruption of the input graph. If
Sχ ≥Sω, the minimum limit for each set is the 50% of the initial group size, otherwise the limit is
the 25% of the initial group size. Furthermore, to avoid overly down sampling the edges, a minimum
value for p(e)(eij), p(e)
min, is set for the edge deletion scheme. In the feature masking scheme, α in
equation 2 is set to 0 and 0.1 for different graph views used in the contrastive loss (i.e., default
parameter values provided for GCA are used directly). In the edge deletion framework, π = 1, and
p(e)
min = π"
N,0.7801268498942917,"2 = 0.5 are used in the experiments of both Pokec datasets and citation networks. Such
a selection is utilized to present the scheme with the most “natural” hyperparameter value, in the
sense that only intra-edges are deleted, where the already sparse inter-edges are left unchanged. We
note that this selection is naturally a good choice for unbalanced data sets in terms of inter- and
intra-edges. For Facebook networks where intra- and inter-edges are balanced for certain sensitive
groups, π = 0.8, and p(e)
min is set as π"
N,0.7822410147991543,2 for all experiments.
N,0.7843551797040169,"Proposed augmentation frameworks have only two hyperparameters: α in feature masking and π in
adaptive edge deletion. While we note the value of α is kept the same for all baselines that utilize a
feature masking scheme (default hyperparameters provided by GCA (Zhu et al., 2021)), and 1 is the
most natural choice for π in Pokec datasets and citation networks, we carry out a sensitivity analysis
for these two hyperparameters in this appendix. In the analysis, for α, the values [0.1, 0.2, 0.3] are
examined for the first graph view, where the α value for the second view is assigned to be higher
than the value of the first one by 0.1. Overall, sensitivity analyses for Pokec and Facebook networks
on the FairAug algorithm are presented in Tables 7 and 8, respectively. In Tables 7 and 8, the first
column shows the α values of the first and second view, respectively."
N,0.7864693446088795,"The sensitivity analysis for α on Pokec networks in Table 7 demonstrates that increased α values
can both improve or degrade the fairness performance together with similar classification accuracies.
However, the resulted fairness performances are observed to be consistently better than our baseline,
GRACE. Furthermore, the results of Table 8 show that fairness performances for the link prediction
task can generally be improved with increased α values, and the performance is quite stable over
different α selections."
N,0.7885835095137421,Table 7: Sensitivity analysis for α on Pokec networks for FairAug.
N,0.7906976744186046,"Pokec-z
Pokec-n"
N,0.7928118393234672,"α
Accuracy (%)
∆SP (%)
∆EO (%)
Accuracy (%)
∆SP (%)
∆EO(%)"
N,0.7949260042283298,"0.0/0.1
67.04 ± 0.69
3.29 ± 1.66
3.04 ± 1.37
67.88 ± 0.45
4.81 ± 0.59
6.52 ± 0.99
0.1/0.2
67.90 ± 0.69
3.95 ± 2.09
4.20 ± 2.41
67.60 ± 0.48
4.38 ± 0.45
5.82 ± 1.44
0.2/0.3
67.68 ± 0.74
4.42 ± 1.48
4.46 ± 2.25
68.01 ± 0.36
4.95 ± 0.39
6.44 ± 1.36
0.3/0.4
67.71 ± 0.64
2.99 ± 1.89
3.20 ± 2.57
67.50 ± 0.11
3.38 ± 0.90
4.41 ± 1.12"
N,0.7970401691331924,Under review as a conference paper at ICLR 2022
N,0.7991543340380549,Table 8: Sensitivity analysis for α on Facebook networks for FairAug
N,0.8012684989429175,"UCSD34
Berkeley13"
N,0.8033826638477801,"α
AUC (%)
∆SP (%)
∆EO (%)
AUC (%)
∆SP (%)
∆EO(%)"
N,0.8054968287526427,"0.0/0.1
71.46 ± 0.30
0.71 ± 0.38
1.62 ± 0.62
69.48 ± 0.29
0.70 ± 0.43
4.24 ± 0.90
0.1/0.2
71.54 ± 0.33
0.65 ± 0.13
1.76 ± 0.38
69.50 ± 0.42
0.55 ± 0.22
4.31 ± 0.76
0.2/0.3
71.51 ± 0.30
0.58 ± 0.26
1.50 ± 0.66
69.57 ± 0.46
0.55 ± 0.35
4.15 ± 0.79
0.3/0.4
71.55 ± 0.41
0.49 ± 0.14
1.65 ± 0.50
69.41 ± 0.35
0.97 ± 0.19
4.47 ± 1.10"
N,0.8076109936575053,"The
sensitivity
analysis
for
π
is
carried
out
by
examining
the
values
[0.75, 0.80, 0.85, 0.90, 0.95, 1.00] for FairAug algorithm for both views.
The sensitivity anal-
yses for Pokec and Facebook networks on FairAug algorithm are presented in Tables 9 and 10,
respectively. In Tables 9 and 10, π = 1 is the parameter choice utilized to generate the results in
Table 2 and π = 0.8 is the selection for the results in Table 3."
N,0.8097251585623678,Table 9: Sensitivity analysis for π on Pokec networks for FairAug.
N,0.8118393234672304,"Pokec-z
Pokec-n"
N,0.813953488372093,"π
Accuracy (%)
∆SP (%)
∆EO (%)
Accuracy (%)
∆SP (%)
∆EO(%)"
N,0.8160676532769556,"1.00
67.04 ± 0.69
3.29 ± 1.66
3.04 ± 1.37
67.88 ± 0.45
4.81 ± 0.59
6.52 ± 0.99
0.95
67.66 ± 0.57
4.00 ± 1.76
4.37 ± 1.82
68.01 ± 0.53
5.66 ± 1.27
7.00 ± 0.72
0.90
67.14 ± 0.73
3.28 ± 1.97
3.22 ± 2.20
67.81 ± 0.33
5.22 ± 0.82
6.87 ± 1.22
0.85
66.96 ± 0.77
3.49 ± 2.28
3.52 ± 2.15
68.00 ± 0.29
5.66 ± 0.29
7.77 ± 1.01
0.80
67.87 ± 0.35
3.59 ± 2.33
4.30 ± 1.95
68.17 ± 0.28
5.61 ± 0.73
7.82 ± 1.24
0.75
67.74 ± 0.28
3.94 ± 2.48
4.58 ± 1.91
67.95 ± 0.10
5.69 ± 0.27
7.44 ± 1.08"
N,0.8181818181818182,Table 10: Sensitivity analysis for π on Facebook networks for FairAug
N,0.8202959830866807,"UCSD34
Berkeley13"
N,0.8224101479915433,"π
AUC (%)
∆SP (%)
∆EO (%)
AUC (%)
∆SP (%)
∆EO(%)"
N,0.8245243128964059,"0.80
71.46 ± 0.30
0.71 ± 0.38
1.62 ± 0.62
69.48 ± 0.29
0.70 ± 0.43
4.24 ± 0.90
1.00
71.30 ± 0.41
0.56 ± 0.47
1.41 ± 0.57
69.70 ± 0.32
0.74 ± 0.36
4.35 ± 1.11
0.95
71.37 ± 0.41
0.60 ± 0.30
1.48 ± 0.69
69.52 ± 0.42
0.66 ± 0.16
3.99 ± 0.84
0.90
71.40 ± 0.38
0.59 ± 0.34
1.45 ± 0.44
69.48 ± 0.31
0.86 ± 0.72
4.64 ± 1.37
0.85
71.39 ± 0.36
0.65 ± 0.28
1.38 ± 0.54
69.49 ± 0.41
0.70 ± 0.40
4.19 ± 0.84
0.75
71.47 ± 0.23
0.63 ± 0.37
1.55 ± 0.65
69.52 ± 0.43
0.74 ± 0.48
4.31 ± 1.19"
N,0.8266384778012685,"The sensitivity analysis for π on Pokec networks shows that π = 1 results in the best performances
in terms of fairness. However, we note that the fairness results for the remaining π values also
outperform our baseline, GRACE, together with similar node classification accuracies. Furthermore,
the results of Table 10 demonstrate that the presented results for link prediction in Table 3 can
indeed be improved with a grid search, as better fairness performances can be obtained with π ̸=
0.8. Moreover, the results for different π values vary less for link prediction compared to node
classification."
N,0.828752642706131,"A.8
EFFECTS OF PROPOSED AUGMENTATIONS ON γ1 AND γ2"
N,0.8308668076109936,Table 11: Effects of proposed augmentations on γ2
N,0.8329809725158562,"Original
Node Sampling
Edge Deletion
Edge Addition
Pokec-z
0.90
0.59
0.87
0.77
Pokec-n
0.91
0.62
0.89
0.81
UCSD34
0.18
0.45
0.03
0.11
Berkeley13
0.18
0.43
0.03
0.06"
N,0.8350951374207188,"Tables 11 and 12 present the effects of the proposed framework on γ values for different datasets. In
Table 11, the effect of each augmentation step on γ2 is considered independently. Table 12 demon-
strates the effect of augmentations sequentially in the overall algorithm in a cumulative manner
(e.g., the “Edge Deletion” column implies both Node Sampling and Edge Deletion are applied).
Both Tables 11 and 12 demonstrate that even though the edge deletion/addition schemes are not"
N,0.8372093023255814,Under review as a conference paper at ICLR 2022
N,0.8393234672304439,Table 12: Effects of each step in FairAug
N,0.8414376321353065,"Original Graph
Node Sampling
Edge Deletion
Edge Addition"
N,0.8435517970401691,"Pokec-z
γ1
0.66
0.11
0.11
0.11
γ2
0.90
0.59
0.50
0.43"
N,0.8456659619450317,"Pokec-n
γ1
0.67
0.15
0.15
0.15
γ2
0.91
0.62
0.55
0.50"
N,0.8477801268498943,"UCSD34
γ1
0.91
0.86
0.86
0.86
γ2
0.18
0.45
0.17
0.17"
N,0.8498942917547568,"Berkeley13
γ1
0.90
0.83
0.83
0.83
γ2
0.18
0.43
0.17
0.17"
N,0.8520084566596194,"directly designed based on γ2, the proposed approaches indeed reduce the values of it. In addition,
presented γ values can also help to explain the ineffectiveness of edge deletion on Pokec networks.
Due to the inter-edge sparsity and overly unbalanced structure of these datasets in terms of |Eχ|
and |Eω| (presented in Table 5 of Appendix A.5), node sampling becomes a better choice than
edge deletion/addition to reduce the bias via an augmentation on the graph topology. Table 11 also
shows the better effectiveness of node sampling strategy in reducing γ2 compared to edge dele-
tion/addition frameworks, which also supports the findings of Table 2, that is, node sampling is an
essential step of FairAug on the Pokec networks. Furthermore, γ values can also help to explain the
random/detrimental effect of node sampling for Facebook networks, which is presented in Table 3.
Tables 11 and 12 show that while node sampling is not very effective in reducing γ1, it is observed to
increase γ2 for these networks. This effect results from the graph topologies of Facebook networks
having |Sχ| >> |Sω|. Note that γ1 values are not 0 after node sampling due to the limit on the
minimum of sampling budgets, see Appendix A.7."
N,0.854122621564482,"A.9
CASE STUDIES FOR THE EFFECTS OF PROPOSED AUGMENTATIONS"
N,0.8562367864693446,"To demonstrate the effects of the proposed augmentation schemes in a more intuitive manner on
different graph structures, we consider two small toy examples. The topology in Figure 1a is inspired
by the topology of the Pokec networks (few inter-edges, many more intra-edges, i.e., |Eω| > |Eχ|),
whereas Figure 1b is motivated by the Facebook networks (few nodes with no inter-edges, many
more that have at least one, i.e., |Sχ| > |Sω|). For demonstrative purposes, assume the nodes in
both graphs share the same nodal features, with the corresponding feature matrix X equal to X = "
N,0.8583509513742071,
N,0.8604651162790697,"0.0
0.1
−0.3
0.1
−0.1
0.2
−0.2
−0.2
0.1
0.1
0.1
0.2
0.0
0.2
0.0
0.2
0.1
−0.2
0.1
0.2
0.1
−0.1
−0.1
0.1
−0.2
−0.1
−0.1
0.3
−0.2
0.3
−0.2
0.1
0.4
−0.1
−0.1
−0.3
−0.1
0.1
−0.3
−0.2 "
N,0.8625792811839323, .
N,0.864693446088795,"Feature masking:
For the given X,
¯δ utilized in adaptive feature masking equals to
[0.74, 0.12, 1.00, 0.74, 0.00]. Therefore, in a feature masking scheme where 40% of the features
are masked, the most probable augmented ˜X becomes2 ˜X = "
N,0.8668076109936576,
N,0.86892177589852,"0.0
0.2
0.0
0.0
−0.1
0.0
0.1
0.0
0.1
−0.1
0.0
−0.2
0.0
0.1
0.1
0.0
0.2
0.0
0.2
0.0
0.0
0.1
0.0
0.1
0.2
0.0
−0.1
0.0
0.1
−0.2
0.0
−0.1
0.0
−0.2
0.3
0.0
0.1
0.0
−0.1
−0.1
0.0
−0.1
0.0
−0.3
−0.2 "
N,0.8710359408033826, .
N,0.8731501057082452,"2 Note that the feature masking process is stochastic. We present the mask with the largest probability of
occurrence, for demonstrative purposes."
N,0.8752642706131079,Under review as a conference paper at ICLR 2022 5 7 8 6 4 3 2
N,0.8773784355179705,"s=0
s=1"
N,0.879492600422833,"intra-edges
inter-edges G1 1"
N,0.8816067653276956,(a) Case one. 5 8 4 3 2
N,0.8837209302325582,"s=0
s=1"
N,0.8858350951374208,"intra-edges
inter-edges G2
7 1 6"
N,0.8879492600422833,(b) Case two.
N,0.8900634249471459,Figure 1: Toy examples 5 7 8 4 2 1
N,0.8921775898520085,(a) Case one after NS. 5 8 4 2 7
N,0.8942917547568711,(b) Case two after NS.
N,0.8964059196617337,Figure 2: Augmented graphs via node sampling
N,0.8985200845665962,"For
˜X,
(µ1 −µ0)
in
equation
15
becomes
[0, −0.05, 0, −0.32, 0]
where
it
was
[−0.32, −0.05, 0.43, −0.32, 0] for the original graph.
Note that this is the best case scenario
given the 40% masking budget, with the maximal decrease in ∥µ1 −µ0∥1. As also mentioned
in Footnote 2, the actual feature masking process is stochastic.
By assigning larger masking
probabilities to the features with high deviations betweeen S0 and S1, the non-uniform masking
strategy proposed herein increases the chances of obtaining the “better” cases with larger reductions
in (µ1 −µ0)."
N,0.9006342494714588,"Node sampling: The results in Table 3 demonstrate that node sampling becomes effective in graphs
where |Sω| > |Sχ|. Here, we visualize this finding through the toy examples presented in Figures
1a and 1b. Note that the two toy graphs differ in their sets Sω and Sχ. Specifically, we have
|Sω| > |Sχ| for Figure 1a and |Sω| < |Sχ| for Figure 1b."
N,0.9027484143763214,"Here, the exact ∥ϵ∥1 = ∥
1
|S1|
P"
N,0.904862579281184,"vn∈S1 zn −
1
|S0|
P"
N,0.9069767441860465,"vm∈S0 zm∥1 values are calculated before and
after node sampling for two different graph examples G1 and G2. Note that zi =
1
di
P"
N,0.9090909090909091,"vj∈N(i) xj,
and the original nodal features X are utilized to calculate the zi vectors."
N,0.9112050739957717,"Case 1: In the first example graph G1, |Sχ
0 | = 2, |Sω
0 | = 3, |Sχ
1 | = 1, and |Sω
1 | = 2. Therefore,
the proposed node sampling scheme selects 2 nodes from the set Sω
0 , and 1 node from the set Sω
1 . A
possible augmented graph is presented in Figure 2a on which the examination is carried over. While
the original ∥ϵ∥1 equals to 0.865 for G1, ∥ϵ∥1 becomes 0.771 for the output topology of the node
sampling provided in Figure 2a, which shows the efficacy of the proposed framework."
N,0.9133192389006343,"Case 2: For G2, |Sχ
0 | = 4, |Sω
0 | = 1, |Sχ
1 | = 2, and |Sω
1 | = 1. Therefore, the proposed node
sampling scheme selects 2 nodes from the set Sχ
0 (minimum limit for each set is the 50% of the"
N,0.9154334038054969,Under review as a conference paper at ICLR 2022 5 7 8 6 4 3 2 1
N,0.9175475687103594,(a) Case one. 5 8 4 3 2 7 1 6
N,0.919661733615222,(b) Case two.
N,0.9217758985200846,Figure 3: Augmented graphs via edge deletion
N,0.9238900634249472,"initial group size), and 1 node from the set Sχ
1 . Therefore, the presented example in Figure 2b is a
potential augmented topology obtained after the proposed node sampling framework. For this case,
the original ∥ϵ∥1 = 0.558 which becomes 0.892 for the augmented graph presented in Figure 2b.
This case study clearly illustrates that the proposed node sampling scheme is mainly effective for
graphs where |Sω| > |Sχ|."
N,0.9260042283298098,"Edge deletion: Results in Table 2 show that node sampling is a better choice than edge manipu-
lations for graphs with inter-edge sparsity and |Eω| ≫|Eχ|. Again, two case studies based on the
graphs provided in Figure 1 are utilized to demonstrate the effects of the proposed adaptive edge
deletion scheme. Specifically, the resulted ∥ϵ∥1 = ∥
1
|S1|
P
vn∈S1 zn −
1
|S0|
P
vm∈S0 zm∥1 value is
examined before and after the application of edge deletion."
N,0.9281183932346723,"Case 1: In the first example graph G1, |Eχ| = 2, |Eω
S0| = 6, and |Eω
S1| = 3. Therefore, edge deletion
probability of the adaptive edge deletion framework is 0.5 for the edges in Eω
S0, and Eω
S0 with the"
N,0.9302325581395349,"hyperparameter selections π = 1, and p(e)
min = π"
N,0.9323467230443975,"2 = 0.5. For such a scheme, a possible augmented
graph is presented in Figure 3a for demonstrative purposes. While the value of ∥ϵ∥1 is reduced from
0.865 to 0.792 with the application of adaptive edge deletion, the graph in Figure 3a also becomes
disconnected. For certain real networks, such as the Pokec networks considered in this paper, the
imbalance between intra- and inter-edges is considerably larger than the imbalance in the graph in
Figure 1a. Therefore, the sparsity resulting from the adaptive edge deletion can be even more severe
for such graphs than this toy example. Thus, this case study also confirms that node sampling can
indeed be a better choice than edge deletion for graphs with inter-edge sparsity and |Eω| >> |Eχ|."
N,0.9344608879492601,"Case 2: For G2, we have |Eχ| = 4, |Eω
S0| = 4, and |Eω
S1| = 2, which shows a more balanced structure
than the graph utilized in Case 1. For the given graph connectivity, edge deletion probability of
adaptive edge deletion scheme is 0.5 for the edges in Eω
S0, and 0 for the edges in Eω
S0 together with"
N,0.9365750528541226,"the hyperparameter selections π = 1, and p(e)
min = π"
N,0.9386892177589852,"2 = 0.5. The presented example in Figure 3b
is a potential resulting augmented topology obtained with the proposed edge deletion framework,
presented for demonstrative purposes. For this outcome, the original ∥ϵ∥1 is decreased from 0.558
to 0.497 for the augmented graph presented in Figure 3b, which demonstrates the effectiveness of
the proposed augmentation for the input graph in Case 2."
N,0.9408033826638478,"Edge Addition: We also present the effects of the proposed edge addition scheme on the toy ex-
amples for a better illustration of the augmentation. Again, the exact ∥ϵ∥1 = ∥
1
|S1|
P"
N,0.9429175475687104,vn∈S1 zn −
N,0.945031712473573,"1
|S0|
P"
N,0.9471458773784355,"vm∈S0 zm∥1 values are calculated before and after edge addition for two different graph ex-
amples G1 and G2."
N,0.9492600422832981,"Case 1: For G1, as |Eω| = 9 and |Eχ| = 2, new seven artificial inter-edges are generated for the
proposed edge addition scheme. For such a scheme, a possible augmented graph is presented in
Figure 4a, where ∥ϵ∥1 is reduced from 0.865 to 0.111 with the application of edge addition."
N,0.9513742071881607,"Case 2: For G2, as |Eω| = 6 and |Eχ| = 4, therefore two artificial inter-edges should be created for
the proposed edge addition scheme. A possible augmented graph resulting from the proposed edge"
N,0.9534883720930233,"Under review as a conference paper at ICLR 2022 5 7
4 3 2 1 8 6"
N,0.9556025369978859,(a) Case one. 5 4 3 2 7 1 6 8
N,0.9577167019027484,(b) Case two.
N,0.959830866807611,Figure 4: Augmented graphs via edge addition
N,0.9619450317124736,"addition is presented in Figure 4b. For the presented example in Figure 4b, edge addition can lower
the value of ∥ϵ∥1 from 0.558 to 0.293."
N,0.9640591966173362,"A.10
OPTIMAL TOPOLOGY AUGMENTATION SCHEMES FOR γ1 AND γ2"
N,0.9661733615221987,"While Algorithm 1 can make γ1 = 0 for graphs satisfying |Sω| ≥|Sχ|, as Table 12 demonstrates,
the obtained γ1 values after node sampling are not exactly zero due to the limit on the number of
nodes that can be sampled. If |Sχ| ≥|Sω|, the minimum number of nodes that will be sampled
for each set is 50% of the initial group size, otherwise the limit is 25% of the initial group size.
Such limits are employed to prevent the generation of excessively small subgraphs, which can pre-
vent proper learning and create stability issues. Furthermore, proposed global edge deletion/addition
frameworks cannot directly make γ2 zero, as the reduction of γ2 to zero requires a node-wise consid-
eration. Since such an independent consideration of each node can incur a significant computational
complexity for large graphs, we stay within the realm of global schemes that can still help to reduce
the value of γ2. However, the examination of the optimal schemes that can make γ1 γ2 zero helps
provide important insights and justification for the proposed augmentations."
N,0.9682875264270613,"Motivated by this, we examined “optimal” strategies which can drive γ1 or γ2 to zero. The corre-
sponding node sampling strategy copes with each node independently by deleting/adding edges so
that dω
i = dχ
i , ∀vi ∈V. Different from the proposed global edge manipulation scheme in Section
3.3.3, such node-level edge deletion/addition frameworks can change the value of γ1 and henceforth
interfere with the effects of the node sampling step. Additionally, the employment of edge deletion
for the graph makes the utilization of edge addition unnecessary and vice versa, as both schemes
seek to achieve the same goal, i.e., dω
i = dχ
i , ∀vi ∈V. Therefore, only the “optimal” edge dele-
tion or addition scheme is employed. We would like to note that the investigation is carried out
for Pokec networks, as |Sω| ≤|Sχ| for Facebook networks, which makes the design of an optimal
node sampling scheme challenging due to the unpredictable increase in Sω and the unpredictable
decrease in Sχ, when sampling from the set Sχ (some of the excluded nodes and edges may be the
only inter-edges for the nodes in the sampled graph, resulting in a further increase in Sω and further
decrease in Sχ)."
N,0.9704016913319239,Table 13: Effects of optimal augmentations on γ1
N,0.9725158562367865,"Original
Node Sampling
Edge Deletion
Edge Addition
Pokec-z
0.66
0.00
0.67
1.00
Pokec-n
0.67
0.00
0.67
1.00"
N,0.9746300211416491,Table 14: Effects of optimal augmentations on γ2
N,0.9767441860465116,"Original
Node Sampling
Edge Deletion
Edge Addition
Pokec-z
0.90
0.48
0.00
0.00
Pokec-n
0.91
0.46
0.00
0.00"
N,0.9788583509513742,Under review as a conference paper at ICLR 2022
N,0.9809725158562368,Table 15: Effects of each step in Node Sampling + Edge Deletion
N,0.9830866807610994,"Original Graph
Node Sampling
Edge Deletion"
N,0.985200845665962,"Pokec-z
γ1
0.66
0.00
0.08
γ2
0.90
0.48
0.00"
N,0.9873150105708245,"Pokec-n
γ1
0.67
0.00
0.11
γ2
0.91
0.46
0.00"
N,0.9894291754756871,Table 16: Effects of each step in Node Sampling + Edge Addition
N,0.9915433403805497,"Original Graph
Node Sampling
Edge Addition"
N,0.9936575052854123,"Pokec-z
γ1
0.66
0.00
0.73
γ2
0.90
0.48
0.00"
N,0.9957716701902748,"Pokec-n
γ1
0.67
0.00
0.70
γ2
0.91
0.46
0.00"
N,0.9978858350951374,"Tables 13-16 demonstrate that the utilized node sampling, edge deletion/addition frameworks are
optimal in the sense that they reduce γ1 and γ2 to zero, respectively. However, presented γ1 and
γ2 values also show the interference of optimal edge manipulations on γ1, as γ1 increases after the
application of edge deletion/addition following node sampling. Specifically, edge addition has a
great impact on it."
